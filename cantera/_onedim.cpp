/* Generated by Cython 3.0.0 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/arrayobject.h",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/arrayscalars.h",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/ndarrayobject.h",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/ndarraytypes.h",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/ufuncobject.h",
            "include/cantera/base/AnyMap.h",
            "include/cantera/base/Delegator.h",
            "include/cantera/base/ExtensionManager.h",
            "include/cantera/base/ExtensionManagerFactory.h",
            "include/cantera/base/Interface.h",
            "include/cantera/base/Solution.h",
            "include/cantera/base/SolutionArray.h",
            "include/cantera/base/Units.h",
            "include/cantera/base/global.h",
            "include/cantera/base/stringUtils.h",
            "include/cantera/cython/funcWrapper.h",
            "include/cantera/cython/kinetics_utils.h",
            "include/cantera/cython/thermo_utils.h",
            "include/cantera/cython/transport_utils.h",
            "include/cantera/cython/utils_utils.h",
            "include/cantera/extensions/PythonExtensionManager.h",
            "include/cantera/extensions/PythonHandle.h",
            "include/cantera/kinetics/InterfaceKinetics.h",
            "include/cantera/kinetics/Kinetics.h",
            "include/cantera/kinetics/KineticsFactory.h",
            "include/cantera/numerics/Func1.h",
            "include/cantera/numerics/Func1Factory.h",
            "include/cantera/numerics/eigen_sparse.h",
            "include/cantera/thermo/Elements.h",
            "include/cantera/thermo/PlasmaPhase.h",
            "include/cantera/thermo/Species.h",
            "include/cantera/thermo/SpeciesThermoFactory.h",
            "include/cantera/thermo/SpeciesThermoInterpType.h",
            "include/cantera/thermo/SurfPhase.h",
            "include/cantera/thermo/ThermoFactory.h",
            "include/cantera/thermo/ThermoPhase.h",
            "include/cantera/transport/DustyGasTransport.h",
            "include/cantera/transport/Transport.h",
            "include/cantera/transport/TransportData.h",
            "include/cantera/transport/TransportFactory.h"
        ],
        "include_dirs": [
            "include",
            "include/cantera/ext",
            "src",
            "cantera",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include"
        ],
        "language": "c++",
        "name": "cantera._cantera",
        "sources": [
            "cantera/thermo.pyx",
            "cantera/_utils.pyx",
            "cantera/solutionbase.pyx",
            "cantera/kinetics.pyx",
            "cantera/reactor.pyx",
            "cantera/units.pyx",
            "cantera/_onedim.pyx",
            "cantera/transport.pyx",
            "cantera/delegator.pyx",
            "cantera/mixture.pyx",
            "cantera/speciesthermo.pyx",
            "cantera/func1.pyx",
            "cantera/_cantera.pyx",
            "cantera/constants.pyx",
            "cantera/reaction.pyx",
            "cantera/reactionpath.pyx",
            "cantera/preconditioners.pyx",
            "cantera/yamlwriter.pyx",
            "src/equil/MultiPhase.cpp",
            "src/equil/vcs_solve_TP.cpp",
            "src/equil/vcs_VolPhase.cpp",
            "src/equil/BasisOptimize.cpp",
            "src/equil/vcs_solve.cpp",
            "src/equil/vcs_MultiPhaseEquil.cpp",
            "src/equil/ChemEquil.cpp",
            "src/equil/vcs_util.cpp",
            "src/equil/MultiPhaseEquil.cpp",
            "src/oneD/MultiJac.cpp",
            "src/oneD/MultiNewton.cpp",
            "src/oneD/DomainFactory.cpp",
            "src/oneD/StFlow.cpp",
            "src/oneD/OneDim.cpp",
            "src/oneD/Domain1D.cpp",
            "src/oneD/refine.cpp",
            "src/oneD/Boundary1D.cpp",
            "src/oneD/Sim1D.cpp",
            "src/oneD/IonFlow.cpp",
            "src/transport/DustyGasTransport.cpp",
            "src/transport/HighPressureGasTransport.cpp",
            "src/transport/WaterTransport.cpp",
            "src/transport/MMCollisionInt.cpp",
            "src/transport/MultiTransport.cpp",
            "src/transport/GasTransport.cpp",
            "src/transport/IonGasTransport.cpp",
            "src/transport/TransportData.cpp",
            "src/transport/MixTransport.cpp",
            "src/transport/Transport.cpp",
            "src/transport/TransportFactory.cpp",
            "src/kinetics/ImplicitSurfChem.cpp",
            "src/kinetics/Falloff.cpp",
            "src/kinetics/Reaction.cpp",
            "src/kinetics/BulkKinetics.cpp",
            "src/kinetics/Kinetics.cpp",
            "src/kinetics/Arrhenius.cpp",
            "src/kinetics/TwoTempPlasmaRate.cpp",
            "src/kinetics/Group.cpp",
            "src/kinetics/InterfaceKinetics.cpp",
            "src/kinetics/ReactionRateDelegator.cpp",
            "src/kinetics/InterfaceRate.cpp",
            "src/kinetics/ChebyshevRate.cpp",
            "src/kinetics/ReactionPath.cpp",
            "src/kinetics/ReactionRateFactory.cpp",
            "src/kinetics/solveSP.cpp",
            "src/kinetics/PlogRate.cpp",
            "src/kinetics/Custom.cpp",
            "src/kinetics/KineticsFactory.cpp",
            "src/kinetics/BlowersMaselRate.cpp",
            "src/pch/system.cpp",
            "src/numerics/FuncEval.cpp",
            "src/numerics/Func1.cpp",
            "src/numerics/BandMatrix.cpp",
            "src/numerics/DenseMatrix.cpp",
            "src/numerics/Integrators.cpp",
            "src/numerics/PreconditionerFactory.cpp",
            "src/numerics/CVodesIntegrator.cpp",
            "src/numerics/IdasIntegrator.cpp",
            "src/numerics/polyfit.cpp",
            "src/numerics/funcs.cpp",
            "src/numerics/AdaptivePreconditioner.cpp",
            "src/numerics/Func1Factory.cpp",
            "src/numerics/ResidJacEval.cpp",
            "src/thermo/HMWSoln.cpp",
            "src/thermo/MargulesVPSSTP.cpp",
            "src/thermo/Nasa9PolyMultiTempRegion.cpp",
            "src/thermo/PengRobinson.cpp",
            "src/thermo/RedlichKwongMFTP.cpp",
            "src/thermo/WaterSSTP.cpp",
            "src/thermo/Phase.cpp",
            "src/thermo/StoichSubstance.cpp",
            "src/thermo/PDSS_SSVol.cpp",
            "src/thermo/VPStandardStateTP.cpp",
            "src/thermo/Mu0Poly.cpp",
            "src/thermo/MaskellSolidSolnPhase.cpp",
            "src/thermo/SurfPhase.cpp",
            "src/thermo/WaterProps.cpp",
            "src/thermo/IdealGasPhase.cpp",
            "src/thermo/RedlichKisterVPSSTP.cpp",
            "src/thermo/IdealMolalSoln.cpp",
            "src/thermo/SpeciesThermoFactory.cpp",
            "src/thermo/CoverageDependentSurfPhase.cpp",
            "src/thermo/PDSSFactory.cpp",
            "src/thermo/IonsFromNeutralVPSSTP.cpp",
            "src/thermo/PureFluidPhase.cpp",
            "src/thermo/PDSS_Water.cpp",
            "src/thermo/MolalityVPSSTP.cpp",
            "src/thermo/PDSS_IonsFromNeutral.cpp",
            "src/thermo/ThermoPhase.cpp",
            "src/thermo/PDSS_HKFT.cpp",
            "src/thermo/Elements.cpp",
            "src/thermo/MixtureFugacityTP.cpp",
            "src/thermo/PDSS_IdealGas.cpp",
            "src/thermo/SpeciesThermoInterpType.cpp",
            "src/thermo/Nasa9Poly1.cpp",
            "src/thermo/Species.cpp",
            "src/thermo/PDSS_ConstVol.cpp",
            "src/thermo/DebyeHuckel.cpp",
            "src/thermo/ConstCpPoly.cpp",
            "src/thermo/LatticePhase.cpp",
            "src/thermo/NasaPoly2.cpp",
            "src/thermo/PDSS.cpp",
            "src/thermo/LatticeSolidPhase.cpp",
            "src/thermo/WaterPropsIAPWS.cpp",
            "src/thermo/IdealSolidSolnPhase.cpp",
            "src/thermo/MultiSpeciesThermo.cpp",
            "src/thermo/ThermoFactory.cpp",
            "src/thermo/SingleSpeciesTP.cpp",
            "src/thermo/IdealSolnGasVPSS.cpp",
            "src/thermo/GibbsExcessVPSSTP.cpp",
            "src/thermo/BinarySolutionTabulatedThermo.cpp",
            "src/thermo/WaterPropsIAPWSphi.cpp",
            "src/thermo/PlasmaPhase.cpp",
            "src/zeroD/IdealGasConstPressureReactor.cpp",
            "src/zeroD/ConstPressureReactor.cpp",
            "src/zeroD/flowControllers.cpp",
            "src/zeroD/MoleReactor.cpp",
            "src/zeroD/FlowReactor.cpp",
            "src/zeroD/FlowDevice.cpp",
            "src/zeroD/Wall.cpp",
            "src/zeroD/Reactor.cpp",
            "src/zeroD/ReactorSurface.cpp",
            "src/zeroD/FlowDeviceFactory.cpp",
            "src/zeroD/IdealGasMoleReactor.cpp",
            "src/zeroD/WallFactory.cpp",
            "src/zeroD/ReactorNet.cpp",
            "src/zeroD/ReactorBase.cpp",
            "src/zeroD/IdealGasReactor.cpp",
            "src/zeroD/ReactorFactory.cpp",
            "src/zeroD/ConstPressureMoleReactor.cpp",
            "src/zeroD/IdealGasConstPressureMoleReactor.cpp",
            "src/base/Array.cpp",
            "src/base/Storage.cpp",
            "src/base/ctexceptions.cpp",
            "src/base/ExtensionManagerFactory.cpp",
            "src/base/AnyMap.cpp",
            "src/base/checkFinite.cpp",
            "src/base/application.cpp",
            "src/base/Solution.cpp",
            "src/base/YamlWriter.cpp",
            "src/base/clockWC.cpp",
            "src/base/ExtensionManager.cpp",
            "src/base/Units.cpp",
            "src/base/ValueCache.cpp",
            "src/base/stringUtils.cpp",
            "src/base/SolutionArray.cpp",
            "src/base/Interface.cpp",
            "src/base/global.cpp",
            "src/extensions/PythonExtensionManager.cpp",
            "src/extensions/canteraShared.cpp",
            "src/extensions/pythonShim.cpp",
            "src/tpx/Water.cpp",
            "src/tpx/CarbonDioxide.cpp",
            "src/tpx/Sub.cpp",
            "src/tpx/Methane.cpp",
            "src/tpx/HFC134a.cpp",
            "src/tpx/Hydrogen.cpp",
            "src/tpx/Oxygen.cpp",
            "src/tpx/utils.cpp",
            "src/tpx/Heptane.cpp",
            "src/tpx/Nitrogen.cpp"
        ]
    },
    "module_name": "cantera._cantera"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"

    #if PY_MAJOR_VERSION >= 3
      #define __Pyx_PyFloat_FromString(obj)  PyFloat_FromString(obj)
    #else
      #define __Pyx_PyFloat_FromString(obj)  PyFloat_FromString(obj, NULL)
    #endif
    

    #if PY_MAJOR_VERSION <= 2
    #define PyDict_GetItemWithError _PyDict_GetItemWithError
    #endif
    

    #if (PY_VERSION_HEX < 0x030700b1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM < 0x07030600)) && !defined(PyContextVar_Get)
    #define PyContextVar_Get(var, d, v)         ((d) ?             ((void)(var), Py_INCREF(d), (v)[0] = (d), 0) :             ((v)[0] = NULL, 0)         )
    #endif
    
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#define CYTHON_ABI "3_0_0"
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
#define CYTHON_HEX_VERSION 0x030000F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1 && PYPY_VERSION_NUM >= 0x07030C00)
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(CYTHON_LIMITED_API)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 1
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PY_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000 && PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #if PY_VERSION_HEX < 0x030400a1
    #undef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #elif !defined(CYTHON_USE_TP_FINALIZE)
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #if PY_VERSION_HEX < 0x030600B1
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5)
  #endif
  #if PY_VERSION_HEX < 0x030700A3
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(const U& other) const { return *ptr == other; }
    template<typename U> bool operator !=(const U& other) const { return *ptr != other; }
    template<typename U> bool operator==(const __Pyx_FakeReference<U>& other) const { return *ptr == *other.ptr; }
    template<typename U> bool operator!=(const __Pyx_FakeReference<U>& other) const { return *ptr != *other.ptr; }
  private:
    T *ptr;
};

#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if PY_VERSION_HEX >= 0x030B00A1
    static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *kwds=NULL, *argcount=NULL, *posonlyargcount=NULL, *kwonlyargcount=NULL;
        PyObject *nlocals=NULL, *stacksize=NULL, *flags=NULL, *replace=NULL, *empty=NULL;
        const char *fn_cstr=NULL;
        const char *name_cstr=NULL;
        PyCodeObject *co=NULL, *result=NULL;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        if (!(kwds=PyDict_New())) goto end;
        if (!(argcount=PyLong_FromLong(a))) goto end;
        if (PyDict_SetItemString(kwds, "co_argcount", argcount) != 0) goto end;
        if (!(posonlyargcount=PyLong_FromLong(p))) goto end;
        if (PyDict_SetItemString(kwds, "co_posonlyargcount", posonlyargcount) != 0) goto end;
        if (!(kwonlyargcount=PyLong_FromLong(k))) goto end;
        if (PyDict_SetItemString(kwds, "co_kwonlyargcount", kwonlyargcount) != 0) goto end;
        if (!(nlocals=PyLong_FromLong(l))) goto end;
        if (PyDict_SetItemString(kwds, "co_nlocals", nlocals) != 0) goto end;
        if (!(stacksize=PyLong_FromLong(s))) goto end;
        if (PyDict_SetItemString(kwds, "co_stacksize", stacksize) != 0) goto end;
        if (!(flags=PyLong_FromLong(f))) goto end;
        if (PyDict_SetItemString(kwds, "co_flags", flags) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_code", code) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_consts", c) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_names", n) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_varnames", v) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_freevars", fv) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_cellvars", cell) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_linetable", lnos) != 0) goto end;
        if (!(fn_cstr=PyUnicode_AsUTF8AndSize(fn, NULL))) goto end;
        if (!(name_cstr=PyUnicode_AsUTF8AndSize(name, NULL))) goto end;
        if (!(co = PyCode_NewEmpty(fn_cstr, name_cstr, fline))) goto end;
        if (!(replace = PyObject_GetAttrString((PyObject*)co, "replace"))) goto end;
        if (!(empty = PyTuple_New(0))) goto end;
        result = (PyCodeObject*) PyObject_Call(replace, empty, kwds);
    end:
        Py_XDECREF((PyObject*) co);
        Py_XDECREF(kwds);
        Py_XDECREF(argcount);
        Py_XDECREF(posonlyargcount);
        Py_XDECREF(kwonlyargcount);
        Py_XDECREF(nlocals);
        Py_XDECREF(stacksize);
        Py_XDECREF(replace);
        Py_XDECREF(empty);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef CO_COROUTINE
  #define CO_COROUTINE 0x80
#endif
#ifndef CO_ASYNC_GENERATOR
  #define CO_ASYNC_GENERATOR 0x200
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_VERSION_HEX < 0x030900B1
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE(obj), name, func_ctype)
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if PY_MAJOR_VERSION < 3
    #if CYTHON_COMPILING_IN_PYPY
        #if PYPY_VERSION_NUM < 0x07030600
            #if defined(__cplusplus) && __cplusplus >= 201402L
                [[deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")]]
            #elif defined(__GNUC__) || defined(__clang__)
                __attribute__ ((__deprecated__("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")))
            #elif defined(_MSC_VER)
                __declspec(deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6"))
            #endif
            static CYTHON_INLINE int PyGILState_Check(void) {
                return 0;
            }
        #else  // PYPY_VERSION_NUM < 0x07030600
        #endif  // PYPY_VERSION_NUM < 0x07030600
    #else
        static CYTHON_INLINE int PyGILState_Check(void) {
            PyThreadState * tstate = _PyThreadState_Current;
            return tstate && (tstate == PyGILState_GetThisThreadState());
        }
    #endif
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  (Py_TYPE(obj)->tp_iternext)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  PyIter_Next
#endif
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE(obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535U : 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((int)sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = (Py_UNICODE) ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains) || (PY_MAJOR_VERSION == 2 && PYPY_VERSION_NUM < 0x07030500)
    #undef PyUnicode_Contains
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define __Pyx_Py3Int_Check(op)       PyLong_Check(op)
  #define __Pyx_Py3Int_CheckExact(op)  PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#else
  #define __Pyx_Py3Int_Check(op)       (PyLong_Check(op) || PyInt_Check(op))
  #define __Pyx_Py3Int_CheckExact(op)  (PyLong_CheckExact(op) || PyInt_CheckExact(op))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#define __PYX_HAVE__cantera___onedim
#define __PYX_HAVE_API__cantera___onedim
/* Early includes */
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <string.h>
#include <string>
#include <utility>

    #if __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600)
    // move should be defined for these versions of MSVC, but __cplusplus isn't set usefully
    #include <type_traits>

    namespace cython_std {
    template <typename T> typename std::remove_reference<T>::type&& move(T& t) noexcept { return std::move(t); }
    template <typename T> typename std::remove_reference<T>::type&& move(T&& t) noexcept { return std::move(t); }
    }

    #endif
    
#include <map>
#include <functional>
#include <memory>
#include <stdio.h>
#include "pythread.h"

    /* Using NumPy API declarations from "numpy/__init__.cython-30.pxd" */
    
#include "numpy/arrayobject.h"
#include "numpy/ndarrayobject.h"
#include "numpy/ndarraytypes.h"
#include "numpy/arrayscalars.h"
#include "numpy/ufuncobject.h"
#include "cantera/cython/funcWrapper.h"
#include "cantera/numerics/Func1.h"
#include "cantera/numerics/Func1Factory.h"
#include "cantera/base/Units.h"
#include <array>
#include "cantera/extensions/PythonHandle.h"
#include "cantera/base/Delegator.h"
#include "cantera/base/ExtensionManager.h"
#include "cantera/base/ExtensionManagerFactory.h"
#include "cantera/extensions/PythonExtensionManager.h"
#include "cantera/thermo/ThermoFactory.h"
#include "cantera/kinetics/KineticsFactory.h"
#include "cantera/transport/TransportFactory.h"
#include "cantera/base/Interface.h"
#include "cantera/base/Solution.h"
#include "cantera/base/SolutionArray.h"
#include "cantera/numerics/eigen_sparse.h"
#include "cantera/kinetics/Kinetics.h"
#include "cantera/kinetics/InterfaceKinetics.h"
#include "cantera/cython/kinetics_utils.h"
#include "cantera/thermo/Species.h"
#include "cantera/thermo/ThermoPhase.h"
#include "cantera/thermo/SurfPhase.h"
#include "cantera/thermo/PlasmaPhase.h"
#include "cantera/cython/thermo_utils.h"
#include "cantera/thermo/Elements.h"
#include "cantera/oneD/DomainFactory.h"
#include "cantera/oneD/Domain1D.h"
#include "cantera/oneD/Boundary1D.h"
#include "cantera/oneD/StFlow.h"
#include "cantera/oneD/Sim1D.h"
#include "cantera/thermo/IdealGasPhase.h"
#include <unordered_map>
#include "cantera/base/AnyMap.h"
#include "cantera/base/stringUtils.h"
#include "cantera/base/global.h"
#include "cantera/cython/utils_utils.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const wchar_t *u)
{
    const wchar_t *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#endif
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else  // Py < 3.12
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = (char) c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif (defined(_Complex_I) && !defined(_MSC_VER)) || ((defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) && !defined(__STDC_NO_COMPLEX__))
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "cantera/_onedim.pyx",
  "<stringsource>",
  "contextvars.pxd",
  "__init__.cython-30.pxd",
  "cantera/_onedim.pxd",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
  "cantera/func1.pxd",
  "cantera/units.pxd",
  "cantera/solutionbase.pxd",
  "cantera/kinetics.pxd",
  "cantera/thermo.pxd",
  "cantera/_utils.pxd",
};
/* #### Code section: utility_code_proto_before_types ### */
/* BufferFormatStructs.proto */
struct __Pyx_StructField_;
#define __PYX_BUF_FLAGS_PACKED_STRUCT (1 << 0)
typedef struct {
  const char* name;
  struct __Pyx_StructField_* fields;
  size_t size;
  size_t arraysize[8];
  int ndim;
  char typegroup;
  char is_unsigned;
  int flags;
} __Pyx_TypeInfo;
typedef struct __Pyx_StructField_ {
  __Pyx_TypeInfo* type;
  const char* name;
  size_t offset;
} __Pyx_StructField;
typedef struct {
  __Pyx_StructField* field;
  size_t parent_offset;
} __Pyx_BufFmt_StackElem;
typedef struct {
  __Pyx_StructField root;
  __Pyx_BufFmt_StackElem* head;
  size_t fmt_offset;
  size_t new_count, enc_count;
  size_t struct_alignment;
  int is_complex;
  char enc_type;
  char new_packmode;
  char enc_packmode;
  char is_valid_array;
} __Pyx_BufFmt_Context;

/* #### Code section: numeric_typedefs ### */

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":732
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":733
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":734
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":735
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":739
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":740
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":741
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":742
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":746
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":747
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":756
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":757
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":758
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":760
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":761
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":762
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":764
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":765
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":767
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":768
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":769
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* #### Code section: complex_type_declarations ### */
/* Declarations.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
struct __pyx_obj_7cantera_5func1_Func1;
struct __pyx_obj_7cantera_5units_Units;
struct __pyx_obj_7cantera_5units_UnitStack;
struct __pyx_obj_7cantera_5units_UnitSystem;
struct __pyx_obj_7cantera_12solutionbase__SolutionBase;
struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase;
struct __pyx_obj_7cantera_8kinetics_Kinetics;
struct __pyx_obj_7cantera_8kinetics_InterfaceKinetics;
struct __pyx_obj_7cantera_6thermo_Species;
struct __pyx_obj_7cantera_6thermo_ThermoPhase;
struct __pyx_obj_7cantera_6thermo_InterfacePhase;
struct __pyx_obj_7cantera_6_utils_AnyMap;
struct __pyx_obj_7cantera_7_onedim_Domain1D;
struct __pyx_obj_7cantera_7_onedim_Boundary1D;
struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D;
struct __pyx_obj_7cantera_7_onedim__FlowBase;
struct __pyx_obj_7cantera_7_onedim_Sim1D;
struct __pyx_obj_7cantera_7_onedim_Inlet1D;
struct __pyx_obj_7cantera_7_onedim_Outlet1D;
struct __pyx_obj_7cantera_7_onedim_OutletReservoir1D;
struct __pyx_obj_7cantera_7_onedim_SymmetryPlane1D;
struct __pyx_obj_7cantera_7_onedim_Surface1D;
struct __pyx_obj_7cantera_7_onedim_FreeFlow;
struct __pyx_obj_7cantera_7_onedim_UnstrainedFlow;
struct __pyx_obj_7cantera_7_onedim_AxisymmetricFlow;
struct __pyx_obj_7cantera_7_onedim_IdealGasFlow;
struct __pyx_obj_7cantera_7_onedim_IonFlow;
struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve;
struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr;
struct __pyx_opt_args_7cpython_11contextvars_get_value;
struct __pyx_opt_args_7cpython_11contextvars_get_value_no_default;

/* "cpython/contextvars.pxd":112
 * 
 * 
 * cdef inline object get_value(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the default value of the context variable,
 */
struct __pyx_opt_args_7cpython_11contextvars_get_value {
  int __pyx_n;
  PyObject *default_value;
};

/* "cpython/contextvars.pxd":129
 * 
 * 
 * cdef inline object get_value_no_default(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the provided default value if no such value was found.
 */
struct __pyx_opt_args_7cpython_11contextvars_get_value_no_default {
  int __pyx_n;
  PyObject *default_value;
};

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":771
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":772
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":773
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":775
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "ctcxx.pxd":19
 * from cython.operator cimport dereference as deref, preincrement as inc
 * 
 * ctypedef stdmap[string,double] Composition             # <<<<<<<<<<<<<<
 * 
 * import numpy as np
 */
typedef std::map<std::string,double>  __pyx_t_7cantera_5ctcxx_Composition;

/* "delegator.pxd":107
 * 
 * 
 * ctypedef CxxDelegator* CxxDelegatorPtr             # <<<<<<<<<<<<<<
 * 
 * cdef int assign_delegates(object, CxxDelegator*) except -1
 */
typedef Cantera::Delegator *__pyx_t_7cantera_9delegator_CxxDelegatorPtr;
struct __pyx_opt_args_7cantera_12solutionbase__assign_Solution;

/* "solutionbase.pxd":99
 * 
 * 
 * ctypedef void (*transportMethod1d)(CxxTransport*, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * ctypedef void (*transportMethod2d)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod1i)(CxxTransport*, size_t, double*) except +translate_exception
 */
typedef void (*__pyx_t_7cantera_12solutionbase_transportMethod1d)(Cantera::Transport *, double *);

/* "solutionbase.pxd":100
 * 
 * ctypedef void (*transportMethod1d)(CxxTransport*, double*) except +translate_exception
 * ctypedef void (*transportMethod2d)(CxxTransport*, size_t, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * ctypedef void (*transportPolyMethod1i)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod2i)(CxxTransport*, size_t, size_t, double*) except +translate_exception
 */
typedef void (*__pyx_t_7cantera_12solutionbase_transportMethod2d)(Cantera::Transport *, size_t, double *);

/* "solutionbase.pxd":101
 * ctypedef void (*transportMethod1d)(CxxTransport*, double*) except +translate_exception
 * ctypedef void (*transportMethod2d)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod1i)(CxxTransport*, size_t, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * ctypedef void (*transportPolyMethod2i)(CxxTransport*, size_t, size_t, double*) except +translate_exception
 * 
 */
typedef void (*__pyx_t_7cantera_12solutionbase_transportPolyMethod1i)(Cantera::Transport *, size_t, double *);

/* "solutionbase.pxd":102
 * ctypedef void (*transportMethod2d)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod1i)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod2i)(CxxTransport*, size_t, size_t, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * 
 * cdef _assign_Solution(_SolutionBase soln, shared_ptr[CxxSolution] cxx_soln,
 */
typedef void (*__pyx_t_7cantera_12solutionbase_transportPolyMethod2i)(Cantera::Transport *, size_t, size_t, double *);

/* "solutionbase.pxd":104
 * ctypedef void (*transportPolyMethod2i)(CxxTransport*, size_t, size_t, double*) except +translate_exception
 * 
 * cdef _assign_Solution(_SolutionBase soln, shared_ptr[CxxSolution] cxx_soln,             # <<<<<<<<<<<<<<
 *                       pybool reset_adjacent, pybool weak=?)
 * cdef object _wrap_Solution(shared_ptr[CxxSolution] cxx_soln)
 */
struct __pyx_opt_args_7cantera_12solutionbase__assign_Solution {
  int __pyx_n;
  PyBoolObject *weak;
};

/* "kinetics.pxd":140
 * 
 * 
 * ctypedef void (*kineticsMethod1d)(CxxKinetics*, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * ctypedef CxxSparseMatrix (*kineticsMethodSparse)(CxxKinetics*) except +translate_exception
 * 
 */
typedef void (*__pyx_t_7cantera_8kinetics_kineticsMethod1d)(Cantera::Kinetics *, double *);

/* "kinetics.pxd":141
 * 
 * ctypedef void (*kineticsMethod1d)(CxxKinetics*, double*) except +translate_exception
 * ctypedef CxxSparseMatrix (*kineticsMethodSparse)(CxxKinetics*) except +translate_exception             # <<<<<<<<<<<<<<
 * 
 * cdef class Kinetics(_SolutionBase):
 */
typedef Eigen::SparseMatrix<double> (*__pyx_t_7cantera_8kinetics_kineticsMethodSparse)(Cantera::Kinetics *);

/* "thermo.pxd":244
 * 
 * 
 * ctypedef void (*thermoMethod1d)(CxxThermoPhase*, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "cantera/thermo/Elements.h" namespace "Cantera":
 */
typedef void (*__pyx_t_7cantera_6thermo_thermoMethod1d)(Cantera::ThermoPhase *, double *);
struct __pyx_opt_args_7cantera_6_utils_py_to_anymap;
struct __pyx_opt_args_7cantera_6_utils_python_to_anyvalue;

/* "_utils.pxd":106
 * cdef Composition comp_map(X) except *
 * 
 * cdef CxxAnyMap py_to_anymap(data, cbool hyphenize=*) except *             # <<<<<<<<<<<<<<
 * cdef anymap_to_py(CxxAnyMap& m)
 * 
 */
struct __pyx_opt_args_7cantera_6_utils_py_to_anymap {
  int __pyx_n;
  bool hyphenize;
};

/* "_utils.pxd":109
 * cdef anymap_to_py(CxxAnyMap& m)
 * 
 * cdef CxxAnyValue python_to_anyvalue(item, name=*) except *             # <<<<<<<<<<<<<<
 * cdef anyvalue_to_python(string name, CxxAnyValue& v)
 */
struct __pyx_opt_args_7cantera_6_utils_python_to_anyvalue {
  int __pyx_n;
  PyObject *name;
};

/* "func1.pxd":46
 * 
 * 
 * cdef class Func1:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxFunc1] _func
 *     cdef CxxFunc1* func
 */
struct __pyx_obj_7cantera_5func1_Func1 {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_5func1_Func1 *__pyx_vtab;
  std::shared_ptr<Cantera::Func1>  _func;
  Cantera::Func1 *func;
  PyObject *callable;
  PyObject *exception;
};


/* "units.pxd":42
 * 
 * 
 * cdef class Units:             # <<<<<<<<<<<<<<
 *     cdef CxxUnits units
 *     @staticmethod
 */
struct __pyx_obj_7cantera_5units_Units {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_5units_Units *__pyx_vtab;
  Cantera::Units units;
};


/* "units.pxd":47
 *     cdef Units copy(CxxUnits)
 * 
 * cdef class UnitStack:             # <<<<<<<<<<<<<<
 *     cdef CxxUnitStack stack
 *     @staticmethod
 */
struct __pyx_obj_7cantera_5units_UnitStack {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_5units_UnitStack *__pyx_vtab;
  Cantera::UnitStack stack;
};


/* "units.pxd":53
 * 
 * 
 * cdef class UnitSystem:             # <<<<<<<<<<<<<<
 *     cdef _set_unitSystem(self, shared_ptr[CxxUnitSystem] units)
 *     cdef shared_ptr[CxxUnitSystem] _unitsystem
 */
struct __pyx_obj_7cantera_5units_UnitSystem {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_5units_UnitSystem *__pyx_vtab;
  std::shared_ptr<Cantera::UnitSystem>  _unitsystem;
  Cantera::UnitSystem *unitsystem;
};


/* "solutionbase.pxd":108
 * cdef object _wrap_Solution(shared_ptr[CxxSolution] cxx_soln)
 * 
 * cdef class _SolutionBase:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxSolution] _base
 *     cdef weak_ptr[CxxSolution] weak_base
 */
struct __pyx_obj_7cantera_12solutionbase__SolutionBase {
  PyObject_HEAD
  std::shared_ptr<Cantera::Solution>  _base;
  std::weak_ptr<Cantera::Solution>  weak_base;
  Cantera::Solution *base;
  Cantera::ThermoPhase *thermo;
  Cantera::Kinetics *kinetics;
  Cantera::Transport *transport;
  int thermo_basis;
  PyArrayObject *_selected_species;
  PyObject *parent;
  PyObject *_adjacent;
  PyObject *_soln_changed_callback;
  PyObject *_references;
};


/* "solutionbase.pxd":122
 *     cdef public object _references
 * 
 * cdef class SolutionArrayBase:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxSolutionArray] _base
 *     cdef CxxSolutionArray* base
 */
struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase {
  PyObject_HEAD
  std::shared_ptr<Cantera::SolutionArray>  _base;
  Cantera::SolutionArray *base;
  PyObject *_weakref_proxy;
};


/* "kinetics.pxd":143
 * ctypedef CxxSparseMatrix (*kineticsMethodSparse)(CxxKinetics*) except +translate_exception
 * 
 * cdef class Kinetics(_SolutionBase):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_7cantera_8kinetics_Kinetics {
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase __pyx_base;
};


/* "kinetics.pxd":146
 *     pass
 * 
 * cdef class InterfaceKinetics(Kinetics):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_7cantera_8kinetics_InterfaceKinetics {
  struct __pyx_obj_7cantera_8kinetics_Kinetics __pyx_base;
};


/* "thermo.pxd":259
 * 
 * 
 * cdef class Species:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxSpecies] _species
 *     cdef CxxSpecies* species
 */
struct __pyx_obj_7cantera_6thermo_Species {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_6thermo_Species *__pyx_vtab;
  std::shared_ptr<Cantera::Species>  _species;
  Cantera::Species *species;
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase *_phase;
};


/* "thermo.pxd":266
 *     cdef _assign(self, shared_ptr[CxxSpecies] other)
 * 
 * cdef class ThermoPhase(_SolutionBase):             # <<<<<<<<<<<<<<
 *     cdef double _mass_factor(self)
 *     cdef double _mole_factor(self)
 */
struct __pyx_obj_7cantera_6thermo_ThermoPhase {
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase __pyx_base;
  struct __pyx_vtabstruct_7cantera_6thermo_ThermoPhase *__pyx_vtab;
  Cantera::PlasmaPhase *plasma;
  PyObject *_enable_plasma;
};


/* "thermo.pxd":276
 *     cdef public object _enable_plasma
 * 
 * cdef class InterfacePhase(ThermoPhase):             # <<<<<<<<<<<<<<
 *     cdef CxxSurfPhase* surf
 */
struct __pyx_obj_7cantera_6thermo_InterfacePhase {
  struct __pyx_obj_7cantera_6thermo_ThermoPhase __pyx_base;
  Cantera::SurfPhase *surf;
};


/* "_utils.pxd":96
 *     cdef void CxxSetLogger "setLogger" (CxxPythonLogger*)
 * 
 * cdef class AnyMap(dict):             # <<<<<<<<<<<<<<
 *     cdef _set_CxxUnitSystem(self, shared_ptr[CxxUnitSystem] units)
 *     cdef UnitSystem unitsystem
 */
struct __pyx_obj_7cantera_6_utils_AnyMap {
  PyDictObject __pyx_base;
  struct __pyx_vtabstruct_7cantera_6_utils_AnyMap *__pyx_vtab;
  struct __pyx_obj_7cantera_5units_UnitSystem *unitsystem;
};


/* "cantera/_onedim.pxd":153
 * 
 * 
 * cdef class Domain1D:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxDomain1D] _domain
 *     cdef CxxDomain1D* domain
 */
struct __pyx_obj_7cantera_7_onedim_Domain1D {
  PyObject_HEAD
  std::shared_ptr<Cantera::Domain1D>  _domain;
  Cantera::Domain1D *domain;
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase *gas;
  PyObject *_weakref_proxy;
  PyBoolObject *have_user_tolerances;
};


/* "cantera/_onedim.pxd":160
 *     cdef public pybool have_user_tolerances
 * 
 * cdef class Boundary1D(Domain1D):             # <<<<<<<<<<<<<<
 *     cdef CxxBoundary1D* boundary
 * 
 */
struct __pyx_obj_7cantera_7_onedim_Boundary1D {
  struct __pyx_obj_7cantera_7_onedim_Domain1D __pyx_base;
  Cantera::Boundary1D *boundary;
};


/* "cantera/_onedim.pxd":163
 *     cdef CxxBoundary1D* boundary
 * 
 * cdef class ReactingSurface1D(Boundary1D):             # <<<<<<<<<<<<<<
 *     cdef cbool legacy
 *     cdef CxxReactingSurf1D* surf
 */
struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D {
  struct __pyx_obj_7cantera_7_onedim_Boundary1D __pyx_base;
  bool legacy;
  Cantera::ReactingSurf1D *surf;
  struct __pyx_obj_7cantera_8kinetics_Kinetics *surface;
};


/* "cantera/_onedim.pxd":168
 *     cdef public Kinetics surface
 * 
 * cdef class _FlowBase(Domain1D):             # <<<<<<<<<<<<<<
 *     cdef CxxStFlow* flow
 * 
 */
struct __pyx_obj_7cantera_7_onedim__FlowBase {
  struct __pyx_obj_7cantera_7_onedim_Domain1D __pyx_base;
  Cantera::StFlow *flow;
};


/* "cantera/_onedim.pxd":171
 *     cdef CxxStFlow* flow
 * 
 * cdef class Sim1D:             # <<<<<<<<<<<<<<
 *     cdef CxxSim1D* sim
 *     cdef readonly object domains
 */
struct __pyx_obj_7cantera_7_onedim_Sim1D {
  PyObject_HEAD
  Cantera::Sim1D *sim;
  PyObject *domains;
  PyObject *_initialized;
  PyObject *_initial_guess_args;
  PyObject *_initial_guess_kwargs;
  struct __pyx_obj_7cantera_5func1_Func1 *_interrupt;
  struct __pyx_obj_7cantera_5func1_Func1 *_time_step_callback;
  struct __pyx_obj_7cantera_5func1_Func1 *_steady_callback;
};


/* "cantera/_onedim.pyx":380
 * 
 * 
 * cdef class Inlet1D(Boundary1D):             # <<<<<<<<<<<<<<
 *     """
 *     A one-dimensional inlet. Note that an inlet can only be a terminal
 */
struct __pyx_obj_7cantera_7_onedim_Inlet1D {
  struct __pyx_obj_7cantera_7_onedim_Boundary1D __pyx_base;
};


/* "cantera/_onedim.pyx":388
 * 
 * 
 * cdef class Outlet1D(Boundary1D):             # <<<<<<<<<<<<<<
 *     """
 *     A one-dimensional outlet. An outlet imposes a zero-gradient boundary
 */
struct __pyx_obj_7cantera_7_onedim_Outlet1D {
  struct __pyx_obj_7cantera_7_onedim_Boundary1D __pyx_base;
};


/* "cantera/_onedim.pyx":396
 * 
 * 
 * cdef class OutletReservoir1D(Boundary1D):             # <<<<<<<<<<<<<<
 *     """
 *     A one-dimensional outlet into a reservoir.
 */
struct __pyx_obj_7cantera_7_onedim_OutletReservoir1D {
  struct __pyx_obj_7cantera_7_onedim_Boundary1D __pyx_base;
};


/* "cantera/_onedim.pyx":403
 * 
 * 
 * cdef class SymmetryPlane1D(Boundary1D):             # <<<<<<<<<<<<<<
 *     """A symmetry plane."""
 *     _domain_type = "symmetry-plane"
 */
struct __pyx_obj_7cantera_7_onedim_SymmetryPlane1D {
  struct __pyx_obj_7cantera_7_onedim_Boundary1D __pyx_base;
};


/* "cantera/_onedim.pyx":408
 * 
 * 
 * cdef class Surface1D(Boundary1D):             # <<<<<<<<<<<<<<
 *     """A solid surface."""
 *     _domain_type = "surface"
 */
struct __pyx_obj_7cantera_7_onedim_Surface1D {
  struct __pyx_obj_7cantera_7_onedim_Boundary1D __pyx_base;
};


/* "cantera/_onedim.pyx":784
 * 
 * 
 * cdef class FreeFlow(_FlowBase):             # <<<<<<<<<<<<<<
 *     r"""A free flow domain. The equations solved are standard equations for adiabatic
 *     one-dimensional flow. The solution variables are:
 */
struct __pyx_obj_7cantera_7_onedim_FreeFlow {
  struct __pyx_obj_7cantera_7_onedim__FlowBase __pyx_base;
};


/* "cantera/_onedim.pyx":798
 * 
 * 
 * cdef class UnstrainedFlow(_FlowBase):             # <<<<<<<<<<<<<<
 *     r"""An unstrained flow domain. The equations solved are standard equations for
 *     adiabatic one-dimensional flow. The solution variables are:
 */
struct __pyx_obj_7cantera_7_onedim_UnstrainedFlow {
  struct __pyx_obj_7cantera_7_onedim__FlowBase __pyx_base;
};


/* "cantera/_onedim.pyx":812
 * 
 * 
 * cdef class AxisymmetricFlow(_FlowBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     An axisymmetric flow domain. The equations solved are the similarity equations for
 */
struct __pyx_obj_7cantera_7_onedim_AxisymmetricFlow {
  struct __pyx_obj_7cantera_7_onedim__FlowBase __pyx_base;
};


/* "cantera/_onedim.pyx":841
 * 
 * 
 * cdef class IdealGasFlow(_FlowBase):             # <<<<<<<<<<<<<<
 *     """
 *     An ideal gas flow domain. Functions `set_free_flow` and
 */
struct __pyx_obj_7cantera_7_onedim_IdealGasFlow {
  struct __pyx_obj_7cantera_7_onedim__FlowBase __pyx_base;
};


/* "cantera/_onedim.pyx":885
 * 
 * 
 * cdef class IonFlow(_FlowBase):             # <<<<<<<<<<<<<<
 *     """
 *     An ion flow domain.
 */
struct __pyx_obj_7cantera_7_onedim_IonFlow {
  struct __pyx_obj_7cantera_7_onedim__FlowBase __pyx_base;
};


/* "cantera/_onedim.pyx":1292
 *         return False
 * 
 *     def solve(self, loglevel=1, refine_grid=True, auto=False):             # <<<<<<<<<<<<<<
 *         """
 *         Solve the problem.
 */
struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve {
  PyObject_HEAD
  PyObject *__pyx_v_atol_ss_final;
  PyObject *__pyx_v_atol_ts_final;
  PyObject *__pyx_v_have_user_tolerances;
  PyObject *__pyx_v_loglevel;
  PyObject *__pyx_v_rtol_ss_final;
  PyObject *__pyx_v_rtol_ts_final;
  struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self;
  PyObject *__pyx_v_soret_doms;
};


/* "cantera/_onedim.pyx":1323
 * 
 *         # Do initial solution steps with default tolerances
 *         have_user_tolerances = any(dom.have_user_tolerances for dom in self.domains)             # <<<<<<<<<<<<<<
 *         if have_user_tolerances:
 *             # Save the user-specified tolerances
 */
struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr {
  PyObject_HEAD
  PyObject *__pyx_genexpr_arg_0;
  PyObject *__pyx_v_dom;
};



/* "func1.pxd":46
 * 
 * 
 * cdef class Func1:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxFunc1] _func
 *     cdef CxxFunc1* func
 */

struct __pyx_vtabstruct_7cantera_5func1_Func1 {
  void (*_set_callback)(struct __pyx_obj_7cantera_5func1_Func1 *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_7cantera_5func1_Func1 *__pyx_vtabptr_7cantera_5func1_Func1;


/* "units.pxd":42
 * 
 * 
 * cdef class Units:             # <<<<<<<<<<<<<<
 *     cdef CxxUnits units
 *     @staticmethod
 */

struct __pyx_vtabstruct_7cantera_5units_Units {
  struct __pyx_obj_7cantera_5units_Units *(*copy)(Cantera::Units);
};
static struct __pyx_vtabstruct_7cantera_5units_Units *__pyx_vtabptr_7cantera_5units_Units;


/* "units.pxd":47
 *     cdef Units copy(CxxUnits)
 * 
 * cdef class UnitStack:             # <<<<<<<<<<<<<<
 *     cdef CxxUnitStack stack
 *     @staticmethod
 */

struct __pyx_vtabstruct_7cantera_5units_UnitStack {
  struct __pyx_obj_7cantera_5units_UnitStack *(*copy)(Cantera::UnitStack const &);
};
static struct __pyx_vtabstruct_7cantera_5units_UnitStack *__pyx_vtabptr_7cantera_5units_UnitStack;


/* "units.pxd":53
 * 
 * 
 * cdef class UnitSystem:             # <<<<<<<<<<<<<<
 *     cdef _set_unitSystem(self, shared_ptr[CxxUnitSystem] units)
 *     cdef shared_ptr[CxxUnitSystem] _unitsystem
 */

struct __pyx_vtabstruct_7cantera_5units_UnitSystem {
  PyObject *(*_set_unitSystem)(struct __pyx_obj_7cantera_5units_UnitSystem *, std::shared_ptr<Cantera::UnitSystem> );
};
static struct __pyx_vtabstruct_7cantera_5units_UnitSystem *__pyx_vtabptr_7cantera_5units_UnitSystem;


/* "thermo.pxd":259
 * 
 * 
 * cdef class Species:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxSpecies] _species
 *     cdef CxxSpecies* species
 */

struct __pyx_vtabstruct_7cantera_6thermo_Species {
  PyObject *(*_assign)(struct __pyx_obj_7cantera_6thermo_Species *, std::shared_ptr<Cantera::Species> );
};
static struct __pyx_vtabstruct_7cantera_6thermo_Species *__pyx_vtabptr_7cantera_6thermo_Species;


/* "thermo.pxd":266
 *     cdef _assign(self, shared_ptr[CxxSpecies] other)
 * 
 * cdef class ThermoPhase(_SolutionBase):             # <<<<<<<<<<<<<<
 *     cdef double _mass_factor(self)
 *     cdef double _mole_factor(self)
 */

struct __pyx_vtabstruct_7cantera_6thermo_ThermoPhase {
  double (*_mass_factor)(struct __pyx_obj_7cantera_6thermo_ThermoPhase *);
  double (*_mole_factor)(struct __pyx_obj_7cantera_6thermo_ThermoPhase *);
  int (*element_index)(struct __pyx_obj_7cantera_6thermo_ThermoPhase *, PyObject *, int __pyx_skip_dispatch);
  int (*species_index)(struct __pyx_obj_7cantera_6thermo_ThermoPhase *, PyObject *, int __pyx_skip_dispatch);
  PyArrayObject *(*_getArray1)(struct __pyx_obj_7cantera_6thermo_ThermoPhase *, __pyx_t_7cantera_6thermo_thermoMethod1d);
  void (*_setArray1)(struct __pyx_obj_7cantera_6thermo_ThermoPhase *, __pyx_t_7cantera_6thermo_thermoMethod1d, PyObject *);
};
static struct __pyx_vtabstruct_7cantera_6thermo_ThermoPhase *__pyx_vtabptr_7cantera_6thermo_ThermoPhase;


/* "thermo.pxd":276
 *     cdef public object _enable_plasma
 * 
 * cdef class InterfacePhase(ThermoPhase):             # <<<<<<<<<<<<<<
 *     cdef CxxSurfPhase* surf
 */

struct __pyx_vtabstruct_7cantera_6thermo_InterfacePhase {
  struct __pyx_vtabstruct_7cantera_6thermo_ThermoPhase __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_6thermo_InterfacePhase *__pyx_vtabptr_7cantera_6thermo_InterfacePhase;


/* "_utils.pxd":96
 *     cdef void CxxSetLogger "setLogger" (CxxPythonLogger*)
 * 
 * cdef class AnyMap(dict):             # <<<<<<<<<<<<<<
 *     cdef _set_CxxUnitSystem(self, shared_ptr[CxxUnitSystem] units)
 *     cdef UnitSystem unitsystem
 */

struct __pyx_vtabstruct_7cantera_6_utils_AnyMap {
  PyObject *(*_set_CxxUnitSystem)(struct __pyx_obj_7cantera_6_utils_AnyMap *, std::shared_ptr<Cantera::UnitSystem> );
};
static struct __pyx_vtabstruct_7cantera_6_utils_AnyMap *__pyx_vtabptr_7cantera_6_utils_AnyMap;
/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__))
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#define __Pyx_Arg_VARARGS(args, i) PyTuple_GET_ITEM(args, i)
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_Arg_FASTCALL(args, i) args[i]
    #define __Pyx_NumKwargs_FASTCALL(kwds) PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
#else
    #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_VARARGS(args, start), stop - start)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_FASTCALL(args, start), stop - start)
#else
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely(__Pyx_IS_TYPE(obj, type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs);

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* MoveIfSupported.proto */
#if __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600)
  #include <utility>
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) std::move(x)
#else
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) x
#endif

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* AssertionsEnabled.proto */
#define __Pyx_init_assertions_enabled()
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX < 0x02070600 && !defined(Py_OptimizeFlag)
  #define __pyx_assertions_enabled() (1)
#elif PY_VERSION_HEX < 0x03080000  ||  CYTHON_COMPILING_IN_PYPY  ||  defined(Py_LIMITED_API)
  #define __pyx_assertions_enabled() (!Py_OptimizeFlag)
#elif CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030900A6
  static int __pyx_assertions_enabled_flag;
  #define __pyx_assertions_enabled() (__pyx_assertions_enabled_flag)
  #undef __Pyx_init_assertions_enabled
  static void __Pyx_init_assertions_enabled(void) {
    __pyx_assertions_enabled_flag = ! _PyInterpreterState_GetConfig(__Pyx_PyThreadState_Current->interp)->optimization_level;
  }
#else
  #define __pyx_assertions_enabled() (!Py_OptimizeFlag)
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_AddObjC(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceAdd(op1, op2) : PyNumber_Add(op1, op2))
#endif

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kw, const char* function_name, int kw_allowed);

/* IsLittleEndian.proto */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void);

/* BufferFormatCheck.proto */
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts);
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type);

/* BufferGetAndValidate.proto */
#define __Pyx_GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack)\
    ((obj == Py_None || obj == NULL) ?\
    (__Pyx_ZeroBuffer(buf), 0) :\
    __Pyx__GetBufferAndValidate(buf, obj, dtype, flags, nd, cast, stack))
static int  __Pyx__GetBufferAndValidate(Py_buffer* buf, PyObject* obj,
    __Pyx_TypeInfo* dtype, int flags, int nd, int cast, __Pyx_BufFmt_StackElem* stack);
static void __Pyx_ZeroBuffer(Py_buffer* buf);
static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info);
static Py_ssize_t __Pyx_minusones[] = { -1, -1, -1, -1, -1, -1, -1, -1 };
static Py_ssize_t __Pyx_zeros[] = { 0, 0, 0, 0, 0, 0, 0, 0 };

/* BufferIndexError.proto */
static void __Pyx_RaiseBufferIndexError(int axis);

#define __Pyx_BufPtrStrided1d(type, buf, i0, s0) (type)((char*)buf + i0 * s0)
/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* PyIntCompare.proto */
static CYTHON_INLINE int __Pyx_PyInt_BoolNeObjC(PyObject *op1, PyObject *op2, long intval, long inplace);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* ObjectGetItem.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key);
#else
#define __Pyx_PyObject_GetItem(obj, key)  PyObject_GetItem(obj, key)
#endif

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* SliceObject.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(
        PyObject* obj, Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** py_start, PyObject** py_stop, PyObject** py_slice,
        int has_cstart, int has_cstop, int wraparound);

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* RaiseClosureNameError.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* RaiseUnboundLocalError.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* pep479.proto */
static void __Pyx_Generator_Replace_StopIteration(int in_async_gen);

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* FixUpExtensionType.proto */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);
#endif

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* FetchCommonType.proto */
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
#else
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);
#endif

/* PyMethodNew.proto */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#else
    #define __Pyx_PyMethod_New PyMethod_New
#endif

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1
    PyObject *func_classobj;
#endif
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;  // used by FusedFunction for copying defaults
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_CyFunctionType)
#define __Pyx_IsCyOrPyCFunction(obj)  __Pyx_TypeCheck2(obj, __pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_CyFunctionType)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* PyObject_Str.proto */
#define __Pyx_PyObject_Str(obj)\
    (likely(PyString_CheckExact(obj)) ? __Pyx_NewRef(obj) : PyObject_Str(obj))

/* SwapException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSwap(type, value, tb)  __Pyx__ExceptionSwap(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyIntBinop.proto */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_MultiplyCObj(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check);
#else
#define __Pyx_PyInt_MultiplyCObj(op1, op2, intval, inplace, zerodivision_check)\
    (inplace ? PyNumber_InPlaceMultiply(op1, op2) : PyNumber_Multiply(op1, op2))
#endif

/* ValidateBasesTuple.proto */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases);
#endif

/* PyType_Ready.proto */
CYTHON_UNUSED static int __Pyx_PyType_Ready(PyTypeObject *t);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetupReduce.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce(PyObject* type_obj);
#endif

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto_3_0_0
#define __PYX_HAVE_RT_ImportType_proto_3_0_0
#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L
#include <stdalign.h>
#endif
#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) || __cplusplus >= 201103L
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_0(s) alignof(s)
#else
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_0(s) sizeof(void*)
#endif
enum __Pyx_ImportType_CheckSize_3_0_0 {
   __Pyx_ImportType_CheckSize_Error_3_0_0 = 0,
   __Pyx_ImportType_CheckSize_Warn_3_0_0 = 1,
   __Pyx_ImportType_CheckSize_Ignore_3_0_0 = 2
};
static PyTypeObject *__Pyx_ImportType_3_0_0(PyObject* module, const char *module_name, const char *class_name, size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_0 check_size);
#endif

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyTypeObject *type);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* ImportDottedModule.proto */
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple);
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple);
#endif

/* CalculateMetaclass.proto */
static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases);

/* PyObjectCall2Args.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2);

/* PyObjectLookupSpecial.proto */
#if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_LookupSpecialNoError(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 0)
#define __Pyx_PyObject_LookupSpecial(obj, attr_name)  __Pyx__PyObject_LookupSpecial(obj, attr_name, 1)
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error);
#else
#define __Pyx_PyObject_LookupSpecialNoError(o,n) __Pyx_PyObject_GetAttrStrNoError(o,n)
#define __Pyx_PyObject_LookupSpecial(o,n) __Pyx_PyObject_GetAttrStr(o,n)
#endif

/* Py3ClassCreate.proto */
static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name, PyObject *qualname,
                                           PyObject *mkw, PyObject *modname, PyObject *doc);
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases, PyObject *dict,
                                      PyObject *mkw, int calculate_metaclass, int allow_py2_metaclass);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
#include <new>

/* BufferStructDeclare.proto */
typedef struct {
  Py_ssize_t shape, strides, suboffsets;
} __Pyx_Buf_DimInfo;
typedef struct {
  size_t refcount;
  Py_buffer pybuffer;
} __Pyx_Buffer;
typedef struct {
  __Pyx_Buffer *rcbuffer;
  char *data;
  __Pyx_Buf_DimInfo diminfo[8];
} __Pyx_LocalBuf_ND;

#if PY_MAJOR_VERSION < 3
    static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags);
    static void __Pyx_ReleaseBuffer(Py_buffer *view);
#else
    #define __Pyx_GetBuffer PyObject_GetBuffer
    #define __Pyx_ReleaseBuffer PyBuffer_Release
#endif


/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* CIntFromPy.proto */
static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value);

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
static __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp);
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#else
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* PyObjectCallMethod1.proto */
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg);

/* CoroutineBase.proto */
struct __pyx_CoroutineObject;
typedef PyObject *(*__pyx_coroutine_body_t)(struct __pyx_CoroutineObject *, PyThreadState *, PyObject *);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_ExcInfoStruct  _PyErr_StackItem
#else
typedef struct {
    PyObject *exc_type;
    PyObject *exc_value;
    PyObject *exc_traceback;
} __Pyx_ExcInfoStruct;
#endif
typedef struct __pyx_CoroutineObject {
    PyObject_HEAD
    __pyx_coroutine_body_t body;
    PyObject *closure;
    __Pyx_ExcInfoStruct gi_exc_state;
    PyObject *gi_weakreflist;
    PyObject *classobj;
    PyObject *yieldfrom;
    PyObject *gi_name;
    PyObject *gi_qualname;
    PyObject *gi_modulename;
    PyObject *gi_code;
    PyObject *gi_frame;
    int resume_label;
    char is_running;
} __pyx_CoroutineObject;
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
    PyTypeObject *type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
    PyObject *name, PyObject *qualname, PyObject *module_name);
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name);
static CYTHON_INLINE void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *self);
static int __Pyx_Coroutine_clear(PyObject *self);
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value);
static PyObject *__Pyx_Coroutine_Close(PyObject *self);
static PyObject *__Pyx_Coroutine_Throw(PyObject *gen, PyObject *args);
#if CYTHON_USE_EXC_INFO_STACK
#define __Pyx_Coroutine_SwapException(self)
#define __Pyx_Coroutine_ResetAndClearException(self)  __Pyx_Coroutine_ExceptionClear(&(self)->gi_exc_state)
#else
#define __Pyx_Coroutine_SwapException(self) {\
    __Pyx_ExceptionSwap(&(self)->gi_exc_state.exc_type, &(self)->gi_exc_state.exc_value, &(self)->gi_exc_state.exc_traceback);\
    __Pyx_Coroutine_ResetFrameBackpointer(&(self)->gi_exc_state);\
    }
#define __Pyx_Coroutine_ResetAndClearException(self) {\
    __Pyx_ExceptionReset((self)->gi_exc_state.exc_type, (self)->gi_exc_state.exc_value, (self)->gi_exc_state.exc_traceback);\
    (self)->gi_exc_state.exc_type = (self)->gi_exc_state.exc_value = (self)->gi_exc_state.exc_traceback = NULL;\
    }
#endif
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__pyx_tstate, pvalue)
#else
#define __Pyx_PyGen_FetchStopIterationValue(pvalue)\
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, pvalue)
#endif
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *tstate, PyObject **pvalue);
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state);

/* PatchModuleWithCoroutine.proto */
static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code);

/* PatchGeneratorABC.proto */
static int __Pyx_patch_abc(void);

/* Generator.proto */
#define __Pyx_Generator_USED
#define __Pyx_Generator_CheckExact(obj) __Pyx_IS_TYPE(obj, __pyx_GeneratorType)
#define __Pyx_Generator_New(body, code, closure, name, qualname, module_name)\
    __Pyx__Coroutine_New(__pyx_GeneratorType, body, code, closure, name, qualname, module_name)
static PyObject *__Pyx_Generator_Next(PyObject *self);
static int __pyx_Generator_init(PyObject *module);

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* FunctionImport.proto */
static int __Pyx_ImportFunction_3_0_0(PyObject *module, const char *funcname, void (**f)(void), const char *sig);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

/* #### Code section: module_declarations ### */
static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4real_real(PyComplexObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4imag_imag(PyComplexObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_7ndarray_4base_base(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE PyArray_Descr *__pyx_f_5numpy_7ndarray_5descr_descr(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE int __pyx_f_5numpy_7ndarray_4ndim_ndim(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_5shape_shape(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_7strides_strides(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE npy_intp __pyx_f_5numpy_7ndarray_4size_size(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE char *__pyx_f_5numpy_7ndarray_4data_data(PyArrayObject *__pyx_v_self); /* proto*/

/* Module declarations from "libcpp.vector" */

/* Module declarations from "libc.string" */

/* Module declarations from "libcpp.string" */

/* Module declarations from "libcpp.utility" */

/* Module declarations from "libcpp.map" */

/* Module declarations from "libcpp.cast" */

/* Module declarations from "libcpp.pair" */

/* Module declarations from "libcpp" */

/* Module declarations from "libcpp.functional" */

/* Module declarations from "libcpp.memory" */

/* Module declarations from "cpython.version" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.type" */

/* Module declarations from "libc.stdio" */

/* Module declarations from "cpython.object" */

/* Module declarations from "cpython.ref" */

/* Module declarations from "cpython.exc" */

/* Module declarations from "cpython.module" */

/* Module declarations from "cpython.mem" */

/* Module declarations from "cpython.tuple" */

/* Module declarations from "cpython.list" */

/* Module declarations from "cpython.sequence" */

/* Module declarations from "cpython.mapping" */

/* Module declarations from "cpython.iterator" */

/* Module declarations from "cpython.number" */

/* Module declarations from "cpython.int" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.bool" */

/* Module declarations from "cpython.long" */

/* Module declarations from "cpython.float" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.complex" */

/* Module declarations from "cpython.string" */

/* Module declarations from "cpython.unicode" */

/* Module declarations from "cpython.pyport" */

/* Module declarations from "cpython.dict" */

/* Module declarations from "cpython.instance" */

/* Module declarations from "cpython.function" */

/* Module declarations from "cpython.method" */

/* Module declarations from "cpython.weakref" */

/* Module declarations from "cpython.getargs" */

/* Module declarations from "cpython.pythread" */

/* Module declarations from "cpython.pystate" */

/* Module declarations from "cpython.cobject" */

/* Module declarations from "cpython.oldbuffer" */

/* Module declarations from "cpython.set" */

/* Module declarations from "cpython.buffer" */

/* Module declarations from "cpython.bytes" */

/* Module declarations from "cpython.pycapsule" */

/* Module declarations from "cpython.contextvars" */

/* Module declarations from "cpython" */

/* Module declarations from "numpy" */

/* Module declarations from "numpy" */

/* Module declarations from "cantera.ctcxx" */

/* Module declarations from "cantera.func1" */

/* Module declarations from "cantera.units" */

/* Module declarations from "cantera.delegator" */

/* Module declarations from "cantera.solutionbase" */

/* Module declarations from "cantera.kinetics" */

/* Module declarations from "cantera.thermo" */

/* Module declarations from "libcpp.unordered_map" */

/* Module declarations from "cantera._utils" */
static std::string (*__pyx_f_7cantera_6_utils_stringify)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_7cantera_6_utils_pystr)(std::string); /*proto*/
static PyObject *(*__pyx_f_7cantera_6_utils_anymap_to_py)(Cantera::AnyMap &); /*proto*/

/* Module declarations from "cantera._onedim" */
static PyObject *__pyx_convert_vector_to_py_size_t(std::vector<size_t>  const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_double(std::vector<double>  const &); /*proto*/
static PyObject *__pyx_convert_vector_to_py_int(std::vector<int>  const &); /*proto*/
/* #### Code section: typeinfo ### */
static __Pyx_TypeInfo __Pyx_TypeInfo_nn___pyx_t_5numpy_double_t = { "double_t", NULL, sizeof(__pyx_t_5numpy_double_t), { 0 }, 0, 'R', 0, 0 };
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "cantera._onedim"
extern int __pyx_module_is_main_cantera___onedim;
int __pyx_module_is_main_cantera___onedim = 0;

/* Implementation of "cantera._onedim" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_AssertionError;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_zip;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_DeprecationWarning;
static PyObject *__pyx_builtin_super;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_KeyError;
static PyObject *__pyx_builtin_print;
static PyObject *__pyx_builtin_MemoryError;
static PyObject *__pyx_builtin_ImportError;
/* #### Code section: string_decls ### */
static const char __pyx_k_D[] = "D";
static const char __pyx_k_E[] = "E";
static const char __pyx_k_L[] = "L";
static const char __pyx_k_N[] = "N";
static const char __pyx_k_P[] = "P";
static const char __pyx_k_S[] = "S";
static const char __pyx_k_T[] = "T";
static const char __pyx_k_X[] = "X";
static const char __pyx_k_Y[] = "Y";
static const char __pyx_k_a[] = "a";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_d[] = "d";
static const char __pyx_k_e[] = "e";
static const char __pyx_k_f[] = "f";
static const char __pyx_k_g[] = "g";
static const char __pyx_k_i[] = "i";
static const char __pyx_k_j[] = "j";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_n[] = "n";
static const char __pyx_k_p[] = "p";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_t[] = "t";
static const char __pyx_k_v[] = "v";
static const char __pyx_k_x[] = "x";
static const char __pyx_k_y[] = "y";
static const char __pyx_k__8[] = "";
static const char __pyx_k_dp[] = "dp";
static const char __pyx_k_dz[] = "dz";
static const char __pyx_k_gc[] = "gc";
static const char __pyx_k_gg[] = "gg";
static const char __pyx_k_k0[] = "k0";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_xi[] = "xi";
static const char __pyx_k_78s[] = "\n{:*^78s}";
static const char __pyx_k_TPX[] = "TPX";
static const char __pyx_k_TPY[] = "TPY";
static const char __pyx_k__17[] = "{}_{}";
static const char __pyx_k__19[] = "_";
static const char __pyx_k__27[] = " ";
static const char __pyx_k__43[] = ".";
static const char __pyx_k__44[] = "*";
static const char __pyx_k_abs[] = "abs";
static const char __pyx_k_arr[] = "arr";
static const char __pyx_k_doc[] = "__doc__";
static const char __pyx_k_dom[] = "dom";
static const char __pyx_k_dot[] = "dot";
static const char __pyx_k_gas[] = "gas";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_key[] = "key";
static const char __pyx_k_kin[] = "kin";
static const char __pyx_k_log[] = "log";
static const char __pyx_k_msg[] = "msg";
static const char __pyx_k_pos[] = "pos";
static const char __pyx_k_rdt[] = "rdt";
static const char __pyx_k_rel[] = "rel";
static const char __pyx_k_spc[] = "spc";
static const char __pyx_k_val[] = "val";
static const char __pyx_k_zip[] = "zip";
static const char __pyx_k_None[] = "None";
static const char __pyx_k__161[] = "?";
static const char __pyx_k_args[] = "args";
static const char __pyx_k_atol[] = "atol";
static const char __pyx_k_auto[] = "auto";
static const char __pyx_k_comp[] = "comp";
static const char __pyx_k_copy[] = "__copy__";
static const char __pyx_k_data[] = "data";
static const char __pyx_k_dest[] = "dest";
static const char __pyx_k_dfdp[] = "dfdp";
static const char __pyx_k_dgdp[] = "dgdp";
static const char __pyx_k_dgdx[] = "dgdx";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_edge[] = "edge";
static const char __pyx_k_eval[] = "eval";
static const char __pyx_k_grid[] = "grid";
static const char __pyx_k_idom[] = "idom";
static const char __pyx_k_init[] = "__init__";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_mdot[] = "mdot";
static const char __pyx_k_meta[] = "meta";
static const char __pyx_k_name[] = "name";
static const char __pyx_k_none[] = "none";
static const char __pyx_k_ones[] = "ones";
static const char __pyx_k_qdot[] = "qdot";
static const char __pyx_k_rtol[] = "rtol";
static const char __pyx_k_save[] = "save";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_send[] = "send";
static const char __pyx_k_show[] = "show";
static const char __pyx_k_size[] = "size";
static const char __pyx_k_spec[] = "__spec__";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_warn[] = "warn";
static const char __pyx_k_zmax[] = "zmax";
static const char __pyx_k_zmin[] = "zmin";
static const char __pyx_k_Sim1D[] = "Sim1D";
static const char __pyx_k_array[] = "array";
static const char __pyx_k_basis[] = "basis";
static const char __pyx_k_close[] = "close";
static const char __pyx_k_curve[] = "curve";
static const char __pyx_k_dtype[] = "dtype";
static const char __pyx_k_empty[] = "empty";
static const char __pyx_k_fplus[] = "fplus";
static const char __pyx_k_gplus[] = "gplus";
static const char __pyx_k_index[] = "index";
static const char __pyx_k_inlet[] = "inlet";
static const char __pyx_k_items[] = "items";
static const char __pyx_k_kcomp[] = "kcomp";
static const char __pyx_k_lower[] = "lower";
static const char __pyx_k_multi[] = "multi";
static const char __pyx_k_no_op[] = "no_op";
static const char __pyx_k_npmax[] = "npmax";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_phase[] = "phase";
static const char __pyx_k_point[] = "point";
static const char __pyx_k_print[] = "print";
static const char __pyx_k_prune[] = "prune";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_ratio[] = "ratio";
static const char __pyx_k_slope[] = "slope";
static const char __pyx_k_solve[] = "solve";
static const char __pyx_k_soret[] = "soret";
static const char __pyx_k_split[] = "split";
static const char __pyx_k_stage[] = "stage";
static const char __pyx_k_super[] = "super";
static const char __pyx_k_throw[] = "throw";
static const char __pyx_k_tsmax[] = "tsmax";
static const char __pyx_k_tsmin[] = "tsmin";
static const char __pyx_k_upper[] = "upper";
static const char __pyx_k_utils[] = "_utils";
static const char __pyx_k_value[] = "value";
static const char __pyx_k_argmax[] = "argmax";
static const char __pyx_k_bounds[] = "bounds";
static const char __pyx_k_charge[] = "charge";
static const char __pyx_k_domain[] = "domain";
static const char __pyx_k_double[] = "double";
static const char __pyx_k_enable[] = "enable";
static const char __pyx_k_fminus[] = "fminus";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_gminus[] = "gminus";
static const char __pyx_k_header[] = "header";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_kwargs[] = "kwargs";
static const char __pyx_k_module[] = "__module__";
static const char __pyx_k_n_vars[] = "n_vars";
static const char __pyx_k_name_2[] = "__name__";
static const char __pyx_k_outlet[] = "outlet";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_refine[] = "refine";
static const char __pyx_k_solved[] = "solved";
static const char __pyx_k_ss_age[] = "ss_age";
static const char __pyx_k_states[] = "states";
static const char __pyx_k_steady[] = "steady";
static const char __pyx_k_ts_age[] = "ts_age";
static const char __pyx_k_unique[] = "unique";
static const char __pyx_k_update[] = "update";
static const char __pyx_k_values[] = "values";
static const char __pyx_k_Inlet1D[] = "Inlet1D";
static const char __pyx_k_IonFlow[] = "IonFlow";
static const char __pyx_k_default[] = "default";
static const char __pyx_k_density[] = "density";
static const char __pyx_k_disable[] = "disable";
static const char __pyx_k_domains[] = "domains";
static const char __pyx_k_extinct[] = "extinct";
static const char __pyx_k_genexpr[] = "genexpr";
static const char __pyx_k_isclose[] = "isclose";
static const char __pyx_k_nPoints[] = "nPoints";
static const char __pyx_k_n_steps[] = "n_steps";
static const char __pyx_k_perturb[] = "perturb";
static const char __pyx_k_pos_vec[] = "pos_vec";
static const char __pyx_k_prepare[] = "__prepare__";
static const char __pyx_k_profile[] = "profile";
static const char __pyx_k_restore[] = "restore";
static const char __pyx_k_species[] = "species";
static const char __pyx_k_surface[] = "surface";
static const char __pyx_k_tfactor[] = "tfactor";
static const char __pyx_k_val_vec[] = "val_vec";
static const char __pyx_k_Domain1D[] = "Domain1D";
static const char __pyx_k_FlowBase[] = "_FlowBase";
static const char __pyx_k_FreeFlow[] = "FreeFlow";
static const char __pyx_k_KeyError[] = "KeyError";
static const char __pyx_k_Outlet1D[] = "Outlet1D";
static const char __pyx_k_filename[] = "filename";
static const char __pyx_k_gas_flow[] = "gas-flow";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_ion_flow[] = "ion-flow";
static const char __pyx_k_linspace[] = "linspace";
static const char __pyx_k_loglevel[] = "loglevel";
static const char __pyx_k_n_params[] = "n_params";
static const char __pyx_k_n_points[] = "n_points";
static const char __pyx_k_qualname[] = "__qualname__";
static const char __pyx_k_set_name[] = "__set_name__";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_settings[] = "settings";
static const char __pyx_k_solution[] = "solution";
static const char __pyx_k_stepsize[] = "stepsize";
static const char __pyx_k_to_array[] = "_to_array";
static const char __pyx_k_velocity[] = "velocity";
static const char __pyx_k_warnings[] = "warnings";
static const char __pyx_k_Surface1D[] = "Surface1D";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_chargetol[] = "chargetol";
static const char __pyx_k_component[] = "component";
static const char __pyx_k_enumerate[] = "enumerate";
static const char __pyx_k_free_flow[] = "free-flow";
static const char __pyx_k_isenabled[] = "isenabled";
static const char __pyx_k_metaclass[] = "__metaclass__";
static const char __pyx_k_n_species[] = "n_species";
static const char __pyx_k_normalize[] = "normalize";
static const char __pyx_k_overwrite[] = "overwrite";
static const char __pyx_k_positions[] = "positions";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_set_soret[] = "set_soret";
static const char __pyx_k_set_value[] = "set_value";
static const char __pyx_k_soln_yaml[] = "soln.yaml";
static const char __pyx_k_transport[] = "transport";
static const char __pyx_k_Boundary1D[] = "Boundary1D";
static const char __pyx_k_Sim1D_eval[] = "Sim1D.eval";
static const char __pyx_k_Sim1D_save[] = "Sim1D.save";
static const char __pyx_k_Sim1D_show[] = "Sim1D.show";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_from_array[] = "_from_array";
static const char __pyx_k_interrupts[] = "interrupts";
static const char __pyx_k_other_cols[] = "other_cols";
static const char __pyx_k_print_time[] = "print_time";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_set_bounds[] = "set_bounds";
static const char __pyx_k_show_stats[] = "show_stats";
static const char __pyx_k_soret_doms[] = "soret_doms";
static const char __pyx_k_tolerances[] = "tolerances";
static const char __pyx_k_work_value[] = "work_value";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_MemoryError[] = "MemoryError";
static const char __pyx_k_Sim1D_phase[] = "Sim1D.phase";
static const char __pyx_k_Sim1D_solve[] = "Sim1D.solve";
static const char __pyx_k_Sim1D_value[] = "Sim1D.value";
static const char __pyx_k_clear_stats[] = "clear_stats";
static const char __pyx_k_composition[] = "composition";
static const char __pyx_k_compression[] = "compression";
static const char __pyx_k_description[] = "description";
static const char __pyx_k_domain_type[] = "_domain_type";
static const char __pyx_k_get_indices[] = "_get_indices";
static const char __pyx_k_ionized_gas[] = "ionized-gas";
static const char __pyx_k_logical_not[] = "logical_not";
static const char __pyx_k_refine_grid[] = "refine_grid";
static const char __pyx_k_set_profile[] = "set_profile";
static const char __pyx_k_solve_multi[] = "solve_multi";
static const char __pyx_k_CanteraError[] = "CanteraError";
static const char __pyx_k_IdealGasFlow[] = "IdealGasFlow";
static const char __pyx_k_Sim1D_refine[] = "Sim1D.refine";
static const char __pyx_k_WeakrefProxy[] = "_WeakrefProxy";
static const char __pyx_k_domain_index[] = "domain_index";
static const char __pyx_k_flow_domains[] = "flow_domains";
static const char __pyx_k_initializing[] = "_initializing";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_n_components[] = "n_components";
static const char __pyx_k_restore_data[] = "restore_data";
static const char __pyx_k_set_grid_min[] = "set_grid_min";
static const char __pyx_k_set_kinetics[] = "set_kinetics";
static const char __pyx_k_species_name[] = "species_name";
static const char __pyx_k_stringsource[] = "<stringsource>";
static const char __pyx_k_Domain1D_type[] = "Domain1D_type";
static const char __pyx_k_Sim1D_extinct[] = "Sim1D.extinct";
static const char __pyx_k_Sim1D_profile[] = "Sim1D.profile";
static const char __pyx_k_Sim1D_restore[] = "Sim1D.restore";
static const char __pyx_k_atol_ss_final[] = "atol_ss_final";
static const char __pyx_k_atol_ts_final[] = "atol_ts_final";
static const char __pyx_k_class_getitem[] = "__class_getitem__";
static const char __pyx_k_get_settings3[] = "get_settings3";
static const char __pyx_k_init_subclass[] = "__init_subclass__";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_return_counts[] = "return_counts";
static const char __pyx_k_rtol_ss_final[] = "rtol_ss_final";
static const char __pyx_k_rtol_ts_final[] = "rtol_ts_final";
static const char __pyx_k_set_free_flow[] = "set_free_flow";
static const char __pyx_k_set_interrupt[] = "set_interrupt";
static const char __pyx_k_set_time_step[] = "set_time_step";
static const char __pyx_k_set_transport[] = "set_transport";
static const char __pyx_k_show_solution[] = "show_solution";
static const char __pyx_k_solve_adjoint[] = "solve_adjoint";
static const char __pyx_k_solving_stage[] = "solving_stage";
static const char __pyx_k_soret_enabled[] = "soret_enabled";
static const char __pyx_k_species_names[] = "species_names";
static const char __pyx_k_steady_abstol[] = "steady_abstol";
static const char __pyx_k_steady_reltol[] = "steady_reltol";
static const char __pyx_k_AssertionError[] = "AssertionError";
static const char __pyx_k_UnstrainedFlow[] = "UnstrainedFlow";
static const char __pyx_k_component_name[] = "component_name";
static const char __pyx_k_energy_enabled[] = "energy_enabled";
static const char __pyx_k_multicomponent[] = "multicomponent";
static const char __pyx_k_symmetry_plane[] = "symmetry-plane";
static const char __pyx_k_Domain1D___copy[] = "Domain1D.__copy__";
static const char __pyx_k_Domain1D_bounds[] = "Domain1D.bounds";
static const char __pyx_k_Sim1D_set_value[] = "Sim1D.set_value";
static const char __pyx_k_SymmetryPlane1D[] = "SymmetryPlane1D";
static const char __pyx_k_cantera__onedim[] = "cantera._onedim";
static const char __pyx_k_component_index[] = "component_index";
static const char __pyx_k_component_names[] = "component_names";
static const char __pyx_k_emissivity_left[] = "emissivity_left";
static const char __pyx_k_phase_of_matter[] = "phase_of_matter";
static const char __pyx_k_set_max_jac_age[] = "set_max_jac_age";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_transport_model[] = "transport_model";
static const char __pyx_k_unstrained_flow[] = "unstrained-flow";
static const char __pyx_k_AxisymmetricFlow[] = "AxisymmetricFlow";
static const char __pyx_k_Sim1D_show_stats[] = "Sim1D.show_stats";
static const char __pyx_k_Sim1D_work_value[] = "Sim1D.work_value";
static const char __pyx_k_emissivity_right[] = "emissivity_right";
static const char __pyx_k_mixture_averaged[] = "mixture-averaged";
static const char __pyx_k_outlet_reservoir[] = "outlet-reservoir";
static const char __pyx_k_reacting_surface[] = "reacting-surface";
static const char __pyx_k_set_flat_profile[] = "set_flat_profile";
static const char __pyx_k_solve_locals_log[] = "solve.<locals>.log";
static const char __pyx_k_transient_abstol[] = "transient_abstol";
static const char __pyx_k_transient_reltol[] = "transient_reltol";
static const char __pyx_k_Domain1D___reduce[] = "Domain1D.__reduce__";
static const char __pyx_k_OutletReservoir1D[] = "OutletReservoir1D";
static const char __pyx_k_ReactingSurface1D[] = "ReactingSurface1D";
static const char __pyx_k_Sim1D_clear_stats[] = "Sim1D.clear_stats";
static const char __pyx_k_Sim1D_set_profile[] = "Sim1D.set_profile";
static const char __pyx_k_ascontiguousarray[] = "ascontiguousarray";
static const char __pyx_k_axisymmetric_flow[] = "axisymmetric-flow";
static const char __pyx_k_set_initial_guess[] = "set_initial_guess";
static const char __pyx_k_set_max_time_step[] = "set_max_time_step";
static const char __pyx_k_set_min_time_step[] = "set_min_time_step";
static const char __pyx_k_set_solving_stage[] = "set_solving_stage";
static const char __pyx_k_DeprecationWarning[] = "DeprecationWarning";
static const char __pyx_k_Domain1D__to_array[] = "Domain1D._to_array";
static const char __pyx_k_Sim1D__get_indices[] = "Sim1D._get_indices";
static const char __pyx_k_Sim1D_domain_index[] = "Sim1D.domain_index";
static const char __pyx_k_Sim1D_restore_data[] = "Sim1D.restore_data";
static const char __pyx_k_Sim1D_set_grid_min[] = "Sim1D.set_grid_min";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_restore_tolerances[] = "restore_tolerances";
static const char __pyx_k_Domain1D_set_bounds[] = "Domain1D.set_bounds";
static const char __pyx_k_Domain1D_tolerances[] = "Domain1D.tolerances";
static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
static const char __pyx_k_Sim1D_set_interrupt[] = "Sim1D.set_interrupt";
static const char __pyx_k_Sim1D_set_time_step[] = "Sim1D.set_time_step";
static const char __pyx_k_Sim1D_show_solution[] = "Sim1D.show_solution";
static const char __pyx_k_Sim1D_solve_adjoint[] = "Sim1D.solve_adjoint";
static const char __pyx_k_cantera__onedim_pyx[] = "cantera/_onedim.pyx";
static const char __pyx_k_get_max_grid_points[] = "get_max_grid_points";
static const char __pyx_k_get_refine_criteria[] = "get_refine_criteria";
static const char __pyx_k_set_max_grid_points[] = "set_max_grid_points";
static const char __pyx_k_set_refine_criteria[] = "set_refine_criteria";
static const char __pyx_k_set_steady_callback[] = "set_steady_callback";
static const char __pyx_k_Domain1D__from_array[] = "Domain1D._from_array";
static const char __pyx_k_Sim1D_save_line_1592[] = "Sim1D.save (line 1592)";
static const char __pyx_k_get_initial_solution[] = "_get_initial_solution";
static const char __pyx_k_have_user_tolerances[] = "have_user_tolerances";
static const char __pyx_k_set_time_step_factor[] = "set_time_step_factor";
static const char __pyx_k_solve_locals_genexpr[] = "solve.<locals>.genexpr";
static const char __pyx_k_Sim1D___reduce_cython[] = "Sim1D.__reduce_cython__";
static const char __pyx_k_Sim1D_set_max_jac_age[] = "Sim1D.set_max_jac_age";
static const char __pyx_k_Sim1D_value_line_1037[] = "Sim1D.value (line 1037)";
static const char __pyx_k_boundary_emissivities[] = "boundary_emissivities";
static const char __pyx_k_set_axisymmetric_flow[] = "set_axisymmetric_flow";
static const char __pyx_k_set_steady_tolerances[] = "set_steady_tolerances";
static const char __pyx_k_Domain1D_steady_abstol[] = "Domain1D.steady_abstol";
static const char __pyx_k_Domain1D_steady_reltol[] = "Domain1D.steady_reltol";
static const char __pyx_k_FlowBase_get_settings3[] = "_FlowBase.get_settings3";
static const char __pyx_k_FlowBase_set_free_flow[] = "_FlowBase.set_free_flow";
static const char __pyx_k_FlowBase_set_transport[] = "_FlowBase.set_transport";
static const char __pyx_k_Sim1D_set_flat_profile[] = "Sim1D.set_flat_profile";
static const char __pyx_k_set_default_tolerances[] = "set_default_tolerances";
static const char __pyx_k_set_fixed_temp_profile[] = "set_fixed_temp_profile";
static const char __pyx_k_set_time_step_callback[] = "set_time_step_callback";
static const char __pyx_k_solve_locals_set_soret[] = "solve.<locals>.set_soret";
static const char __pyx_k_Domain1D_component_name[] = "Domain1D.component_name";
static const char __pyx_k_Sim1D___setstate_cython[] = "Sim1D.__setstate_cython__";
static const char __pyx_k_Sim1D_profile_line_1101[] = "Sim1D.profile (line 1101)";
static const char __pyx_k_Sim1D_restore_line_1639[] = "Sim1D.restore (line 1639)";
static const char __pyx_k_Sim1D_set_initial_guess[] = "Sim1D.set_initial_guess";
static const char __pyx_k_Sim1D_set_max_time_step[] = "Sim1D.set_max_time_step";
static const char __pyx_k_Sim1D_set_min_time_step[] = "Sim1D.set_min_time_step";
static const char __pyx_k_restore_steady_solution[] = "restore_steady_solution";
static const char __pyx_k_Domain1D_bounds_line_198[] = "Domain1D.bounds (line 198)";
static const char __pyx_k_Domain1D_component_index[] = "Domain1D.component_index";
static const char __pyx_k_Domain_named_0_not_found[] = "Domain named \"{0}\" not found.";
static const char __pyx_k_set_transient_tolerances[] = "set_transient_tolerances";
static const char __pyx_k_Domain1D_transient_abstol[] = "Domain1D.transient_abstol";
static const char __pyx_k_Domain1D_transient_reltol[] = "Domain1D.transient_reltol";
static const char __pyx_k_IonFlow_set_solving_stage[] = "IonFlow.set_solving_stage";
static const char __pyx_k_Sim1D_get_max_grid_points[] = "Sim1D.get_max_grid_points";
static const char __pyx_k_Sim1D_get_refine_criteria[] = "Sim1D.get_refine_criteria";
static const char __pyx_k_Sim1D_set_max_grid_points[] = "Sim1D.set_max_grid_points";
static const char __pyx_k_Sim1D_set_refine_criteria[] = "Sim1D.set_refine_criteria";
static const char __pyx_k_Sim1D_set_steady_callback[] = "Sim1D.set_steady_callback";
static const char __pyx_k_Sim1D_set_value_line_1053[] = "Sim1D.set_value (line 1053)";
static const char __pyx_k_Sim1D_set_time_step_factor[] = "Sim1D.set_time_step_factor";
static const char __pyx_k_Sim1D_work_value_line_1084[] = "Sim1D.work_value (line 1084)";
static const char __pyx_k_solve_locals_set_transport[] = "solve.<locals>.set_transport";
static const char __pyx_k_Domain1D_set_bounds_line_96[] = "Domain1D.set_bounds (line 96)";
static const char __pyx_k_Sim1D__get_initial_solution[] = "Sim1D._get_initial_solution";
static const char __pyx_k_Sim1D_set_profile_line_1120[] = "Sim1D.set_profile (line 1120)";
static const char __pyx_k_Domain1D_tolerances_line_208[] = "Domain1D.tolerances (line 208)";
static const char __pyx_k_Import_of_is_not_implemented[] = "Import of '{}' is not implemented";
static const char __pyx_k_Sim1D_set_time_step_callback[] = "Sim1D.set_time_step_callback";
static const char __pyx_k_Solving_with_Soret_diffusion[] = "Solving with Soret diffusion";
static const char __pyx_k_Sim1D_restore_steady_solution[] = "Sim1D.restore_steady_solution";
static const char __pyx_k_Sim1D_set_time_step_line_1243[] = "Sim1D.set_time_step (line 1243)";
static const char __pyx_k_Domain1D_set_steady_tolerances[] = "Domain1D.set_steady_tolerances";
static const char __pyx_k_Flame_is_extinct_on_point_grid[] = "Flame is extinct on {} point grid";
static const char __pyx_k_FlowBase_set_axisymmetric_flow[] = "_FlowBase.set_axisymmetric_flow";
static const char __pyx_k_ReactingSurface1D_set_kinetics[] = "ReactingSurface1D.set_kinetics";
static const char __pyx_k_Set_the_lower_and_upper_bounds[] = "\n        Set the lower and upper bounds on the solution.\n\n        The argument list should consist of keyword/value pairs, with\n        component names as keywords and (lower bound, upper bound) tuples as\n        the values.  The keyword ``default`` may be used to specify default\n        bounds for all unspecified components. The keyword ``Y`` can be used to\n        stand for all species mass fractions in flow domains.\n\n        >>> d.set_bounds(default=(0, 1), Y=(-1.0e-5, 2.0))\n        ";
static const char __pyx_k_Set_the_value_of_one_component[] = "\n        Set the value of one component in one domain at one point to 'value'.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param point:\n            grid point number within ``domain`` starting with 0 on the left\n        :param value:\n            numerical value\n\n        >>> s.set(d, 3, 5, 6.7)\n        >>> s.set(1, 0, 5, 6.7)\n        >>> s.set('flow', 'T', 5, 500)\n        ";
static const char __pyx_k_restore_time_stepping_solution[] = "restore_time_stepping_solution";
static const char __pyx_k_Domain1D_object_is_not_copyable[] = "Domain1D object is not copyable";
static const char __pyx_k_Domain1D_set_default_tolerances[] = "Domain1D.set_default_tolerances";
static const char __pyx_k_FlowBase_set_default_tolerances[] = "_FlowBase.set_default_tolerances";
static const char __pyx_k_FlowBase_set_fixed_temp_profile[] = "_FlowBase.set_fixed_temp_profile";
static const char __pyx_k_FlowBase_set_transport_Method_t[] = "_FlowBase.set_transport: Method to be removed after Cantera 3.0; use property 'transport_model' instead.";
static const char __pyx_k_FlowBase_settings_Property_gett[] = "_FlowBase.settings: Property getter to change after Cantera 3.0.\nFor new behavior, use 'get_settings3'.";
static const char __pyx_k_FlowBase_settings_Property_sett[] = "_FlowBase.settings: Property setter to be removed after Cantera 3.0. Replaceable by individual setters.";
static const char __pyx_k_Get_a_dictionary_of_the_criteri[] = "\n        Get a dictionary of the criteria used to refine one domain. The items in\n        the dictionary are the ``ratio``, ``slope``, ``curve``, and ``prune``,\n        as defined in `~Sim1D.set_refine_criteria`.\n\n        :param domain:\n            domain object, index, or name\n\n        >>> s.set_refine_criteria(d, ratio=5.0, slope=0.2, curve=0.3, prune=0.03)\n        >>> s.get_refine_criteria(d)\n        {'ratio': 5.0, 'slope': 0.2, 'curve': 0.3, 'prune': 0.03}\n        ";
static const char __pyx_k_Internal_work_array_value_at_on[] = "\n        Internal work array value at one point. After calling `eval`, this array\n        contains the values of the residual function.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param point:\n            grid point number in the domain, starting with zero at the left\n\n        >>> t = s.value(flow, 'T', 6)\n        ";
static const char __pyx_k_Kinetics_object_must_be_derived[] = "Kinetics object must be derived from InterfaceKinetics.";
static const char __pyx_k_Retrieve_data_and_settings_from[] = "Retrieve data and settings from a previously saved simulation.\n\n        This method restores a simulation object from YAML or HDF data previously saved\n        using the `save` method.\n\n        :param filename:\n            Name of container file (YAML or HDF)\n        :param name:\n            Identifier of location within the container file; this node/group contains\n            header information and subgroups with domain-specific `SolutionArray` data\n        :param loglevel:\n            Amount of logging information to display while restoring,\n            from 0 (disabled) to 2 (most verbose).\n        :return:\n            Dictionary containing header information\n\n        >>> s.restore(filename='save.yaml', name='energy_off')\n\n        .. versionchanged:: 3.0\n            Implemented return value for meta data; loglevel is no longer supported\n        ";
static const char __pyx_k_Return_the_lower_upper_bounds_f[] = "\n        Return the (lower, upper) bounds for a solution component.\n\n        >>> d.bounds('T')\n        (200.0, 5000.0)\n        ";
static const char __pyx_k_Return_the_relative_absolute_er[] = "\n        Return the (relative, absolute) error tolerances for a solution\n        component.\n\n        >>> rtol, atol = d.tolerances('u')\n        ";
static const char __pyx_k_Save_current_simulation_data_to[] = "\n        Save current simulation data to a data file (CSV, YAML or HDF).\n\n        In order to save the content of the current object, individual domains are\n        converted to `SolutionArray` objects and saved using the `~SolutionArray.save`\n        method. For HDF and YAML output, all domains are written to a single container\n        file with shared header information. Simulation settings of individual domains\n        are preserved as meta data of the corresponding `SolutionArray` objects.\n        For CSV files, only state and auxiliary data of the main 1D domain are saved.\n\n        The complete state of the current object can be restored from HDF and YAML\n        container files using the `restore` method, while individual domains can be\n        loaded using `SolutionArray.restore` for further analysis. While CSV files do\n        not contain complete information, they can be used for setting initial states\n        of individual simulation objects (example: `~FreeFlame.set_initial_guess`).\n\n        :param filename:\n            Name of output file (CSV, YAML or HDF)\n        :param name:\n            Identifier of storage location within the container file; this node/group\n            contains header information and multiple subgroups holding domain-specific\n            `SolutionArray` data (YAML/HDF only).\n        :param description:\n            Custom comment describing the dataset to be stored (YAML/HDF only).\n        :param overwrite:\n            Force overwrite if file and/or data entry exists; optional (default=`False`)\n        :param compression:\n            Compression level (0-9); optional (default=0; HDF only)\n        :param basis:\n            Output mass (``Y``/``mass``) or mole (``Y``/``mass``) fractions;\n            if not specified (`None`), the native basis of the underlying `ThermoPhase`\n            manager is used.\n\n        >>> s.save(filename='save.yaml', name='energy_off',\n        ...        description='solution"" with energy eqn. disabled')\n\n        .. versionchanged:: 3.0\n            Argument loglevel is no longer supported\n        ";
static const char __pyx_k_Set_an_initial_estimate_for_a_p[] = "\n        Set an initial estimate for a profile of one component in one domain.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param positions:\n            sequence of relative positions, from 0 on the left to 1 on the right\n        :param values:\n            sequence of values at the relative positions specified in ``positions``\n\n        >>> s.set_profile(d, 'T', [0.0, 0.2, 1.0], [400.0, 800.0, 1500.0])\n        ";
static const char __pyx_k_Set_the_criteria_used_to_refine[] = "\n        Set the criteria used to refine one domain.\n\n        :param domain:\n            domain object, index, or name\n        :param ratio:\n            additional points will be added if the ratio of the spacing on\n            either side of a grid point exceeds this value\n        :param slope:\n            maximum difference in value between two adjacent points, scaled by\n            the maximum difference in the profile (0.0 < slope < 1.0). Adds\n            points in regions of high slope.\n        :param curve:\n            maximum difference in slope between two adjacent intervals, scaled\n            by the maximum difference in the profile (0.0 < curve < 1.0). Adds\n            points in regions of high curvature.\n        :param prune:\n            if the slope or curve criteria are satisfied to the level of\n            'prune', the grid point is assumed not to be needed and is removed.\n            Set prune significantly smaller than 'slope' and 'curve'. Set to\n            zero to disable pruning the grid.\n\n        >>> s.set_refine_criteria(d, ratio=5.0, slope=0.2, curve=0.3, prune=0.03)\n        ";
static const char __pyx_k_Sim1D_restore_Argument_loglevel[] = "Sim1D.restore: Argument 'loglevel' is deprecated and will be ignored.";
static const char __pyx_k_Sim1D_restore_data_Method_to_be[] = "Sim1D.restore_data: Method to be removed after Cantera 3.0.";
static const char __pyx_k_Sim1D_save_Argument_loglevel_is[] = "Sim1D.save: Argument 'loglevel' is deprecated and will be ignored.";
static const char __pyx_k_Solution_value_at_one_point_par[] = "\n        Solution value at one point\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param point:\n            grid point number within ``domain`` starting with 0 on the left\n\n        >>> t = s.value('flow', 'T', 6)\n        ";
static const char __pyx_k_Spatial_profile_of_one_componen[] = "\n        Spatial profile of one component in one domain.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n\n        >>> T = s.profile(flow, 'T')\n        ";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_solve_locals_restore_tolerances[] = "solve.<locals>.restore_tolerances";
static const char __pyx_k_Can_t_instantiate_abstract_class[] = "Can't instantiate abstract class Domain1D.";
static const char __pyx_k_Class_IdealGasFlow_to_be_removed[] = "Class 'IdealGasFlow' to be removed after Cantera 3.0; use 'FreeFlow', 'AxisymmetricFlow' or 'UnstrainedFlow' instead.";
static const char __pyx_k_Class_IonFlow_to_be_removed_afte[] = "Class 'IonFlow' to be removed after Cantera 3.0; use 'FreeFlow', 'AxisymmetricFlow' or 'UnstrainedFlow' instead.";
static const char __pyx_k_Could_not_find_a_solution_for_th[] = "Could not find a solution for the 1D problem";
static const char __pyx_k_Domain1D_object_is_not_picklable[] = "Domain1D object is not picklable";
static const char __pyx_k_Domain1D_set_transient_tolerance[] = "Domain1D.set_transient_tolerances";
static const char __pyx_k_Initial_solve_failed_Retrying_wi[] = "Initial solve failed; Retrying with energy equation disabled";
static const char __pyx_k_IonFlow_set_solving_stage_Method[] = "IonFlow.set_solving_stage: Method to be removed after Cantera 3.0; use 'solving_stage' property instead.";
static const char __pyx_k_Maximum_number_of_grid_points_ex[] = "Maximum number of grid points exceeded";
static const char __pyx_k_ReactingSurface1D_Starting_in_Ca[] = "ReactingSurface1D: Starting in Cantera 3.0, parameter 'phase' should reference surface instead of gas phase.";
static const char __pyx_k_ReactingSurface1D_needs_an_adjac[] = "ReactingSurface1D needs an adjacent gas phase";
static const char __pyx_k_ReactingSurface1D_set_kinetics_M[] = "ReactingSurface1D.set_kinetics: Method to be removed after Cantera 3.0; set 'Kinetics' when instantiating 'ReactingSurface1D' instead.";
static const char __pyx_k_Set_a_flat_profile_for_one_compo[] = "Set a flat profile for one component in one domain.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param v:\n            value\n\n        >>> s.set_flat_profile(d, 'u', -3.0)\n        ";
static const char __pyx_k_Set_the_fixed_temperature_profil[] = "Set the fixed temperature profile. This profile is used\n        whenever the energy equation is disabled.\n\n        :param pos:\n            array of relative positions from 0 to 1\n        :param temp:\n            array of temperature values\n\n        >>> d.set_fixed_temp_profile(array([0.0, 0.5, 1.0]),\n        ...                          array([500.0, 1500.0, 2000.0])\n        ";
static const char __pyx_k_Set_the_sequence_of_time_steps_t[] = "Set the sequence of time steps to try when Newton fails.\n\n        :param stepsize:\n            initial time step size [s]\n        :param n_steps:\n            sequence of integer step numbers\n\n        >>> s.set_time_step(1.0e-5, [1, 2, 5, 10])\n        ";
static const char __pyx_k_Setting_the_boundary_emissivitie[] = "Setting the boundary emissivities requires a tuple of length 2.";
static const char __pyx_k_Sim1D_get_refine_criteria_line_1[] = "Sim1D.get_refine_criteria (line 1519)";
static const char __pyx_k_Sim1D_restore_time_stepping_solu[] = "Sim1D.restore_time_stepping_solution";
static const char __pyx_k_Sim1D_set_flat_profile_line_1145[] = "Sim1D.set_flat_profile (line 1145)";
static const char __pyx_k_Sim1D_set_refine_criteria_line_1[] = "Sim1D.set_refine_criteria (line 1490)";
static const char __pyx_k_Solving_on_point_grid_with_energ[] = "Solving on {} point grid with energy equation enabled";
static const char __pyx_k_Solving_with_grid_refinement_ena[] = "Solving with grid refinement enabled";
static const char __pyx_k_Solving_with_multicomponent_tran[] = "Solving with multicomponent transport";
static const char __pyx_k_Solving_with_user_specified_tole[] = "Solving with user-specified tolerances";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_FlowBase_set_fixed_temp_profile_2[] = "_FlowBase.set_fixed_temp_profile (line 585)";
static const char __pyx_k_Can_t_instantiate_abstract_class_2[] = "Can't instantiate abstract class Boundary1D.";
static const char __pyx_k_Solving_on_point_grid_with_energ_2[] = "Solving on {} point grid with energy equation re-enabled";
/* #### Code section: decls ### */
static int __pyx_pf_7cantera_7_onedim_8Domain1D___cinit__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_7cantera_7_onedim_8Domain1D_2__init__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_phase, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_5phase___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_5index___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_11domain_type___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_12n_components___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_8n_points___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_4_to_array(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase *__pyx_v_dest, bool __pyx_v_normalize); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_6_from_array(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase *__pyx_v_arr); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_8component_name(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, int __pyx_v_n); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_15component_names___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_10component_index(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_12set_bounds(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_default, PyObject *__pyx_v_Y, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_14set_steady_tolerances(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_default, PyObject *__pyx_v_Y, PyObject *__pyx_v_abs, PyObject *__pyx_v_rel, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_16set_transient_tolerances(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_default, PyObject *__pyx_v_Y, PyObject *__pyx_v_abs, PyObject *__pyx_v_rel, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_18set_default_tolerances(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_20bounds(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_22tolerances(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_24steady_reltol(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_26steady_abstol(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_28transient_reltol(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_30transient_abstol(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_4grid___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_8Domain1D_4grid_2__set__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_grid); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_4name___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_8Domain1D_4name_2__set__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_32__reduce__(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_34__copy__(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_8settings___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_20have_user_tolerances___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_8Domain1D_20have_user_tolerances_2__set__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7cantera_7_onedim_8Domain1D_20have_user_tolerances_4__del__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_10Boundary1D___cinit__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, PyObject *__pyx_v_name, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_7cantera_7_onedim_10Boundary1D_2__init__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_phase, PyObject *__pyx_v_name); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_1T___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_10Boundary1D_1T_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_T); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_4mdot___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_10Boundary1D_4mdot_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_mdot); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_1X___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_10Boundary1D_1X_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_X); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_1Y___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_10Boundary1D_1Y_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_Y); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_11spread_rate___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_10Boundary1D_11spread_rate_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_s); /* proto */
static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D___cinit__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, PyObject *__pyx_v_name, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_2__init__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, PyObject *__pyx_v_name); /* proto */
static void __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_4__dealloc__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_17ReactingSurface1D_5phase___get__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_17ReactingSurface1D_6set_kinetics(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kin); /* proto */
static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled___set__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled_2__get__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_17ReactingSurface1D_7surface___get__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_7surface_2__set__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_7surface_4__del__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase___cinit__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, PyObject *__pyx_v_name, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_2__init__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_1P___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_1P_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_P); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_15transport_model___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_15transport_model_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_model); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_4set_transport(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_6set_default_tolerances(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_13soret_enabled___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_13soret_enabled_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_enable); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_14energy_enabled___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_14energy_enabled_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_enable); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_8set_fixed_temp_profile(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_pos, PyObject *__pyx_v_T); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_10get_settings3(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_8settings___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_8settings_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_meta); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_21boundary_emissivities___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_21boundary_emissivities_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_epsilon); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_17radiation_enabled___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_17radiation_enabled_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_do_radiation); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_19radiative_heat_loss___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_12set_free_flow(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_14set_axisymmetric_flow(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_9flow_type___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_4type___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_13solving_stage___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_13solving_stage_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_stage); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_22electric_field_enabled___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_9_FlowBase_22electric_field_enabled_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_enable); /* proto */
static int __pyx_pf_7cantera_7_onedim_12IdealGasFlow___init__(struct __pyx_obj_7cantera_7_onedim_IdealGasFlow *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_7cantera_7_onedim_7IonFlow___init__(struct __pyx_obj_7cantera_7_onedim_IonFlow *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_7IonFlow_2set_solving_stage(struct __pyx_obj_7cantera_7_onedim_IonFlow *__pyx_v_self, PyObject *__pyx_v_stage); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D___cinit__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D_2__init__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domains, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_4phase(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_6set_interrupt(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_8set_time_step_callback(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_10set_steady_callback(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_f); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_12domain_index(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_dom); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_14_get_indices(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_dom, PyObject *__pyx_v_comp); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_16value(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_point); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_18set_value(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_point, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_20eval(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_rdt); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_22work_value(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_point); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_24profile(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_26set_profile(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_positions, PyObject *__pyx_v_values); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_28set_flat_profile(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_value); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_30restore_data(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_states, PyObject *__pyx_v_other_cols, PyObject *__pyx_v_meta); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_32show(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_34show_solution(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_36set_time_step(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_stepsize, PyObject *__pyx_v_n_steps); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_19max_time_step_count___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D_19max_time_step_count_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_nmax); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_38set_initial_guess(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_40_get_initial_solution(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_42extinct(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_set_transport(PyObject *__pyx_self, PyObject *__pyx_v_multi); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_2restore_tolerances(PyObject *__pyx_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_4set_soret(PyObject *__pyx_self, PyObject *__pyx_v_soret); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_6log(PyObject *__pyx_self, PyObject *__pyx_v_msg, PyObject *__pyx_v_args); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_8genexpr(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_genexpr_arg_0); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_44solve(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_loglevel, PyObject *__pyx_v_refine_grid, PyObject *__pyx_v_auto); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_46refine(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_loglevel); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_48set_refine_criteria(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_ratio, PyObject *__pyx_v_slope, PyObject *__pyx_v_curve, PyObject *__pyx_v_prune); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_50get_refine_criteria(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_52set_grid_min(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_dz, PyObject *__pyx_v_domain); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_54set_max_jac_age(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_ss_age, PyObject *__pyx_v_ts_age); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_56set_time_step_factor(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_tfactor); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_58set_min_time_step(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_tsmin); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_60set_max_time_step(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_tsmax); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_17fixed_temperature___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D_17fixed_temperature_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_T); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_26fixed_temperature_location___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_62save(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_name, PyObject *__pyx_v_description, PyObject *__pyx_v_loglevel, PyObject *__pyx_v_overwrite, PyObject *__pyx_v_compression, PyObject *__pyx_v_basis); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_64restore(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_name, PyObject *__pyx_v_loglevel); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_66restore_time_stepping_solution(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_68restore_steady_solution(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_70show_stats(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_print_time); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_72clear_stats(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_74solve_adjoint(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_perturb, PyObject *__pyx_v_n_params, PyObject *__pyx_v_dgdx, PyObject *__pyx_v_g, PyObject *__pyx_v_dp); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_15grid_size_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_19jacobian_time_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_20jacobian_count_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_15eval_time_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_16eval_count_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_15time_step_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_76set_max_grid_points(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_npmax); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_78get_max_grid_points(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain); /* proto */
static void __pyx_pf_7cantera_7_onedim_5Sim1D_80__dealloc__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_7domains___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_10_interrupt___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D_10_interrupt_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D_10_interrupt_4__del__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_19_time_step_callback___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D_19_time_step_callback_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D_19_time_step_callback_4__del__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_16_steady_callback___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D_16_steady_callback_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7cantera_7_onedim_5Sim1D_16_steady_callback_4__del__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_82__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_84__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_7cantera_7_onedim_Domain1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_7_onedim_Boundary1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_7_onedim_ReactingSurface1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_7_onedim__FlowBase(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_7_onedim_Sim1D(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_7_onedim___pyx_scope_struct__solve(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_7_onedim___pyx_scope_struct_1_genexpr(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_update = {0, 0, 0, 0, 0};
static __Pyx_CachedCFunction __pyx_umethod_PyUnicode_Type_format = {0, 0, 0, 0, 0};
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_4type_type;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_4bool_bool;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_7complex_complex;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_5numpy_dtype;
  PyTypeObject *__pyx_ptype_5numpy_flatiter;
  PyTypeObject *__pyx_ptype_5numpy_broadcast;
  PyTypeObject *__pyx_ptype_5numpy_ndarray;
  PyTypeObject *__pyx_ptype_5numpy_generic;
  PyTypeObject *__pyx_ptype_5numpy_number;
  PyTypeObject *__pyx_ptype_5numpy_integer;
  PyTypeObject *__pyx_ptype_5numpy_signedinteger;
  PyTypeObject *__pyx_ptype_5numpy_unsignedinteger;
  PyTypeObject *__pyx_ptype_5numpy_inexact;
  PyTypeObject *__pyx_ptype_5numpy_floating;
  PyTypeObject *__pyx_ptype_5numpy_complexfloating;
  PyTypeObject *__pyx_ptype_5numpy_flexible;
  PyTypeObject *__pyx_ptype_5numpy_character;
  PyTypeObject *__pyx_ptype_5numpy_ufunc;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_5func1_Func1;
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_5units_Units;
  PyTypeObject *__pyx_ptype_7cantera_5units_UnitStack;
  PyTypeObject *__pyx_ptype_7cantera_5units_UnitSystem;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_12solutionbase__SolutionBase;
  PyTypeObject *__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase;
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_8kinetics_Kinetics;
  PyTypeObject *__pyx_ptype_7cantera_8kinetics_InterfaceKinetics;
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_6thermo_Species;
  PyTypeObject *__pyx_ptype_7cantera_6thermo_ThermoPhase;
  PyTypeObject *__pyx_ptype_7cantera_6thermo_InterfacePhase;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_6_utils_AnyMap;
  #if CYTHON_USE_MODULE_STATE
  PyObject *__pyx_type_7cantera_7_onedim_Domain1D;
  PyObject *__pyx_type_7cantera_7_onedim_Boundary1D;
  PyObject *__pyx_type_7cantera_7_onedim_ReactingSurface1D;
  PyObject *__pyx_type_7cantera_7_onedim__FlowBase;
  PyObject *__pyx_type_7cantera_7_onedim_Sim1D;
  PyObject *__pyx_type_7cantera_7_onedim_Inlet1D;
  PyObject *__pyx_type_7cantera_7_onedim_Outlet1D;
  PyObject *__pyx_type_7cantera_7_onedim_OutletReservoir1D;
  PyObject *__pyx_type_7cantera_7_onedim_SymmetryPlane1D;
  PyObject *__pyx_type_7cantera_7_onedim_Surface1D;
  PyObject *__pyx_type_7cantera_7_onedim_FreeFlow;
  PyObject *__pyx_type_7cantera_7_onedim_UnstrainedFlow;
  PyObject *__pyx_type_7cantera_7_onedim_AxisymmetricFlow;
  PyObject *__pyx_type_7cantera_7_onedim_IdealGasFlow;
  PyObject *__pyx_type_7cantera_7_onedim_IonFlow;
  PyObject *__pyx_type_7cantera_7_onedim___pyx_scope_struct__solve;
  PyObject *__pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr;
  #endif
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_Domain1D;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_Boundary1D;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_ReactingSurface1D;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim__FlowBase;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_Sim1D;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_Inlet1D;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_Outlet1D;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_OutletReservoir1D;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_SymmetryPlane1D;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_Surface1D;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_FreeFlow;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_UnstrainedFlow;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_AxisymmetricFlow;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_IdealGasFlow;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim_IonFlow;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve;
  PyTypeObject *__pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr;
  PyObject *__pyx_kp_u_78s;
  PyObject *__pyx_n_s_AssertionError;
  PyObject *__pyx_n_s_AxisymmetricFlow;
  PyObject *__pyx_n_s_Boundary1D;
  PyObject *__pyx_kp_u_Can_t_instantiate_abstract_class;
  PyObject *__pyx_kp_u_Can_t_instantiate_abstract_class_2;
  PyObject *__pyx_n_s_CanteraError;
  PyObject *__pyx_kp_u_Class_IdealGasFlow_to_be_removed;
  PyObject *__pyx_kp_u_Class_IonFlow_to_be_removed_afte;
  PyObject *__pyx_kp_u_Could_not_find_a_solution_for_th;
  PyObject *__pyx_n_s_D;
  PyObject *__pyx_n_s_DeprecationWarning;
  PyObject *__pyx_n_s_Domain1D;
  PyObject *__pyx_n_s_Domain1D___copy;
  PyObject *__pyx_n_s_Domain1D___reduce;
  PyObject *__pyx_n_s_Domain1D__from_array;
  PyObject *__pyx_n_s_Domain1D__to_array;
  PyObject *__pyx_n_s_Domain1D_bounds;
  PyObject *__pyx_kp_u_Domain1D_bounds_line_198;
  PyObject *__pyx_n_s_Domain1D_component_index;
  PyObject *__pyx_n_s_Domain1D_component_name;
  PyObject *__pyx_kp_u_Domain1D_object_is_not_copyable;
  PyObject *__pyx_kp_u_Domain1D_object_is_not_picklable;
  PyObject *__pyx_n_s_Domain1D_set_bounds;
  PyObject *__pyx_kp_u_Domain1D_set_bounds_line_96;
  PyObject *__pyx_n_s_Domain1D_set_default_tolerances;
  PyObject *__pyx_n_s_Domain1D_set_steady_tolerances;
  PyObject *__pyx_n_s_Domain1D_set_transient_tolerance;
  PyObject *__pyx_n_s_Domain1D_steady_abstol;
  PyObject *__pyx_n_s_Domain1D_steady_reltol;
  PyObject *__pyx_n_s_Domain1D_tolerances;
  PyObject *__pyx_kp_u_Domain1D_tolerances_line_208;
  PyObject *__pyx_n_s_Domain1D_transient_abstol;
  PyObject *__pyx_n_s_Domain1D_transient_reltol;
  PyObject *__pyx_n_u_Domain1D_type;
  PyObject *__pyx_kp_u_Domain_named_0_not_found;
  PyObject *__pyx_n_u_E;
  PyObject *__pyx_kp_u_Flame_is_extinct_on_point_grid;
  PyObject *__pyx_n_s_FlowBase;
  PyObject *__pyx_n_s_FlowBase_get_settings3;
  PyObject *__pyx_n_s_FlowBase_set_axisymmetric_flow;
  PyObject *__pyx_n_s_FlowBase_set_default_tolerances;
  PyObject *__pyx_n_s_FlowBase_set_fixed_temp_profile;
  PyObject *__pyx_kp_u_FlowBase_set_fixed_temp_profile_2;
  PyObject *__pyx_n_s_FlowBase_set_free_flow;
  PyObject *__pyx_n_s_FlowBase_set_transport;
  PyObject *__pyx_kp_u_FlowBase_set_transport_Method_t;
  PyObject *__pyx_kp_u_FlowBase_settings_Property_gett;
  PyObject *__pyx_kp_u_FlowBase_settings_Property_sett;
  PyObject *__pyx_n_s_FreeFlow;
  PyObject *__pyx_kp_u_Get_a_dictionary_of_the_criteri;
  PyObject *__pyx_n_s_IdealGasFlow;
  PyObject *__pyx_n_s_ImportError;
  PyObject *__pyx_kp_u_Import_of_is_not_implemented;
  PyObject *__pyx_kp_u_Initial_solve_failed_Retrying_wi;
  PyObject *__pyx_n_s_Inlet1D;
  PyObject *__pyx_kp_u_Internal_work_array_value_at_on;
  PyObject *__pyx_n_s_IonFlow;
  PyObject *__pyx_n_s_IonFlow_set_solving_stage;
  PyObject *__pyx_kp_u_IonFlow_set_solving_stage_Method;
  PyObject *__pyx_n_s_KeyError;
  PyObject *__pyx_kp_u_Kinetics_object_must_be_derived;
  PyObject *__pyx_n_s_L;
  PyObject *__pyx_kp_u_Maximum_number_of_grid_points_ex;
  PyObject *__pyx_n_s_MemoryError;
  PyObject *__pyx_n_s_N;
  PyObject *__pyx_n_u_None;
  PyObject *__pyx_n_s_NotImplementedError;
  PyObject *__pyx_n_s_Outlet1D;
  PyObject *__pyx_n_s_OutletReservoir1D;
  PyObject *__pyx_n_s_P;
  PyObject *__pyx_n_s_ReactingSurface1D;
  PyObject *__pyx_kp_u_ReactingSurface1D_Starting_in_Ca;
  PyObject *__pyx_kp_u_ReactingSurface1D_needs_an_adjac;
  PyObject *__pyx_n_s_ReactingSurface1D_set_kinetics;
  PyObject *__pyx_kp_u_ReactingSurface1D_set_kinetics_M;
  PyObject *__pyx_kp_u_Retrieve_data_and_settings_from;
  PyObject *__pyx_kp_u_Return_the_lower_upper_bounds_f;
  PyObject *__pyx_kp_u_Return_the_relative_absolute_er;
  PyObject *__pyx_n_s_S;
  PyObject *__pyx_kp_u_Save_current_simulation_data_to;
  PyObject *__pyx_kp_u_Set_a_flat_profile_for_one_compo;
  PyObject *__pyx_kp_u_Set_an_initial_estimate_for_a_p;
  PyObject *__pyx_kp_u_Set_the_criteria_used_to_refine;
  PyObject *__pyx_kp_u_Set_the_fixed_temperature_profil;
  PyObject *__pyx_kp_u_Set_the_lower_and_upper_bounds;
  PyObject *__pyx_kp_u_Set_the_sequence_of_time_steps_t;
  PyObject *__pyx_kp_u_Set_the_value_of_one_component;
  PyObject *__pyx_kp_u_Setting_the_boundary_emissivitie;
  PyObject *__pyx_n_s_Sim1D;
  PyObject *__pyx_n_s_Sim1D___reduce_cython;
  PyObject *__pyx_n_s_Sim1D___setstate_cython;
  PyObject *__pyx_n_s_Sim1D__get_indices;
  PyObject *__pyx_n_s_Sim1D__get_initial_solution;
  PyObject *__pyx_n_s_Sim1D_clear_stats;
  PyObject *__pyx_n_s_Sim1D_domain_index;
  PyObject *__pyx_n_s_Sim1D_eval;
  PyObject *__pyx_n_s_Sim1D_extinct;
  PyObject *__pyx_n_s_Sim1D_get_max_grid_points;
  PyObject *__pyx_n_s_Sim1D_get_refine_criteria;
  PyObject *__pyx_kp_u_Sim1D_get_refine_criteria_line_1;
  PyObject *__pyx_n_s_Sim1D_phase;
  PyObject *__pyx_n_s_Sim1D_profile;
  PyObject *__pyx_kp_u_Sim1D_profile_line_1101;
  PyObject *__pyx_n_s_Sim1D_refine;
  PyObject *__pyx_n_s_Sim1D_restore;
  PyObject *__pyx_kp_u_Sim1D_restore_Argument_loglevel;
  PyObject *__pyx_n_s_Sim1D_restore_data;
  PyObject *__pyx_kp_u_Sim1D_restore_data_Method_to_be;
  PyObject *__pyx_kp_u_Sim1D_restore_line_1639;
  PyObject *__pyx_n_s_Sim1D_restore_steady_solution;
  PyObject *__pyx_n_s_Sim1D_restore_time_stepping_solu;
  PyObject *__pyx_n_s_Sim1D_save;
  PyObject *__pyx_kp_u_Sim1D_save_Argument_loglevel_is;
  PyObject *__pyx_kp_u_Sim1D_save_line_1592;
  PyObject *__pyx_n_s_Sim1D_set_flat_profile;
  PyObject *__pyx_kp_u_Sim1D_set_flat_profile_line_1145;
  PyObject *__pyx_n_s_Sim1D_set_grid_min;
  PyObject *__pyx_n_s_Sim1D_set_initial_guess;
  PyObject *__pyx_n_s_Sim1D_set_interrupt;
  PyObject *__pyx_n_s_Sim1D_set_max_grid_points;
  PyObject *__pyx_n_s_Sim1D_set_max_jac_age;
  PyObject *__pyx_n_s_Sim1D_set_max_time_step;
  PyObject *__pyx_n_s_Sim1D_set_min_time_step;
  PyObject *__pyx_n_s_Sim1D_set_profile;
  PyObject *__pyx_kp_u_Sim1D_set_profile_line_1120;
  PyObject *__pyx_n_s_Sim1D_set_refine_criteria;
  PyObject *__pyx_kp_u_Sim1D_set_refine_criteria_line_1;
  PyObject *__pyx_n_s_Sim1D_set_steady_callback;
  PyObject *__pyx_n_s_Sim1D_set_time_step;
  PyObject *__pyx_n_s_Sim1D_set_time_step_callback;
  PyObject *__pyx_n_s_Sim1D_set_time_step_factor;
  PyObject *__pyx_kp_u_Sim1D_set_time_step_line_1243;
  PyObject *__pyx_n_s_Sim1D_set_value;
  PyObject *__pyx_kp_u_Sim1D_set_value_line_1053;
  PyObject *__pyx_n_s_Sim1D_show;
  PyObject *__pyx_n_s_Sim1D_show_solution;
  PyObject *__pyx_n_s_Sim1D_show_stats;
  PyObject *__pyx_n_s_Sim1D_solve;
  PyObject *__pyx_n_s_Sim1D_solve_adjoint;
  PyObject *__pyx_n_s_Sim1D_value;
  PyObject *__pyx_kp_u_Sim1D_value_line_1037;
  PyObject *__pyx_n_s_Sim1D_work_value;
  PyObject *__pyx_kp_u_Sim1D_work_value_line_1084;
  PyObject *__pyx_kp_u_Solution_value_at_one_point_par;
  PyObject *__pyx_kp_u_Solving_on_point_grid_with_energ;
  PyObject *__pyx_kp_u_Solving_on_point_grid_with_energ_2;
  PyObject *__pyx_kp_u_Solving_with_Soret_diffusion;
  PyObject *__pyx_kp_u_Solving_with_grid_refinement_ena;
  PyObject *__pyx_kp_u_Solving_with_multicomponent_tran;
  PyObject *__pyx_kp_u_Solving_with_user_specified_tole;
  PyObject *__pyx_kp_u_Spatial_profile_of_one_componen;
  PyObject *__pyx_n_s_Surface1D;
  PyObject *__pyx_n_s_SymmetryPlane1D;
  PyObject *__pyx_n_s_T;
  PyObject *__pyx_n_u_T;
  PyObject *__pyx_n_s_TPX;
  PyObject *__pyx_n_s_TPY;
  PyObject *__pyx_n_s_TypeError;
  PyObject *__pyx_n_s_UnstrainedFlow;
  PyObject *__pyx_n_s_ValueError;
  PyObject *__pyx_n_s_WeakrefProxy;
  PyObject *__pyx_n_s_X;
  PyObject *__pyx_n_s_Y;
  PyObject *__pyx_n_s__161;
  PyObject *__pyx_kp_u__17;
  PyObject *__pyx_n_u__19;
  PyObject *__pyx_kp_u__27;
  PyObject *__pyx_kp_u__43;
  PyObject *__pyx_n_s__44;
  PyObject *__pyx_kp_u__8;
  PyObject *__pyx_n_s_a;
  PyObject *__pyx_n_s_abs;
  PyObject *__pyx_n_s_argmax;
  PyObject *__pyx_n_s_args;
  PyObject *__pyx_n_s_arr;
  PyObject *__pyx_n_s_array;
  PyObject *__pyx_n_s_ascontiguousarray;
  PyObject *__pyx_n_s_asyncio_coroutines;
  PyObject *__pyx_n_s_atol;
  PyObject *__pyx_n_s_atol_ss_final;
  PyObject *__pyx_n_s_atol_ts_final;
  PyObject *__pyx_n_s_auto;
  PyObject *__pyx_kp_u_axisymmetric_flow;
  PyObject *__pyx_n_s_basis;
  PyObject *__pyx_n_s_boundary_emissivities;
  PyObject *__pyx_n_s_bounds;
  PyObject *__pyx_n_s_c;
  PyObject *__pyx_n_s_cantera__onedim;
  PyObject *__pyx_kp_s_cantera__onedim_pyx;
  PyObject *__pyx_n_s_charge;
  PyObject *__pyx_n_s_chargetol;
  PyObject *__pyx_n_s_class_getitem;
  PyObject *__pyx_n_s_clear_stats;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_close;
  PyObject *__pyx_n_s_comp;
  PyObject *__pyx_n_s_component;
  PyObject *__pyx_n_s_component_index;
  PyObject *__pyx_n_s_component_name;
  PyObject *__pyx_n_s_component_names;
  PyObject *__pyx_n_s_composition;
  PyObject *__pyx_n_s_compression;
  PyObject *__pyx_n_s_copy;
  PyObject *__pyx_n_s_curve;
  PyObject *__pyx_n_u_curve;
  PyObject *__pyx_n_s_d;
  PyObject *__pyx_n_s_data;
  PyObject *__pyx_n_u_data;
  PyObject *__pyx_n_s_default;
  PyObject *__pyx_n_s_density;
  PyObject *__pyx_n_s_description;
  PyObject *__pyx_n_s_dest;
  PyObject *__pyx_n_s_dfdp;
  PyObject *__pyx_n_s_dgdp;
  PyObject *__pyx_n_s_dgdx;
  PyObject *__pyx_n_s_dict;
  PyObject *__pyx_kp_u_disable;
  PyObject *__pyx_n_s_doc;
  PyObject *__pyx_n_s_dom;
  PyObject *__pyx_n_s_domain;
  PyObject *__pyx_n_s_domain_index;
  PyObject *__pyx_n_s_domain_type;
  PyObject *__pyx_n_s_domains;
  PyObject *__pyx_n_s_dot;
  PyObject *__pyx_n_s_double;
  PyObject *__pyx_n_s_dp;
  PyObject *__pyx_n_s_dtype;
  PyObject *__pyx_n_s_dz;
  PyObject *__pyx_n_s_e;
  PyObject *__pyx_n_u_edge;
  PyObject *__pyx_n_u_emissivity_left;
  PyObject *__pyx_n_u_emissivity_right;
  PyObject *__pyx_n_s_empty;
  PyObject *__pyx_kp_u_enable;
  PyObject *__pyx_n_s_energy_enabled;
  PyObject *__pyx_n_s_enumerate;
  PyObject *__pyx_n_s_eval;
  PyObject *__pyx_n_s_extinct;
  PyObject *__pyx_n_s_f;
  PyObject *__pyx_n_s_filename;
  PyObject *__pyx_n_s_flow_domains;
  PyObject *__pyx_n_s_fminus;
  PyObject *__pyx_n_s_format;
  PyObject *__pyx_n_s_fplus;
  PyObject *__pyx_kp_u_free_flow;
  PyObject *__pyx_n_s_from_array;
  PyObject *__pyx_n_s_g;
  PyObject *__pyx_n_s_gas;
  PyObject *__pyx_n_u_gas;
  PyObject *__pyx_kp_u_gas_flow;
  PyObject *__pyx_kp_u_gc;
  PyObject *__pyx_n_s_genexpr;
  PyObject *__pyx_n_s_get;
  PyObject *__pyx_n_s_get_indices;
  PyObject *__pyx_n_s_get_initial_solution;
  PyObject *__pyx_n_s_get_max_grid_points;
  PyObject *__pyx_n_s_get_refine_criteria;
  PyObject *__pyx_n_s_get_settings3;
  PyObject *__pyx_n_s_getstate;
  PyObject *__pyx_n_s_gg;
  PyObject *__pyx_n_s_gminus;
  PyObject *__pyx_n_s_gplus;
  PyObject *__pyx_n_s_grid;
  PyObject *__pyx_n_u_grid;
  PyObject *__pyx_n_s_have_user_tolerances;
  PyObject *__pyx_n_s_header;
  PyObject *__pyx_n_s_i;
  PyObject *__pyx_n_s_idom;
  PyObject *__pyx_n_s_import;
  PyObject *__pyx_n_s_index;
  PyObject *__pyx_n_s_init;
  PyObject *__pyx_n_s_init_subclass;
  PyObject *__pyx_n_s_initializing;
  PyObject *__pyx_n_u_inlet;
  PyObject *__pyx_n_s_interrupts;
  PyObject *__pyx_kp_u_ion_flow;
  PyObject *__pyx_kp_u_ionized_gas;
  PyObject *__pyx_n_s_is_coroutine;
  PyObject *__pyx_n_s_isclose;
  PyObject *__pyx_kp_u_isenabled;
  PyObject *__pyx_n_s_items;
  PyObject *__pyx_n_s_j;
  PyObject *__pyx_n_s_k;
  PyObject *__pyx_n_s_k0;
  PyObject *__pyx_n_s_kcomp;
  PyObject *__pyx_n_s_key;
  PyObject *__pyx_n_s_kin;
  PyObject *__pyx_n_s_kwargs;
  PyObject *__pyx_n_s_linspace;
  PyObject *__pyx_n_s_log;
  PyObject *__pyx_n_s_logical_not;
  PyObject *__pyx_n_s_loglevel;
  PyObject *__pyx_n_s_lower;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_mdot;
  PyObject *__pyx_n_s_meta;
  PyObject *__pyx_n_s_metaclass;
  PyObject *__pyx_kp_u_mixture_averaged;
  PyObject *__pyx_n_s_module;
  PyObject *__pyx_n_s_msg;
  PyObject *__pyx_n_s_multi;
  PyObject *__pyx_n_u_multicomponent;
  PyObject *__pyx_n_s_n;
  PyObject *__pyx_n_s_nPoints;
  PyObject *__pyx_n_s_n_components;
  PyObject *__pyx_n_s_n_params;
  PyObject *__pyx_n_s_n_points;
  PyObject *__pyx_n_s_n_species;
  PyObject *__pyx_n_s_n_steps;
  PyObject *__pyx_n_s_n_vars;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_n_u_name;
  PyObject *__pyx_n_s_name_2;
  PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
  PyObject *__pyx_n_s_no_op;
  PyObject *__pyx_n_u_none;
  PyObject *__pyx_n_s_normalize;
  PyObject *__pyx_n_s_np;
  PyObject *__pyx_n_s_npmax;
  PyObject *__pyx_n_s_numpy;
  PyObject *__pyx_kp_u_numpy_core_multiarray_failed_to;
  PyObject *__pyx_kp_u_numpy_core_umath_failed_to_impor;
  PyObject *__pyx_n_s_ones;
  PyObject *__pyx_n_s_other_cols;
  PyObject *__pyx_n_u_outlet;
  PyObject *__pyx_kp_u_outlet_reservoir;
  PyObject *__pyx_n_s_overwrite;
  PyObject *__pyx_n_s_p;
  PyObject *__pyx_n_s_perturb;
  PyObject *__pyx_n_s_phase;
  PyObject *__pyx_n_s_phase_of_matter;
  PyObject *__pyx_n_s_point;
  PyObject *__pyx_n_s_pos;
  PyObject *__pyx_n_s_pos_vec;
  PyObject *__pyx_n_s_positions;
  PyObject *__pyx_n_s_prepare;
  PyObject *__pyx_n_s_print;
  PyObject *__pyx_n_s_print_time;
  PyObject *__pyx_n_s_profile;
  PyObject *__pyx_n_s_prune;
  PyObject *__pyx_n_u_prune;
  PyObject *__pyx_n_s_pyx_state;
  PyObject *__pyx_n_s_pyx_vtable;
  PyObject *__pyx_n_u_qdot;
  PyObject *__pyx_n_s_qualname;
  PyObject *__pyx_n_s_r;
  PyObject *__pyx_n_s_range;
  PyObject *__pyx_n_s_ratio;
  PyObject *__pyx_n_u_ratio;
  PyObject *__pyx_n_s_rdt;
  PyObject *__pyx_kp_u_reacting_surface;
  PyObject *__pyx_n_s_reduce;
  PyObject *__pyx_n_s_reduce_cython;
  PyObject *__pyx_n_s_reduce_ex;
  PyObject *__pyx_n_s_refine;
  PyObject *__pyx_n_s_refine_grid;
  PyObject *__pyx_n_s_rel;
  PyObject *__pyx_n_s_restore;
  PyObject *__pyx_n_s_restore_data;
  PyObject *__pyx_n_s_restore_steady_solution;
  PyObject *__pyx_n_s_restore_time_stepping_solution;
  PyObject *__pyx_n_s_restore_tolerances;
  PyObject *__pyx_n_s_return_counts;
  PyObject *__pyx_n_s_rtol;
  PyObject *__pyx_n_s_rtol_ss_final;
  PyObject *__pyx_n_s_rtol_ts_final;
  PyObject *__pyx_n_s_save;
  PyObject *__pyx_n_s_self;
  PyObject *__pyx_n_s_send;
  PyObject *__pyx_n_s_set_axisymmetric_flow;
  PyObject *__pyx_n_s_set_bounds;
  PyObject *__pyx_n_s_set_default_tolerances;
  PyObject *__pyx_n_s_set_fixed_temp_profile;
  PyObject *__pyx_n_s_set_flat_profile;
  PyObject *__pyx_n_s_set_free_flow;
  PyObject *__pyx_n_s_set_grid_min;
  PyObject *__pyx_n_s_set_initial_guess;
  PyObject *__pyx_n_s_set_interrupt;
  PyObject *__pyx_n_s_set_kinetics;
  PyObject *__pyx_n_s_set_max_grid_points;
  PyObject *__pyx_n_s_set_max_jac_age;
  PyObject *__pyx_n_s_set_max_time_step;
  PyObject *__pyx_n_s_set_min_time_step;
  PyObject *__pyx_n_s_set_name;
  PyObject *__pyx_n_s_set_profile;
  PyObject *__pyx_n_s_set_refine_criteria;
  PyObject *__pyx_n_s_set_solving_stage;
  PyObject *__pyx_n_s_set_soret;
  PyObject *__pyx_n_s_set_steady_callback;
  PyObject *__pyx_n_s_set_steady_tolerances;
  PyObject *__pyx_n_s_set_time_step;
  PyObject *__pyx_n_s_set_time_step_callback;
  PyObject *__pyx_n_s_set_time_step_factor;
  PyObject *__pyx_n_s_set_transient_tolerances;
  PyObject *__pyx_n_s_set_transport;
  PyObject *__pyx_n_s_set_value;
  PyObject *__pyx_n_s_setstate;
  PyObject *__pyx_n_s_setstate_cython;
  PyObject *__pyx_n_s_settings;
  PyObject *__pyx_n_s_show;
  PyObject *__pyx_n_s_show_solution;
  PyObject *__pyx_n_s_show_stats;
  PyObject *__pyx_n_s_size;
  PyObject *__pyx_n_s_slope;
  PyObject *__pyx_n_u_slope;
  PyObject *__pyx_kp_u_soln_yaml;
  PyObject *__pyx_n_u_solution;
  PyObject *__pyx_n_s_solve;
  PyObject *__pyx_n_s_solve_adjoint;
  PyObject *__pyx_n_s_solve_locals_genexpr;
  PyObject *__pyx_n_s_solve_locals_log;
  PyObject *__pyx_n_s_solve_locals_restore_tolerances;
  PyObject *__pyx_n_s_solve_locals_set_soret;
  PyObject *__pyx_n_s_solve_locals_set_transport;
  PyObject *__pyx_n_s_solve_multi;
  PyObject *__pyx_n_s_solved;
  PyObject *__pyx_n_s_solving_stage;
  PyObject *__pyx_n_s_soret;
  PyObject *__pyx_n_s_soret_doms;
  PyObject *__pyx_n_s_soret_enabled;
  PyObject *__pyx_n_u_soret_enabled;
  PyObject *__pyx_n_s_spc;
  PyObject *__pyx_n_s_spec;
  PyObject *__pyx_n_s_species;
  PyObject *__pyx_n_s_species_name;
  PyObject *__pyx_n_s_species_names;
  PyObject *__pyx_n_s_split;
  PyObject *__pyx_n_s_ss_age;
  PyObject *__pyx_n_s_stage;
  PyObject *__pyx_n_s_states;
  PyObject *__pyx_n_u_steady;
  PyObject *__pyx_n_s_steady_abstol;
  PyObject *__pyx_n_u_steady_abstol;
  PyObject *__pyx_n_s_steady_reltol;
  PyObject *__pyx_n_u_steady_reltol;
  PyObject *__pyx_n_s_stepsize;
  PyObject *__pyx_kp_s_stringsource;
  PyObject *__pyx_n_s_super;
  PyObject *__pyx_n_s_surface;
  PyObject *__pyx_n_u_surface;
  PyObject *__pyx_kp_u_symmetry_plane;
  PyObject *__pyx_n_s_t;
  PyObject *__pyx_n_s_test;
  PyObject *__pyx_n_s_tfactor;
  PyObject *__pyx_n_s_throw;
  PyObject *__pyx_n_s_to_array;
  PyObject *__pyx_n_s_tolerances;
  PyObject *__pyx_n_s_transient_abstol;
  PyObject *__pyx_n_u_transient_abstol;
  PyObject *__pyx_n_s_transient_reltol;
  PyObject *__pyx_n_u_transient_reltol;
  PyObject *__pyx_n_s_transport;
  PyObject *__pyx_n_s_transport_model;
  PyObject *__pyx_n_s_ts_age;
  PyObject *__pyx_n_s_tsmax;
  PyObject *__pyx_n_s_tsmin;
  PyObject *__pyx_n_s_unique;
  PyObject *__pyx_kp_u_unstrained_flow;
  PyObject *__pyx_n_s_update;
  PyObject *__pyx_n_s_upper;
  PyObject *__pyx_n_s_utils;
  PyObject *__pyx_n_s_v;
  PyObject *__pyx_n_s_val;
  PyObject *__pyx_n_s_val_vec;
  PyObject *__pyx_n_s_value;
  PyObject *__pyx_n_s_values;
  PyObject *__pyx_n_u_velocity;
  PyObject *__pyx_n_s_warn;
  PyObject *__pyx_n_s_warnings;
  PyObject *__pyx_n_s_work_value;
  PyObject *__pyx_n_s_x;
  PyObject *__pyx_n_s_xi;
  PyObject *__pyx_n_s_y;
  PyObject *__pyx_n_s_zip;
  PyObject *__pyx_n_s_zmax;
  PyObject *__pyx_n_s_zmin;
  PyObject *__pyx_float_0_0;
  PyObject *__pyx_float_0_8;
  PyObject *__pyx_float_1_0;
  PyObject *__pyx_float_0_05;
  PyObject *__pyx_float_10_0;
  PyObject *__pyx_float_1eneg_4;
  PyObject *__pyx_float_1eneg_5;
  PyObject *__pyx_float_1eneg_9;
  PyObject *__pyx_float_1eneg_11;
  PyObject *__pyx_float_1eneg_16;
  PyObject *__pyx_float_1eneg_20;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_1;
  PyObject *__pyx_int_2;
  PyObject *__pyx_int_3;
  PyObject *__pyx_int_12;
  PyObject *__pyx_int_24;
  PyObject *__pyx_int_48;
  PyObject *__pyx_int_neg_1;
  PyObject *__pyx_tuple_;
  PyObject *__pyx_tuple__2;
  PyObject *__pyx_tuple__3;
  PyObject *__pyx_tuple__4;
  PyObject *__pyx_tuple__5;
  PyObject *__pyx_tuple__6;
  PyObject *__pyx_tuple__7;
  PyObject *__pyx_tuple__9;
  PyObject *__pyx_slice__20;
  PyObject *__pyx_slice__26;
  PyObject *__pyx_tuple__10;
  PyObject *__pyx_tuple__11;
  PyObject *__pyx_tuple__12;
  PyObject *__pyx_tuple__13;
  PyObject *__pyx_tuple__14;
  PyObject *__pyx_tuple__15;
  PyObject *__pyx_tuple__16;
  PyObject *__pyx_tuple__18;
  PyObject *__pyx_tuple__21;
  PyObject *__pyx_tuple__22;
  PyObject *__pyx_tuple__23;
  PyObject *__pyx_tuple__24;
  PyObject *__pyx_tuple__25;
  PyObject *__pyx_tuple__28;
  PyObject *__pyx_tuple__30;
  PyObject *__pyx_tuple__32;
  PyObject *__pyx_tuple__34;
  PyObject *__pyx_tuple__36;
  PyObject *__pyx_tuple__37;
  PyObject *__pyx_tuple__38;
  PyObject *__pyx_tuple__39;
  PyObject *__pyx_tuple__40;
  PyObject *__pyx_tuple__41;
  PyObject *__pyx_tuple__42;
  PyObject *__pyx_tuple__45;
  PyObject *__pyx_tuple__47;
  PyObject *__pyx_tuple__49;
  PyObject *__pyx_tuple__51;
  PyObject *__pyx_tuple__53;
  PyObject *__pyx_tuple__55;
  PyObject *__pyx_tuple__58;
  PyObject *__pyx_tuple__60;
  PyObject *__pyx_tuple__62;
  PyObject *__pyx_tuple__65;
  PyObject *__pyx_tuple__71;
  PyObject *__pyx_tuple__73;
  PyObject *__pyx_tuple__75;
  PyObject *__pyx_tuple__77;
  PyObject *__pyx_tuple__82;
  PyObject *__pyx_tuple__84;
  PyObject *__pyx_tuple__86;
  PyObject *__pyx_tuple__90;
  PyObject *__pyx_tuple__92;
  PyObject *__pyx_tuple__94;
  PyObject *__pyx_tuple__96;
  PyObject *__pyx_tuple__98;
  PyObject *__pyx_tuple__100;
  PyObject *__pyx_tuple__102;
  PyObject *__pyx_tuple__104;
  PyObject *__pyx_tuple__106;
  PyObject *__pyx_tuple__108;
  PyObject *__pyx_tuple__112;
  PyObject *__pyx_tuple__114;
  PyObject *__pyx_tuple__118;
  PyObject *__pyx_tuple__120;
  PyObject *__pyx_tuple__121;
  PyObject *__pyx_tuple__123;
  PyObject *__pyx_tuple__124;
  PyObject *__pyx_tuple__126;
  PyObject *__pyx_tuple__127;
  PyObject *__pyx_tuple__129;
  PyObject *__pyx_tuple__131;
  PyObject *__pyx_tuple__133;
  PyObject *__pyx_tuple__135;
  PyObject *__pyx_tuple__137;
  PyObject *__pyx_tuple__139;
  PyObject *__pyx_tuple__141;
  PyObject *__pyx_tuple__142;
  PyObject *__pyx_tuple__144;
  PyObject *__pyx_tuple__147;
  PyObject *__pyx_tuple__149;
  PyObject *__pyx_tuple__151;
  PyObject *__pyx_tuple__153;
  PyObject *__pyx_tuple__154;
  PyObject *__pyx_tuple__156;
  PyObject *__pyx_tuple__159;
  PyObject *__pyx_codeobj__29;
  PyObject *__pyx_codeobj__31;
  PyObject *__pyx_codeobj__33;
  PyObject *__pyx_codeobj__35;
  PyObject *__pyx_codeobj__46;
  PyObject *__pyx_codeobj__48;
  PyObject *__pyx_codeobj__50;
  PyObject *__pyx_codeobj__52;
  PyObject *__pyx_codeobj__54;
  PyObject *__pyx_codeobj__56;
  PyObject *__pyx_codeobj__57;
  PyObject *__pyx_codeobj__59;
  PyObject *__pyx_codeobj__61;
  PyObject *__pyx_codeobj__63;
  PyObject *__pyx_codeobj__64;
  PyObject *__pyx_codeobj__66;
  PyObject *__pyx_codeobj__67;
  PyObject *__pyx_codeobj__68;
  PyObject *__pyx_codeobj__69;
  PyObject *__pyx_codeobj__70;
  PyObject *__pyx_codeobj__72;
  PyObject *__pyx_codeobj__74;
  PyObject *__pyx_codeobj__76;
  PyObject *__pyx_codeobj__78;
  PyObject *__pyx_codeobj__79;
  PyObject *__pyx_codeobj__80;
  PyObject *__pyx_codeobj__81;
  PyObject *__pyx_codeobj__83;
  PyObject *__pyx_codeobj__85;
  PyObject *__pyx_codeobj__87;
  PyObject *__pyx_codeobj__88;
  PyObject *__pyx_codeobj__89;
  PyObject *__pyx_codeobj__91;
  PyObject *__pyx_codeobj__93;
  PyObject *__pyx_codeobj__95;
  PyObject *__pyx_codeobj__97;
  PyObject *__pyx_codeobj__99;
  PyObject *__pyx_codeobj__101;
  PyObject *__pyx_codeobj__103;
  PyObject *__pyx_codeobj__105;
  PyObject *__pyx_codeobj__107;
  PyObject *__pyx_codeobj__109;
  PyObject *__pyx_codeobj__110;
  PyObject *__pyx_codeobj__111;
  PyObject *__pyx_codeobj__113;
  PyObject *__pyx_codeobj__115;
  PyObject *__pyx_codeobj__116;
  PyObject *__pyx_codeobj__117;
  PyObject *__pyx_codeobj__119;
  PyObject *__pyx_codeobj__122;
  PyObject *__pyx_codeobj__125;
  PyObject *__pyx_codeobj__128;
  PyObject *__pyx_codeobj__130;
  PyObject *__pyx_codeobj__132;
  PyObject *__pyx_codeobj__134;
  PyObject *__pyx_codeobj__136;
  PyObject *__pyx_codeobj__138;
  PyObject *__pyx_codeobj__140;
  PyObject *__pyx_codeobj__143;
  PyObject *__pyx_codeobj__145;
  PyObject *__pyx_codeobj__146;
  PyObject *__pyx_codeobj__148;
  PyObject *__pyx_codeobj__150;
  PyObject *__pyx_codeobj__152;
  PyObject *__pyx_codeobj__155;
  PyObject *__pyx_codeobj__157;
  PyObject *__pyx_codeobj__158;
  PyObject *__pyx_codeobj__160;
} __pyx_mstate;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#else
static __pyx_mstate __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstate *__pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_4type_type);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_4bool_bool);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_7complex_complex);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_dtype);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_flatiter);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_broadcast);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_ndarray);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_generic);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_number);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_integer);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_signedinteger);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_unsignedinteger);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_inexact);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_floating);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_complexfloating);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_flexible);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_character);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_ufunc);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_5func1_Func1);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_5units_Units);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_5units_UnitStack);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_5units_UnitSystem);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_12solutionbase__SolutionBase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8kinetics_Kinetics);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8kinetics_InterfaceKinetics);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_6thermo_Species);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_6thermo_ThermoPhase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_6thermo_InterfacePhase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_6_utils_AnyMap);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_Domain1D);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_Domain1D);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_Boundary1D);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_Boundary1D);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_ReactingSurface1D);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_ReactingSurface1D);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim__FlowBase);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim__FlowBase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_Sim1D);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_Sim1D);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_Inlet1D);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_Inlet1D);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_Outlet1D);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_Outlet1D);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_OutletReservoir1D);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_OutletReservoir1D);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_SymmetryPlane1D);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_SymmetryPlane1D);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_Surface1D);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_Surface1D);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_FreeFlow);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_FreeFlow);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_UnstrainedFlow);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_UnstrainedFlow);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_AxisymmetricFlow);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_AxisymmetricFlow);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_IdealGasFlow);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_IdealGasFlow);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim_IonFlow);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim_IonFlow);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim___pyx_scope_struct__solve);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr);
  Py_CLEAR(clear_module_state->__pyx_kp_u_78s);
  Py_CLEAR(clear_module_state->__pyx_n_s_AssertionError);
  Py_CLEAR(clear_module_state->__pyx_n_s_AxisymmetricFlow);
  Py_CLEAR(clear_module_state->__pyx_n_s_Boundary1D);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Can_t_instantiate_abstract_class);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Can_t_instantiate_abstract_class_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_CanteraError);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Class_IdealGasFlow_to_be_removed);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Class_IonFlow_to_be_removed_afte);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Could_not_find_a_solution_for_th);
  Py_CLEAR(clear_module_state->__pyx_n_s_D);
  Py_CLEAR(clear_module_state->__pyx_n_s_DeprecationWarning);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D___copy);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D___reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D__from_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D__to_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_bounds);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Domain1D_bounds_line_198);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_component_index);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_component_name);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Domain1D_object_is_not_copyable);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Domain1D_object_is_not_picklable);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_set_bounds);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Domain1D_set_bounds_line_96);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_set_default_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_set_steady_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_set_transient_tolerance);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_steady_abstol);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_steady_reltol);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_tolerances);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Domain1D_tolerances_line_208);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_transient_abstol);
  Py_CLEAR(clear_module_state->__pyx_n_s_Domain1D_transient_reltol);
  Py_CLEAR(clear_module_state->__pyx_n_u_Domain1D_type);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Domain_named_0_not_found);
  Py_CLEAR(clear_module_state->__pyx_n_u_E);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Flame_is_extinct_on_point_grid);
  Py_CLEAR(clear_module_state->__pyx_n_s_FlowBase);
  Py_CLEAR(clear_module_state->__pyx_n_s_FlowBase_get_settings3);
  Py_CLEAR(clear_module_state->__pyx_n_s_FlowBase_set_axisymmetric_flow);
  Py_CLEAR(clear_module_state->__pyx_n_s_FlowBase_set_default_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_FlowBase_set_fixed_temp_profile);
  Py_CLEAR(clear_module_state->__pyx_kp_u_FlowBase_set_fixed_temp_profile_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_FlowBase_set_free_flow);
  Py_CLEAR(clear_module_state->__pyx_n_s_FlowBase_set_transport);
  Py_CLEAR(clear_module_state->__pyx_kp_u_FlowBase_set_transport_Method_t);
  Py_CLEAR(clear_module_state->__pyx_kp_u_FlowBase_settings_Property_gett);
  Py_CLEAR(clear_module_state->__pyx_kp_u_FlowBase_settings_Property_sett);
  Py_CLEAR(clear_module_state->__pyx_n_s_FreeFlow);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Get_a_dictionary_of_the_criteri);
  Py_CLEAR(clear_module_state->__pyx_n_s_IdealGasFlow);
  Py_CLEAR(clear_module_state->__pyx_n_s_ImportError);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Import_of_is_not_implemented);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Initial_solve_failed_Retrying_wi);
  Py_CLEAR(clear_module_state->__pyx_n_s_Inlet1D);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Internal_work_array_value_at_on);
  Py_CLEAR(clear_module_state->__pyx_n_s_IonFlow);
  Py_CLEAR(clear_module_state->__pyx_n_s_IonFlow_set_solving_stage);
  Py_CLEAR(clear_module_state->__pyx_kp_u_IonFlow_set_solving_stage_Method);
  Py_CLEAR(clear_module_state->__pyx_n_s_KeyError);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Kinetics_object_must_be_derived);
  Py_CLEAR(clear_module_state->__pyx_n_s_L);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Maximum_number_of_grid_points_ex);
  Py_CLEAR(clear_module_state->__pyx_n_s_MemoryError);
  Py_CLEAR(clear_module_state->__pyx_n_s_N);
  Py_CLEAR(clear_module_state->__pyx_n_u_None);
  Py_CLEAR(clear_module_state->__pyx_n_s_NotImplementedError);
  Py_CLEAR(clear_module_state->__pyx_n_s_Outlet1D);
  Py_CLEAR(clear_module_state->__pyx_n_s_OutletReservoir1D);
  Py_CLEAR(clear_module_state->__pyx_n_s_P);
  Py_CLEAR(clear_module_state->__pyx_n_s_ReactingSurface1D);
  Py_CLEAR(clear_module_state->__pyx_kp_u_ReactingSurface1D_Starting_in_Ca);
  Py_CLEAR(clear_module_state->__pyx_kp_u_ReactingSurface1D_needs_an_adjac);
  Py_CLEAR(clear_module_state->__pyx_n_s_ReactingSurface1D_set_kinetics);
  Py_CLEAR(clear_module_state->__pyx_kp_u_ReactingSurface1D_set_kinetics_M);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Retrieve_data_and_settings_from);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Return_the_lower_upper_bounds_f);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Return_the_relative_absolute_er);
  Py_CLEAR(clear_module_state->__pyx_n_s_S);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Save_current_simulation_data_to);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Set_a_flat_profile_for_one_compo);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Set_an_initial_estimate_for_a_p);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Set_the_criteria_used_to_refine);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Set_the_fixed_temperature_profil);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Set_the_lower_and_upper_bounds);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Set_the_sequence_of_time_steps_t);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Set_the_value_of_one_component);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Setting_the_boundary_emissivitie);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D__get_indices);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D__get_initial_solution);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_clear_stats);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_domain_index);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_eval);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_extinct);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_get_max_grid_points);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_get_refine_criteria);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_get_refine_criteria_line_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_phase);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_profile);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_profile_line_1101);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_refine);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_restore);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_restore_Argument_loglevel);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_restore_data);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_restore_data_Method_to_be);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_restore_line_1639);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_restore_steady_solution);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_restore_time_stepping_solu);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_save);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_save_Argument_loglevel_is);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_save_line_1592);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_flat_profile);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_set_flat_profile_line_1145);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_grid_min);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_initial_guess);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_interrupt);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_max_grid_points);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_max_jac_age);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_max_time_step);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_min_time_step);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_profile);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_set_profile_line_1120);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_refine_criteria);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_set_refine_criteria_line_1);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_steady_callback);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_time_step);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_time_step_callback);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_time_step_factor);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_set_time_step_line_1243);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_set_value);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_set_value_line_1053);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_show);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_show_solution);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_show_stats);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_solve);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_solve_adjoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_value);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_value_line_1037);
  Py_CLEAR(clear_module_state->__pyx_n_s_Sim1D_work_value);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Sim1D_work_value_line_1084);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Solution_value_at_one_point_par);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Solving_on_point_grid_with_energ);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Solving_on_point_grid_with_energ_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Solving_with_Soret_diffusion);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Solving_with_grid_refinement_ena);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Solving_with_multicomponent_tran);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Solving_with_user_specified_tole);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Spatial_profile_of_one_componen);
  Py_CLEAR(clear_module_state->__pyx_n_s_Surface1D);
  Py_CLEAR(clear_module_state->__pyx_n_s_SymmetryPlane1D);
  Py_CLEAR(clear_module_state->__pyx_n_s_T);
  Py_CLEAR(clear_module_state->__pyx_n_u_T);
  Py_CLEAR(clear_module_state->__pyx_n_s_TPX);
  Py_CLEAR(clear_module_state->__pyx_n_s_TPY);
  Py_CLEAR(clear_module_state->__pyx_n_s_TypeError);
  Py_CLEAR(clear_module_state->__pyx_n_s_UnstrainedFlow);
  Py_CLEAR(clear_module_state->__pyx_n_s_ValueError);
  Py_CLEAR(clear_module_state->__pyx_n_s_WeakrefProxy);
  Py_CLEAR(clear_module_state->__pyx_n_s_X);
  Py_CLEAR(clear_module_state->__pyx_n_s_Y);
  Py_CLEAR(clear_module_state->__pyx_n_s__161);
  Py_CLEAR(clear_module_state->__pyx_kp_u__17);
  Py_CLEAR(clear_module_state->__pyx_n_u__19);
  Py_CLEAR(clear_module_state->__pyx_kp_u__27);
  Py_CLEAR(clear_module_state->__pyx_kp_u__43);
  Py_CLEAR(clear_module_state->__pyx_n_s__44);
  Py_CLEAR(clear_module_state->__pyx_kp_u__8);
  Py_CLEAR(clear_module_state->__pyx_n_s_a);
  Py_CLEAR(clear_module_state->__pyx_n_s_abs);
  Py_CLEAR(clear_module_state->__pyx_n_s_argmax);
  Py_CLEAR(clear_module_state->__pyx_n_s_args);
  Py_CLEAR(clear_module_state->__pyx_n_s_arr);
  Py_CLEAR(clear_module_state->__pyx_n_s_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_ascontiguousarray);
  Py_CLEAR(clear_module_state->__pyx_n_s_asyncio_coroutines);
  Py_CLEAR(clear_module_state->__pyx_n_s_atol);
  Py_CLEAR(clear_module_state->__pyx_n_s_atol_ss_final);
  Py_CLEAR(clear_module_state->__pyx_n_s_atol_ts_final);
  Py_CLEAR(clear_module_state->__pyx_n_s_auto);
  Py_CLEAR(clear_module_state->__pyx_kp_u_axisymmetric_flow);
  Py_CLEAR(clear_module_state->__pyx_n_s_basis);
  Py_CLEAR(clear_module_state->__pyx_n_s_boundary_emissivities);
  Py_CLEAR(clear_module_state->__pyx_n_s_bounds);
  Py_CLEAR(clear_module_state->__pyx_n_s_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_cantera__onedim);
  Py_CLEAR(clear_module_state->__pyx_kp_s_cantera__onedim_pyx);
  Py_CLEAR(clear_module_state->__pyx_n_s_charge);
  Py_CLEAR(clear_module_state->__pyx_n_s_chargetol);
  Py_CLEAR(clear_module_state->__pyx_n_s_class_getitem);
  Py_CLEAR(clear_module_state->__pyx_n_s_clear_stats);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_close);
  Py_CLEAR(clear_module_state->__pyx_n_s_comp);
  Py_CLEAR(clear_module_state->__pyx_n_s_component);
  Py_CLEAR(clear_module_state->__pyx_n_s_component_index);
  Py_CLEAR(clear_module_state->__pyx_n_s_component_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_component_names);
  Py_CLEAR(clear_module_state->__pyx_n_s_composition);
  Py_CLEAR(clear_module_state->__pyx_n_s_compression);
  Py_CLEAR(clear_module_state->__pyx_n_s_copy);
  Py_CLEAR(clear_module_state->__pyx_n_s_curve);
  Py_CLEAR(clear_module_state->__pyx_n_u_curve);
  Py_CLEAR(clear_module_state->__pyx_n_s_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_data);
  Py_CLEAR(clear_module_state->__pyx_n_u_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_default);
  Py_CLEAR(clear_module_state->__pyx_n_s_density);
  Py_CLEAR(clear_module_state->__pyx_n_s_description);
  Py_CLEAR(clear_module_state->__pyx_n_s_dest);
  Py_CLEAR(clear_module_state->__pyx_n_s_dfdp);
  Py_CLEAR(clear_module_state->__pyx_n_s_dgdp);
  Py_CLEAR(clear_module_state->__pyx_n_s_dgdx);
  Py_CLEAR(clear_module_state->__pyx_n_s_dict);
  Py_CLEAR(clear_module_state->__pyx_kp_u_disable);
  Py_CLEAR(clear_module_state->__pyx_n_s_doc);
  Py_CLEAR(clear_module_state->__pyx_n_s_dom);
  Py_CLEAR(clear_module_state->__pyx_n_s_domain);
  Py_CLEAR(clear_module_state->__pyx_n_s_domain_index);
  Py_CLEAR(clear_module_state->__pyx_n_s_domain_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_domains);
  Py_CLEAR(clear_module_state->__pyx_n_s_dot);
  Py_CLEAR(clear_module_state->__pyx_n_s_double);
  Py_CLEAR(clear_module_state->__pyx_n_s_dp);
  Py_CLEAR(clear_module_state->__pyx_n_s_dtype);
  Py_CLEAR(clear_module_state->__pyx_n_s_dz);
  Py_CLEAR(clear_module_state->__pyx_n_s_e);
  Py_CLEAR(clear_module_state->__pyx_n_u_edge);
  Py_CLEAR(clear_module_state->__pyx_n_u_emissivity_left);
  Py_CLEAR(clear_module_state->__pyx_n_u_emissivity_right);
  Py_CLEAR(clear_module_state->__pyx_n_s_empty);
  Py_CLEAR(clear_module_state->__pyx_kp_u_enable);
  Py_CLEAR(clear_module_state->__pyx_n_s_energy_enabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_enumerate);
  Py_CLEAR(clear_module_state->__pyx_n_s_eval);
  Py_CLEAR(clear_module_state->__pyx_n_s_extinct);
  Py_CLEAR(clear_module_state->__pyx_n_s_f);
  Py_CLEAR(clear_module_state->__pyx_n_s_filename);
  Py_CLEAR(clear_module_state->__pyx_n_s_flow_domains);
  Py_CLEAR(clear_module_state->__pyx_n_s_fminus);
  Py_CLEAR(clear_module_state->__pyx_n_s_format);
  Py_CLEAR(clear_module_state->__pyx_n_s_fplus);
  Py_CLEAR(clear_module_state->__pyx_kp_u_free_flow);
  Py_CLEAR(clear_module_state->__pyx_n_s_from_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_g);
  Py_CLEAR(clear_module_state->__pyx_n_s_gas);
  Py_CLEAR(clear_module_state->__pyx_n_u_gas);
  Py_CLEAR(clear_module_state->__pyx_kp_u_gas_flow);
  Py_CLEAR(clear_module_state->__pyx_kp_u_gc);
  Py_CLEAR(clear_module_state->__pyx_n_s_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_get);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_indices);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_initial_solution);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_max_grid_points);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_refine_criteria);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_settings3);
  Py_CLEAR(clear_module_state->__pyx_n_s_getstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_gg);
  Py_CLEAR(clear_module_state->__pyx_n_s_gminus);
  Py_CLEAR(clear_module_state->__pyx_n_s_gplus);
  Py_CLEAR(clear_module_state->__pyx_n_s_grid);
  Py_CLEAR(clear_module_state->__pyx_n_u_grid);
  Py_CLEAR(clear_module_state->__pyx_n_s_have_user_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_header);
  Py_CLEAR(clear_module_state->__pyx_n_s_i);
  Py_CLEAR(clear_module_state->__pyx_n_s_idom);
  Py_CLEAR(clear_module_state->__pyx_n_s_import);
  Py_CLEAR(clear_module_state->__pyx_n_s_index);
  Py_CLEAR(clear_module_state->__pyx_n_s_init);
  Py_CLEAR(clear_module_state->__pyx_n_s_init_subclass);
  Py_CLEAR(clear_module_state->__pyx_n_s_initializing);
  Py_CLEAR(clear_module_state->__pyx_n_u_inlet);
  Py_CLEAR(clear_module_state->__pyx_n_s_interrupts);
  Py_CLEAR(clear_module_state->__pyx_kp_u_ion_flow);
  Py_CLEAR(clear_module_state->__pyx_kp_u_ionized_gas);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_coroutine);
  Py_CLEAR(clear_module_state->__pyx_n_s_isclose);
  Py_CLEAR(clear_module_state->__pyx_kp_u_isenabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_items);
  Py_CLEAR(clear_module_state->__pyx_n_s_j);
  Py_CLEAR(clear_module_state->__pyx_n_s_k);
  Py_CLEAR(clear_module_state->__pyx_n_s_k0);
  Py_CLEAR(clear_module_state->__pyx_n_s_kcomp);
  Py_CLEAR(clear_module_state->__pyx_n_s_key);
  Py_CLEAR(clear_module_state->__pyx_n_s_kin);
  Py_CLEAR(clear_module_state->__pyx_n_s_kwargs);
  Py_CLEAR(clear_module_state->__pyx_n_s_linspace);
  Py_CLEAR(clear_module_state->__pyx_n_s_log);
  Py_CLEAR(clear_module_state->__pyx_n_s_logical_not);
  Py_CLEAR(clear_module_state->__pyx_n_s_loglevel);
  Py_CLEAR(clear_module_state->__pyx_n_s_lower);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_mdot);
  Py_CLEAR(clear_module_state->__pyx_n_s_meta);
  Py_CLEAR(clear_module_state->__pyx_n_s_metaclass);
  Py_CLEAR(clear_module_state->__pyx_kp_u_mixture_averaged);
  Py_CLEAR(clear_module_state->__pyx_n_s_module);
  Py_CLEAR(clear_module_state->__pyx_n_s_msg);
  Py_CLEAR(clear_module_state->__pyx_n_s_multi);
  Py_CLEAR(clear_module_state->__pyx_n_u_multicomponent);
  Py_CLEAR(clear_module_state->__pyx_n_s_n);
  Py_CLEAR(clear_module_state->__pyx_n_s_nPoints);
  Py_CLEAR(clear_module_state->__pyx_n_s_n_components);
  Py_CLEAR(clear_module_state->__pyx_n_s_n_params);
  Py_CLEAR(clear_module_state->__pyx_n_s_n_points);
  Py_CLEAR(clear_module_state->__pyx_n_s_n_species);
  Py_CLEAR(clear_module_state->__pyx_n_s_n_steps);
  Py_CLEAR(clear_module_state->__pyx_n_s_n_vars);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_n_u_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_name_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_CLEAR(clear_module_state->__pyx_n_s_no_op);
  Py_CLEAR(clear_module_state->__pyx_n_u_none);
  Py_CLEAR(clear_module_state->__pyx_n_s_normalize);
  Py_CLEAR(clear_module_state->__pyx_n_s_np);
  Py_CLEAR(clear_module_state->__pyx_n_s_npmax);
  Py_CLEAR(clear_module_state->__pyx_n_s_numpy);
  Py_CLEAR(clear_module_state->__pyx_kp_u_numpy_core_multiarray_failed_to);
  Py_CLEAR(clear_module_state->__pyx_kp_u_numpy_core_umath_failed_to_impor);
  Py_CLEAR(clear_module_state->__pyx_n_s_ones);
  Py_CLEAR(clear_module_state->__pyx_n_s_other_cols);
  Py_CLEAR(clear_module_state->__pyx_n_u_outlet);
  Py_CLEAR(clear_module_state->__pyx_kp_u_outlet_reservoir);
  Py_CLEAR(clear_module_state->__pyx_n_s_overwrite);
  Py_CLEAR(clear_module_state->__pyx_n_s_p);
  Py_CLEAR(clear_module_state->__pyx_n_s_perturb);
  Py_CLEAR(clear_module_state->__pyx_n_s_phase);
  Py_CLEAR(clear_module_state->__pyx_n_s_phase_of_matter);
  Py_CLEAR(clear_module_state->__pyx_n_s_point);
  Py_CLEAR(clear_module_state->__pyx_n_s_pos);
  Py_CLEAR(clear_module_state->__pyx_n_s_pos_vec);
  Py_CLEAR(clear_module_state->__pyx_n_s_positions);
  Py_CLEAR(clear_module_state->__pyx_n_s_prepare);
  Py_CLEAR(clear_module_state->__pyx_n_s_print);
  Py_CLEAR(clear_module_state->__pyx_n_s_print_time);
  Py_CLEAR(clear_module_state->__pyx_n_s_profile);
  Py_CLEAR(clear_module_state->__pyx_n_s_prune);
  Py_CLEAR(clear_module_state->__pyx_n_u_prune);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_vtable);
  Py_CLEAR(clear_module_state->__pyx_n_u_qdot);
  Py_CLEAR(clear_module_state->__pyx_n_s_qualname);
  Py_CLEAR(clear_module_state->__pyx_n_s_r);
  Py_CLEAR(clear_module_state->__pyx_n_s_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_ratio);
  Py_CLEAR(clear_module_state->__pyx_n_u_ratio);
  Py_CLEAR(clear_module_state->__pyx_n_s_rdt);
  Py_CLEAR(clear_module_state->__pyx_kp_u_reacting_surface);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_ex);
  Py_CLEAR(clear_module_state->__pyx_n_s_refine);
  Py_CLEAR(clear_module_state->__pyx_n_s_refine_grid);
  Py_CLEAR(clear_module_state->__pyx_n_s_rel);
  Py_CLEAR(clear_module_state->__pyx_n_s_restore);
  Py_CLEAR(clear_module_state->__pyx_n_s_restore_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_restore_steady_solution);
  Py_CLEAR(clear_module_state->__pyx_n_s_restore_time_stepping_solution);
  Py_CLEAR(clear_module_state->__pyx_n_s_restore_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_return_counts);
  Py_CLEAR(clear_module_state->__pyx_n_s_rtol);
  Py_CLEAR(clear_module_state->__pyx_n_s_rtol_ss_final);
  Py_CLEAR(clear_module_state->__pyx_n_s_rtol_ts_final);
  Py_CLEAR(clear_module_state->__pyx_n_s_save);
  Py_CLEAR(clear_module_state->__pyx_n_s_self);
  Py_CLEAR(clear_module_state->__pyx_n_s_send);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_axisymmetric_flow);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_bounds);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_default_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_fixed_temp_profile);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_flat_profile);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_free_flow);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_grid_min);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_initial_guess);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_interrupt);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_kinetics);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_max_grid_points);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_max_jac_age);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_max_time_step);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_min_time_step);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_profile);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_refine_criteria);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_solving_stage);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_soret);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_steady_callback);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_steady_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_time_step);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_time_step_callback);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_time_step_factor);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_transient_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_transport);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_settings);
  Py_CLEAR(clear_module_state->__pyx_n_s_show);
  Py_CLEAR(clear_module_state->__pyx_n_s_show_solution);
  Py_CLEAR(clear_module_state->__pyx_n_s_show_stats);
  Py_CLEAR(clear_module_state->__pyx_n_s_size);
  Py_CLEAR(clear_module_state->__pyx_n_s_slope);
  Py_CLEAR(clear_module_state->__pyx_n_u_slope);
  Py_CLEAR(clear_module_state->__pyx_kp_u_soln_yaml);
  Py_CLEAR(clear_module_state->__pyx_n_u_solution);
  Py_CLEAR(clear_module_state->__pyx_n_s_solve);
  Py_CLEAR(clear_module_state->__pyx_n_s_solve_adjoint);
  Py_CLEAR(clear_module_state->__pyx_n_s_solve_locals_genexpr);
  Py_CLEAR(clear_module_state->__pyx_n_s_solve_locals_log);
  Py_CLEAR(clear_module_state->__pyx_n_s_solve_locals_restore_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_solve_locals_set_soret);
  Py_CLEAR(clear_module_state->__pyx_n_s_solve_locals_set_transport);
  Py_CLEAR(clear_module_state->__pyx_n_s_solve_multi);
  Py_CLEAR(clear_module_state->__pyx_n_s_solved);
  Py_CLEAR(clear_module_state->__pyx_n_s_solving_stage);
  Py_CLEAR(clear_module_state->__pyx_n_s_soret);
  Py_CLEAR(clear_module_state->__pyx_n_s_soret_doms);
  Py_CLEAR(clear_module_state->__pyx_n_s_soret_enabled);
  Py_CLEAR(clear_module_state->__pyx_n_u_soret_enabled);
  Py_CLEAR(clear_module_state->__pyx_n_s_spc);
  Py_CLEAR(clear_module_state->__pyx_n_s_spec);
  Py_CLEAR(clear_module_state->__pyx_n_s_species);
  Py_CLEAR(clear_module_state->__pyx_n_s_species_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_species_names);
  Py_CLEAR(clear_module_state->__pyx_n_s_split);
  Py_CLEAR(clear_module_state->__pyx_n_s_ss_age);
  Py_CLEAR(clear_module_state->__pyx_n_s_stage);
  Py_CLEAR(clear_module_state->__pyx_n_s_states);
  Py_CLEAR(clear_module_state->__pyx_n_u_steady);
  Py_CLEAR(clear_module_state->__pyx_n_s_steady_abstol);
  Py_CLEAR(clear_module_state->__pyx_n_u_steady_abstol);
  Py_CLEAR(clear_module_state->__pyx_n_s_steady_reltol);
  Py_CLEAR(clear_module_state->__pyx_n_u_steady_reltol);
  Py_CLEAR(clear_module_state->__pyx_n_s_stepsize);
  Py_CLEAR(clear_module_state->__pyx_kp_s_stringsource);
  Py_CLEAR(clear_module_state->__pyx_n_s_super);
  Py_CLEAR(clear_module_state->__pyx_n_s_surface);
  Py_CLEAR(clear_module_state->__pyx_n_u_surface);
  Py_CLEAR(clear_module_state->__pyx_kp_u_symmetry_plane);
  Py_CLEAR(clear_module_state->__pyx_n_s_t);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  Py_CLEAR(clear_module_state->__pyx_n_s_tfactor);
  Py_CLEAR(clear_module_state->__pyx_n_s_throw);
  Py_CLEAR(clear_module_state->__pyx_n_s_to_array);
  Py_CLEAR(clear_module_state->__pyx_n_s_tolerances);
  Py_CLEAR(clear_module_state->__pyx_n_s_transient_abstol);
  Py_CLEAR(clear_module_state->__pyx_n_u_transient_abstol);
  Py_CLEAR(clear_module_state->__pyx_n_s_transient_reltol);
  Py_CLEAR(clear_module_state->__pyx_n_u_transient_reltol);
  Py_CLEAR(clear_module_state->__pyx_n_s_transport);
  Py_CLEAR(clear_module_state->__pyx_n_s_transport_model);
  Py_CLEAR(clear_module_state->__pyx_n_s_ts_age);
  Py_CLEAR(clear_module_state->__pyx_n_s_tsmax);
  Py_CLEAR(clear_module_state->__pyx_n_s_tsmin);
  Py_CLEAR(clear_module_state->__pyx_n_s_unique);
  Py_CLEAR(clear_module_state->__pyx_kp_u_unstrained_flow);
  Py_CLEAR(clear_module_state->__pyx_n_s_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_upper);
  Py_CLEAR(clear_module_state->__pyx_n_s_utils);
  Py_CLEAR(clear_module_state->__pyx_n_s_v);
  Py_CLEAR(clear_module_state->__pyx_n_s_val);
  Py_CLEAR(clear_module_state->__pyx_n_s_val_vec);
  Py_CLEAR(clear_module_state->__pyx_n_s_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_values);
  Py_CLEAR(clear_module_state->__pyx_n_u_velocity);
  Py_CLEAR(clear_module_state->__pyx_n_s_warn);
  Py_CLEAR(clear_module_state->__pyx_n_s_warnings);
  Py_CLEAR(clear_module_state->__pyx_n_s_work_value);
  Py_CLEAR(clear_module_state->__pyx_n_s_x);
  Py_CLEAR(clear_module_state->__pyx_n_s_xi);
  Py_CLEAR(clear_module_state->__pyx_n_s_y);
  Py_CLEAR(clear_module_state->__pyx_n_s_zip);
  Py_CLEAR(clear_module_state->__pyx_n_s_zmax);
  Py_CLEAR(clear_module_state->__pyx_n_s_zmin);
  Py_CLEAR(clear_module_state->__pyx_float_0_0);
  Py_CLEAR(clear_module_state->__pyx_float_0_8);
  Py_CLEAR(clear_module_state->__pyx_float_1_0);
  Py_CLEAR(clear_module_state->__pyx_float_0_05);
  Py_CLEAR(clear_module_state->__pyx_float_10_0);
  Py_CLEAR(clear_module_state->__pyx_float_1eneg_4);
  Py_CLEAR(clear_module_state->__pyx_float_1eneg_5);
  Py_CLEAR(clear_module_state->__pyx_float_1eneg_9);
  Py_CLEAR(clear_module_state->__pyx_float_1eneg_11);
  Py_CLEAR(clear_module_state->__pyx_float_1eneg_16);
  Py_CLEAR(clear_module_state->__pyx_float_1eneg_20);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_1);
  Py_CLEAR(clear_module_state->__pyx_int_2);
  Py_CLEAR(clear_module_state->__pyx_int_3);
  Py_CLEAR(clear_module_state->__pyx_int_12);
  Py_CLEAR(clear_module_state->__pyx_int_24);
  Py_CLEAR(clear_module_state->__pyx_int_48);
  Py_CLEAR(clear_module_state->__pyx_int_neg_1);
  Py_CLEAR(clear_module_state->__pyx_tuple_);
  Py_CLEAR(clear_module_state->__pyx_tuple__2);
  Py_CLEAR(clear_module_state->__pyx_tuple__3);
  Py_CLEAR(clear_module_state->__pyx_tuple__4);
  Py_CLEAR(clear_module_state->__pyx_tuple__5);
  Py_CLEAR(clear_module_state->__pyx_tuple__6);
  Py_CLEAR(clear_module_state->__pyx_tuple__7);
  Py_CLEAR(clear_module_state->__pyx_tuple__9);
  Py_CLEAR(clear_module_state->__pyx_slice__20);
  Py_CLEAR(clear_module_state->__pyx_slice__26);
  Py_CLEAR(clear_module_state->__pyx_tuple__10);
  Py_CLEAR(clear_module_state->__pyx_tuple__11);
  Py_CLEAR(clear_module_state->__pyx_tuple__12);
  Py_CLEAR(clear_module_state->__pyx_tuple__13);
  Py_CLEAR(clear_module_state->__pyx_tuple__14);
  Py_CLEAR(clear_module_state->__pyx_tuple__15);
  Py_CLEAR(clear_module_state->__pyx_tuple__16);
  Py_CLEAR(clear_module_state->__pyx_tuple__18);
  Py_CLEAR(clear_module_state->__pyx_tuple__21);
  Py_CLEAR(clear_module_state->__pyx_tuple__22);
  Py_CLEAR(clear_module_state->__pyx_tuple__23);
  Py_CLEAR(clear_module_state->__pyx_tuple__24);
  Py_CLEAR(clear_module_state->__pyx_tuple__25);
  Py_CLEAR(clear_module_state->__pyx_tuple__28);
  Py_CLEAR(clear_module_state->__pyx_tuple__30);
  Py_CLEAR(clear_module_state->__pyx_tuple__32);
  Py_CLEAR(clear_module_state->__pyx_tuple__34);
  Py_CLEAR(clear_module_state->__pyx_tuple__36);
  Py_CLEAR(clear_module_state->__pyx_tuple__37);
  Py_CLEAR(clear_module_state->__pyx_tuple__38);
  Py_CLEAR(clear_module_state->__pyx_tuple__39);
  Py_CLEAR(clear_module_state->__pyx_tuple__40);
  Py_CLEAR(clear_module_state->__pyx_tuple__41);
  Py_CLEAR(clear_module_state->__pyx_tuple__42);
  Py_CLEAR(clear_module_state->__pyx_tuple__45);
  Py_CLEAR(clear_module_state->__pyx_tuple__47);
  Py_CLEAR(clear_module_state->__pyx_tuple__49);
  Py_CLEAR(clear_module_state->__pyx_tuple__51);
  Py_CLEAR(clear_module_state->__pyx_tuple__53);
  Py_CLEAR(clear_module_state->__pyx_tuple__55);
  Py_CLEAR(clear_module_state->__pyx_tuple__58);
  Py_CLEAR(clear_module_state->__pyx_tuple__60);
  Py_CLEAR(clear_module_state->__pyx_tuple__62);
  Py_CLEAR(clear_module_state->__pyx_tuple__65);
  Py_CLEAR(clear_module_state->__pyx_tuple__71);
  Py_CLEAR(clear_module_state->__pyx_tuple__73);
  Py_CLEAR(clear_module_state->__pyx_tuple__75);
  Py_CLEAR(clear_module_state->__pyx_tuple__77);
  Py_CLEAR(clear_module_state->__pyx_tuple__82);
  Py_CLEAR(clear_module_state->__pyx_tuple__84);
  Py_CLEAR(clear_module_state->__pyx_tuple__86);
  Py_CLEAR(clear_module_state->__pyx_tuple__90);
  Py_CLEAR(clear_module_state->__pyx_tuple__92);
  Py_CLEAR(clear_module_state->__pyx_tuple__94);
  Py_CLEAR(clear_module_state->__pyx_tuple__96);
  Py_CLEAR(clear_module_state->__pyx_tuple__98);
  Py_CLEAR(clear_module_state->__pyx_tuple__100);
  Py_CLEAR(clear_module_state->__pyx_tuple__102);
  Py_CLEAR(clear_module_state->__pyx_tuple__104);
  Py_CLEAR(clear_module_state->__pyx_tuple__106);
  Py_CLEAR(clear_module_state->__pyx_tuple__108);
  Py_CLEAR(clear_module_state->__pyx_tuple__112);
  Py_CLEAR(clear_module_state->__pyx_tuple__114);
  Py_CLEAR(clear_module_state->__pyx_tuple__118);
  Py_CLEAR(clear_module_state->__pyx_tuple__120);
  Py_CLEAR(clear_module_state->__pyx_tuple__121);
  Py_CLEAR(clear_module_state->__pyx_tuple__123);
  Py_CLEAR(clear_module_state->__pyx_tuple__124);
  Py_CLEAR(clear_module_state->__pyx_tuple__126);
  Py_CLEAR(clear_module_state->__pyx_tuple__127);
  Py_CLEAR(clear_module_state->__pyx_tuple__129);
  Py_CLEAR(clear_module_state->__pyx_tuple__131);
  Py_CLEAR(clear_module_state->__pyx_tuple__133);
  Py_CLEAR(clear_module_state->__pyx_tuple__135);
  Py_CLEAR(clear_module_state->__pyx_tuple__137);
  Py_CLEAR(clear_module_state->__pyx_tuple__139);
  Py_CLEAR(clear_module_state->__pyx_tuple__141);
  Py_CLEAR(clear_module_state->__pyx_tuple__142);
  Py_CLEAR(clear_module_state->__pyx_tuple__144);
  Py_CLEAR(clear_module_state->__pyx_tuple__147);
  Py_CLEAR(clear_module_state->__pyx_tuple__149);
  Py_CLEAR(clear_module_state->__pyx_tuple__151);
  Py_CLEAR(clear_module_state->__pyx_tuple__153);
  Py_CLEAR(clear_module_state->__pyx_tuple__154);
  Py_CLEAR(clear_module_state->__pyx_tuple__156);
  Py_CLEAR(clear_module_state->__pyx_tuple__159);
  Py_CLEAR(clear_module_state->__pyx_codeobj__29);
  Py_CLEAR(clear_module_state->__pyx_codeobj__31);
  Py_CLEAR(clear_module_state->__pyx_codeobj__33);
  Py_CLEAR(clear_module_state->__pyx_codeobj__35);
  Py_CLEAR(clear_module_state->__pyx_codeobj__46);
  Py_CLEAR(clear_module_state->__pyx_codeobj__48);
  Py_CLEAR(clear_module_state->__pyx_codeobj__50);
  Py_CLEAR(clear_module_state->__pyx_codeobj__52);
  Py_CLEAR(clear_module_state->__pyx_codeobj__54);
  Py_CLEAR(clear_module_state->__pyx_codeobj__56);
  Py_CLEAR(clear_module_state->__pyx_codeobj__57);
  Py_CLEAR(clear_module_state->__pyx_codeobj__59);
  Py_CLEAR(clear_module_state->__pyx_codeobj__61);
  Py_CLEAR(clear_module_state->__pyx_codeobj__63);
  Py_CLEAR(clear_module_state->__pyx_codeobj__64);
  Py_CLEAR(clear_module_state->__pyx_codeobj__66);
  Py_CLEAR(clear_module_state->__pyx_codeobj__67);
  Py_CLEAR(clear_module_state->__pyx_codeobj__68);
  Py_CLEAR(clear_module_state->__pyx_codeobj__69);
  Py_CLEAR(clear_module_state->__pyx_codeobj__70);
  Py_CLEAR(clear_module_state->__pyx_codeobj__72);
  Py_CLEAR(clear_module_state->__pyx_codeobj__74);
  Py_CLEAR(clear_module_state->__pyx_codeobj__76);
  Py_CLEAR(clear_module_state->__pyx_codeobj__78);
  Py_CLEAR(clear_module_state->__pyx_codeobj__79);
  Py_CLEAR(clear_module_state->__pyx_codeobj__80);
  Py_CLEAR(clear_module_state->__pyx_codeobj__81);
  Py_CLEAR(clear_module_state->__pyx_codeobj__83);
  Py_CLEAR(clear_module_state->__pyx_codeobj__85);
  Py_CLEAR(clear_module_state->__pyx_codeobj__87);
  Py_CLEAR(clear_module_state->__pyx_codeobj__88);
  Py_CLEAR(clear_module_state->__pyx_codeobj__89);
  Py_CLEAR(clear_module_state->__pyx_codeobj__91);
  Py_CLEAR(clear_module_state->__pyx_codeobj__93);
  Py_CLEAR(clear_module_state->__pyx_codeobj__95);
  Py_CLEAR(clear_module_state->__pyx_codeobj__97);
  Py_CLEAR(clear_module_state->__pyx_codeobj__99);
  Py_CLEAR(clear_module_state->__pyx_codeobj__101);
  Py_CLEAR(clear_module_state->__pyx_codeobj__103);
  Py_CLEAR(clear_module_state->__pyx_codeobj__105);
  Py_CLEAR(clear_module_state->__pyx_codeobj__107);
  Py_CLEAR(clear_module_state->__pyx_codeobj__109);
  Py_CLEAR(clear_module_state->__pyx_codeobj__110);
  Py_CLEAR(clear_module_state->__pyx_codeobj__111);
  Py_CLEAR(clear_module_state->__pyx_codeobj__113);
  Py_CLEAR(clear_module_state->__pyx_codeobj__115);
  Py_CLEAR(clear_module_state->__pyx_codeobj__116);
  Py_CLEAR(clear_module_state->__pyx_codeobj__117);
  Py_CLEAR(clear_module_state->__pyx_codeobj__119);
  Py_CLEAR(clear_module_state->__pyx_codeobj__122);
  Py_CLEAR(clear_module_state->__pyx_codeobj__125);
  Py_CLEAR(clear_module_state->__pyx_codeobj__128);
  Py_CLEAR(clear_module_state->__pyx_codeobj__130);
  Py_CLEAR(clear_module_state->__pyx_codeobj__132);
  Py_CLEAR(clear_module_state->__pyx_codeobj__134);
  Py_CLEAR(clear_module_state->__pyx_codeobj__136);
  Py_CLEAR(clear_module_state->__pyx_codeobj__138);
  Py_CLEAR(clear_module_state->__pyx_codeobj__140);
  Py_CLEAR(clear_module_state->__pyx_codeobj__143);
  Py_CLEAR(clear_module_state->__pyx_codeobj__145);
  Py_CLEAR(clear_module_state->__pyx_codeobj__146);
  Py_CLEAR(clear_module_state->__pyx_codeobj__148);
  Py_CLEAR(clear_module_state->__pyx_codeobj__150);
  Py_CLEAR(clear_module_state->__pyx_codeobj__152);
  Py_CLEAR(clear_module_state->__pyx_codeobj__155);
  Py_CLEAR(clear_module_state->__pyx_codeobj__157);
  Py_CLEAR(clear_module_state->__pyx_codeobj__158);
  Py_CLEAR(clear_module_state->__pyx_codeobj__160);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_4type_type);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_4bool_bool);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_7complex_complex);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_dtype);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_flatiter);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_broadcast);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_ndarray);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_generic);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_number);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_integer);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_signedinteger);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_unsignedinteger);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_inexact);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_floating);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_complexfloating);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_flexible);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_character);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_ufunc);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_5func1_Func1);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_5units_Units);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_5units_UnitStack);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_5units_UnitSystem);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_12solutionbase__SolutionBase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8kinetics_Kinetics);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8kinetics_InterfaceKinetics);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_6thermo_Species);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_6thermo_ThermoPhase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_6thermo_InterfacePhase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_6_utils_AnyMap);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_Domain1D);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_Domain1D);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_Boundary1D);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_Boundary1D);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_ReactingSurface1D);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_ReactingSurface1D);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim__FlowBase);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim__FlowBase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_Sim1D);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_Sim1D);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_Inlet1D);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_Inlet1D);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_Outlet1D);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_Outlet1D);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_OutletReservoir1D);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_OutletReservoir1D);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_SymmetryPlane1D);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_SymmetryPlane1D);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_Surface1D);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_Surface1D);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_FreeFlow);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_FreeFlow);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_UnstrainedFlow);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_UnstrainedFlow);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_AxisymmetricFlow);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_AxisymmetricFlow);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_IdealGasFlow);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_IdealGasFlow);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim_IonFlow);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim_IonFlow);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim___pyx_scope_struct__solve);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr);
  Py_VISIT(traverse_module_state->__pyx_kp_u_78s);
  Py_VISIT(traverse_module_state->__pyx_n_s_AssertionError);
  Py_VISIT(traverse_module_state->__pyx_n_s_AxisymmetricFlow);
  Py_VISIT(traverse_module_state->__pyx_n_s_Boundary1D);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Can_t_instantiate_abstract_class);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Can_t_instantiate_abstract_class_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_CanteraError);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Class_IdealGasFlow_to_be_removed);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Class_IonFlow_to_be_removed_afte);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Could_not_find_a_solution_for_th);
  Py_VISIT(traverse_module_state->__pyx_n_s_D);
  Py_VISIT(traverse_module_state->__pyx_n_s_DeprecationWarning);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D___copy);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D___reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D__from_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D__to_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_bounds);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Domain1D_bounds_line_198);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_component_index);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_component_name);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Domain1D_object_is_not_copyable);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Domain1D_object_is_not_picklable);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_set_bounds);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Domain1D_set_bounds_line_96);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_set_default_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_set_steady_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_set_transient_tolerance);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_steady_abstol);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_steady_reltol);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_tolerances);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Domain1D_tolerances_line_208);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_transient_abstol);
  Py_VISIT(traverse_module_state->__pyx_n_s_Domain1D_transient_reltol);
  Py_VISIT(traverse_module_state->__pyx_n_u_Domain1D_type);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Domain_named_0_not_found);
  Py_VISIT(traverse_module_state->__pyx_n_u_E);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Flame_is_extinct_on_point_grid);
  Py_VISIT(traverse_module_state->__pyx_n_s_FlowBase);
  Py_VISIT(traverse_module_state->__pyx_n_s_FlowBase_get_settings3);
  Py_VISIT(traverse_module_state->__pyx_n_s_FlowBase_set_axisymmetric_flow);
  Py_VISIT(traverse_module_state->__pyx_n_s_FlowBase_set_default_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_FlowBase_set_fixed_temp_profile);
  Py_VISIT(traverse_module_state->__pyx_kp_u_FlowBase_set_fixed_temp_profile_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_FlowBase_set_free_flow);
  Py_VISIT(traverse_module_state->__pyx_n_s_FlowBase_set_transport);
  Py_VISIT(traverse_module_state->__pyx_kp_u_FlowBase_set_transport_Method_t);
  Py_VISIT(traverse_module_state->__pyx_kp_u_FlowBase_settings_Property_gett);
  Py_VISIT(traverse_module_state->__pyx_kp_u_FlowBase_settings_Property_sett);
  Py_VISIT(traverse_module_state->__pyx_n_s_FreeFlow);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Get_a_dictionary_of_the_criteri);
  Py_VISIT(traverse_module_state->__pyx_n_s_IdealGasFlow);
  Py_VISIT(traverse_module_state->__pyx_n_s_ImportError);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Import_of_is_not_implemented);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Initial_solve_failed_Retrying_wi);
  Py_VISIT(traverse_module_state->__pyx_n_s_Inlet1D);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Internal_work_array_value_at_on);
  Py_VISIT(traverse_module_state->__pyx_n_s_IonFlow);
  Py_VISIT(traverse_module_state->__pyx_n_s_IonFlow_set_solving_stage);
  Py_VISIT(traverse_module_state->__pyx_kp_u_IonFlow_set_solving_stage_Method);
  Py_VISIT(traverse_module_state->__pyx_n_s_KeyError);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Kinetics_object_must_be_derived);
  Py_VISIT(traverse_module_state->__pyx_n_s_L);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Maximum_number_of_grid_points_ex);
  Py_VISIT(traverse_module_state->__pyx_n_s_MemoryError);
  Py_VISIT(traverse_module_state->__pyx_n_s_N);
  Py_VISIT(traverse_module_state->__pyx_n_u_None);
  Py_VISIT(traverse_module_state->__pyx_n_s_NotImplementedError);
  Py_VISIT(traverse_module_state->__pyx_n_s_Outlet1D);
  Py_VISIT(traverse_module_state->__pyx_n_s_OutletReservoir1D);
  Py_VISIT(traverse_module_state->__pyx_n_s_P);
  Py_VISIT(traverse_module_state->__pyx_n_s_ReactingSurface1D);
  Py_VISIT(traverse_module_state->__pyx_kp_u_ReactingSurface1D_Starting_in_Ca);
  Py_VISIT(traverse_module_state->__pyx_kp_u_ReactingSurface1D_needs_an_adjac);
  Py_VISIT(traverse_module_state->__pyx_n_s_ReactingSurface1D_set_kinetics);
  Py_VISIT(traverse_module_state->__pyx_kp_u_ReactingSurface1D_set_kinetics_M);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Retrieve_data_and_settings_from);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Return_the_lower_upper_bounds_f);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Return_the_relative_absolute_er);
  Py_VISIT(traverse_module_state->__pyx_n_s_S);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Save_current_simulation_data_to);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Set_a_flat_profile_for_one_compo);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Set_an_initial_estimate_for_a_p);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Set_the_criteria_used_to_refine);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Set_the_fixed_temperature_profil);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Set_the_lower_and_upper_bounds);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Set_the_sequence_of_time_steps_t);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Set_the_value_of_one_component);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Setting_the_boundary_emissivitie);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D__get_indices);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D__get_initial_solution);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_clear_stats);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_domain_index);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_eval);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_extinct);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_get_max_grid_points);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_get_refine_criteria);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_get_refine_criteria_line_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_phase);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_profile);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_profile_line_1101);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_refine);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_restore);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_restore_Argument_loglevel);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_restore_data);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_restore_data_Method_to_be);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_restore_line_1639);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_restore_steady_solution);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_restore_time_stepping_solu);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_save);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_save_Argument_loglevel_is);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_save_line_1592);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_flat_profile);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_set_flat_profile_line_1145);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_grid_min);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_initial_guess);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_interrupt);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_max_grid_points);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_max_jac_age);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_max_time_step);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_min_time_step);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_profile);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_set_profile_line_1120);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_refine_criteria);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_set_refine_criteria_line_1);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_steady_callback);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_time_step);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_time_step_callback);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_time_step_factor);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_set_time_step_line_1243);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_set_value);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_set_value_line_1053);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_show);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_show_solution);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_show_stats);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_solve);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_solve_adjoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_value);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_value_line_1037);
  Py_VISIT(traverse_module_state->__pyx_n_s_Sim1D_work_value);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Sim1D_work_value_line_1084);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Solution_value_at_one_point_par);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Solving_on_point_grid_with_energ);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Solving_on_point_grid_with_energ_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Solving_with_Soret_diffusion);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Solving_with_grid_refinement_ena);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Solving_with_multicomponent_tran);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Solving_with_user_specified_tole);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Spatial_profile_of_one_componen);
  Py_VISIT(traverse_module_state->__pyx_n_s_Surface1D);
  Py_VISIT(traverse_module_state->__pyx_n_s_SymmetryPlane1D);
  Py_VISIT(traverse_module_state->__pyx_n_s_T);
  Py_VISIT(traverse_module_state->__pyx_n_u_T);
  Py_VISIT(traverse_module_state->__pyx_n_s_TPX);
  Py_VISIT(traverse_module_state->__pyx_n_s_TPY);
  Py_VISIT(traverse_module_state->__pyx_n_s_TypeError);
  Py_VISIT(traverse_module_state->__pyx_n_s_UnstrainedFlow);
  Py_VISIT(traverse_module_state->__pyx_n_s_ValueError);
  Py_VISIT(traverse_module_state->__pyx_n_s_WeakrefProxy);
  Py_VISIT(traverse_module_state->__pyx_n_s_X);
  Py_VISIT(traverse_module_state->__pyx_n_s_Y);
  Py_VISIT(traverse_module_state->__pyx_n_s__161);
  Py_VISIT(traverse_module_state->__pyx_kp_u__17);
  Py_VISIT(traverse_module_state->__pyx_n_u__19);
  Py_VISIT(traverse_module_state->__pyx_kp_u__27);
  Py_VISIT(traverse_module_state->__pyx_kp_u__43);
  Py_VISIT(traverse_module_state->__pyx_n_s__44);
  Py_VISIT(traverse_module_state->__pyx_kp_u__8);
  Py_VISIT(traverse_module_state->__pyx_n_s_a);
  Py_VISIT(traverse_module_state->__pyx_n_s_abs);
  Py_VISIT(traverse_module_state->__pyx_n_s_argmax);
  Py_VISIT(traverse_module_state->__pyx_n_s_args);
  Py_VISIT(traverse_module_state->__pyx_n_s_arr);
  Py_VISIT(traverse_module_state->__pyx_n_s_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_ascontiguousarray);
  Py_VISIT(traverse_module_state->__pyx_n_s_asyncio_coroutines);
  Py_VISIT(traverse_module_state->__pyx_n_s_atol);
  Py_VISIT(traverse_module_state->__pyx_n_s_atol_ss_final);
  Py_VISIT(traverse_module_state->__pyx_n_s_atol_ts_final);
  Py_VISIT(traverse_module_state->__pyx_n_s_auto);
  Py_VISIT(traverse_module_state->__pyx_kp_u_axisymmetric_flow);
  Py_VISIT(traverse_module_state->__pyx_n_s_basis);
  Py_VISIT(traverse_module_state->__pyx_n_s_boundary_emissivities);
  Py_VISIT(traverse_module_state->__pyx_n_s_bounds);
  Py_VISIT(traverse_module_state->__pyx_n_s_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_cantera__onedim);
  Py_VISIT(traverse_module_state->__pyx_kp_s_cantera__onedim_pyx);
  Py_VISIT(traverse_module_state->__pyx_n_s_charge);
  Py_VISIT(traverse_module_state->__pyx_n_s_chargetol);
  Py_VISIT(traverse_module_state->__pyx_n_s_class_getitem);
  Py_VISIT(traverse_module_state->__pyx_n_s_clear_stats);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_close);
  Py_VISIT(traverse_module_state->__pyx_n_s_comp);
  Py_VISIT(traverse_module_state->__pyx_n_s_component);
  Py_VISIT(traverse_module_state->__pyx_n_s_component_index);
  Py_VISIT(traverse_module_state->__pyx_n_s_component_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_component_names);
  Py_VISIT(traverse_module_state->__pyx_n_s_composition);
  Py_VISIT(traverse_module_state->__pyx_n_s_compression);
  Py_VISIT(traverse_module_state->__pyx_n_s_copy);
  Py_VISIT(traverse_module_state->__pyx_n_s_curve);
  Py_VISIT(traverse_module_state->__pyx_n_u_curve);
  Py_VISIT(traverse_module_state->__pyx_n_s_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_data);
  Py_VISIT(traverse_module_state->__pyx_n_u_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_default);
  Py_VISIT(traverse_module_state->__pyx_n_s_density);
  Py_VISIT(traverse_module_state->__pyx_n_s_description);
  Py_VISIT(traverse_module_state->__pyx_n_s_dest);
  Py_VISIT(traverse_module_state->__pyx_n_s_dfdp);
  Py_VISIT(traverse_module_state->__pyx_n_s_dgdp);
  Py_VISIT(traverse_module_state->__pyx_n_s_dgdx);
  Py_VISIT(traverse_module_state->__pyx_n_s_dict);
  Py_VISIT(traverse_module_state->__pyx_kp_u_disable);
  Py_VISIT(traverse_module_state->__pyx_n_s_doc);
  Py_VISIT(traverse_module_state->__pyx_n_s_dom);
  Py_VISIT(traverse_module_state->__pyx_n_s_domain);
  Py_VISIT(traverse_module_state->__pyx_n_s_domain_index);
  Py_VISIT(traverse_module_state->__pyx_n_s_domain_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_domains);
  Py_VISIT(traverse_module_state->__pyx_n_s_dot);
  Py_VISIT(traverse_module_state->__pyx_n_s_double);
  Py_VISIT(traverse_module_state->__pyx_n_s_dp);
  Py_VISIT(traverse_module_state->__pyx_n_s_dtype);
  Py_VISIT(traverse_module_state->__pyx_n_s_dz);
  Py_VISIT(traverse_module_state->__pyx_n_s_e);
  Py_VISIT(traverse_module_state->__pyx_n_u_edge);
  Py_VISIT(traverse_module_state->__pyx_n_u_emissivity_left);
  Py_VISIT(traverse_module_state->__pyx_n_u_emissivity_right);
  Py_VISIT(traverse_module_state->__pyx_n_s_empty);
  Py_VISIT(traverse_module_state->__pyx_kp_u_enable);
  Py_VISIT(traverse_module_state->__pyx_n_s_energy_enabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_enumerate);
  Py_VISIT(traverse_module_state->__pyx_n_s_eval);
  Py_VISIT(traverse_module_state->__pyx_n_s_extinct);
  Py_VISIT(traverse_module_state->__pyx_n_s_f);
  Py_VISIT(traverse_module_state->__pyx_n_s_filename);
  Py_VISIT(traverse_module_state->__pyx_n_s_flow_domains);
  Py_VISIT(traverse_module_state->__pyx_n_s_fminus);
  Py_VISIT(traverse_module_state->__pyx_n_s_format);
  Py_VISIT(traverse_module_state->__pyx_n_s_fplus);
  Py_VISIT(traverse_module_state->__pyx_kp_u_free_flow);
  Py_VISIT(traverse_module_state->__pyx_n_s_from_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_g);
  Py_VISIT(traverse_module_state->__pyx_n_s_gas);
  Py_VISIT(traverse_module_state->__pyx_n_u_gas);
  Py_VISIT(traverse_module_state->__pyx_kp_u_gas_flow);
  Py_VISIT(traverse_module_state->__pyx_kp_u_gc);
  Py_VISIT(traverse_module_state->__pyx_n_s_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_get);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_indices);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_initial_solution);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_max_grid_points);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_refine_criteria);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_settings3);
  Py_VISIT(traverse_module_state->__pyx_n_s_getstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_gg);
  Py_VISIT(traverse_module_state->__pyx_n_s_gminus);
  Py_VISIT(traverse_module_state->__pyx_n_s_gplus);
  Py_VISIT(traverse_module_state->__pyx_n_s_grid);
  Py_VISIT(traverse_module_state->__pyx_n_u_grid);
  Py_VISIT(traverse_module_state->__pyx_n_s_have_user_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_header);
  Py_VISIT(traverse_module_state->__pyx_n_s_i);
  Py_VISIT(traverse_module_state->__pyx_n_s_idom);
  Py_VISIT(traverse_module_state->__pyx_n_s_import);
  Py_VISIT(traverse_module_state->__pyx_n_s_index);
  Py_VISIT(traverse_module_state->__pyx_n_s_init);
  Py_VISIT(traverse_module_state->__pyx_n_s_init_subclass);
  Py_VISIT(traverse_module_state->__pyx_n_s_initializing);
  Py_VISIT(traverse_module_state->__pyx_n_u_inlet);
  Py_VISIT(traverse_module_state->__pyx_n_s_interrupts);
  Py_VISIT(traverse_module_state->__pyx_kp_u_ion_flow);
  Py_VISIT(traverse_module_state->__pyx_kp_u_ionized_gas);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_coroutine);
  Py_VISIT(traverse_module_state->__pyx_n_s_isclose);
  Py_VISIT(traverse_module_state->__pyx_kp_u_isenabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_items);
  Py_VISIT(traverse_module_state->__pyx_n_s_j);
  Py_VISIT(traverse_module_state->__pyx_n_s_k);
  Py_VISIT(traverse_module_state->__pyx_n_s_k0);
  Py_VISIT(traverse_module_state->__pyx_n_s_kcomp);
  Py_VISIT(traverse_module_state->__pyx_n_s_key);
  Py_VISIT(traverse_module_state->__pyx_n_s_kin);
  Py_VISIT(traverse_module_state->__pyx_n_s_kwargs);
  Py_VISIT(traverse_module_state->__pyx_n_s_linspace);
  Py_VISIT(traverse_module_state->__pyx_n_s_log);
  Py_VISIT(traverse_module_state->__pyx_n_s_logical_not);
  Py_VISIT(traverse_module_state->__pyx_n_s_loglevel);
  Py_VISIT(traverse_module_state->__pyx_n_s_lower);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_mdot);
  Py_VISIT(traverse_module_state->__pyx_n_s_meta);
  Py_VISIT(traverse_module_state->__pyx_n_s_metaclass);
  Py_VISIT(traverse_module_state->__pyx_kp_u_mixture_averaged);
  Py_VISIT(traverse_module_state->__pyx_n_s_module);
  Py_VISIT(traverse_module_state->__pyx_n_s_msg);
  Py_VISIT(traverse_module_state->__pyx_n_s_multi);
  Py_VISIT(traverse_module_state->__pyx_n_u_multicomponent);
  Py_VISIT(traverse_module_state->__pyx_n_s_n);
  Py_VISIT(traverse_module_state->__pyx_n_s_nPoints);
  Py_VISIT(traverse_module_state->__pyx_n_s_n_components);
  Py_VISIT(traverse_module_state->__pyx_n_s_n_params);
  Py_VISIT(traverse_module_state->__pyx_n_s_n_points);
  Py_VISIT(traverse_module_state->__pyx_n_s_n_species);
  Py_VISIT(traverse_module_state->__pyx_n_s_n_steps);
  Py_VISIT(traverse_module_state->__pyx_n_s_n_vars);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_n_u_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_name_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_VISIT(traverse_module_state->__pyx_n_s_no_op);
  Py_VISIT(traverse_module_state->__pyx_n_u_none);
  Py_VISIT(traverse_module_state->__pyx_n_s_normalize);
  Py_VISIT(traverse_module_state->__pyx_n_s_np);
  Py_VISIT(traverse_module_state->__pyx_n_s_npmax);
  Py_VISIT(traverse_module_state->__pyx_n_s_numpy);
  Py_VISIT(traverse_module_state->__pyx_kp_u_numpy_core_multiarray_failed_to);
  Py_VISIT(traverse_module_state->__pyx_kp_u_numpy_core_umath_failed_to_impor);
  Py_VISIT(traverse_module_state->__pyx_n_s_ones);
  Py_VISIT(traverse_module_state->__pyx_n_s_other_cols);
  Py_VISIT(traverse_module_state->__pyx_n_u_outlet);
  Py_VISIT(traverse_module_state->__pyx_kp_u_outlet_reservoir);
  Py_VISIT(traverse_module_state->__pyx_n_s_overwrite);
  Py_VISIT(traverse_module_state->__pyx_n_s_p);
  Py_VISIT(traverse_module_state->__pyx_n_s_perturb);
  Py_VISIT(traverse_module_state->__pyx_n_s_phase);
  Py_VISIT(traverse_module_state->__pyx_n_s_phase_of_matter);
  Py_VISIT(traverse_module_state->__pyx_n_s_point);
  Py_VISIT(traverse_module_state->__pyx_n_s_pos);
  Py_VISIT(traverse_module_state->__pyx_n_s_pos_vec);
  Py_VISIT(traverse_module_state->__pyx_n_s_positions);
  Py_VISIT(traverse_module_state->__pyx_n_s_prepare);
  Py_VISIT(traverse_module_state->__pyx_n_s_print);
  Py_VISIT(traverse_module_state->__pyx_n_s_print_time);
  Py_VISIT(traverse_module_state->__pyx_n_s_profile);
  Py_VISIT(traverse_module_state->__pyx_n_s_prune);
  Py_VISIT(traverse_module_state->__pyx_n_u_prune);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_vtable);
  Py_VISIT(traverse_module_state->__pyx_n_u_qdot);
  Py_VISIT(traverse_module_state->__pyx_n_s_qualname);
  Py_VISIT(traverse_module_state->__pyx_n_s_r);
  Py_VISIT(traverse_module_state->__pyx_n_s_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_ratio);
  Py_VISIT(traverse_module_state->__pyx_n_u_ratio);
  Py_VISIT(traverse_module_state->__pyx_n_s_rdt);
  Py_VISIT(traverse_module_state->__pyx_kp_u_reacting_surface);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_ex);
  Py_VISIT(traverse_module_state->__pyx_n_s_refine);
  Py_VISIT(traverse_module_state->__pyx_n_s_refine_grid);
  Py_VISIT(traverse_module_state->__pyx_n_s_rel);
  Py_VISIT(traverse_module_state->__pyx_n_s_restore);
  Py_VISIT(traverse_module_state->__pyx_n_s_restore_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_restore_steady_solution);
  Py_VISIT(traverse_module_state->__pyx_n_s_restore_time_stepping_solution);
  Py_VISIT(traverse_module_state->__pyx_n_s_restore_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_return_counts);
  Py_VISIT(traverse_module_state->__pyx_n_s_rtol);
  Py_VISIT(traverse_module_state->__pyx_n_s_rtol_ss_final);
  Py_VISIT(traverse_module_state->__pyx_n_s_rtol_ts_final);
  Py_VISIT(traverse_module_state->__pyx_n_s_save);
  Py_VISIT(traverse_module_state->__pyx_n_s_self);
  Py_VISIT(traverse_module_state->__pyx_n_s_send);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_axisymmetric_flow);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_bounds);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_default_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_fixed_temp_profile);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_flat_profile);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_free_flow);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_grid_min);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_initial_guess);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_interrupt);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_kinetics);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_max_grid_points);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_max_jac_age);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_max_time_step);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_min_time_step);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_profile);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_refine_criteria);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_solving_stage);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_soret);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_steady_callback);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_steady_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_time_step);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_time_step_callback);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_time_step_factor);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_transient_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_transport);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_settings);
  Py_VISIT(traverse_module_state->__pyx_n_s_show);
  Py_VISIT(traverse_module_state->__pyx_n_s_show_solution);
  Py_VISIT(traverse_module_state->__pyx_n_s_show_stats);
  Py_VISIT(traverse_module_state->__pyx_n_s_size);
  Py_VISIT(traverse_module_state->__pyx_n_s_slope);
  Py_VISIT(traverse_module_state->__pyx_n_u_slope);
  Py_VISIT(traverse_module_state->__pyx_kp_u_soln_yaml);
  Py_VISIT(traverse_module_state->__pyx_n_u_solution);
  Py_VISIT(traverse_module_state->__pyx_n_s_solve);
  Py_VISIT(traverse_module_state->__pyx_n_s_solve_adjoint);
  Py_VISIT(traverse_module_state->__pyx_n_s_solve_locals_genexpr);
  Py_VISIT(traverse_module_state->__pyx_n_s_solve_locals_log);
  Py_VISIT(traverse_module_state->__pyx_n_s_solve_locals_restore_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_solve_locals_set_soret);
  Py_VISIT(traverse_module_state->__pyx_n_s_solve_locals_set_transport);
  Py_VISIT(traverse_module_state->__pyx_n_s_solve_multi);
  Py_VISIT(traverse_module_state->__pyx_n_s_solved);
  Py_VISIT(traverse_module_state->__pyx_n_s_solving_stage);
  Py_VISIT(traverse_module_state->__pyx_n_s_soret);
  Py_VISIT(traverse_module_state->__pyx_n_s_soret_doms);
  Py_VISIT(traverse_module_state->__pyx_n_s_soret_enabled);
  Py_VISIT(traverse_module_state->__pyx_n_u_soret_enabled);
  Py_VISIT(traverse_module_state->__pyx_n_s_spc);
  Py_VISIT(traverse_module_state->__pyx_n_s_spec);
  Py_VISIT(traverse_module_state->__pyx_n_s_species);
  Py_VISIT(traverse_module_state->__pyx_n_s_species_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_species_names);
  Py_VISIT(traverse_module_state->__pyx_n_s_split);
  Py_VISIT(traverse_module_state->__pyx_n_s_ss_age);
  Py_VISIT(traverse_module_state->__pyx_n_s_stage);
  Py_VISIT(traverse_module_state->__pyx_n_s_states);
  Py_VISIT(traverse_module_state->__pyx_n_u_steady);
  Py_VISIT(traverse_module_state->__pyx_n_s_steady_abstol);
  Py_VISIT(traverse_module_state->__pyx_n_u_steady_abstol);
  Py_VISIT(traverse_module_state->__pyx_n_s_steady_reltol);
  Py_VISIT(traverse_module_state->__pyx_n_u_steady_reltol);
  Py_VISIT(traverse_module_state->__pyx_n_s_stepsize);
  Py_VISIT(traverse_module_state->__pyx_kp_s_stringsource);
  Py_VISIT(traverse_module_state->__pyx_n_s_super);
  Py_VISIT(traverse_module_state->__pyx_n_s_surface);
  Py_VISIT(traverse_module_state->__pyx_n_u_surface);
  Py_VISIT(traverse_module_state->__pyx_kp_u_symmetry_plane);
  Py_VISIT(traverse_module_state->__pyx_n_s_t);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  Py_VISIT(traverse_module_state->__pyx_n_s_tfactor);
  Py_VISIT(traverse_module_state->__pyx_n_s_throw);
  Py_VISIT(traverse_module_state->__pyx_n_s_to_array);
  Py_VISIT(traverse_module_state->__pyx_n_s_tolerances);
  Py_VISIT(traverse_module_state->__pyx_n_s_transient_abstol);
  Py_VISIT(traverse_module_state->__pyx_n_u_transient_abstol);
  Py_VISIT(traverse_module_state->__pyx_n_s_transient_reltol);
  Py_VISIT(traverse_module_state->__pyx_n_u_transient_reltol);
  Py_VISIT(traverse_module_state->__pyx_n_s_transport);
  Py_VISIT(traverse_module_state->__pyx_n_s_transport_model);
  Py_VISIT(traverse_module_state->__pyx_n_s_ts_age);
  Py_VISIT(traverse_module_state->__pyx_n_s_tsmax);
  Py_VISIT(traverse_module_state->__pyx_n_s_tsmin);
  Py_VISIT(traverse_module_state->__pyx_n_s_unique);
  Py_VISIT(traverse_module_state->__pyx_kp_u_unstrained_flow);
  Py_VISIT(traverse_module_state->__pyx_n_s_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_upper);
  Py_VISIT(traverse_module_state->__pyx_n_s_utils);
  Py_VISIT(traverse_module_state->__pyx_n_s_v);
  Py_VISIT(traverse_module_state->__pyx_n_s_val);
  Py_VISIT(traverse_module_state->__pyx_n_s_val_vec);
  Py_VISIT(traverse_module_state->__pyx_n_s_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_values);
  Py_VISIT(traverse_module_state->__pyx_n_u_velocity);
  Py_VISIT(traverse_module_state->__pyx_n_s_warn);
  Py_VISIT(traverse_module_state->__pyx_n_s_warnings);
  Py_VISIT(traverse_module_state->__pyx_n_s_work_value);
  Py_VISIT(traverse_module_state->__pyx_n_s_x);
  Py_VISIT(traverse_module_state->__pyx_n_s_xi);
  Py_VISIT(traverse_module_state->__pyx_n_s_y);
  Py_VISIT(traverse_module_state->__pyx_n_s_zip);
  Py_VISIT(traverse_module_state->__pyx_n_s_zmax);
  Py_VISIT(traverse_module_state->__pyx_n_s_zmin);
  Py_VISIT(traverse_module_state->__pyx_float_0_0);
  Py_VISIT(traverse_module_state->__pyx_float_0_8);
  Py_VISIT(traverse_module_state->__pyx_float_1_0);
  Py_VISIT(traverse_module_state->__pyx_float_0_05);
  Py_VISIT(traverse_module_state->__pyx_float_10_0);
  Py_VISIT(traverse_module_state->__pyx_float_1eneg_4);
  Py_VISIT(traverse_module_state->__pyx_float_1eneg_5);
  Py_VISIT(traverse_module_state->__pyx_float_1eneg_9);
  Py_VISIT(traverse_module_state->__pyx_float_1eneg_11);
  Py_VISIT(traverse_module_state->__pyx_float_1eneg_16);
  Py_VISIT(traverse_module_state->__pyx_float_1eneg_20);
  Py_VISIT(traverse_module_state->__pyx_int_0);
  Py_VISIT(traverse_module_state->__pyx_int_1);
  Py_VISIT(traverse_module_state->__pyx_int_2);
  Py_VISIT(traverse_module_state->__pyx_int_3);
  Py_VISIT(traverse_module_state->__pyx_int_12);
  Py_VISIT(traverse_module_state->__pyx_int_24);
  Py_VISIT(traverse_module_state->__pyx_int_48);
  Py_VISIT(traverse_module_state->__pyx_int_neg_1);
  Py_VISIT(traverse_module_state->__pyx_tuple_);
  Py_VISIT(traverse_module_state->__pyx_tuple__2);
  Py_VISIT(traverse_module_state->__pyx_tuple__3);
  Py_VISIT(traverse_module_state->__pyx_tuple__4);
  Py_VISIT(traverse_module_state->__pyx_tuple__5);
  Py_VISIT(traverse_module_state->__pyx_tuple__6);
  Py_VISIT(traverse_module_state->__pyx_tuple__7);
  Py_VISIT(traverse_module_state->__pyx_tuple__9);
  Py_VISIT(traverse_module_state->__pyx_slice__20);
  Py_VISIT(traverse_module_state->__pyx_slice__26);
  Py_VISIT(traverse_module_state->__pyx_tuple__10);
  Py_VISIT(traverse_module_state->__pyx_tuple__11);
  Py_VISIT(traverse_module_state->__pyx_tuple__12);
  Py_VISIT(traverse_module_state->__pyx_tuple__13);
  Py_VISIT(traverse_module_state->__pyx_tuple__14);
  Py_VISIT(traverse_module_state->__pyx_tuple__15);
  Py_VISIT(traverse_module_state->__pyx_tuple__16);
  Py_VISIT(traverse_module_state->__pyx_tuple__18);
  Py_VISIT(traverse_module_state->__pyx_tuple__21);
  Py_VISIT(traverse_module_state->__pyx_tuple__22);
  Py_VISIT(traverse_module_state->__pyx_tuple__23);
  Py_VISIT(traverse_module_state->__pyx_tuple__24);
  Py_VISIT(traverse_module_state->__pyx_tuple__25);
  Py_VISIT(traverse_module_state->__pyx_tuple__28);
  Py_VISIT(traverse_module_state->__pyx_tuple__30);
  Py_VISIT(traverse_module_state->__pyx_tuple__32);
  Py_VISIT(traverse_module_state->__pyx_tuple__34);
  Py_VISIT(traverse_module_state->__pyx_tuple__36);
  Py_VISIT(traverse_module_state->__pyx_tuple__37);
  Py_VISIT(traverse_module_state->__pyx_tuple__38);
  Py_VISIT(traverse_module_state->__pyx_tuple__39);
  Py_VISIT(traverse_module_state->__pyx_tuple__40);
  Py_VISIT(traverse_module_state->__pyx_tuple__41);
  Py_VISIT(traverse_module_state->__pyx_tuple__42);
  Py_VISIT(traverse_module_state->__pyx_tuple__45);
  Py_VISIT(traverse_module_state->__pyx_tuple__47);
  Py_VISIT(traverse_module_state->__pyx_tuple__49);
  Py_VISIT(traverse_module_state->__pyx_tuple__51);
  Py_VISIT(traverse_module_state->__pyx_tuple__53);
  Py_VISIT(traverse_module_state->__pyx_tuple__55);
  Py_VISIT(traverse_module_state->__pyx_tuple__58);
  Py_VISIT(traverse_module_state->__pyx_tuple__60);
  Py_VISIT(traverse_module_state->__pyx_tuple__62);
  Py_VISIT(traverse_module_state->__pyx_tuple__65);
  Py_VISIT(traverse_module_state->__pyx_tuple__71);
  Py_VISIT(traverse_module_state->__pyx_tuple__73);
  Py_VISIT(traverse_module_state->__pyx_tuple__75);
  Py_VISIT(traverse_module_state->__pyx_tuple__77);
  Py_VISIT(traverse_module_state->__pyx_tuple__82);
  Py_VISIT(traverse_module_state->__pyx_tuple__84);
  Py_VISIT(traverse_module_state->__pyx_tuple__86);
  Py_VISIT(traverse_module_state->__pyx_tuple__90);
  Py_VISIT(traverse_module_state->__pyx_tuple__92);
  Py_VISIT(traverse_module_state->__pyx_tuple__94);
  Py_VISIT(traverse_module_state->__pyx_tuple__96);
  Py_VISIT(traverse_module_state->__pyx_tuple__98);
  Py_VISIT(traverse_module_state->__pyx_tuple__100);
  Py_VISIT(traverse_module_state->__pyx_tuple__102);
  Py_VISIT(traverse_module_state->__pyx_tuple__104);
  Py_VISIT(traverse_module_state->__pyx_tuple__106);
  Py_VISIT(traverse_module_state->__pyx_tuple__108);
  Py_VISIT(traverse_module_state->__pyx_tuple__112);
  Py_VISIT(traverse_module_state->__pyx_tuple__114);
  Py_VISIT(traverse_module_state->__pyx_tuple__118);
  Py_VISIT(traverse_module_state->__pyx_tuple__120);
  Py_VISIT(traverse_module_state->__pyx_tuple__121);
  Py_VISIT(traverse_module_state->__pyx_tuple__123);
  Py_VISIT(traverse_module_state->__pyx_tuple__124);
  Py_VISIT(traverse_module_state->__pyx_tuple__126);
  Py_VISIT(traverse_module_state->__pyx_tuple__127);
  Py_VISIT(traverse_module_state->__pyx_tuple__129);
  Py_VISIT(traverse_module_state->__pyx_tuple__131);
  Py_VISIT(traverse_module_state->__pyx_tuple__133);
  Py_VISIT(traverse_module_state->__pyx_tuple__135);
  Py_VISIT(traverse_module_state->__pyx_tuple__137);
  Py_VISIT(traverse_module_state->__pyx_tuple__139);
  Py_VISIT(traverse_module_state->__pyx_tuple__141);
  Py_VISIT(traverse_module_state->__pyx_tuple__142);
  Py_VISIT(traverse_module_state->__pyx_tuple__144);
  Py_VISIT(traverse_module_state->__pyx_tuple__147);
  Py_VISIT(traverse_module_state->__pyx_tuple__149);
  Py_VISIT(traverse_module_state->__pyx_tuple__151);
  Py_VISIT(traverse_module_state->__pyx_tuple__153);
  Py_VISIT(traverse_module_state->__pyx_tuple__154);
  Py_VISIT(traverse_module_state->__pyx_tuple__156);
  Py_VISIT(traverse_module_state->__pyx_tuple__159);
  Py_VISIT(traverse_module_state->__pyx_codeobj__29);
  Py_VISIT(traverse_module_state->__pyx_codeobj__31);
  Py_VISIT(traverse_module_state->__pyx_codeobj__33);
  Py_VISIT(traverse_module_state->__pyx_codeobj__35);
  Py_VISIT(traverse_module_state->__pyx_codeobj__46);
  Py_VISIT(traverse_module_state->__pyx_codeobj__48);
  Py_VISIT(traverse_module_state->__pyx_codeobj__50);
  Py_VISIT(traverse_module_state->__pyx_codeobj__52);
  Py_VISIT(traverse_module_state->__pyx_codeobj__54);
  Py_VISIT(traverse_module_state->__pyx_codeobj__56);
  Py_VISIT(traverse_module_state->__pyx_codeobj__57);
  Py_VISIT(traverse_module_state->__pyx_codeobj__59);
  Py_VISIT(traverse_module_state->__pyx_codeobj__61);
  Py_VISIT(traverse_module_state->__pyx_codeobj__63);
  Py_VISIT(traverse_module_state->__pyx_codeobj__64);
  Py_VISIT(traverse_module_state->__pyx_codeobj__66);
  Py_VISIT(traverse_module_state->__pyx_codeobj__67);
  Py_VISIT(traverse_module_state->__pyx_codeobj__68);
  Py_VISIT(traverse_module_state->__pyx_codeobj__69);
  Py_VISIT(traverse_module_state->__pyx_codeobj__70);
  Py_VISIT(traverse_module_state->__pyx_codeobj__72);
  Py_VISIT(traverse_module_state->__pyx_codeobj__74);
  Py_VISIT(traverse_module_state->__pyx_codeobj__76);
  Py_VISIT(traverse_module_state->__pyx_codeobj__78);
  Py_VISIT(traverse_module_state->__pyx_codeobj__79);
  Py_VISIT(traverse_module_state->__pyx_codeobj__80);
  Py_VISIT(traverse_module_state->__pyx_codeobj__81);
  Py_VISIT(traverse_module_state->__pyx_codeobj__83);
  Py_VISIT(traverse_module_state->__pyx_codeobj__85);
  Py_VISIT(traverse_module_state->__pyx_codeobj__87);
  Py_VISIT(traverse_module_state->__pyx_codeobj__88);
  Py_VISIT(traverse_module_state->__pyx_codeobj__89);
  Py_VISIT(traverse_module_state->__pyx_codeobj__91);
  Py_VISIT(traverse_module_state->__pyx_codeobj__93);
  Py_VISIT(traverse_module_state->__pyx_codeobj__95);
  Py_VISIT(traverse_module_state->__pyx_codeobj__97);
  Py_VISIT(traverse_module_state->__pyx_codeobj__99);
  Py_VISIT(traverse_module_state->__pyx_codeobj__101);
  Py_VISIT(traverse_module_state->__pyx_codeobj__103);
  Py_VISIT(traverse_module_state->__pyx_codeobj__105);
  Py_VISIT(traverse_module_state->__pyx_codeobj__107);
  Py_VISIT(traverse_module_state->__pyx_codeobj__109);
  Py_VISIT(traverse_module_state->__pyx_codeobj__110);
  Py_VISIT(traverse_module_state->__pyx_codeobj__111);
  Py_VISIT(traverse_module_state->__pyx_codeobj__113);
  Py_VISIT(traverse_module_state->__pyx_codeobj__115);
  Py_VISIT(traverse_module_state->__pyx_codeobj__116);
  Py_VISIT(traverse_module_state->__pyx_codeobj__117);
  Py_VISIT(traverse_module_state->__pyx_codeobj__119);
  Py_VISIT(traverse_module_state->__pyx_codeobj__122);
  Py_VISIT(traverse_module_state->__pyx_codeobj__125);
  Py_VISIT(traverse_module_state->__pyx_codeobj__128);
  Py_VISIT(traverse_module_state->__pyx_codeobj__130);
  Py_VISIT(traverse_module_state->__pyx_codeobj__132);
  Py_VISIT(traverse_module_state->__pyx_codeobj__134);
  Py_VISIT(traverse_module_state->__pyx_codeobj__136);
  Py_VISIT(traverse_module_state->__pyx_codeobj__138);
  Py_VISIT(traverse_module_state->__pyx_codeobj__140);
  Py_VISIT(traverse_module_state->__pyx_codeobj__143);
  Py_VISIT(traverse_module_state->__pyx_codeobj__145);
  Py_VISIT(traverse_module_state->__pyx_codeobj__146);
  Py_VISIT(traverse_module_state->__pyx_codeobj__148);
  Py_VISIT(traverse_module_state->__pyx_codeobj__150);
  Py_VISIT(traverse_module_state->__pyx_codeobj__152);
  Py_VISIT(traverse_module_state->__pyx_codeobj__155);
  Py_VISIT(traverse_module_state->__pyx_codeobj__157);
  Py_VISIT(traverse_module_state->__pyx_codeobj__158);
  Py_VISIT(traverse_module_state->__pyx_codeobj__160);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#define __pyx_d __pyx_mstate_global->__pyx_d
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#ifdef __Pyx_Generator_USED
#define __pyx_GeneratorType __pyx_mstate_global->__pyx_GeneratorType
#endif
#ifdef __Pyx_IterableCoroutine_USED
#define __pyx_IterableCoroutineType __pyx_mstate_global->__pyx_IterableCoroutineType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineAwaitType __pyx_mstate_global->__pyx_CoroutineAwaitType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineType __pyx_mstate_global->__pyx_CoroutineType
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_4type_type __pyx_mstate_global->__pyx_ptype_7cpython_4type_type
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_4bool_bool __pyx_mstate_global->__pyx_ptype_7cpython_4bool_bool
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_7complex_complex __pyx_mstate_global->__pyx_ptype_7cpython_7complex_complex
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_5numpy_dtype __pyx_mstate_global->__pyx_ptype_5numpy_dtype
#define __pyx_ptype_5numpy_flatiter __pyx_mstate_global->__pyx_ptype_5numpy_flatiter
#define __pyx_ptype_5numpy_broadcast __pyx_mstate_global->__pyx_ptype_5numpy_broadcast
#define __pyx_ptype_5numpy_ndarray __pyx_mstate_global->__pyx_ptype_5numpy_ndarray
#define __pyx_ptype_5numpy_generic __pyx_mstate_global->__pyx_ptype_5numpy_generic
#define __pyx_ptype_5numpy_number __pyx_mstate_global->__pyx_ptype_5numpy_number
#define __pyx_ptype_5numpy_integer __pyx_mstate_global->__pyx_ptype_5numpy_integer
#define __pyx_ptype_5numpy_signedinteger __pyx_mstate_global->__pyx_ptype_5numpy_signedinteger
#define __pyx_ptype_5numpy_unsignedinteger __pyx_mstate_global->__pyx_ptype_5numpy_unsignedinteger
#define __pyx_ptype_5numpy_inexact __pyx_mstate_global->__pyx_ptype_5numpy_inexact
#define __pyx_ptype_5numpy_floating __pyx_mstate_global->__pyx_ptype_5numpy_floating
#define __pyx_ptype_5numpy_complexfloating __pyx_mstate_global->__pyx_ptype_5numpy_complexfloating
#define __pyx_ptype_5numpy_flexible __pyx_mstate_global->__pyx_ptype_5numpy_flexible
#define __pyx_ptype_5numpy_character __pyx_mstate_global->__pyx_ptype_5numpy_character
#define __pyx_ptype_5numpy_ufunc __pyx_mstate_global->__pyx_ptype_5numpy_ufunc
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_5func1_Func1 __pyx_mstate_global->__pyx_ptype_7cantera_5func1_Func1
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_5units_Units __pyx_mstate_global->__pyx_ptype_7cantera_5units_Units
#define __pyx_ptype_7cantera_5units_UnitStack __pyx_mstate_global->__pyx_ptype_7cantera_5units_UnitStack
#define __pyx_ptype_7cantera_5units_UnitSystem __pyx_mstate_global->__pyx_ptype_7cantera_5units_UnitSystem
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_12solutionbase__SolutionBase __pyx_mstate_global->__pyx_ptype_7cantera_12solutionbase__SolutionBase
#define __pyx_ptype_7cantera_12solutionbase_SolutionArrayBase __pyx_mstate_global->__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_8kinetics_Kinetics __pyx_mstate_global->__pyx_ptype_7cantera_8kinetics_Kinetics
#define __pyx_ptype_7cantera_8kinetics_InterfaceKinetics __pyx_mstate_global->__pyx_ptype_7cantera_8kinetics_InterfaceKinetics
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_6thermo_Species __pyx_mstate_global->__pyx_ptype_7cantera_6thermo_Species
#define __pyx_ptype_7cantera_6thermo_ThermoPhase __pyx_mstate_global->__pyx_ptype_7cantera_6thermo_ThermoPhase
#define __pyx_ptype_7cantera_6thermo_InterfacePhase __pyx_mstate_global->__pyx_ptype_7cantera_6thermo_InterfacePhase
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_6_utils_AnyMap __pyx_mstate_global->__pyx_ptype_7cantera_6_utils_AnyMap
#if CYTHON_USE_MODULE_STATE
#define __pyx_type_7cantera_7_onedim_Domain1D __pyx_mstate_global->__pyx_type_7cantera_7_onedim_Domain1D
#define __pyx_type_7cantera_7_onedim_Boundary1D __pyx_mstate_global->__pyx_type_7cantera_7_onedim_Boundary1D
#define __pyx_type_7cantera_7_onedim_ReactingSurface1D __pyx_mstate_global->__pyx_type_7cantera_7_onedim_ReactingSurface1D
#define __pyx_type_7cantera_7_onedim__FlowBase __pyx_mstate_global->__pyx_type_7cantera_7_onedim__FlowBase
#define __pyx_type_7cantera_7_onedim_Sim1D __pyx_mstate_global->__pyx_type_7cantera_7_onedim_Sim1D
#define __pyx_type_7cantera_7_onedim_Inlet1D __pyx_mstate_global->__pyx_type_7cantera_7_onedim_Inlet1D
#define __pyx_type_7cantera_7_onedim_Outlet1D __pyx_mstate_global->__pyx_type_7cantera_7_onedim_Outlet1D
#define __pyx_type_7cantera_7_onedim_OutletReservoir1D __pyx_mstate_global->__pyx_type_7cantera_7_onedim_OutletReservoir1D
#define __pyx_type_7cantera_7_onedim_SymmetryPlane1D __pyx_mstate_global->__pyx_type_7cantera_7_onedim_SymmetryPlane1D
#define __pyx_type_7cantera_7_onedim_Surface1D __pyx_mstate_global->__pyx_type_7cantera_7_onedim_Surface1D
#define __pyx_type_7cantera_7_onedim_FreeFlow __pyx_mstate_global->__pyx_type_7cantera_7_onedim_FreeFlow
#define __pyx_type_7cantera_7_onedim_UnstrainedFlow __pyx_mstate_global->__pyx_type_7cantera_7_onedim_UnstrainedFlow
#define __pyx_type_7cantera_7_onedim_AxisymmetricFlow __pyx_mstate_global->__pyx_type_7cantera_7_onedim_AxisymmetricFlow
#define __pyx_type_7cantera_7_onedim_IdealGasFlow __pyx_mstate_global->__pyx_type_7cantera_7_onedim_IdealGasFlow
#define __pyx_type_7cantera_7_onedim_IonFlow __pyx_mstate_global->__pyx_type_7cantera_7_onedim_IonFlow
#define __pyx_type_7cantera_7_onedim___pyx_scope_struct__solve __pyx_mstate_global->__pyx_type_7cantera_7_onedim___pyx_scope_struct__solve
#define __pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr __pyx_mstate_global->__pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr
#endif
#define __pyx_ptype_7cantera_7_onedim_Domain1D __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_Domain1D
#define __pyx_ptype_7cantera_7_onedim_Boundary1D __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_Boundary1D
#define __pyx_ptype_7cantera_7_onedim_ReactingSurface1D __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_ReactingSurface1D
#define __pyx_ptype_7cantera_7_onedim__FlowBase __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim__FlowBase
#define __pyx_ptype_7cantera_7_onedim_Sim1D __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_Sim1D
#define __pyx_ptype_7cantera_7_onedim_Inlet1D __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_Inlet1D
#define __pyx_ptype_7cantera_7_onedim_Outlet1D __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_Outlet1D
#define __pyx_ptype_7cantera_7_onedim_OutletReservoir1D __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_OutletReservoir1D
#define __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_SymmetryPlane1D
#define __pyx_ptype_7cantera_7_onedim_Surface1D __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_Surface1D
#define __pyx_ptype_7cantera_7_onedim_FreeFlow __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_FreeFlow
#define __pyx_ptype_7cantera_7_onedim_UnstrainedFlow __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_UnstrainedFlow
#define __pyx_ptype_7cantera_7_onedim_AxisymmetricFlow __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_AxisymmetricFlow
#define __pyx_ptype_7cantera_7_onedim_IdealGasFlow __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_IdealGasFlow
#define __pyx_ptype_7cantera_7_onedim_IonFlow __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim_IonFlow
#define __pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve
#define __pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr __pyx_mstate_global->__pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr
#define __pyx_kp_u_78s __pyx_mstate_global->__pyx_kp_u_78s
#define __pyx_n_s_AssertionError __pyx_mstate_global->__pyx_n_s_AssertionError
#define __pyx_n_s_AxisymmetricFlow __pyx_mstate_global->__pyx_n_s_AxisymmetricFlow
#define __pyx_n_s_Boundary1D __pyx_mstate_global->__pyx_n_s_Boundary1D
#define __pyx_kp_u_Can_t_instantiate_abstract_class __pyx_mstate_global->__pyx_kp_u_Can_t_instantiate_abstract_class
#define __pyx_kp_u_Can_t_instantiate_abstract_class_2 __pyx_mstate_global->__pyx_kp_u_Can_t_instantiate_abstract_class_2
#define __pyx_n_s_CanteraError __pyx_mstate_global->__pyx_n_s_CanteraError
#define __pyx_kp_u_Class_IdealGasFlow_to_be_removed __pyx_mstate_global->__pyx_kp_u_Class_IdealGasFlow_to_be_removed
#define __pyx_kp_u_Class_IonFlow_to_be_removed_afte __pyx_mstate_global->__pyx_kp_u_Class_IonFlow_to_be_removed_afte
#define __pyx_kp_u_Could_not_find_a_solution_for_th __pyx_mstate_global->__pyx_kp_u_Could_not_find_a_solution_for_th
#define __pyx_n_s_D __pyx_mstate_global->__pyx_n_s_D
#define __pyx_n_s_DeprecationWarning __pyx_mstate_global->__pyx_n_s_DeprecationWarning
#define __pyx_n_s_Domain1D __pyx_mstate_global->__pyx_n_s_Domain1D
#define __pyx_n_s_Domain1D___copy __pyx_mstate_global->__pyx_n_s_Domain1D___copy
#define __pyx_n_s_Domain1D___reduce __pyx_mstate_global->__pyx_n_s_Domain1D___reduce
#define __pyx_n_s_Domain1D__from_array __pyx_mstate_global->__pyx_n_s_Domain1D__from_array
#define __pyx_n_s_Domain1D__to_array __pyx_mstate_global->__pyx_n_s_Domain1D__to_array
#define __pyx_n_s_Domain1D_bounds __pyx_mstate_global->__pyx_n_s_Domain1D_bounds
#define __pyx_kp_u_Domain1D_bounds_line_198 __pyx_mstate_global->__pyx_kp_u_Domain1D_bounds_line_198
#define __pyx_n_s_Domain1D_component_index __pyx_mstate_global->__pyx_n_s_Domain1D_component_index
#define __pyx_n_s_Domain1D_component_name __pyx_mstate_global->__pyx_n_s_Domain1D_component_name
#define __pyx_kp_u_Domain1D_object_is_not_copyable __pyx_mstate_global->__pyx_kp_u_Domain1D_object_is_not_copyable
#define __pyx_kp_u_Domain1D_object_is_not_picklable __pyx_mstate_global->__pyx_kp_u_Domain1D_object_is_not_picklable
#define __pyx_n_s_Domain1D_set_bounds __pyx_mstate_global->__pyx_n_s_Domain1D_set_bounds
#define __pyx_kp_u_Domain1D_set_bounds_line_96 __pyx_mstate_global->__pyx_kp_u_Domain1D_set_bounds_line_96
#define __pyx_n_s_Domain1D_set_default_tolerances __pyx_mstate_global->__pyx_n_s_Domain1D_set_default_tolerances
#define __pyx_n_s_Domain1D_set_steady_tolerances __pyx_mstate_global->__pyx_n_s_Domain1D_set_steady_tolerances
#define __pyx_n_s_Domain1D_set_transient_tolerance __pyx_mstate_global->__pyx_n_s_Domain1D_set_transient_tolerance
#define __pyx_n_s_Domain1D_steady_abstol __pyx_mstate_global->__pyx_n_s_Domain1D_steady_abstol
#define __pyx_n_s_Domain1D_steady_reltol __pyx_mstate_global->__pyx_n_s_Domain1D_steady_reltol
#define __pyx_n_s_Domain1D_tolerances __pyx_mstate_global->__pyx_n_s_Domain1D_tolerances
#define __pyx_kp_u_Domain1D_tolerances_line_208 __pyx_mstate_global->__pyx_kp_u_Domain1D_tolerances_line_208
#define __pyx_n_s_Domain1D_transient_abstol __pyx_mstate_global->__pyx_n_s_Domain1D_transient_abstol
#define __pyx_n_s_Domain1D_transient_reltol __pyx_mstate_global->__pyx_n_s_Domain1D_transient_reltol
#define __pyx_n_u_Domain1D_type __pyx_mstate_global->__pyx_n_u_Domain1D_type
#define __pyx_kp_u_Domain_named_0_not_found __pyx_mstate_global->__pyx_kp_u_Domain_named_0_not_found
#define __pyx_n_u_E __pyx_mstate_global->__pyx_n_u_E
#define __pyx_kp_u_Flame_is_extinct_on_point_grid __pyx_mstate_global->__pyx_kp_u_Flame_is_extinct_on_point_grid
#define __pyx_n_s_FlowBase __pyx_mstate_global->__pyx_n_s_FlowBase
#define __pyx_n_s_FlowBase_get_settings3 __pyx_mstate_global->__pyx_n_s_FlowBase_get_settings3
#define __pyx_n_s_FlowBase_set_axisymmetric_flow __pyx_mstate_global->__pyx_n_s_FlowBase_set_axisymmetric_flow
#define __pyx_n_s_FlowBase_set_default_tolerances __pyx_mstate_global->__pyx_n_s_FlowBase_set_default_tolerances
#define __pyx_n_s_FlowBase_set_fixed_temp_profile __pyx_mstate_global->__pyx_n_s_FlowBase_set_fixed_temp_profile
#define __pyx_kp_u_FlowBase_set_fixed_temp_profile_2 __pyx_mstate_global->__pyx_kp_u_FlowBase_set_fixed_temp_profile_2
#define __pyx_n_s_FlowBase_set_free_flow __pyx_mstate_global->__pyx_n_s_FlowBase_set_free_flow
#define __pyx_n_s_FlowBase_set_transport __pyx_mstate_global->__pyx_n_s_FlowBase_set_transport
#define __pyx_kp_u_FlowBase_set_transport_Method_t __pyx_mstate_global->__pyx_kp_u_FlowBase_set_transport_Method_t
#define __pyx_kp_u_FlowBase_settings_Property_gett __pyx_mstate_global->__pyx_kp_u_FlowBase_settings_Property_gett
#define __pyx_kp_u_FlowBase_settings_Property_sett __pyx_mstate_global->__pyx_kp_u_FlowBase_settings_Property_sett
#define __pyx_n_s_FreeFlow __pyx_mstate_global->__pyx_n_s_FreeFlow
#define __pyx_kp_u_Get_a_dictionary_of_the_criteri __pyx_mstate_global->__pyx_kp_u_Get_a_dictionary_of_the_criteri
#define __pyx_n_s_IdealGasFlow __pyx_mstate_global->__pyx_n_s_IdealGasFlow
#define __pyx_n_s_ImportError __pyx_mstate_global->__pyx_n_s_ImportError
#define __pyx_kp_u_Import_of_is_not_implemented __pyx_mstate_global->__pyx_kp_u_Import_of_is_not_implemented
#define __pyx_kp_u_Initial_solve_failed_Retrying_wi __pyx_mstate_global->__pyx_kp_u_Initial_solve_failed_Retrying_wi
#define __pyx_n_s_Inlet1D __pyx_mstate_global->__pyx_n_s_Inlet1D
#define __pyx_kp_u_Internal_work_array_value_at_on __pyx_mstate_global->__pyx_kp_u_Internal_work_array_value_at_on
#define __pyx_n_s_IonFlow __pyx_mstate_global->__pyx_n_s_IonFlow
#define __pyx_n_s_IonFlow_set_solving_stage __pyx_mstate_global->__pyx_n_s_IonFlow_set_solving_stage
#define __pyx_kp_u_IonFlow_set_solving_stage_Method __pyx_mstate_global->__pyx_kp_u_IonFlow_set_solving_stage_Method
#define __pyx_n_s_KeyError __pyx_mstate_global->__pyx_n_s_KeyError
#define __pyx_kp_u_Kinetics_object_must_be_derived __pyx_mstate_global->__pyx_kp_u_Kinetics_object_must_be_derived
#define __pyx_n_s_L __pyx_mstate_global->__pyx_n_s_L
#define __pyx_kp_u_Maximum_number_of_grid_points_ex __pyx_mstate_global->__pyx_kp_u_Maximum_number_of_grid_points_ex
#define __pyx_n_s_MemoryError __pyx_mstate_global->__pyx_n_s_MemoryError
#define __pyx_n_s_N __pyx_mstate_global->__pyx_n_s_N
#define __pyx_n_u_None __pyx_mstate_global->__pyx_n_u_None
#define __pyx_n_s_NotImplementedError __pyx_mstate_global->__pyx_n_s_NotImplementedError
#define __pyx_n_s_Outlet1D __pyx_mstate_global->__pyx_n_s_Outlet1D
#define __pyx_n_s_OutletReservoir1D __pyx_mstate_global->__pyx_n_s_OutletReservoir1D
#define __pyx_n_s_P __pyx_mstate_global->__pyx_n_s_P
#define __pyx_n_s_ReactingSurface1D __pyx_mstate_global->__pyx_n_s_ReactingSurface1D
#define __pyx_kp_u_ReactingSurface1D_Starting_in_Ca __pyx_mstate_global->__pyx_kp_u_ReactingSurface1D_Starting_in_Ca
#define __pyx_kp_u_ReactingSurface1D_needs_an_adjac __pyx_mstate_global->__pyx_kp_u_ReactingSurface1D_needs_an_adjac
#define __pyx_n_s_ReactingSurface1D_set_kinetics __pyx_mstate_global->__pyx_n_s_ReactingSurface1D_set_kinetics
#define __pyx_kp_u_ReactingSurface1D_set_kinetics_M __pyx_mstate_global->__pyx_kp_u_ReactingSurface1D_set_kinetics_M
#define __pyx_kp_u_Retrieve_data_and_settings_from __pyx_mstate_global->__pyx_kp_u_Retrieve_data_and_settings_from
#define __pyx_kp_u_Return_the_lower_upper_bounds_f __pyx_mstate_global->__pyx_kp_u_Return_the_lower_upper_bounds_f
#define __pyx_kp_u_Return_the_relative_absolute_er __pyx_mstate_global->__pyx_kp_u_Return_the_relative_absolute_er
#define __pyx_n_s_S __pyx_mstate_global->__pyx_n_s_S
#define __pyx_kp_u_Save_current_simulation_data_to __pyx_mstate_global->__pyx_kp_u_Save_current_simulation_data_to
#define __pyx_kp_u_Set_a_flat_profile_for_one_compo __pyx_mstate_global->__pyx_kp_u_Set_a_flat_profile_for_one_compo
#define __pyx_kp_u_Set_an_initial_estimate_for_a_p __pyx_mstate_global->__pyx_kp_u_Set_an_initial_estimate_for_a_p
#define __pyx_kp_u_Set_the_criteria_used_to_refine __pyx_mstate_global->__pyx_kp_u_Set_the_criteria_used_to_refine
#define __pyx_kp_u_Set_the_fixed_temperature_profil __pyx_mstate_global->__pyx_kp_u_Set_the_fixed_temperature_profil
#define __pyx_kp_u_Set_the_lower_and_upper_bounds __pyx_mstate_global->__pyx_kp_u_Set_the_lower_and_upper_bounds
#define __pyx_kp_u_Set_the_sequence_of_time_steps_t __pyx_mstate_global->__pyx_kp_u_Set_the_sequence_of_time_steps_t
#define __pyx_kp_u_Set_the_value_of_one_component __pyx_mstate_global->__pyx_kp_u_Set_the_value_of_one_component
#define __pyx_kp_u_Setting_the_boundary_emissivitie __pyx_mstate_global->__pyx_kp_u_Setting_the_boundary_emissivitie
#define __pyx_n_s_Sim1D __pyx_mstate_global->__pyx_n_s_Sim1D
#define __pyx_n_s_Sim1D___reduce_cython __pyx_mstate_global->__pyx_n_s_Sim1D___reduce_cython
#define __pyx_n_s_Sim1D___setstate_cython __pyx_mstate_global->__pyx_n_s_Sim1D___setstate_cython
#define __pyx_n_s_Sim1D__get_indices __pyx_mstate_global->__pyx_n_s_Sim1D__get_indices
#define __pyx_n_s_Sim1D__get_initial_solution __pyx_mstate_global->__pyx_n_s_Sim1D__get_initial_solution
#define __pyx_n_s_Sim1D_clear_stats __pyx_mstate_global->__pyx_n_s_Sim1D_clear_stats
#define __pyx_n_s_Sim1D_domain_index __pyx_mstate_global->__pyx_n_s_Sim1D_domain_index
#define __pyx_n_s_Sim1D_eval __pyx_mstate_global->__pyx_n_s_Sim1D_eval
#define __pyx_n_s_Sim1D_extinct __pyx_mstate_global->__pyx_n_s_Sim1D_extinct
#define __pyx_n_s_Sim1D_get_max_grid_points __pyx_mstate_global->__pyx_n_s_Sim1D_get_max_grid_points
#define __pyx_n_s_Sim1D_get_refine_criteria __pyx_mstate_global->__pyx_n_s_Sim1D_get_refine_criteria
#define __pyx_kp_u_Sim1D_get_refine_criteria_line_1 __pyx_mstate_global->__pyx_kp_u_Sim1D_get_refine_criteria_line_1
#define __pyx_n_s_Sim1D_phase __pyx_mstate_global->__pyx_n_s_Sim1D_phase
#define __pyx_n_s_Sim1D_profile __pyx_mstate_global->__pyx_n_s_Sim1D_profile
#define __pyx_kp_u_Sim1D_profile_line_1101 __pyx_mstate_global->__pyx_kp_u_Sim1D_profile_line_1101
#define __pyx_n_s_Sim1D_refine __pyx_mstate_global->__pyx_n_s_Sim1D_refine
#define __pyx_n_s_Sim1D_restore __pyx_mstate_global->__pyx_n_s_Sim1D_restore
#define __pyx_kp_u_Sim1D_restore_Argument_loglevel __pyx_mstate_global->__pyx_kp_u_Sim1D_restore_Argument_loglevel
#define __pyx_n_s_Sim1D_restore_data __pyx_mstate_global->__pyx_n_s_Sim1D_restore_data
#define __pyx_kp_u_Sim1D_restore_data_Method_to_be __pyx_mstate_global->__pyx_kp_u_Sim1D_restore_data_Method_to_be
#define __pyx_kp_u_Sim1D_restore_line_1639 __pyx_mstate_global->__pyx_kp_u_Sim1D_restore_line_1639
#define __pyx_n_s_Sim1D_restore_steady_solution __pyx_mstate_global->__pyx_n_s_Sim1D_restore_steady_solution
#define __pyx_n_s_Sim1D_restore_time_stepping_solu __pyx_mstate_global->__pyx_n_s_Sim1D_restore_time_stepping_solu
#define __pyx_n_s_Sim1D_save __pyx_mstate_global->__pyx_n_s_Sim1D_save
#define __pyx_kp_u_Sim1D_save_Argument_loglevel_is __pyx_mstate_global->__pyx_kp_u_Sim1D_save_Argument_loglevel_is
#define __pyx_kp_u_Sim1D_save_line_1592 __pyx_mstate_global->__pyx_kp_u_Sim1D_save_line_1592
#define __pyx_n_s_Sim1D_set_flat_profile __pyx_mstate_global->__pyx_n_s_Sim1D_set_flat_profile
#define __pyx_kp_u_Sim1D_set_flat_profile_line_1145 __pyx_mstate_global->__pyx_kp_u_Sim1D_set_flat_profile_line_1145
#define __pyx_n_s_Sim1D_set_grid_min __pyx_mstate_global->__pyx_n_s_Sim1D_set_grid_min
#define __pyx_n_s_Sim1D_set_initial_guess __pyx_mstate_global->__pyx_n_s_Sim1D_set_initial_guess
#define __pyx_n_s_Sim1D_set_interrupt __pyx_mstate_global->__pyx_n_s_Sim1D_set_interrupt
#define __pyx_n_s_Sim1D_set_max_grid_points __pyx_mstate_global->__pyx_n_s_Sim1D_set_max_grid_points
#define __pyx_n_s_Sim1D_set_max_jac_age __pyx_mstate_global->__pyx_n_s_Sim1D_set_max_jac_age
#define __pyx_n_s_Sim1D_set_max_time_step __pyx_mstate_global->__pyx_n_s_Sim1D_set_max_time_step
#define __pyx_n_s_Sim1D_set_min_time_step __pyx_mstate_global->__pyx_n_s_Sim1D_set_min_time_step
#define __pyx_n_s_Sim1D_set_profile __pyx_mstate_global->__pyx_n_s_Sim1D_set_profile
#define __pyx_kp_u_Sim1D_set_profile_line_1120 __pyx_mstate_global->__pyx_kp_u_Sim1D_set_profile_line_1120
#define __pyx_n_s_Sim1D_set_refine_criteria __pyx_mstate_global->__pyx_n_s_Sim1D_set_refine_criteria
#define __pyx_kp_u_Sim1D_set_refine_criteria_line_1 __pyx_mstate_global->__pyx_kp_u_Sim1D_set_refine_criteria_line_1
#define __pyx_n_s_Sim1D_set_steady_callback __pyx_mstate_global->__pyx_n_s_Sim1D_set_steady_callback
#define __pyx_n_s_Sim1D_set_time_step __pyx_mstate_global->__pyx_n_s_Sim1D_set_time_step
#define __pyx_n_s_Sim1D_set_time_step_callback __pyx_mstate_global->__pyx_n_s_Sim1D_set_time_step_callback
#define __pyx_n_s_Sim1D_set_time_step_factor __pyx_mstate_global->__pyx_n_s_Sim1D_set_time_step_factor
#define __pyx_kp_u_Sim1D_set_time_step_line_1243 __pyx_mstate_global->__pyx_kp_u_Sim1D_set_time_step_line_1243
#define __pyx_n_s_Sim1D_set_value __pyx_mstate_global->__pyx_n_s_Sim1D_set_value
#define __pyx_kp_u_Sim1D_set_value_line_1053 __pyx_mstate_global->__pyx_kp_u_Sim1D_set_value_line_1053
#define __pyx_n_s_Sim1D_show __pyx_mstate_global->__pyx_n_s_Sim1D_show
#define __pyx_n_s_Sim1D_show_solution __pyx_mstate_global->__pyx_n_s_Sim1D_show_solution
#define __pyx_n_s_Sim1D_show_stats __pyx_mstate_global->__pyx_n_s_Sim1D_show_stats
#define __pyx_n_s_Sim1D_solve __pyx_mstate_global->__pyx_n_s_Sim1D_solve
#define __pyx_n_s_Sim1D_solve_adjoint __pyx_mstate_global->__pyx_n_s_Sim1D_solve_adjoint
#define __pyx_n_s_Sim1D_value __pyx_mstate_global->__pyx_n_s_Sim1D_value
#define __pyx_kp_u_Sim1D_value_line_1037 __pyx_mstate_global->__pyx_kp_u_Sim1D_value_line_1037
#define __pyx_n_s_Sim1D_work_value __pyx_mstate_global->__pyx_n_s_Sim1D_work_value
#define __pyx_kp_u_Sim1D_work_value_line_1084 __pyx_mstate_global->__pyx_kp_u_Sim1D_work_value_line_1084
#define __pyx_kp_u_Solution_value_at_one_point_par __pyx_mstate_global->__pyx_kp_u_Solution_value_at_one_point_par
#define __pyx_kp_u_Solving_on_point_grid_with_energ __pyx_mstate_global->__pyx_kp_u_Solving_on_point_grid_with_energ
#define __pyx_kp_u_Solving_on_point_grid_with_energ_2 __pyx_mstate_global->__pyx_kp_u_Solving_on_point_grid_with_energ_2
#define __pyx_kp_u_Solving_with_Soret_diffusion __pyx_mstate_global->__pyx_kp_u_Solving_with_Soret_diffusion
#define __pyx_kp_u_Solving_with_grid_refinement_ena __pyx_mstate_global->__pyx_kp_u_Solving_with_grid_refinement_ena
#define __pyx_kp_u_Solving_with_multicomponent_tran __pyx_mstate_global->__pyx_kp_u_Solving_with_multicomponent_tran
#define __pyx_kp_u_Solving_with_user_specified_tole __pyx_mstate_global->__pyx_kp_u_Solving_with_user_specified_tole
#define __pyx_kp_u_Spatial_profile_of_one_componen __pyx_mstate_global->__pyx_kp_u_Spatial_profile_of_one_componen
#define __pyx_n_s_Surface1D __pyx_mstate_global->__pyx_n_s_Surface1D
#define __pyx_n_s_SymmetryPlane1D __pyx_mstate_global->__pyx_n_s_SymmetryPlane1D
#define __pyx_n_s_T __pyx_mstate_global->__pyx_n_s_T
#define __pyx_n_u_T __pyx_mstate_global->__pyx_n_u_T
#define __pyx_n_s_TPX __pyx_mstate_global->__pyx_n_s_TPX
#define __pyx_n_s_TPY __pyx_mstate_global->__pyx_n_s_TPY
#define __pyx_n_s_TypeError __pyx_mstate_global->__pyx_n_s_TypeError
#define __pyx_n_s_UnstrainedFlow __pyx_mstate_global->__pyx_n_s_UnstrainedFlow
#define __pyx_n_s_ValueError __pyx_mstate_global->__pyx_n_s_ValueError
#define __pyx_n_s_WeakrefProxy __pyx_mstate_global->__pyx_n_s_WeakrefProxy
#define __pyx_n_s_X __pyx_mstate_global->__pyx_n_s_X
#define __pyx_n_s_Y __pyx_mstate_global->__pyx_n_s_Y
#define __pyx_n_s__161 __pyx_mstate_global->__pyx_n_s__161
#define __pyx_kp_u__17 __pyx_mstate_global->__pyx_kp_u__17
#define __pyx_n_u__19 __pyx_mstate_global->__pyx_n_u__19
#define __pyx_kp_u__27 __pyx_mstate_global->__pyx_kp_u__27
#define __pyx_kp_u__43 __pyx_mstate_global->__pyx_kp_u__43
#define __pyx_n_s__44 __pyx_mstate_global->__pyx_n_s__44
#define __pyx_kp_u__8 __pyx_mstate_global->__pyx_kp_u__8
#define __pyx_n_s_a __pyx_mstate_global->__pyx_n_s_a
#define __pyx_n_s_abs __pyx_mstate_global->__pyx_n_s_abs
#define __pyx_n_s_argmax __pyx_mstate_global->__pyx_n_s_argmax
#define __pyx_n_s_args __pyx_mstate_global->__pyx_n_s_args
#define __pyx_n_s_arr __pyx_mstate_global->__pyx_n_s_arr
#define __pyx_n_s_array __pyx_mstate_global->__pyx_n_s_array
#define __pyx_n_s_ascontiguousarray __pyx_mstate_global->__pyx_n_s_ascontiguousarray
#define __pyx_n_s_asyncio_coroutines __pyx_mstate_global->__pyx_n_s_asyncio_coroutines
#define __pyx_n_s_atol __pyx_mstate_global->__pyx_n_s_atol
#define __pyx_n_s_atol_ss_final __pyx_mstate_global->__pyx_n_s_atol_ss_final
#define __pyx_n_s_atol_ts_final __pyx_mstate_global->__pyx_n_s_atol_ts_final
#define __pyx_n_s_auto __pyx_mstate_global->__pyx_n_s_auto
#define __pyx_kp_u_axisymmetric_flow __pyx_mstate_global->__pyx_kp_u_axisymmetric_flow
#define __pyx_n_s_basis __pyx_mstate_global->__pyx_n_s_basis
#define __pyx_n_s_boundary_emissivities __pyx_mstate_global->__pyx_n_s_boundary_emissivities
#define __pyx_n_s_bounds __pyx_mstate_global->__pyx_n_s_bounds
#define __pyx_n_s_c __pyx_mstate_global->__pyx_n_s_c
#define __pyx_n_s_cantera__onedim __pyx_mstate_global->__pyx_n_s_cantera__onedim
#define __pyx_kp_s_cantera__onedim_pyx __pyx_mstate_global->__pyx_kp_s_cantera__onedim_pyx
#define __pyx_n_s_charge __pyx_mstate_global->__pyx_n_s_charge
#define __pyx_n_s_chargetol __pyx_mstate_global->__pyx_n_s_chargetol
#define __pyx_n_s_class_getitem __pyx_mstate_global->__pyx_n_s_class_getitem
#define __pyx_n_s_clear_stats __pyx_mstate_global->__pyx_n_s_clear_stats
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_close __pyx_mstate_global->__pyx_n_s_close
#define __pyx_n_s_comp __pyx_mstate_global->__pyx_n_s_comp
#define __pyx_n_s_component __pyx_mstate_global->__pyx_n_s_component
#define __pyx_n_s_component_index __pyx_mstate_global->__pyx_n_s_component_index
#define __pyx_n_s_component_name __pyx_mstate_global->__pyx_n_s_component_name
#define __pyx_n_s_component_names __pyx_mstate_global->__pyx_n_s_component_names
#define __pyx_n_s_composition __pyx_mstate_global->__pyx_n_s_composition
#define __pyx_n_s_compression __pyx_mstate_global->__pyx_n_s_compression
#define __pyx_n_s_copy __pyx_mstate_global->__pyx_n_s_copy
#define __pyx_n_s_curve __pyx_mstate_global->__pyx_n_s_curve
#define __pyx_n_u_curve __pyx_mstate_global->__pyx_n_u_curve
#define __pyx_n_s_d __pyx_mstate_global->__pyx_n_s_d
#define __pyx_n_s_data __pyx_mstate_global->__pyx_n_s_data
#define __pyx_n_u_data __pyx_mstate_global->__pyx_n_u_data
#define __pyx_n_s_default __pyx_mstate_global->__pyx_n_s_default
#define __pyx_n_s_density __pyx_mstate_global->__pyx_n_s_density
#define __pyx_n_s_description __pyx_mstate_global->__pyx_n_s_description
#define __pyx_n_s_dest __pyx_mstate_global->__pyx_n_s_dest
#define __pyx_n_s_dfdp __pyx_mstate_global->__pyx_n_s_dfdp
#define __pyx_n_s_dgdp __pyx_mstate_global->__pyx_n_s_dgdp
#define __pyx_n_s_dgdx __pyx_mstate_global->__pyx_n_s_dgdx
#define __pyx_n_s_dict __pyx_mstate_global->__pyx_n_s_dict
#define __pyx_kp_u_disable __pyx_mstate_global->__pyx_kp_u_disable
#define __pyx_n_s_doc __pyx_mstate_global->__pyx_n_s_doc
#define __pyx_n_s_dom __pyx_mstate_global->__pyx_n_s_dom
#define __pyx_n_s_domain __pyx_mstate_global->__pyx_n_s_domain
#define __pyx_n_s_domain_index __pyx_mstate_global->__pyx_n_s_domain_index
#define __pyx_n_s_domain_type __pyx_mstate_global->__pyx_n_s_domain_type
#define __pyx_n_s_domains __pyx_mstate_global->__pyx_n_s_domains
#define __pyx_n_s_dot __pyx_mstate_global->__pyx_n_s_dot
#define __pyx_n_s_double __pyx_mstate_global->__pyx_n_s_double
#define __pyx_n_s_dp __pyx_mstate_global->__pyx_n_s_dp
#define __pyx_n_s_dtype __pyx_mstate_global->__pyx_n_s_dtype
#define __pyx_n_s_dz __pyx_mstate_global->__pyx_n_s_dz
#define __pyx_n_s_e __pyx_mstate_global->__pyx_n_s_e
#define __pyx_n_u_edge __pyx_mstate_global->__pyx_n_u_edge
#define __pyx_n_u_emissivity_left __pyx_mstate_global->__pyx_n_u_emissivity_left
#define __pyx_n_u_emissivity_right __pyx_mstate_global->__pyx_n_u_emissivity_right
#define __pyx_n_s_empty __pyx_mstate_global->__pyx_n_s_empty
#define __pyx_kp_u_enable __pyx_mstate_global->__pyx_kp_u_enable
#define __pyx_n_s_energy_enabled __pyx_mstate_global->__pyx_n_s_energy_enabled
#define __pyx_n_s_enumerate __pyx_mstate_global->__pyx_n_s_enumerate
#define __pyx_n_s_eval __pyx_mstate_global->__pyx_n_s_eval
#define __pyx_n_s_extinct __pyx_mstate_global->__pyx_n_s_extinct
#define __pyx_n_s_f __pyx_mstate_global->__pyx_n_s_f
#define __pyx_n_s_filename __pyx_mstate_global->__pyx_n_s_filename
#define __pyx_n_s_flow_domains __pyx_mstate_global->__pyx_n_s_flow_domains
#define __pyx_n_s_fminus __pyx_mstate_global->__pyx_n_s_fminus
#define __pyx_n_s_format __pyx_mstate_global->__pyx_n_s_format
#define __pyx_n_s_fplus __pyx_mstate_global->__pyx_n_s_fplus
#define __pyx_kp_u_free_flow __pyx_mstate_global->__pyx_kp_u_free_flow
#define __pyx_n_s_from_array __pyx_mstate_global->__pyx_n_s_from_array
#define __pyx_n_s_g __pyx_mstate_global->__pyx_n_s_g
#define __pyx_n_s_gas __pyx_mstate_global->__pyx_n_s_gas
#define __pyx_n_u_gas __pyx_mstate_global->__pyx_n_u_gas
#define __pyx_kp_u_gas_flow __pyx_mstate_global->__pyx_kp_u_gas_flow
#define __pyx_kp_u_gc __pyx_mstate_global->__pyx_kp_u_gc
#define __pyx_n_s_genexpr __pyx_mstate_global->__pyx_n_s_genexpr
#define __pyx_n_s_get __pyx_mstate_global->__pyx_n_s_get
#define __pyx_n_s_get_indices __pyx_mstate_global->__pyx_n_s_get_indices
#define __pyx_n_s_get_initial_solution __pyx_mstate_global->__pyx_n_s_get_initial_solution
#define __pyx_n_s_get_max_grid_points __pyx_mstate_global->__pyx_n_s_get_max_grid_points
#define __pyx_n_s_get_refine_criteria __pyx_mstate_global->__pyx_n_s_get_refine_criteria
#define __pyx_n_s_get_settings3 __pyx_mstate_global->__pyx_n_s_get_settings3
#define __pyx_n_s_getstate __pyx_mstate_global->__pyx_n_s_getstate
#define __pyx_n_s_gg __pyx_mstate_global->__pyx_n_s_gg
#define __pyx_n_s_gminus __pyx_mstate_global->__pyx_n_s_gminus
#define __pyx_n_s_gplus __pyx_mstate_global->__pyx_n_s_gplus
#define __pyx_n_s_grid __pyx_mstate_global->__pyx_n_s_grid
#define __pyx_n_u_grid __pyx_mstate_global->__pyx_n_u_grid
#define __pyx_n_s_have_user_tolerances __pyx_mstate_global->__pyx_n_s_have_user_tolerances
#define __pyx_n_s_header __pyx_mstate_global->__pyx_n_s_header
#define __pyx_n_s_i __pyx_mstate_global->__pyx_n_s_i
#define __pyx_n_s_idom __pyx_mstate_global->__pyx_n_s_idom
#define __pyx_n_s_import __pyx_mstate_global->__pyx_n_s_import
#define __pyx_n_s_index __pyx_mstate_global->__pyx_n_s_index
#define __pyx_n_s_init __pyx_mstate_global->__pyx_n_s_init
#define __pyx_n_s_init_subclass __pyx_mstate_global->__pyx_n_s_init_subclass
#define __pyx_n_s_initializing __pyx_mstate_global->__pyx_n_s_initializing
#define __pyx_n_u_inlet __pyx_mstate_global->__pyx_n_u_inlet
#define __pyx_n_s_interrupts __pyx_mstate_global->__pyx_n_s_interrupts
#define __pyx_kp_u_ion_flow __pyx_mstate_global->__pyx_kp_u_ion_flow
#define __pyx_kp_u_ionized_gas __pyx_mstate_global->__pyx_kp_u_ionized_gas
#define __pyx_n_s_is_coroutine __pyx_mstate_global->__pyx_n_s_is_coroutine
#define __pyx_n_s_isclose __pyx_mstate_global->__pyx_n_s_isclose
#define __pyx_kp_u_isenabled __pyx_mstate_global->__pyx_kp_u_isenabled
#define __pyx_n_s_items __pyx_mstate_global->__pyx_n_s_items
#define __pyx_n_s_j __pyx_mstate_global->__pyx_n_s_j
#define __pyx_n_s_k __pyx_mstate_global->__pyx_n_s_k
#define __pyx_n_s_k0 __pyx_mstate_global->__pyx_n_s_k0
#define __pyx_n_s_kcomp __pyx_mstate_global->__pyx_n_s_kcomp
#define __pyx_n_s_key __pyx_mstate_global->__pyx_n_s_key
#define __pyx_n_s_kin __pyx_mstate_global->__pyx_n_s_kin
#define __pyx_n_s_kwargs __pyx_mstate_global->__pyx_n_s_kwargs
#define __pyx_n_s_linspace __pyx_mstate_global->__pyx_n_s_linspace
#define __pyx_n_s_log __pyx_mstate_global->__pyx_n_s_log
#define __pyx_n_s_logical_not __pyx_mstate_global->__pyx_n_s_logical_not
#define __pyx_n_s_loglevel __pyx_mstate_global->__pyx_n_s_loglevel
#define __pyx_n_s_lower __pyx_mstate_global->__pyx_n_s_lower
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_mdot __pyx_mstate_global->__pyx_n_s_mdot
#define __pyx_n_s_meta __pyx_mstate_global->__pyx_n_s_meta
#define __pyx_n_s_metaclass __pyx_mstate_global->__pyx_n_s_metaclass
#define __pyx_kp_u_mixture_averaged __pyx_mstate_global->__pyx_kp_u_mixture_averaged
#define __pyx_n_s_module __pyx_mstate_global->__pyx_n_s_module
#define __pyx_n_s_msg __pyx_mstate_global->__pyx_n_s_msg
#define __pyx_n_s_multi __pyx_mstate_global->__pyx_n_s_multi
#define __pyx_n_u_multicomponent __pyx_mstate_global->__pyx_n_u_multicomponent
#define __pyx_n_s_n __pyx_mstate_global->__pyx_n_s_n
#define __pyx_n_s_nPoints __pyx_mstate_global->__pyx_n_s_nPoints
#define __pyx_n_s_n_components __pyx_mstate_global->__pyx_n_s_n_components
#define __pyx_n_s_n_params __pyx_mstate_global->__pyx_n_s_n_params
#define __pyx_n_s_n_points __pyx_mstate_global->__pyx_n_s_n_points
#define __pyx_n_s_n_species __pyx_mstate_global->__pyx_n_s_n_species
#define __pyx_n_s_n_steps __pyx_mstate_global->__pyx_n_s_n_steps
#define __pyx_n_s_n_vars __pyx_mstate_global->__pyx_n_s_n_vars
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_n_u_name __pyx_mstate_global->__pyx_n_u_name
#define __pyx_n_s_name_2 __pyx_mstate_global->__pyx_n_s_name_2
#define __pyx_kp_s_no_default___reduce___due_to_non __pyx_mstate_global->__pyx_kp_s_no_default___reduce___due_to_non
#define __pyx_n_s_no_op __pyx_mstate_global->__pyx_n_s_no_op
#define __pyx_n_u_none __pyx_mstate_global->__pyx_n_u_none
#define __pyx_n_s_normalize __pyx_mstate_global->__pyx_n_s_normalize
#define __pyx_n_s_np __pyx_mstate_global->__pyx_n_s_np
#define __pyx_n_s_npmax __pyx_mstate_global->__pyx_n_s_npmax
#define __pyx_n_s_numpy __pyx_mstate_global->__pyx_n_s_numpy
#define __pyx_kp_u_numpy_core_multiarray_failed_to __pyx_mstate_global->__pyx_kp_u_numpy_core_multiarray_failed_to
#define __pyx_kp_u_numpy_core_umath_failed_to_impor __pyx_mstate_global->__pyx_kp_u_numpy_core_umath_failed_to_impor
#define __pyx_n_s_ones __pyx_mstate_global->__pyx_n_s_ones
#define __pyx_n_s_other_cols __pyx_mstate_global->__pyx_n_s_other_cols
#define __pyx_n_u_outlet __pyx_mstate_global->__pyx_n_u_outlet
#define __pyx_kp_u_outlet_reservoir __pyx_mstate_global->__pyx_kp_u_outlet_reservoir
#define __pyx_n_s_overwrite __pyx_mstate_global->__pyx_n_s_overwrite
#define __pyx_n_s_p __pyx_mstate_global->__pyx_n_s_p
#define __pyx_n_s_perturb __pyx_mstate_global->__pyx_n_s_perturb
#define __pyx_n_s_phase __pyx_mstate_global->__pyx_n_s_phase
#define __pyx_n_s_phase_of_matter __pyx_mstate_global->__pyx_n_s_phase_of_matter
#define __pyx_n_s_point __pyx_mstate_global->__pyx_n_s_point
#define __pyx_n_s_pos __pyx_mstate_global->__pyx_n_s_pos
#define __pyx_n_s_pos_vec __pyx_mstate_global->__pyx_n_s_pos_vec
#define __pyx_n_s_positions __pyx_mstate_global->__pyx_n_s_positions
#define __pyx_n_s_prepare __pyx_mstate_global->__pyx_n_s_prepare
#define __pyx_n_s_print __pyx_mstate_global->__pyx_n_s_print
#define __pyx_n_s_print_time __pyx_mstate_global->__pyx_n_s_print_time
#define __pyx_n_s_profile __pyx_mstate_global->__pyx_n_s_profile
#define __pyx_n_s_prune __pyx_mstate_global->__pyx_n_s_prune
#define __pyx_n_u_prune __pyx_mstate_global->__pyx_n_u_prune
#define __pyx_n_s_pyx_state __pyx_mstate_global->__pyx_n_s_pyx_state
#define __pyx_n_s_pyx_vtable __pyx_mstate_global->__pyx_n_s_pyx_vtable
#define __pyx_n_u_qdot __pyx_mstate_global->__pyx_n_u_qdot
#define __pyx_n_s_qualname __pyx_mstate_global->__pyx_n_s_qualname
#define __pyx_n_s_r __pyx_mstate_global->__pyx_n_s_r
#define __pyx_n_s_range __pyx_mstate_global->__pyx_n_s_range
#define __pyx_n_s_ratio __pyx_mstate_global->__pyx_n_s_ratio
#define __pyx_n_u_ratio __pyx_mstate_global->__pyx_n_u_ratio
#define __pyx_n_s_rdt __pyx_mstate_global->__pyx_n_s_rdt
#define __pyx_kp_u_reacting_surface __pyx_mstate_global->__pyx_kp_u_reacting_surface
#define __pyx_n_s_reduce __pyx_mstate_global->__pyx_n_s_reduce
#define __pyx_n_s_reduce_cython __pyx_mstate_global->__pyx_n_s_reduce_cython
#define __pyx_n_s_reduce_ex __pyx_mstate_global->__pyx_n_s_reduce_ex
#define __pyx_n_s_refine __pyx_mstate_global->__pyx_n_s_refine
#define __pyx_n_s_refine_grid __pyx_mstate_global->__pyx_n_s_refine_grid
#define __pyx_n_s_rel __pyx_mstate_global->__pyx_n_s_rel
#define __pyx_n_s_restore __pyx_mstate_global->__pyx_n_s_restore
#define __pyx_n_s_restore_data __pyx_mstate_global->__pyx_n_s_restore_data
#define __pyx_n_s_restore_steady_solution __pyx_mstate_global->__pyx_n_s_restore_steady_solution
#define __pyx_n_s_restore_time_stepping_solution __pyx_mstate_global->__pyx_n_s_restore_time_stepping_solution
#define __pyx_n_s_restore_tolerances __pyx_mstate_global->__pyx_n_s_restore_tolerances
#define __pyx_n_s_return_counts __pyx_mstate_global->__pyx_n_s_return_counts
#define __pyx_n_s_rtol __pyx_mstate_global->__pyx_n_s_rtol
#define __pyx_n_s_rtol_ss_final __pyx_mstate_global->__pyx_n_s_rtol_ss_final
#define __pyx_n_s_rtol_ts_final __pyx_mstate_global->__pyx_n_s_rtol_ts_final
#define __pyx_n_s_save __pyx_mstate_global->__pyx_n_s_save
#define __pyx_n_s_self __pyx_mstate_global->__pyx_n_s_self
#define __pyx_n_s_send __pyx_mstate_global->__pyx_n_s_send
#define __pyx_n_s_set_axisymmetric_flow __pyx_mstate_global->__pyx_n_s_set_axisymmetric_flow
#define __pyx_n_s_set_bounds __pyx_mstate_global->__pyx_n_s_set_bounds
#define __pyx_n_s_set_default_tolerances __pyx_mstate_global->__pyx_n_s_set_default_tolerances
#define __pyx_n_s_set_fixed_temp_profile __pyx_mstate_global->__pyx_n_s_set_fixed_temp_profile
#define __pyx_n_s_set_flat_profile __pyx_mstate_global->__pyx_n_s_set_flat_profile
#define __pyx_n_s_set_free_flow __pyx_mstate_global->__pyx_n_s_set_free_flow
#define __pyx_n_s_set_grid_min __pyx_mstate_global->__pyx_n_s_set_grid_min
#define __pyx_n_s_set_initial_guess __pyx_mstate_global->__pyx_n_s_set_initial_guess
#define __pyx_n_s_set_interrupt __pyx_mstate_global->__pyx_n_s_set_interrupt
#define __pyx_n_s_set_kinetics __pyx_mstate_global->__pyx_n_s_set_kinetics
#define __pyx_n_s_set_max_grid_points __pyx_mstate_global->__pyx_n_s_set_max_grid_points
#define __pyx_n_s_set_max_jac_age __pyx_mstate_global->__pyx_n_s_set_max_jac_age
#define __pyx_n_s_set_max_time_step __pyx_mstate_global->__pyx_n_s_set_max_time_step
#define __pyx_n_s_set_min_time_step __pyx_mstate_global->__pyx_n_s_set_min_time_step
#define __pyx_n_s_set_name __pyx_mstate_global->__pyx_n_s_set_name
#define __pyx_n_s_set_profile __pyx_mstate_global->__pyx_n_s_set_profile
#define __pyx_n_s_set_refine_criteria __pyx_mstate_global->__pyx_n_s_set_refine_criteria
#define __pyx_n_s_set_solving_stage __pyx_mstate_global->__pyx_n_s_set_solving_stage
#define __pyx_n_s_set_soret __pyx_mstate_global->__pyx_n_s_set_soret
#define __pyx_n_s_set_steady_callback __pyx_mstate_global->__pyx_n_s_set_steady_callback
#define __pyx_n_s_set_steady_tolerances __pyx_mstate_global->__pyx_n_s_set_steady_tolerances
#define __pyx_n_s_set_time_step __pyx_mstate_global->__pyx_n_s_set_time_step
#define __pyx_n_s_set_time_step_callback __pyx_mstate_global->__pyx_n_s_set_time_step_callback
#define __pyx_n_s_set_time_step_factor __pyx_mstate_global->__pyx_n_s_set_time_step_factor
#define __pyx_n_s_set_transient_tolerances __pyx_mstate_global->__pyx_n_s_set_transient_tolerances
#define __pyx_n_s_set_transport __pyx_mstate_global->__pyx_n_s_set_transport
#define __pyx_n_s_set_value __pyx_mstate_global->__pyx_n_s_set_value
#define __pyx_n_s_setstate __pyx_mstate_global->__pyx_n_s_setstate
#define __pyx_n_s_setstate_cython __pyx_mstate_global->__pyx_n_s_setstate_cython
#define __pyx_n_s_settings __pyx_mstate_global->__pyx_n_s_settings
#define __pyx_n_s_show __pyx_mstate_global->__pyx_n_s_show
#define __pyx_n_s_show_solution __pyx_mstate_global->__pyx_n_s_show_solution
#define __pyx_n_s_show_stats __pyx_mstate_global->__pyx_n_s_show_stats
#define __pyx_n_s_size __pyx_mstate_global->__pyx_n_s_size
#define __pyx_n_s_slope __pyx_mstate_global->__pyx_n_s_slope
#define __pyx_n_u_slope __pyx_mstate_global->__pyx_n_u_slope
#define __pyx_kp_u_soln_yaml __pyx_mstate_global->__pyx_kp_u_soln_yaml
#define __pyx_n_u_solution __pyx_mstate_global->__pyx_n_u_solution
#define __pyx_n_s_solve __pyx_mstate_global->__pyx_n_s_solve
#define __pyx_n_s_solve_adjoint __pyx_mstate_global->__pyx_n_s_solve_adjoint
#define __pyx_n_s_solve_locals_genexpr __pyx_mstate_global->__pyx_n_s_solve_locals_genexpr
#define __pyx_n_s_solve_locals_log __pyx_mstate_global->__pyx_n_s_solve_locals_log
#define __pyx_n_s_solve_locals_restore_tolerances __pyx_mstate_global->__pyx_n_s_solve_locals_restore_tolerances
#define __pyx_n_s_solve_locals_set_soret __pyx_mstate_global->__pyx_n_s_solve_locals_set_soret
#define __pyx_n_s_solve_locals_set_transport __pyx_mstate_global->__pyx_n_s_solve_locals_set_transport
#define __pyx_n_s_solve_multi __pyx_mstate_global->__pyx_n_s_solve_multi
#define __pyx_n_s_solved __pyx_mstate_global->__pyx_n_s_solved
#define __pyx_n_s_solving_stage __pyx_mstate_global->__pyx_n_s_solving_stage
#define __pyx_n_s_soret __pyx_mstate_global->__pyx_n_s_soret
#define __pyx_n_s_soret_doms __pyx_mstate_global->__pyx_n_s_soret_doms
#define __pyx_n_s_soret_enabled __pyx_mstate_global->__pyx_n_s_soret_enabled
#define __pyx_n_u_soret_enabled __pyx_mstate_global->__pyx_n_u_soret_enabled
#define __pyx_n_s_spc __pyx_mstate_global->__pyx_n_s_spc
#define __pyx_n_s_spec __pyx_mstate_global->__pyx_n_s_spec
#define __pyx_n_s_species __pyx_mstate_global->__pyx_n_s_species
#define __pyx_n_s_species_name __pyx_mstate_global->__pyx_n_s_species_name
#define __pyx_n_s_species_names __pyx_mstate_global->__pyx_n_s_species_names
#define __pyx_n_s_split __pyx_mstate_global->__pyx_n_s_split
#define __pyx_n_s_ss_age __pyx_mstate_global->__pyx_n_s_ss_age
#define __pyx_n_s_stage __pyx_mstate_global->__pyx_n_s_stage
#define __pyx_n_s_states __pyx_mstate_global->__pyx_n_s_states
#define __pyx_n_u_steady __pyx_mstate_global->__pyx_n_u_steady
#define __pyx_n_s_steady_abstol __pyx_mstate_global->__pyx_n_s_steady_abstol
#define __pyx_n_u_steady_abstol __pyx_mstate_global->__pyx_n_u_steady_abstol
#define __pyx_n_s_steady_reltol __pyx_mstate_global->__pyx_n_s_steady_reltol
#define __pyx_n_u_steady_reltol __pyx_mstate_global->__pyx_n_u_steady_reltol
#define __pyx_n_s_stepsize __pyx_mstate_global->__pyx_n_s_stepsize
#define __pyx_kp_s_stringsource __pyx_mstate_global->__pyx_kp_s_stringsource
#define __pyx_n_s_super __pyx_mstate_global->__pyx_n_s_super
#define __pyx_n_s_surface __pyx_mstate_global->__pyx_n_s_surface
#define __pyx_n_u_surface __pyx_mstate_global->__pyx_n_u_surface
#define __pyx_kp_u_symmetry_plane __pyx_mstate_global->__pyx_kp_u_symmetry_plane
#define __pyx_n_s_t __pyx_mstate_global->__pyx_n_s_t
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#define __pyx_n_s_tfactor __pyx_mstate_global->__pyx_n_s_tfactor
#define __pyx_n_s_throw __pyx_mstate_global->__pyx_n_s_throw
#define __pyx_n_s_to_array __pyx_mstate_global->__pyx_n_s_to_array
#define __pyx_n_s_tolerances __pyx_mstate_global->__pyx_n_s_tolerances
#define __pyx_n_s_transient_abstol __pyx_mstate_global->__pyx_n_s_transient_abstol
#define __pyx_n_u_transient_abstol __pyx_mstate_global->__pyx_n_u_transient_abstol
#define __pyx_n_s_transient_reltol __pyx_mstate_global->__pyx_n_s_transient_reltol
#define __pyx_n_u_transient_reltol __pyx_mstate_global->__pyx_n_u_transient_reltol
#define __pyx_n_s_transport __pyx_mstate_global->__pyx_n_s_transport
#define __pyx_n_s_transport_model __pyx_mstate_global->__pyx_n_s_transport_model
#define __pyx_n_s_ts_age __pyx_mstate_global->__pyx_n_s_ts_age
#define __pyx_n_s_tsmax __pyx_mstate_global->__pyx_n_s_tsmax
#define __pyx_n_s_tsmin __pyx_mstate_global->__pyx_n_s_tsmin
#define __pyx_n_s_unique __pyx_mstate_global->__pyx_n_s_unique
#define __pyx_kp_u_unstrained_flow __pyx_mstate_global->__pyx_kp_u_unstrained_flow
#define __pyx_n_s_update __pyx_mstate_global->__pyx_n_s_update
#define __pyx_n_s_upper __pyx_mstate_global->__pyx_n_s_upper
#define __pyx_n_s_utils __pyx_mstate_global->__pyx_n_s_utils
#define __pyx_n_s_v __pyx_mstate_global->__pyx_n_s_v
#define __pyx_n_s_val __pyx_mstate_global->__pyx_n_s_val
#define __pyx_n_s_val_vec __pyx_mstate_global->__pyx_n_s_val_vec
#define __pyx_n_s_value __pyx_mstate_global->__pyx_n_s_value
#define __pyx_n_s_values __pyx_mstate_global->__pyx_n_s_values
#define __pyx_n_u_velocity __pyx_mstate_global->__pyx_n_u_velocity
#define __pyx_n_s_warn __pyx_mstate_global->__pyx_n_s_warn
#define __pyx_n_s_warnings __pyx_mstate_global->__pyx_n_s_warnings
#define __pyx_n_s_work_value __pyx_mstate_global->__pyx_n_s_work_value
#define __pyx_n_s_x __pyx_mstate_global->__pyx_n_s_x
#define __pyx_n_s_xi __pyx_mstate_global->__pyx_n_s_xi
#define __pyx_n_s_y __pyx_mstate_global->__pyx_n_s_y
#define __pyx_n_s_zip __pyx_mstate_global->__pyx_n_s_zip
#define __pyx_n_s_zmax __pyx_mstate_global->__pyx_n_s_zmax
#define __pyx_n_s_zmin __pyx_mstate_global->__pyx_n_s_zmin
#define __pyx_float_0_0 __pyx_mstate_global->__pyx_float_0_0
#define __pyx_float_0_8 __pyx_mstate_global->__pyx_float_0_8
#define __pyx_float_1_0 __pyx_mstate_global->__pyx_float_1_0
#define __pyx_float_0_05 __pyx_mstate_global->__pyx_float_0_05
#define __pyx_float_10_0 __pyx_mstate_global->__pyx_float_10_0
#define __pyx_float_1eneg_4 __pyx_mstate_global->__pyx_float_1eneg_4
#define __pyx_float_1eneg_5 __pyx_mstate_global->__pyx_float_1eneg_5
#define __pyx_float_1eneg_9 __pyx_mstate_global->__pyx_float_1eneg_9
#define __pyx_float_1eneg_11 __pyx_mstate_global->__pyx_float_1eneg_11
#define __pyx_float_1eneg_16 __pyx_mstate_global->__pyx_float_1eneg_16
#define __pyx_float_1eneg_20 __pyx_mstate_global->__pyx_float_1eneg_20
#define __pyx_int_0 __pyx_mstate_global->__pyx_int_0
#define __pyx_int_1 __pyx_mstate_global->__pyx_int_1
#define __pyx_int_2 __pyx_mstate_global->__pyx_int_2
#define __pyx_int_3 __pyx_mstate_global->__pyx_int_3
#define __pyx_int_12 __pyx_mstate_global->__pyx_int_12
#define __pyx_int_24 __pyx_mstate_global->__pyx_int_24
#define __pyx_int_48 __pyx_mstate_global->__pyx_int_48
#define __pyx_int_neg_1 __pyx_mstate_global->__pyx_int_neg_1
#define __pyx_tuple_ __pyx_mstate_global->__pyx_tuple_
#define __pyx_tuple__2 __pyx_mstate_global->__pyx_tuple__2
#define __pyx_tuple__3 __pyx_mstate_global->__pyx_tuple__3
#define __pyx_tuple__4 __pyx_mstate_global->__pyx_tuple__4
#define __pyx_tuple__5 __pyx_mstate_global->__pyx_tuple__5
#define __pyx_tuple__6 __pyx_mstate_global->__pyx_tuple__6
#define __pyx_tuple__7 __pyx_mstate_global->__pyx_tuple__7
#define __pyx_tuple__9 __pyx_mstate_global->__pyx_tuple__9
#define __pyx_slice__20 __pyx_mstate_global->__pyx_slice__20
#define __pyx_slice__26 __pyx_mstate_global->__pyx_slice__26
#define __pyx_tuple__10 __pyx_mstate_global->__pyx_tuple__10
#define __pyx_tuple__11 __pyx_mstate_global->__pyx_tuple__11
#define __pyx_tuple__12 __pyx_mstate_global->__pyx_tuple__12
#define __pyx_tuple__13 __pyx_mstate_global->__pyx_tuple__13
#define __pyx_tuple__14 __pyx_mstate_global->__pyx_tuple__14
#define __pyx_tuple__15 __pyx_mstate_global->__pyx_tuple__15
#define __pyx_tuple__16 __pyx_mstate_global->__pyx_tuple__16
#define __pyx_tuple__18 __pyx_mstate_global->__pyx_tuple__18
#define __pyx_tuple__21 __pyx_mstate_global->__pyx_tuple__21
#define __pyx_tuple__22 __pyx_mstate_global->__pyx_tuple__22
#define __pyx_tuple__23 __pyx_mstate_global->__pyx_tuple__23
#define __pyx_tuple__24 __pyx_mstate_global->__pyx_tuple__24
#define __pyx_tuple__25 __pyx_mstate_global->__pyx_tuple__25
#define __pyx_tuple__28 __pyx_mstate_global->__pyx_tuple__28
#define __pyx_tuple__30 __pyx_mstate_global->__pyx_tuple__30
#define __pyx_tuple__32 __pyx_mstate_global->__pyx_tuple__32
#define __pyx_tuple__34 __pyx_mstate_global->__pyx_tuple__34
#define __pyx_tuple__36 __pyx_mstate_global->__pyx_tuple__36
#define __pyx_tuple__37 __pyx_mstate_global->__pyx_tuple__37
#define __pyx_tuple__38 __pyx_mstate_global->__pyx_tuple__38
#define __pyx_tuple__39 __pyx_mstate_global->__pyx_tuple__39
#define __pyx_tuple__40 __pyx_mstate_global->__pyx_tuple__40
#define __pyx_tuple__41 __pyx_mstate_global->__pyx_tuple__41
#define __pyx_tuple__42 __pyx_mstate_global->__pyx_tuple__42
#define __pyx_tuple__45 __pyx_mstate_global->__pyx_tuple__45
#define __pyx_tuple__47 __pyx_mstate_global->__pyx_tuple__47
#define __pyx_tuple__49 __pyx_mstate_global->__pyx_tuple__49
#define __pyx_tuple__51 __pyx_mstate_global->__pyx_tuple__51
#define __pyx_tuple__53 __pyx_mstate_global->__pyx_tuple__53
#define __pyx_tuple__55 __pyx_mstate_global->__pyx_tuple__55
#define __pyx_tuple__58 __pyx_mstate_global->__pyx_tuple__58
#define __pyx_tuple__60 __pyx_mstate_global->__pyx_tuple__60
#define __pyx_tuple__62 __pyx_mstate_global->__pyx_tuple__62
#define __pyx_tuple__65 __pyx_mstate_global->__pyx_tuple__65
#define __pyx_tuple__71 __pyx_mstate_global->__pyx_tuple__71
#define __pyx_tuple__73 __pyx_mstate_global->__pyx_tuple__73
#define __pyx_tuple__75 __pyx_mstate_global->__pyx_tuple__75
#define __pyx_tuple__77 __pyx_mstate_global->__pyx_tuple__77
#define __pyx_tuple__82 __pyx_mstate_global->__pyx_tuple__82
#define __pyx_tuple__84 __pyx_mstate_global->__pyx_tuple__84
#define __pyx_tuple__86 __pyx_mstate_global->__pyx_tuple__86
#define __pyx_tuple__90 __pyx_mstate_global->__pyx_tuple__90
#define __pyx_tuple__92 __pyx_mstate_global->__pyx_tuple__92
#define __pyx_tuple__94 __pyx_mstate_global->__pyx_tuple__94
#define __pyx_tuple__96 __pyx_mstate_global->__pyx_tuple__96
#define __pyx_tuple__98 __pyx_mstate_global->__pyx_tuple__98
#define __pyx_tuple__100 __pyx_mstate_global->__pyx_tuple__100
#define __pyx_tuple__102 __pyx_mstate_global->__pyx_tuple__102
#define __pyx_tuple__104 __pyx_mstate_global->__pyx_tuple__104
#define __pyx_tuple__106 __pyx_mstate_global->__pyx_tuple__106
#define __pyx_tuple__108 __pyx_mstate_global->__pyx_tuple__108
#define __pyx_tuple__112 __pyx_mstate_global->__pyx_tuple__112
#define __pyx_tuple__114 __pyx_mstate_global->__pyx_tuple__114
#define __pyx_tuple__118 __pyx_mstate_global->__pyx_tuple__118
#define __pyx_tuple__120 __pyx_mstate_global->__pyx_tuple__120
#define __pyx_tuple__121 __pyx_mstate_global->__pyx_tuple__121
#define __pyx_tuple__123 __pyx_mstate_global->__pyx_tuple__123
#define __pyx_tuple__124 __pyx_mstate_global->__pyx_tuple__124
#define __pyx_tuple__126 __pyx_mstate_global->__pyx_tuple__126
#define __pyx_tuple__127 __pyx_mstate_global->__pyx_tuple__127
#define __pyx_tuple__129 __pyx_mstate_global->__pyx_tuple__129
#define __pyx_tuple__131 __pyx_mstate_global->__pyx_tuple__131
#define __pyx_tuple__133 __pyx_mstate_global->__pyx_tuple__133
#define __pyx_tuple__135 __pyx_mstate_global->__pyx_tuple__135
#define __pyx_tuple__137 __pyx_mstate_global->__pyx_tuple__137
#define __pyx_tuple__139 __pyx_mstate_global->__pyx_tuple__139
#define __pyx_tuple__141 __pyx_mstate_global->__pyx_tuple__141
#define __pyx_tuple__142 __pyx_mstate_global->__pyx_tuple__142
#define __pyx_tuple__144 __pyx_mstate_global->__pyx_tuple__144
#define __pyx_tuple__147 __pyx_mstate_global->__pyx_tuple__147
#define __pyx_tuple__149 __pyx_mstate_global->__pyx_tuple__149
#define __pyx_tuple__151 __pyx_mstate_global->__pyx_tuple__151
#define __pyx_tuple__153 __pyx_mstate_global->__pyx_tuple__153
#define __pyx_tuple__154 __pyx_mstate_global->__pyx_tuple__154
#define __pyx_tuple__156 __pyx_mstate_global->__pyx_tuple__156
#define __pyx_tuple__159 __pyx_mstate_global->__pyx_tuple__159
#define __pyx_codeobj__29 __pyx_mstate_global->__pyx_codeobj__29
#define __pyx_codeobj__31 __pyx_mstate_global->__pyx_codeobj__31
#define __pyx_codeobj__33 __pyx_mstate_global->__pyx_codeobj__33
#define __pyx_codeobj__35 __pyx_mstate_global->__pyx_codeobj__35
#define __pyx_codeobj__46 __pyx_mstate_global->__pyx_codeobj__46
#define __pyx_codeobj__48 __pyx_mstate_global->__pyx_codeobj__48
#define __pyx_codeobj__50 __pyx_mstate_global->__pyx_codeobj__50
#define __pyx_codeobj__52 __pyx_mstate_global->__pyx_codeobj__52
#define __pyx_codeobj__54 __pyx_mstate_global->__pyx_codeobj__54
#define __pyx_codeobj__56 __pyx_mstate_global->__pyx_codeobj__56
#define __pyx_codeobj__57 __pyx_mstate_global->__pyx_codeobj__57
#define __pyx_codeobj__59 __pyx_mstate_global->__pyx_codeobj__59
#define __pyx_codeobj__61 __pyx_mstate_global->__pyx_codeobj__61
#define __pyx_codeobj__63 __pyx_mstate_global->__pyx_codeobj__63
#define __pyx_codeobj__64 __pyx_mstate_global->__pyx_codeobj__64
#define __pyx_codeobj__66 __pyx_mstate_global->__pyx_codeobj__66
#define __pyx_codeobj__67 __pyx_mstate_global->__pyx_codeobj__67
#define __pyx_codeobj__68 __pyx_mstate_global->__pyx_codeobj__68
#define __pyx_codeobj__69 __pyx_mstate_global->__pyx_codeobj__69
#define __pyx_codeobj__70 __pyx_mstate_global->__pyx_codeobj__70
#define __pyx_codeobj__72 __pyx_mstate_global->__pyx_codeobj__72
#define __pyx_codeobj__74 __pyx_mstate_global->__pyx_codeobj__74
#define __pyx_codeobj__76 __pyx_mstate_global->__pyx_codeobj__76
#define __pyx_codeobj__78 __pyx_mstate_global->__pyx_codeobj__78
#define __pyx_codeobj__79 __pyx_mstate_global->__pyx_codeobj__79
#define __pyx_codeobj__80 __pyx_mstate_global->__pyx_codeobj__80
#define __pyx_codeobj__81 __pyx_mstate_global->__pyx_codeobj__81
#define __pyx_codeobj__83 __pyx_mstate_global->__pyx_codeobj__83
#define __pyx_codeobj__85 __pyx_mstate_global->__pyx_codeobj__85
#define __pyx_codeobj__87 __pyx_mstate_global->__pyx_codeobj__87
#define __pyx_codeobj__88 __pyx_mstate_global->__pyx_codeobj__88
#define __pyx_codeobj__89 __pyx_mstate_global->__pyx_codeobj__89
#define __pyx_codeobj__91 __pyx_mstate_global->__pyx_codeobj__91
#define __pyx_codeobj__93 __pyx_mstate_global->__pyx_codeobj__93
#define __pyx_codeobj__95 __pyx_mstate_global->__pyx_codeobj__95
#define __pyx_codeobj__97 __pyx_mstate_global->__pyx_codeobj__97
#define __pyx_codeobj__99 __pyx_mstate_global->__pyx_codeobj__99
#define __pyx_codeobj__101 __pyx_mstate_global->__pyx_codeobj__101
#define __pyx_codeobj__103 __pyx_mstate_global->__pyx_codeobj__103
#define __pyx_codeobj__105 __pyx_mstate_global->__pyx_codeobj__105
#define __pyx_codeobj__107 __pyx_mstate_global->__pyx_codeobj__107
#define __pyx_codeobj__109 __pyx_mstate_global->__pyx_codeobj__109
#define __pyx_codeobj__110 __pyx_mstate_global->__pyx_codeobj__110
#define __pyx_codeobj__111 __pyx_mstate_global->__pyx_codeobj__111
#define __pyx_codeobj__113 __pyx_mstate_global->__pyx_codeobj__113
#define __pyx_codeobj__115 __pyx_mstate_global->__pyx_codeobj__115
#define __pyx_codeobj__116 __pyx_mstate_global->__pyx_codeobj__116
#define __pyx_codeobj__117 __pyx_mstate_global->__pyx_codeobj__117
#define __pyx_codeobj__119 __pyx_mstate_global->__pyx_codeobj__119
#define __pyx_codeobj__122 __pyx_mstate_global->__pyx_codeobj__122
#define __pyx_codeobj__125 __pyx_mstate_global->__pyx_codeobj__125
#define __pyx_codeobj__128 __pyx_mstate_global->__pyx_codeobj__128
#define __pyx_codeobj__130 __pyx_mstate_global->__pyx_codeobj__130
#define __pyx_codeobj__132 __pyx_mstate_global->__pyx_codeobj__132
#define __pyx_codeobj__134 __pyx_mstate_global->__pyx_codeobj__134
#define __pyx_codeobj__136 __pyx_mstate_global->__pyx_codeobj__136
#define __pyx_codeobj__138 __pyx_mstate_global->__pyx_codeobj__138
#define __pyx_codeobj__140 __pyx_mstate_global->__pyx_codeobj__140
#define __pyx_codeobj__143 __pyx_mstate_global->__pyx_codeobj__143
#define __pyx_codeobj__145 __pyx_mstate_global->__pyx_codeobj__145
#define __pyx_codeobj__146 __pyx_mstate_global->__pyx_codeobj__146
#define __pyx_codeobj__148 __pyx_mstate_global->__pyx_codeobj__148
#define __pyx_codeobj__150 __pyx_mstate_global->__pyx_codeobj__150
#define __pyx_codeobj__152 __pyx_mstate_global->__pyx_codeobj__152
#define __pyx_codeobj__155 __pyx_mstate_global->__pyx_codeobj__155
#define __pyx_codeobj__157 __pyx_mstate_global->__pyx_codeobj__157
#define __pyx_codeobj__158 __pyx_mstate_global->__pyx_codeobj__158
#define __pyx_codeobj__160 __pyx_mstate_global->__pyx_codeobj__160
/* #### Code section: module_code ### */

/* "vector.to_py":66
 * 
 * @cname("__pyx_convert_vector_to_py_size_t")
 * cdef object __pyx_convert_vector_to_py_size_t(const vector[X]& v):             # <<<<<<<<<<<<<<
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 */

static PyObject *__pyx_convert_vector_to_py_size_t(std::vector<size_t>  const &__pyx_v_v) {
  Py_ssize_t __pyx_v_v_size_signed;
  PyObject *__pyx_v_o = NULL;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_item = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_size_t", 0);

  /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_size_t")
 * cdef object __pyx_convert_vector_to_py_size_t(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  __pyx_t_1 = (__pyx_v_v.size() > ((size_t)PY_SSIZE_T_MAX));
  if (unlikely(__pyx_t_1)) {

    /* "vector.to_py":68
 * cdef object __pyx_convert_vector_to_py_size_t(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()             # <<<<<<<<<<<<<<
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 */
    PyErr_NoMemory(); __PYX_ERR(1, 68, __pyx_L1_error)

    /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_size_t")
 * cdef object __pyx_convert_vector_to_py_size_t(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  }

  /* "vector.to_py":69
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()             # <<<<<<<<<<<<<<
 * 
 *     o = PyList_New(v_size_signed)
 */
  __pyx_v_v_size_signed = ((Py_ssize_t)__pyx_v_v.size());

  /* "vector.to_py":71
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 *     o = PyList_New(v_size_signed)             # <<<<<<<<<<<<<<
 * 
 *     cdef Py_ssize_t i
 */
  __pyx_t_2 = PyList_New(__pyx_v_v_size_signed); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_o = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "vector.to_py":76
 *     cdef object item
 * 
 *     for i in range(v_size_signed):             # <<<<<<<<<<<<<<
 *         item = v[i]
 *         Py_INCREF(item)
 */
  __pyx_t_3 = __pyx_v_v_size_signed;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "vector.to_py":77
 * 
 *     for i in range(v_size_signed):
 *         item = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)
 */
    __pyx_t_2 = __Pyx_PyInt_FromSize_t((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "vector.to_py":78
 *     for i in range(v_size_signed):
 *         item = v[i]
 *         Py_INCREF(item)             # <<<<<<<<<<<<<<
 *         PyList_SET_ITEM(o, i, item)
 * 
 */
    Py_INCREF(__pyx_v_item);

    /* "vector.to_py":79
 *         item = v[i]
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)             # <<<<<<<<<<<<<<
 * 
 *     return o
 */
    PyList_SET_ITEM(__pyx_v_o, __pyx_v_i, __pyx_v_item);
  }

  /* "vector.to_py":81
 *         PyList_SET_ITEM(o, i, item)
 * 
 *     return o             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "vector.to_py":66
 * 
 * @cname("__pyx_convert_vector_to_py_size_t")
 * cdef object __pyx_convert_vector_to_py_size_t(const vector[X]& v):             # <<<<<<<<<<<<<<
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_size_t", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_double(std::vector<double>  const &__pyx_v_v) {
  Py_ssize_t __pyx_v_v_size_signed;
  PyObject *__pyx_v_o = NULL;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_item = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_double", 0);

  /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  __pyx_t_1 = (__pyx_v_v.size() > ((size_t)PY_SSIZE_T_MAX));
  if (unlikely(__pyx_t_1)) {

    /* "vector.to_py":68
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()             # <<<<<<<<<<<<<<
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 */
    PyErr_NoMemory(); __PYX_ERR(1, 68, __pyx_L1_error)

    /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  }

  /* "vector.to_py":69
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()             # <<<<<<<<<<<<<<
 * 
 *     o = PyList_New(v_size_signed)
 */
  __pyx_v_v_size_signed = ((Py_ssize_t)__pyx_v_v.size());

  /* "vector.to_py":71
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 *     o = PyList_New(v_size_signed)             # <<<<<<<<<<<<<<
 * 
 *     cdef Py_ssize_t i
 */
  __pyx_t_2 = PyList_New(__pyx_v_v_size_signed); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_o = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "vector.to_py":76
 *     cdef object item
 * 
 *     for i in range(v_size_signed):             # <<<<<<<<<<<<<<
 *         item = v[i]
 *         Py_INCREF(item)
 */
  __pyx_t_3 = __pyx_v_v_size_signed;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "vector.to_py":77
 * 
 *     for i in range(v_size_signed):
 *         item = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)
 */
    __pyx_t_2 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "vector.to_py":78
 *     for i in range(v_size_signed):
 *         item = v[i]
 *         Py_INCREF(item)             # <<<<<<<<<<<<<<
 *         PyList_SET_ITEM(o, i, item)
 * 
 */
    Py_INCREF(__pyx_v_item);

    /* "vector.to_py":79
 *         item = v[i]
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)             # <<<<<<<<<<<<<<
 * 
 *     return o
 */
    PyList_SET_ITEM(__pyx_v_o, __pyx_v_i, __pyx_v_item);
  }

  /* "vector.to_py":81
 *         PyList_SET_ITEM(o, i, item)
 * 
 *     return o             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "vector.to_py":66
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):             # <<<<<<<<<<<<<<
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_convert_vector_to_py_int(std::vector<int>  const &__pyx_v_v) {
  Py_ssize_t __pyx_v_v_size_signed;
  PyObject *__pyx_v_o = NULL;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_item = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_int", 0);

  /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  __pyx_t_1 = (__pyx_v_v.size() > ((size_t)PY_SSIZE_T_MAX));
  if (unlikely(__pyx_t_1)) {

    /* "vector.to_py":68
 * cdef object __pyx_convert_vector_to_py_int(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()             # <<<<<<<<<<<<<<
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 */
    PyErr_NoMemory(); __PYX_ERR(1, 68, __pyx_L1_error)

    /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  }

  /* "vector.to_py":69
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()             # <<<<<<<<<<<<<<
 * 
 *     o = PyList_New(v_size_signed)
 */
  __pyx_v_v_size_signed = ((Py_ssize_t)__pyx_v_v.size());

  /* "vector.to_py":71
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 *     o = PyList_New(v_size_signed)             # <<<<<<<<<<<<<<
 * 
 *     cdef Py_ssize_t i
 */
  __pyx_t_2 = PyList_New(__pyx_v_v_size_signed); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_o = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "vector.to_py":76
 *     cdef object item
 * 
 *     for i in range(v_size_signed):             # <<<<<<<<<<<<<<
 *         item = v[i]
 *         Py_INCREF(item)
 */
  __pyx_t_3 = __pyx_v_v_size_signed;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "vector.to_py":77
 * 
 *     for i in range(v_size_signed):
 *         item = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)
 */
    __pyx_t_2 = __Pyx_PyInt_From_int((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "vector.to_py":78
 *     for i in range(v_size_signed):
 *         item = v[i]
 *         Py_INCREF(item)             # <<<<<<<<<<<<<<
 *         PyList_SET_ITEM(o, i, item)
 * 
 */
    Py_INCREF(__pyx_v_item);

    /* "vector.to_py":79
 *         item = v[i]
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)             # <<<<<<<<<<<<<<
 * 
 *     return o
 */
    PyList_SET_ITEM(__pyx_v_o, __pyx_v_i, __pyx_v_item);
  }

  /* "vector.to_py":81
 *         PyList_SET_ITEM(o, i, item)
 * 
 *     return o             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "vector.to_py":66
 * 
 * @cname("__pyx_convert_vector_to_py_int")
 * cdef object __pyx_convert_vector_to_py_int(const vector[X]& v):             # <<<<<<<<<<<<<<
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_int", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/complex.pxd":19
 * 
 *         @property
 *         cdef inline double real(self):             # <<<<<<<<<<<<<<
 *             return self.cval.real
 * 
 */

static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4real_real(PyComplexObject *__pyx_v_self) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("real", 0);

  /* "cpython/complex.pxd":20
 *         @property
 *         cdef inline double real(self):
 *             return self.cval.real             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = __pyx_v_self->cval.real;
  goto __pyx_L0;

  /* "cpython/complex.pxd":19
 * 
 *         @property
 *         cdef inline double real(self):             # <<<<<<<<<<<<<<
 *             return self.cval.real
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/complex.pxd":23
 * 
 *         @property
 *         cdef inline double imag(self):             # <<<<<<<<<<<<<<
 *             return self.cval.imag
 * 
 */

static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4imag_imag(PyComplexObject *__pyx_v_self) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("imag", 0);

  /* "cpython/complex.pxd":24
 *         @property
 *         cdef inline double imag(self):
 *             return self.cval.imag             # <<<<<<<<<<<<<<
 * 
 *     # PyTypeObject PyComplex_Type
 */
  __pyx_r = __pyx_v_self->cval.imag;
  goto __pyx_L0;

  /* "cpython/complex.pxd":23
 * 
 *         @property
 *         cdef inline double imag(self):             # <<<<<<<<<<<<<<
 *             return self.cval.imag
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/contextvars.pxd":112
 * 
 * 
 * cdef inline object get_value(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the default value of the context variable,
 */

static CYTHON_INLINE PyObject *__pyx_f_7cpython_11contextvars_get_value(PyObject *__pyx_v_var, struct __pyx_opt_args_7cpython_11contextvars_get_value *__pyx_optional_args) {
  PyObject *__pyx_v_default_value = ((PyObject *)Py_None);
  PyObject *__pyx_v_value;
  PyObject *__pyx_v_pyvalue = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_value", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default_value = __pyx_optional_args->default_value;
    }
  }

  /* "cpython/contextvars.pxd":117
 *     or None if no such value or default was found.
 *     """
 *     cdef PyObject *value = NULL             # <<<<<<<<<<<<<<
 *     PyContextVar_Get(var, NULL, &value)
 *     if value is NULL:
 */
  __pyx_v_value = NULL;

  /* "cpython/contextvars.pxd":118
 *     """
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, NULL, &value)             # <<<<<<<<<<<<<<
 *     if value is NULL:
 *         # context variable does not have a default
 */
  __pyx_t_1 = PyContextVar_Get(__pyx_v_var, NULL, (&__pyx_v_value)); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(2, 118, __pyx_L1_error)

  /* "cpython/contextvars.pxd":119
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, NULL, &value)
 *     if value is NULL:             # <<<<<<<<<<<<<<
 *         # context variable does not have a default
 *         pyvalue = default_value
 */
  __pyx_t_2 = (__pyx_v_value == NULL);
  if (__pyx_t_2) {

    /* "cpython/contextvars.pxd":121
 *     if value is NULL:
 *         # context variable does not have a default
 *         pyvalue = default_value             # <<<<<<<<<<<<<<
 *     else:
 *         # value or default value of context variable
 */
    __Pyx_INCREF(__pyx_v_default_value);
    __pyx_v_pyvalue = __pyx_v_default_value;

    /* "cpython/contextvars.pxd":119
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, NULL, &value)
 *     if value is NULL:             # <<<<<<<<<<<<<<
 *         # context variable does not have a default
 *         pyvalue = default_value
 */
    goto __pyx_L3;
  }

  /* "cpython/contextvars.pxd":124
 *     else:
 *         # value or default value of context variable
 *         pyvalue = <object>value             # <<<<<<<<<<<<<<
 *         Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue
 */
  /*else*/ {
    __pyx_t_3 = ((PyObject *)__pyx_v_value);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_pyvalue = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "cpython/contextvars.pxd":125
 *         # value or default value of context variable
 *         pyvalue = <object>value
 *         Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'             # <<<<<<<<<<<<<<
 *     return pyvalue
 * 
 */
    Py_XDECREF(__pyx_v_value);
  }
  __pyx_L3:;

  /* "cpython/contextvars.pxd":126
 *         pyvalue = <object>value
 *         Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_pyvalue);
  __pyx_r = __pyx_v_pyvalue;
  goto __pyx_L0;

  /* "cpython/contextvars.pxd":112
 * 
 * 
 * cdef inline object get_value(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the default value of the context variable,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cpython.contextvars.get_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyvalue);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/contextvars.pxd":129
 * 
 * 
 * cdef inline object get_value_no_default(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the provided default value if no such value was found.
 */

static CYTHON_INLINE PyObject *__pyx_f_7cpython_11contextvars_get_value_no_default(PyObject *__pyx_v_var, struct __pyx_opt_args_7cpython_11contextvars_get_value_no_default *__pyx_optional_args) {
  PyObject *__pyx_v_default_value = ((PyObject *)Py_None);
  PyObject *__pyx_v_value;
  PyObject *__pyx_v_pyvalue = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_value_no_default", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default_value = __pyx_optional_args->default_value;
    }
  }

  /* "cpython/contextvars.pxd":135
 *     Ignores the default value of the context variable, if any.
 *     """
 *     cdef PyObject *value = NULL             # <<<<<<<<<<<<<<
 *     PyContextVar_Get(var, <PyObject*>default_value, &value)
 *     # value of context variable or 'default_value'
 */
  __pyx_v_value = NULL;

  /* "cpython/contextvars.pxd":136
 *     """
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, <PyObject*>default_value, &value)             # <<<<<<<<<<<<<<
 *     # value of context variable or 'default_value'
 *     pyvalue = <object>value
 */
  __pyx_t_1 = PyContextVar_Get(__pyx_v_var, ((PyObject *)__pyx_v_default_value), (&__pyx_v_value)); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(2, 136, __pyx_L1_error)

  /* "cpython/contextvars.pxd":138
 *     PyContextVar_Get(var, <PyObject*>default_value, &value)
 *     # value of context variable or 'default_value'
 *     pyvalue = <object>value             # <<<<<<<<<<<<<<
 *     Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_value);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_pyvalue = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cpython/contextvars.pxd":139
 *     # value of context variable or 'default_value'
 *     pyvalue = <object>value
 *     Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'             # <<<<<<<<<<<<<<
 *     return pyvalue
 */
  Py_XDECREF(__pyx_v_value);

  /* "cpython/contextvars.pxd":140
 *     pyvalue = <object>value
 *     Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_pyvalue);
  __pyx_r = __pyx_v_pyvalue;
  goto __pyx_L0;

  /* "cpython/contextvars.pxd":129
 * 
 * 
 * cdef inline object get_value_no_default(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the provided default value if no such value was found.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cpython.contextvars.get_value_no_default", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyvalue);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":246
 * 
 *         @property
 *         cdef inline PyObject* base(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a borrowed reference to the object owning the data/memory.
 *             """
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_7ndarray_4base_base(PyArrayObject *__pyx_v_self) {
  PyObject *__pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":249
 *             """Returns a borrowed reference to the object owning the data/memory.
 *             """
 *             return PyArray_BASE(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_BASE(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":246
 * 
 *         @property
 *         cdef inline PyObject* base(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a borrowed reference to the object owning the data/memory.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":252
 * 
 *         @property
 *         cdef inline dtype descr(self):             # <<<<<<<<<<<<<<
 *             """Returns an owned reference to the dtype of the array.
 *             """
 */

static CYTHON_INLINE PyArray_Descr *__pyx_f_5numpy_7ndarray_5descr_descr(PyArrayObject *__pyx_v_self) {
  PyArray_Descr *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyArray_Descr *__pyx_t_1;
  __Pyx_RefNannySetupContext("descr", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":255
 *             """Returns an owned reference to the dtype of the array.
 *             """
 *             return <dtype>PyArray_DESCR(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = PyArray_DESCR(__pyx_v_self);
  __Pyx_INCREF((PyObject *)((PyArray_Descr *)__pyx_t_1));
  __pyx_r = ((PyArray_Descr *)__pyx_t_1);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":252
 * 
 *         @property
 *         cdef inline dtype descr(self):             # <<<<<<<<<<<<<<
 *             """Returns an owned reference to the dtype of the array.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":258
 * 
 *         @property
 *         cdef inline int ndim(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the number of dimensions in the array.
 *             """
 */

static CYTHON_INLINE int __pyx_f_5numpy_7ndarray_4ndim_ndim(PyArrayObject *__pyx_v_self) {
  int __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":261
 *             """Returns the number of dimensions in the array.
 *             """
 *             return PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_NDIM(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":258
 * 
 *         @property
 *         cdef inline int ndim(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the number of dimensions in the array.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":264
 * 
 *         @property
 *         cdef inline npy_intp *shape(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the dimensions/shape of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_5shape_shape(PyArrayObject *__pyx_v_self) {
  npy_intp *__pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":269
 *             Can return NULL for 0-dimensional arrays.
 *             """
 *             return PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_DIMS(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":264
 * 
 *         @property
 *         cdef inline npy_intp *shape(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the dimensions/shape of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":272
 * 
 *         @property
 *         cdef inline npy_intp *strides(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the strides of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_7strides_strides(PyArrayObject *__pyx_v_self) {
  npy_intp *__pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":276
 *             The number of elements matches the number of dimensions of the array (ndim).
 *             """
 *             return PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_STRIDES(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":272
 * 
 *         @property
 *         cdef inline npy_intp *strides(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the strides of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":279
 * 
 *         @property
 *         cdef inline npy_intp size(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the total size (in number of elements) of the array.
 *             """
 */

static CYTHON_INLINE npy_intp __pyx_f_5numpy_7ndarray_4size_size(PyArrayObject *__pyx_v_self) {
  npy_intp __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":282
 *             """Returns the total size (in number of elements) of the array.
 *             """
 *             return PyArray_SIZE(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_SIZE(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":279
 * 
 *         @property
 *         cdef inline npy_intp size(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the total size (in number of elements) of the array.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":285
 * 
 *         @property
 *         cdef inline char* data(self) nogil:             # <<<<<<<<<<<<<<
 *             """The pointer to the data buffer as a char*.
 *             This is provided for legacy reasons to avoid direct struct field access.
 */

static CYTHON_INLINE char *__pyx_f_5numpy_7ndarray_4data_data(PyArrayObject *__pyx_v_self) {
  char *__pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":291
 *             of `PyArray_DATA()` instead, which returns a 'void*'.
 *             """
 *             return PyArray_BYTES(self)             # <<<<<<<<<<<<<<
 * 
 *     ctypedef unsigned char      npy_bool
 */
  __pyx_r = PyArray_BYTES(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":285
 * 
 *         @property
 *         cdef inline char* data(self) nogil:             # <<<<<<<<<<<<<<
 *             """The pointer to the data buffer as a char*.
 *             This is provided for legacy reasons to avoid direct struct field access.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":777
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":778
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":777
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":780
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":781
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 781, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":780
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":783
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":784
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":783
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":786
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":787
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":786
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":789
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":790
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":789
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":792
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":793
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = PyDataType_HASSUBARRAY(__pyx_v_d);
  if (__pyx_t_1) {

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":794
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":793
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":796
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":792
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":971
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":972
 * 
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
 *     PyArray_SetBaseObject(arr, base)
 * 
 */
  Py_INCREF(__pyx_v_base);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":973
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  (void)(PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base));

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":971
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":975
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_v_base;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":976
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
 *     if base is NULL:
 *         return None
 */
  __pyx_v_base = PyArray_BASE(__pyx_v_arr);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":977
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  __pyx_t_1 = (__pyx_v_base == NULL);
  if (__pyx_t_1) {

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":978
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     return <object>base
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":977
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":979
 *     if base is NULL:
 *         return None
 *     return <object>base             # <<<<<<<<<<<<<<
 * 
 * # Versions of the import_* functions which are more suitable for
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_base));
  __pyx_r = ((PyObject *)__pyx_v_base);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":975
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":983
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":984
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":985
 * cdef inline int import_array() except -1:
 *     try:
 *         __pyx_import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(3, 985, __pyx_L3_error)

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":984
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":986
 *     try:
 *         __pyx_import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(3, 986, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":987
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 987, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(3, 987, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":984
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":983
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":989
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":990
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":991
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(3, 991, __pyx_L3_error)

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":990
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":992
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(3, 992, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":993
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 993, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(3, 993, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":990
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":989
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":995
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":996
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":997
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(3, 997, __pyx_L3_error)

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":996
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":998
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(3, 998, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":999
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 999, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(3, 999, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":996
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":995
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1002
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_timedelta64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_timedelta64_object", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1014
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyTimedeltaArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyTimedeltaArrType_Type));
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1002
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1017
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_datetime64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_datetime64_object", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1029
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyDatetimeArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyDatetimeArrType_Type));
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1017
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1032
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

static CYTHON_INLINE npy_datetime __pyx_f_5numpy_get_datetime64_value(PyObject *__pyx_v_obj) {
  npy_datetime __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1039
 *     also needed.  That can be found using `get_datetime64_unit`.
 *     """
 *     return (<PyDatetimeScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyDatetimeScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1032
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1042
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

static CYTHON_INLINE npy_timedelta __pyx_f_5numpy_get_timedelta64_value(PyObject *__pyx_v_obj) {
  npy_timedelta __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1046
 *     returns the int64 value underlying scalar numpy timedelta64 object
 *     """
 *     return (<PyTimedeltaScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyTimedeltaScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1042
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1049
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

static CYTHON_INLINE NPY_DATETIMEUNIT __pyx_f_5numpy_get_datetime64_unit(PyObject *__pyx_v_obj) {
  NPY_DATETIMEUNIT __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1053
 *     returns the unit part of the dtype for a numpy datetime64 object.
 *     """
 *     return <NPY_DATETIMEUNIT>(<PyDatetimeScalarObject*>obj).obmeta.base             # <<<<<<<<<<<<<<
 */
  __pyx_r = ((NPY_DATETIMEUNIT)((PyDatetimeScalarObject *)__pyx_v_obj)->obmeta.base);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1049
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "cantera/_onedim.pyx":18
 * cdef class Domain1D:
 *     _domain_type = "none"
 *     def __cinit__(self, _SolutionBase phase not None, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self.domain = NULL
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_8Domain1D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_8Domain1D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __pyx_v_args = __Pyx_ArgsSlice_VARARGS(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
    __Pyx_RefNannyFinishContext();
    return -1;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phase,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phase)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 18, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, used_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 18, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_phase = ((struct __pyx_obj_7cantera_12solutionbase__SolutionBase *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 18, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_phase), __pyx_ptype_7cantera_12solutionbase__SolutionBase, 0, "phase", 0))) __PYX_ERR(0, 18, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D___cinit__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_phase, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_8Domain1D___cinit__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/_onedim.pyx":19
 *     _domain_type = "none"
 *     def __cinit__(self, _SolutionBase phase not None, *args, **kwargs):
 *         self.domain = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, phase, *args, **kwargs):
 */
  __pyx_v_self->domain = NULL;

  /* "cantera/_onedim.pyx":18
 * cdef class Domain1D:
 *     _domain_type = "none"
 *     def __cinit__(self, _SolutionBase phase not None, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self.domain = NULL
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":21
 *         self.domain = NULL
 * 
 *     def __init__(self, phase, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._weakref_proxy = _WeakrefProxy()
 *         if self.domain is NULL:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_8Domain1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_8Domain1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_phase = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __pyx_v_args = __Pyx_ArgsSlice_VARARGS(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
    __Pyx_RefNannyFinishContext();
    return -1;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phase,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phase)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 21, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, used_pos_args, "__init__") < 0)) __PYX_ERR(0, 21, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_phase = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 21, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_2__init__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_phase, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_8Domain1D_2__init__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_phase, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/_onedim.pyx":22
 * 
 *     def __init__(self, phase, *args, **kwargs):
 *         self._weakref_proxy = _WeakrefProxy()             # <<<<<<<<<<<<<<
 *         if self.domain is NULL:
 *             raise TypeError("Can't instantiate abstract class Domain1D.")
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_WeakrefProxy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 22, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 22, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_weakref_proxy);
  __Pyx_DECREF(__pyx_v_self->_weakref_proxy);
  __pyx_v_self->_weakref_proxy = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":23
 *     def __init__(self, phase, *args, **kwargs):
 *         self._weakref_proxy = _WeakrefProxy()
 *         if self.domain is NULL:             # <<<<<<<<<<<<<<
 *             raise TypeError("Can't instantiate abstract class Domain1D.")
 * 
 */
  __pyx_t_5 = (__pyx_v_self->domain == NULL);
  if (unlikely(__pyx_t_5)) {

    /* "cantera/_onedim.pyx":24
 *         self._weakref_proxy = _WeakrefProxy()
 *         if self.domain is NULL:
 *             raise TypeError("Can't instantiate abstract class Domain1D.")             # <<<<<<<<<<<<<<
 * 
 *         self.gas = phase
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__3, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 24, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 24, __pyx_L1_error)

    /* "cantera/_onedim.pyx":23
 *     def __init__(self, phase, *args, **kwargs):
 *         self._weakref_proxy = _WeakrefProxy()
 *         if self.domain is NULL:             # <<<<<<<<<<<<<<
 *             raise TypeError("Can't instantiate abstract class Domain1D.")
 * 
 */
  }

  /* "cantera/_onedim.pyx":26
 *             raise TypeError("Can't instantiate abstract class Domain1D.")
 * 
 *         self.gas = phase             # <<<<<<<<<<<<<<
 *         # Block species from being added to the phase as long as this object exists
 *         self.gas._references[self._weakref_proxy] = True
 */
  if (!(likely(((__pyx_v_phase) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_phase, __pyx_ptype_7cantera_12solutionbase__SolutionBase))))) __PYX_ERR(0, 26, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_phase;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->gas);
  __Pyx_DECREF((PyObject *)__pyx_v_self->gas);
  __pyx_v_self->gas = ((struct __pyx_obj_7cantera_12solutionbase__SolutionBase *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":28
 *         self.gas = phase
 *         # Block species from being added to the phase as long as this object exists
 *         self.gas._references[self._weakref_proxy] = True             # <<<<<<<<<<<<<<
 *         self.set_default_tolerances()
 * 
 */
  if (unlikely((PyObject_SetItem(__pyx_v_self->gas->_references, __pyx_v_self->_weakref_proxy, Py_True) < 0))) __PYX_ERR(0, 28, __pyx_L1_error)

  /* "cantera/_onedim.pyx":29
 *         # Block species from being added to the phase as long as this object exists
 *         self.gas._references[self._weakref_proxy] = True
 *         self.set_default_tolerances()             # <<<<<<<<<<<<<<
 * 
 *     property phase:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_default_tolerances); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 29, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":21
 *         self.domain = NULL
 * 
 *     def __init__(self, phase, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self._weakref_proxy = _WeakrefProxy()
 *         if self.domain is NULL:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":35
 *         Phase describing the domain (that is, a gas phase or surface phase).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.gas
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_5phase_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_5phase_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_5phase___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_5phase___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":36
 *         """
 *         def __get__(self):
 *             return self.gas             # <<<<<<<<<<<<<<
 * 
 *     property index:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_self->gas);
  __pyx_r = ((PyObject *)__pyx_v_self->gas);
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":35
 *         Phase describing the domain (that is, a gas phase or surface phase).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.gas
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":43
 *         of a stack.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.domain.domainIndex()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_5index_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_5index_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_5index___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_5index___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":44
 *         """
 *         def __get__(self):
 *             return self.domain.domainIndex()             # <<<<<<<<<<<<<<
 * 
 *     property domain_type:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->domain->domainIndex()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":43
 *         of a stack.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.domain.domainIndex()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.index.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":50
 *         String indicating the domain implemented.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.domain.domainType())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_11domain_type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_11domain_type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_11domain_type___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_11domain_type___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":51
 *         """
 *         def __get__(self):
 *             return pystr(self.domain.domainType())             # <<<<<<<<<<<<<<
 * 
 *     property n_components:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->domain->type()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 51, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":50
 *         String indicating the domain implemented.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.domain.domainType())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.domain_type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":55
 *     property n_components:
 *         """Number of solution components at each grid point."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.domain.nComponents()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_12n_components_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_12n_components_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_12n_components___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_12n_components___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":56
 *         """Number of solution components at each grid point."""
 *         def __get__(self):
 *             return self.domain.nComponents()             # <<<<<<<<<<<<<<
 * 
 *     property n_points:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->domain->nComponents()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":55
 *     property n_components:
 *         """Number of solution components at each grid point."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.domain.nComponents()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.n_components.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":60
 *     property n_points:
 *         """Number of grid points belonging to this domain."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.domain.nPoints()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_8n_points_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_8n_points_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_8n_points___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_8n_points___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":61
 *         """Number of grid points belonging to this domain."""
 *         def __get__(self):
 *             return self.domain.nPoints()             # <<<<<<<<<<<<<<
 * 
 *     def _to_array(self, SolutionArrayBase dest, cbool normalize):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_self->domain->nPoints()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 61, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":60
 *     property n_points:
 *         """Number of grid points belonging to this domain."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.domain.nPoints()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.n_points.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":63
 *             return self.domain.nPoints()
 * 
 *     def _to_array(self, SolutionArrayBase dest, cbool normalize):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve domain data as a `SolutionArray` object. Service method used by
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_5_to_array(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_4_to_array, "\n        Retrieve domain data as a `SolutionArray` object. Service method used by\n        `FlameBase.to_array`, which adds information not available in Cython.\n\n        .. versionadded:: 3.0\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_5_to_array = {"_to_array", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_5_to_array, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_4_to_array};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_5_to_array(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase *__pyx_v_dest = 0;
  bool __pyx_v_normalize;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_to_array (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dest,&__pyx_n_s_normalize,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dest)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 63, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_normalize)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 63, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_to_array", 1, 2, 2, 1); __PYX_ERR(0, 63, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_to_array") < 0)) __PYX_ERR(0, 63, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_dest = ((struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase *)values[0]);
    __pyx_v_normalize = __Pyx_PyObject_IsTrue(values[1]); if (unlikely((__pyx_v_normalize == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 63, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_to_array", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 63, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D._to_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_dest), __pyx_ptype_7cantera_12solutionbase_SolutionArrayBase, 1, "dest", 0))) __PYX_ERR(0, 63, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_4_to_array(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_dest, __pyx_v_normalize);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_4_to_array(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase *__pyx_v_dest, bool __pyx_v_normalize) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::shared_ptr<Cantera::SolutionArray>  __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_to_array", 0);

  /* "cantera/_onedim.pyx":70
 *         .. versionadded:: 3.0
 *         """
 *         dest._base = self.domain.toArray(normalize)             # <<<<<<<<<<<<<<
 *         dest.base = dest._base.get()
 *         return dest
 */
  try {
    __pyx_t_1 = __pyx_v_self->domain->toArray(__pyx_v_normalize);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 70, __pyx_L1_error)
  }
  __pyx_v_dest->_base = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1);

  /* "cantera/_onedim.pyx":71
 *         """
 *         dest._base = self.domain.toArray(normalize)
 *         dest.base = dest._base.get()             # <<<<<<<<<<<<<<
 *         return dest
 * 
 */
  __pyx_v_dest->base = __pyx_v_dest->_base.get();

  /* "cantera/_onedim.pyx":72
 *         dest._base = self.domain.toArray(normalize)
 *         dest.base = dest._base.get()
 *         return dest             # <<<<<<<<<<<<<<
 * 
 *     def _from_array(self, SolutionArrayBase arr):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_dest);
  __pyx_r = ((PyObject *)__pyx_v_dest);
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":63
 *             return self.domain.nPoints()
 * 
 *     def _to_array(self, SolutionArrayBase dest, cbool normalize):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve domain data as a `SolutionArray` object. Service method used by
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D._to_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":74
 *         return dest
 * 
 *     def _from_array(self, SolutionArrayBase arr):             # <<<<<<<<<<<<<<
 *         """
 *         Restore domain data from a `SolutionArray` object. Service method used by
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_7_from_array(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_6_from_array, "\n        Restore domain data from a `SolutionArray` object. Service method used by\n        `FlameBase.from_array`.\n\n        .. versionadded:: 3.0\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_7_from_array = {"_from_array", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_7_from_array, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_6_from_array};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_7_from_array(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase *__pyx_v_arr = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_array (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_arr,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_arr)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 74, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_array") < 0)) __PYX_ERR(0, 74, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_arr = ((struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_array", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 74, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D._from_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_arr), __pyx_ptype_7cantera_12solutionbase_SolutionArrayBase, 1, "arr", 0))) __PYX_ERR(0, 74, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_6_from_array(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_arr);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_6_from_array(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_array", 0);

  /* "cantera/_onedim.pyx":81
 *         .. versionadded:: 3.0
 *         """
 *         self.domain.fromArray(arr._base)             # <<<<<<<<<<<<<<
 * 
 *     def component_name(self, int n):
 */
  try {
    __pyx_v_self->domain->fromArray(__pyx_v_arr->_base);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 81, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":74
 *         return dest
 * 
 *     def _from_array(self, SolutionArrayBase arr):             # <<<<<<<<<<<<<<
 *         """
 *         Restore domain data from a `SolutionArray` object. Service method used by
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D._from_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":83
 *         self.domain.fromArray(arr._base)
 * 
 *     def component_name(self, int n):             # <<<<<<<<<<<<<<
 *         """Name of the nth component."""
 *         return pystr(self.domain.componentName(n))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_9component_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_8component_name, "Name of the nth component.");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_9component_name = {"component_name", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_9component_name, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_8component_name};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_9component_name(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  int __pyx_v_n;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("component_name (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_n,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_n)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 83, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "component_name") < 0)) __PYX_ERR(0, 83, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_n = __Pyx_PyInt_As_int(values[0]); if (unlikely((__pyx_v_n == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 83, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("component_name", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 83, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.component_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_8component_name(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_n);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_8component_name(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, int __pyx_v_n) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("component_name", 0);

  /* "cantera/_onedim.pyx":85
 *     def component_name(self, int n):
 *         """Name of the nth component."""
 *         return pystr(self.domain.componentName(n))             # <<<<<<<<<<<<<<
 * 
 *     property component_names:
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->domain->componentName(__pyx_v_n);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 85, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_7cantera_6_utils_pystr(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 85, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":83
 *         self.domain.fromArray(arr._base)
 * 
 *     def component_name(self, int n):             # <<<<<<<<<<<<<<
 *         """Name of the nth component."""
 *         return pystr(self.domain.componentName(n))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.component_name", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":89
 *     property component_names:
 *         """List of the names of all components of this domain."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return [self.component_name(n) for n in range(self.n_components)]
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_15component_names_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_15component_names_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_15component_names___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_15component_names___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_7genexpr__pyx_v_n = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":90
 *         """List of the names of all components of this domain."""
 *         def __get__(self):
 *             return [self.component_name(n) for n in range(self.n_components)]             # <<<<<<<<<<<<<<
 * 
 *     def component_index(self, str name):
 */
  __Pyx_XDECREF(__pyx_r);
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 90, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_components); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 90, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 90, __pyx_L5_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
      __pyx_t_5 = NULL;
    } else {
      __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 90, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 90, __pyx_L5_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_5)) {
        if (likely(PyList_CheckExact(__pyx_t_2))) {
          if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 90, __pyx_L5_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 90, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 90, __pyx_L5_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 90, __pyx_L5_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_5(__pyx_t_2);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 90, __pyx_L5_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_7genexpr__pyx_v_n, __pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_name); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 90, __pyx_L5_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_7genexpr__pyx_v_n};
        __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 90, __pyx_L5_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_3))) __PYX_ERR(0, 90, __pyx_L5_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_n); __pyx_7genexpr__pyx_v_n = 0;
    goto __pyx_L9_exit_scope;
    __pyx_L5_error:;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_n); __pyx_7genexpr__pyx_v_n = 0;
    goto __pyx_L1_error;
    __pyx_L9_exit_scope:;
  } /* exit inner scope */
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":89
 *     property component_names:
 *         """List of the names of all components of this domain."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return [self.component_name(n) for n in range(self.n_components)]
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.component_names.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_7genexpr__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":92
 *             return [self.component_name(n) for n in range(self.n_components)]
 * 
 *     def component_index(self, str name):             # <<<<<<<<<<<<<<
 *         """Index of the component with name 'name'"""
 *         return self.domain.componentIndex(stringify(name))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_11component_index(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_10component_index, "Index of the component with name 'name'");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_11component_index = {"component_index", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_11component_index, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_10component_index};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_11component_index(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_name = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("component_index (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_name,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_name)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 92, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "component_index") < 0)) __PYX_ERR(0, 92, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_name = ((PyObject*)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("component_index", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 92, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.component_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_name), (&PyUnicode_Type), 1, "name", 1))) __PYX_ERR(0, 92, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_10component_index(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_10component_index(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_name) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  size_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("component_index", 0);

  /* "cantera/_onedim.pyx":94
 *     def component_index(self, str name):
 *         """Index of the component with name 'name'"""
 *         return self.domain.componentIndex(stringify(name))             # <<<<<<<<<<<<<<
 * 
 *     def set_bounds(self, *, default=None, Y=None, **kwargs):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_name); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 94, __pyx_L1_error)
  try {
    __pyx_t_2 = __pyx_v_self->domain->componentIndex(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 94, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":92
 *             return [self.component_name(n) for n in range(self.n_components)]
 * 
 *     def component_index(self, str name):             # <<<<<<<<<<<<<<
 *         """Index of the component with name 'name'"""
 *         return self.domain.componentIndex(stringify(name))
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.component_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":96
 *         return self.domain.componentIndex(stringify(name))
 * 
 *     def set_bounds(self, *, default=None, Y=None, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Set the lower and upper bounds on the solution.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_13set_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_12set_bounds, "\n        Set the lower and upper bounds on the solution.\n\n        The argument list should consist of keyword/value pairs, with\n        component names as keywords and (lower bound, upper bound) tuples as\n        the values.  The keyword ``default`` may be used to specify default\n        bounds for all unspecified components. The keyword ``Y`` can be used to\n        stand for all species mass fractions in flow domains.\n\n        >>> d.set_bounds(default=(0, 1), Y=(-1.0e-5, 2.0))\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_13set_bounds = {"set_bounds", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_13set_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_12set_bounds};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_13set_bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_default = 0;
  PyObject *__pyx_v_Y = 0;
  PyObject *__pyx_v_kwargs = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_bounds (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_default,&__pyx_n_s_Y,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      if (kw_args > 0 && (kw_args <= 2)) {
        Py_ssize_t index;
        for (index = 0; index < 2 && kw_args > 0; index++) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
          if (value) { values[index] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 96, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, 0, "set_bounds") < 0)) __PYX_ERR(0, 96, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 0)) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_default = values[0];
    __pyx_v_Y = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_bounds", 1, 0, 0, __pyx_nargs); __PYX_ERR(0, 96, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.set_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_12set_bounds(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_default, __pyx_v_Y, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_12set_bounds(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_default, PyObject *__pyx_v_Y, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_v_k0 = NULL;
  PyObject *__pyx_v_name = NULL;
  PyObject *__pyx_v_lower = NULL;
  PyObject *__pyx_v_upper = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  PyObject *(*__pyx_t_5)(PyObject *);
  size_t __pyx_t_6;
  double __pyx_t_7;
  double __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  int __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_t_14;
  PyObject *(*__pyx_t_15)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_bounds", 0);

  /* "cantera/_onedim.pyx":108
 *         >>> d.set_bounds(default=(0, 1), Y=(-1.0e-5, 2.0))
 *         """
 *         if default is not None:             # <<<<<<<<<<<<<<
 *             for n in range(self.n_components):
 *                 self.domain.setBounds(n, default[0], default[1])
 */
  __pyx_t_1 = (__pyx_v_default != Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":109
 *         """
 *         if default is not None:
 *             for n in range(self.n_components):             # <<<<<<<<<<<<<<
 *                 self.domain.setBounds(n, default[0], default[1])
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_components); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
      __pyx_t_5 = NULL;
    } else {
      __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 109, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 109, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_5)) {
        if (likely(PyList_CheckExact(__pyx_t_2))) {
          if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 109, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 109, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 109, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_5(__pyx_t_2);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 109, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_n, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "cantera/_onedim.pyx":110
 *         if default is not None:
 *             for n in range(self.n_components):
 *                 self.domain.setBounds(n, default[0], default[1])             # <<<<<<<<<<<<<<
 * 
 *         if Y is not None:
 */
      __pyx_t_6 = __Pyx_PyInt_As_size_t(__pyx_v_n); if (unlikely((__pyx_t_6 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 110, __pyx_L1_error)
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_default, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 110, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 110, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_default, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 110, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 110, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_v_self->domain->setBounds(__pyx_t_6, __pyx_t_7, __pyx_t_8);

      /* "cantera/_onedim.pyx":109
 *         """
 *         if default is not None:
 *             for n in range(self.n_components):             # <<<<<<<<<<<<<<
 *                 self.domain.setBounds(n, default[0], default[1])
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":108
 *         >>> d.set_bounds(default=(0, 1), Y=(-1.0e-5, 2.0))
 *         """
 *         if default is not None:             # <<<<<<<<<<<<<<
 *             for n in range(self.n_components):
 *                 self.domain.setBounds(n, default[0], default[1])
 */
  }

  /* "cantera/_onedim.pyx":112
 *                 self.domain.setBounds(n, default[0], default[1])
 * 
 *         if Y is not None:             # <<<<<<<<<<<<<<
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):
 */
  __pyx_t_1 = (__pyx_v_Y != Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":113
 * 
 *         if Y is not None:
 *             k0 = self.component_index(self.gas.species_name(0))             # <<<<<<<<<<<<<<
 *             for n in range(k0, k0 + self.gas.n_species):
 *                 self.domain.setBounds(n, Y[0], Y[1])
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->gas), __pyx_n_s_species_name); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_11 = NULL;
    __pyx_t_12 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
        __pyx_t_12 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_int_0};
      __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_12, 1+__pyx_t_12);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 113, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __pyx_t_10 = NULL;
    __pyx_t_12 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_12 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_t_9};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_12, 1+__pyx_t_12);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 113, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_v_k0 = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":114
 *         if Y is not None:
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):             # <<<<<<<<<<<<<<
 *                 self.domain.setBounds(n, Y[0], Y[1])
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->gas), __pyx_n_s_n_species); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyNumber_Add(__pyx_v_k0, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_k0);
    __Pyx_GIVEREF(__pyx_v_k0);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_k0);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (likely(PyList_CheckExact(__pyx_t_3)) || PyTuple_CheckExact(__pyx_t_3)) {
      __pyx_t_2 = __pyx_t_3; __Pyx_INCREF(__pyx_t_2); __pyx_t_4 = 0;
      __pyx_t_5 = NULL;
    } else {
      __pyx_t_4 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 114, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 114, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    for (;;) {
      if (likely(!__pyx_t_5)) {
        if (likely(PyList_CheckExact(__pyx_t_2))) {
          if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 114, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        } else {
          if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_4); __Pyx_INCREF(__pyx_t_3); __pyx_t_4++; if (unlikely((0 < 0))) __PYX_ERR(0, 114, __pyx_L1_error)
          #else
          __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 114, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
        }
      } else {
        __pyx_t_3 = __pyx_t_5(__pyx_t_2);
        if (unlikely(!__pyx_t_3)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 114, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_3);
      }
      __Pyx_XDECREF_SET(__pyx_v_n, __pyx_t_3);
      __pyx_t_3 = 0;

      /* "cantera/_onedim.pyx":115
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):
 *                 self.domain.setBounds(n, Y[0], Y[1])             # <<<<<<<<<<<<<<
 * 
 *         for name,(lower,upper) in kwargs.items():
 */
      __pyx_t_6 = __Pyx_PyInt_As_size_t(__pyx_v_n); if (unlikely((__pyx_t_6 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 115, __pyx_L1_error)
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_Y, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 115, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 115, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_Y, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 115, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 115, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_v_self->domain->setBounds(__pyx_t_6, __pyx_t_8, __pyx_t_7);

      /* "cantera/_onedim.pyx":114
 *         if Y is not None:
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):             # <<<<<<<<<<<<<<
 *                 self.domain.setBounds(n, Y[0], Y[1])
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":112
 *                 self.domain.setBounds(n, default[0], default[1])
 * 
 *         if Y is not None:             # <<<<<<<<<<<<<<
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):
 */
  }

  /* "cantera/_onedim.pyx":117
 *                 self.domain.setBounds(n, Y[0], Y[1])
 * 
 *         for name,(lower,upper) in kwargs.items():             # <<<<<<<<<<<<<<
 *             self.domain.setBounds(self.component_index(name), lower, upper)
 * 
 */
  __pyx_t_4 = 0;
  __pyx_t_3 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, __pyx_n_s_items, (&__pyx_t_13), (&__pyx_t_12)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2);
  __pyx_t_2 = __pyx_t_3;
  __pyx_t_3 = 0;
  while (1) {
    __pyx_t_14 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_13, &__pyx_t_4, &__pyx_t_3, &__pyx_t_9, NULL, __pyx_t_12);
    if (unlikely(__pyx_t_14 == 0)) break;
    if (unlikely(__pyx_t_14 == -1)) __PYX_ERR(0, 117, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_3);
    __pyx_t_3 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_9))) || (PyList_CheckExact(__pyx_t_9))) {
      PyObject* sequence = __pyx_t_9;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 117, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_10 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_3 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_10 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_10);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 117, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 117, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      #endif
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_11 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 117, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_15 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_11);
      index = 0; __pyx_t_3 = __pyx_t_15(__pyx_t_11); if (unlikely(!__pyx_t_3)) goto __pyx_L13_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_10 = __pyx_t_15(__pyx_t_11); if (unlikely(!__pyx_t_10)) goto __pyx_L13_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_10);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_15(__pyx_t_11), 2) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
      __pyx_t_15 = NULL;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      goto __pyx_L14_unpacking_done;
      __pyx_L13_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_15 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 117, __pyx_L1_error)
      __pyx_L14_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_lower, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_upper, __pyx_t_10);
    __pyx_t_10 = 0;

    /* "cantera/_onedim.pyx":118
 * 
 *         for name,(lower,upper) in kwargs.items():
 *             self.domain.setBounds(self.component_index(name), lower, upper)             # <<<<<<<<<<<<<<
 * 
 *     def set_steady_tolerances(self, *, default=None, Y=None, abs=None, rel=None,
 */
    __pyx_t_10 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 118, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __pyx_t_3 = NULL;
    __pyx_t_14 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_10);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_10, function);
        __pyx_t_14 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_name};
      __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_14, 1+__pyx_t_14);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 118, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __pyx_t_6 = __Pyx_PyInt_As_size_t(__pyx_t_9); if (unlikely((__pyx_t_6 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 118, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_v_lower); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 118, __pyx_L1_error)
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_v_upper); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 118, __pyx_L1_error)
    __pyx_v_self->domain->setBounds(__pyx_t_6, __pyx_t_7, __pyx_t_8);
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":96
 *         return self.domain.componentIndex(stringify(name))
 * 
 *     def set_bounds(self, *, default=None, Y=None, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Set the lower and upper bounds on the solution.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.set_bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XDECREF(__pyx_v_k0);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_lower);
  __Pyx_XDECREF(__pyx_v_upper);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":120
 *             self.domain.setBounds(self.component_index(name), lower, upper)
 * 
 *     def set_steady_tolerances(self, *, default=None, Y=None, abs=None, rel=None,             # <<<<<<<<<<<<<<
 *                               **kwargs):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_15set_steady_tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_14set_steady_tolerances, "\n        Set the error tolerances for the steady-state problem.\n\n        The argument list should consist of keyword/value pairs, with component names as\n        keywords and (relative tolerance, absolute tolerance) tuples as the values.\n        The keyword ``default`` may be used to specify default bounds for all\n        unspecified components. The keyword ``Y`` can be used to stand for all\n        species mass fractions in flow domains. Alternatively, the keywords\n        ``abs`` and ``rel`` can be used to specify arrays for the absolute and\n        relative tolerances for each solution component.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_15set_steady_tolerances = {"set_steady_tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_15set_steady_tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_14set_steady_tolerances};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_15set_steady_tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_default = 0;
  PyObject *__pyx_v_Y = 0;
  PyObject *__pyx_v_abs = 0;
  PyObject *__pyx_v_rel = 0;
  PyObject *__pyx_v_kwargs = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_steady_tolerances (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_default,&__pyx_n_s_Y,&__pyx_n_s_abs,&__pyx_n_s_rel,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      if (kw_args > 0 && (kw_args <= 4)) {
        Py_ssize_t index;
        for (index = 0; index < 4 && kw_args > 0; index++) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
          if (value) { values[index] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 120, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, 0, "set_steady_tolerances") < 0)) __PYX_ERR(0, 120, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 0)) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_default = values[0];
    __pyx_v_Y = values[1];
    __pyx_v_abs = values[2];
    __pyx_v_rel = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_steady_tolerances", 1, 0, 0, __pyx_nargs); __PYX_ERR(0, 120, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.set_steady_tolerances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_14set_steady_tolerances(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_default, __pyx_v_Y, __pyx_v_abs, __pyx_v_rel, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_14set_steady_tolerances(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_default, PyObject *__pyx_v_Y, PyObject *__pyx_v_abs, PyObject *__pyx_v_rel, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_v_r = NULL;
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_k0 = NULL;
  PyObject *__pyx_v_name = NULL;
  PyObject *__pyx_v_rtol = NULL;
  PyObject *__pyx_v_atol = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  double __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *(*__pyx_t_14)(PyObject *);
  size_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  int __pyx_t_17;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_steady_tolerances", 0);
  __Pyx_INCREF(__pyx_v_abs);
  __Pyx_INCREF(__pyx_v_rel);

  /* "cantera/_onedim.pyx":133
 *         relative tolerances for each solution component.
 *         """
 *         self.have_user_tolerances = True             # <<<<<<<<<<<<<<
 *         if default is not None:
 *             self.domain.setSteadyTolerances(default[0], default[1])
 */
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __Pyx_DECREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __pyx_v_self->have_user_tolerances = ((PyBoolObject *)Py_True);

  /* "cantera/_onedim.pyx":134
 *         """
 *         self.have_user_tolerances = True
 *         if default is not None:             # <<<<<<<<<<<<<<
 *             self.domain.setSteadyTolerances(default[0], default[1])
 * 
 */
  __pyx_t_1 = (__pyx_v_default != Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":135
 *         self.have_user_tolerances = True
 *         if default is not None:
 *             self.domain.setSteadyTolerances(default[0], default[1])             # <<<<<<<<<<<<<<
 * 
 *         if abs is not None or rel is not None:
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_default, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_default, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->domain->setSteadyTolerances(__pyx_t_3, __pyx_t_4);

    /* "cantera/_onedim.pyx":134
 *         """
 *         self.have_user_tolerances = True
 *         if default is not None:             # <<<<<<<<<<<<<<
 *             self.domain.setSteadyTolerances(default[0], default[1])
 * 
 */
  }

  /* "cantera/_onedim.pyx":137
 *             self.domain.setSteadyTolerances(default[0], default[1])
 * 
 *         if abs is not None or rel is not None:             # <<<<<<<<<<<<<<
 *             if rel is None:
 *                 rel = self.steady_reltol()
 */
  __pyx_t_5 = (__pyx_v_abs != Py_None);
  if (!__pyx_t_5) {
  } else {
    __pyx_t_1 = __pyx_t_5;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_5 = (__pyx_v_rel != Py_None);
  __pyx_t_1 = __pyx_t_5;
  __pyx_L5_bool_binop_done:;
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":138
 * 
 *         if abs is not None or rel is not None:
 *             if rel is None:             # <<<<<<<<<<<<<<
 *                 rel = self.steady_reltol()
 *             if abs is None:
 */
    __pyx_t_1 = (__pyx_v_rel == Py_None);
    if (__pyx_t_1) {

      /* "cantera/_onedim.pyx":139
 *         if abs is not None or rel is not None:
 *             if rel is None:
 *                 rel = self.steady_reltol()             # <<<<<<<<<<<<<<
 *             if abs is None:
 *                 abs = self.steady_abstol()
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_steady_reltol); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 139, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_7, };
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 139, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF_SET(__pyx_v_rel, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "cantera/_onedim.pyx":138
 * 
 *         if abs is not None or rel is not None:
 *             if rel is None:             # <<<<<<<<<<<<<<
 *                 rel = self.steady_reltol()
 *             if abs is None:
 */
    }

    /* "cantera/_onedim.pyx":140
 *             if rel is None:
 *                 rel = self.steady_reltol()
 *             if abs is None:             # <<<<<<<<<<<<<<
 *                 abs = self.steady_abstol()
 *             assert len(abs) == len(rel) == self.n_components
 */
    __pyx_t_1 = (__pyx_v_abs == Py_None);
    if (__pyx_t_1) {

      /* "cantera/_onedim.pyx":141
 *                 rel = self.steady_reltol()
 *             if abs is None:
 *                 abs = self.steady_abstol()             # <<<<<<<<<<<<<<
 *             assert len(abs) == len(rel) == self.n_components
 *             for n, (r, a) in enumerate(zip(rel, abs)):
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_steady_abstol); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 141, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_7, };
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 141, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF_SET(__pyx_v_abs, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "cantera/_onedim.pyx":140
 *             if rel is None:
 *                 rel = self.steady_reltol()
 *             if abs is None:             # <<<<<<<<<<<<<<
 *                 abs = self.steady_abstol()
 *             assert len(abs) == len(rel) == self.n_components
 */
    }

    /* "cantera/_onedim.pyx":142
 *             if abs is None:
 *                 abs = self.steady_abstol()
 *             assert len(abs) == len(rel) == self.n_components             # <<<<<<<<<<<<<<
 *             for n, (r, a) in enumerate(zip(rel, abs)):
 *                 self.domain.setSteadyTolerances(r, a, n)
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(__pyx_assertions_enabled())) {
      __pyx_t_9 = PyObject_Length(__pyx_v_abs); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 142, __pyx_L1_error)
      __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 142, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_9 = PyObject_Length(__pyx_v_rel); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 142, __pyx_L1_error)
      __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 142, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PyObject_RichCompare(__pyx_t_2, __pyx_t_6, Py_EQ); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 142, __pyx_L1_error)
      if (__Pyx_PyObject_IsTrue(__pyx_t_7)) {
        __Pyx_DECREF(__pyx_t_7);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_components); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 142, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_7 = PyObject_RichCompare(__pyx_t_6, __pyx_t_10, Py_EQ); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 142, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 142, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) {
        __Pyx_Raise(__pyx_builtin_AssertionError, 0, 0, 0);
        __PYX_ERR(0, 142, __pyx_L1_error)
      }
    }
    #else
    if ((1)); else __PYX_ERR(0, 142, __pyx_L1_error)
    #endif

    /* "cantera/_onedim.pyx":143
 *                 abs = self.steady_abstol()
 *             assert len(abs) == len(rel) == self.n_components
 *             for n, (r, a) in enumerate(zip(rel, abs)):             # <<<<<<<<<<<<<<
 *                 self.domain.setSteadyTolerances(r, a, n)
 * 
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_t_7 = __pyx_int_0;
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_rel);
    __Pyx_GIVEREF(__pyx_v_rel);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_rel);
    __Pyx_INCREF(__pyx_v_abs);
    __Pyx_GIVEREF(__pyx_v_abs);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_abs);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_zip, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 143, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_6 = __pyx_t_2; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 143, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_6); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 143, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_6))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 143, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 143, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 143, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 143, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_11(__pyx_t_6);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 143, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
        PyObject* sequence = __pyx_t_2;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 143, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_10 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_12 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_10 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_12 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_12);
        #else
        __pyx_t_10 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_12 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        #endif
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_13 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 143, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_14 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_13);
        index = 0; __pyx_t_10 = __pyx_t_14(__pyx_t_13); if (unlikely(!__pyx_t_10)) goto __pyx_L11_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_10);
        index = 1; __pyx_t_12 = __pyx_t_14(__pyx_t_13); if (unlikely(!__pyx_t_12)) goto __pyx_L11_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_12);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_13), 2) < 0) __PYX_ERR(0, 143, __pyx_L1_error)
        __pyx_t_14 = NULL;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        goto __pyx_L12_unpacking_done;
        __pyx_L11_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_14 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 143, __pyx_L1_error)
        __pyx_L12_unpacking_done:;
      }
      __Pyx_XDECREF_SET(__pyx_v_r, __pyx_t_10);
      __pyx_t_10 = 0;
      __Pyx_XDECREF_SET(__pyx_v_a, __pyx_t_12);
      __pyx_t_12 = 0;
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_XDECREF_SET(__pyx_v_n, __pyx_t_7);
      __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 143, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7);
      __pyx_t_7 = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "cantera/_onedim.pyx":144
 *             assert len(abs) == len(rel) == self.n_components
 *             for n, (r, a) in enumerate(zip(rel, abs)):
 *                 self.domain.setSteadyTolerances(r, a, n)             # <<<<<<<<<<<<<<
 * 
 *         if Y is not None:
 */
      __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_r); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 144, __pyx_L1_error)
      __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 144, __pyx_L1_error)
      __pyx_t_15 = __Pyx_PyInt_As_size_t(__pyx_v_n); if (unlikely((__pyx_t_15 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 144, __pyx_L1_error)
      __pyx_v_self->domain->setSteadyTolerances(__pyx_t_4, __pyx_t_3, __pyx_t_15);

      /* "cantera/_onedim.pyx":143
 *                 abs = self.steady_abstol()
 *             assert len(abs) == len(rel) == self.n_components
 *             for n, (r, a) in enumerate(zip(rel, abs)):             # <<<<<<<<<<<<<<
 *                 self.domain.setSteadyTolerances(r, a, n)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":137
 *             self.domain.setSteadyTolerances(default[0], default[1])
 * 
 *         if abs is not None or rel is not None:             # <<<<<<<<<<<<<<
 *             if rel is None:
 *                 rel = self.steady_reltol()
 */
  }

  /* "cantera/_onedim.pyx":146
 *                 self.domain.setSteadyTolerances(r, a, n)
 * 
 *         if Y is not None:             # <<<<<<<<<<<<<<
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):
 */
  __pyx_t_1 = (__pyx_v_Y != Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":147
 * 
 *         if Y is not None:
 *             k0 = self.component_index(self.gas.species_name(0))             # <<<<<<<<<<<<<<
 *             for n in range(k0, k0 + self.gas.n_species):
 *                 self.domain.setSteadyTolerances(Y[0], Y[1], n)
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->gas), __pyx_n_s_species_name); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 147, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_10 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_int_0};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 147, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_12, __pyx_t_2};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 147, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __pyx_v_k0 = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":148
 *         if Y is not None:
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):             # <<<<<<<<<<<<<<
 *                 self.domain.setSteadyTolerances(Y[0], Y[1], n)
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->gas), __pyx_n_s_n_species); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = PyNumber_Add(__pyx_v_k0, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_k0);
    __Pyx_GIVEREF(__pyx_v_k0);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_k0);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_7, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 148, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
      __pyx_t_7 = __pyx_t_6; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 148, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_11 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_7); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 148, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_7))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 148, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 148, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 148, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        }
      } else {
        __pyx_t_6 = __pyx_t_11(__pyx_t_7);
        if (unlikely(!__pyx_t_6)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 148, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_6);
      }
      __Pyx_XDECREF_SET(__pyx_v_n, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "cantera/_onedim.pyx":149
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):
 *                 self.domain.setSteadyTolerances(Y[0], Y[1], n)             # <<<<<<<<<<<<<<
 * 
 *         for name, (rtol, atol) in kwargs.items():
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_Y, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 149, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 149, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_Y, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 149, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 149, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_15 = __Pyx_PyInt_As_size_t(__pyx_v_n); if (unlikely((__pyx_t_15 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 149, __pyx_L1_error)
      __pyx_v_self->domain->setSteadyTolerances(__pyx_t_3, __pyx_t_4, __pyx_t_15);

      /* "cantera/_onedim.pyx":148
 *         if Y is not None:
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):             # <<<<<<<<<<<<<<
 *                 self.domain.setSteadyTolerances(Y[0], Y[1], n)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":146
 *                 self.domain.setSteadyTolerances(r, a, n)
 * 
 *         if Y is not None:             # <<<<<<<<<<<<<<
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):
 */
  }

  /* "cantera/_onedim.pyx":151
 *                 self.domain.setSteadyTolerances(Y[0], Y[1], n)
 * 
 *         for name, (rtol, atol) in kwargs.items():             # <<<<<<<<<<<<<<
 *             self.domain.setSteadyTolerances(rtol, atol,
 *                                             self.component_index(name))
 */
  __pyx_t_9 = 0;
  __pyx_t_6 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, __pyx_n_s_items, (&__pyx_t_16), (&__pyx_t_8)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 151, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_6;
  __pyx_t_6 = 0;
  while (1) {
    __pyx_t_17 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_16, &__pyx_t_9, &__pyx_t_6, &__pyx_t_2, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_17 == 0)) break;
    if (unlikely(__pyx_t_17 == -1)) __PYX_ERR(0, 151, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_6);
    __pyx_t_6 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 151, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_12 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_6 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_12 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_12);
      #else
      __pyx_t_6 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 151, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_12 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 151, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_10 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 151, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_14 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_10);
      index = 0; __pyx_t_6 = __pyx_t_14(__pyx_t_10); if (unlikely(!__pyx_t_6)) goto __pyx_L20_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      index = 1; __pyx_t_12 = __pyx_t_14(__pyx_t_10); if (unlikely(!__pyx_t_12)) goto __pyx_L20_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_12);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_10), 2) < 0) __PYX_ERR(0, 151, __pyx_L1_error)
      __pyx_t_14 = NULL;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      goto __pyx_L21_unpacking_done;
      __pyx_L20_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_14 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 151, __pyx_L1_error)
      __pyx_L21_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_rtol, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_atol, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "cantera/_onedim.pyx":152
 * 
 *         for name, (rtol, atol) in kwargs.items():
 *             self.domain.setSteadyTolerances(rtol, atol,             # <<<<<<<<<<<<<<
 *                                             self.component_index(name))
 * 
 */
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_rtol); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 152, __pyx_L1_error)
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_atol); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 152, __pyx_L1_error)

    /* "cantera/_onedim.pyx":153
 *         for name, (rtol, atol) in kwargs.items():
 *             self.domain.setSteadyTolerances(rtol, atol,
 *                                             self.component_index(name))             # <<<<<<<<<<<<<<
 * 
 *     def set_transient_tolerances(self, *, default=None, Y=None, abs=None,
 */
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 153, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_6 = NULL;
    __pyx_t_17 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_17 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_v_name};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_17, 1+__pyx_t_17);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 153, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_t_15 = __Pyx_PyInt_As_size_t(__pyx_t_2); if (unlikely((__pyx_t_15 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 153, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":152
 * 
 *         for name, (rtol, atol) in kwargs.items():
 *             self.domain.setSteadyTolerances(rtol, atol,             # <<<<<<<<<<<<<<
 *                                             self.component_index(name))
 * 
 */
    __pyx_v_self->domain->setSteadyTolerances(__pyx_t_4, __pyx_t_3, __pyx_t_15);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "cantera/_onedim.pyx":120
 *             self.domain.setBounds(self.component_index(name), lower, upper)
 * 
 *     def set_steady_tolerances(self, *, default=None, Y=None, abs=None, rel=None,             # <<<<<<<<<<<<<<
 *                               **kwargs):
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.set_steady_tolerances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XDECREF(__pyx_v_r);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_k0);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_rtol);
  __Pyx_XDECREF(__pyx_v_atol);
  __Pyx_XDECREF(__pyx_v_abs);
  __Pyx_XDECREF(__pyx_v_rel);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":155
 *                                             self.component_index(name))
 * 
 *     def set_transient_tolerances(self, *, default=None, Y=None, abs=None,             # <<<<<<<<<<<<<<
 *                                  rel=None, **kwargs):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_17set_transient_tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_16set_transient_tolerances, "\n        Set the error tolerances for the steady-state problem.\n\n        The argument list should consist of keyword/value pairs, with component names as\n        keywords and (relative tolerance, absolute tolerance) tuples as the values.\n        The keyword ``default`` may be used to specify default bounds for all\n        unspecified components. The keyword ``Y`` can be used to stand for all\n        species mass fractions in flow domains. Alternatively, the keywords\n        ``abs`` and ``rel`` can be used to specify arrays for the absolute and\n        relative tolerances for each solution component.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_17set_transient_tolerances = {"set_transient_tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_17set_transient_tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_16set_transient_tolerances};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_17set_transient_tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_default = 0;
  PyObject *__pyx_v_Y = 0;
  PyObject *__pyx_v_abs = 0;
  PyObject *__pyx_v_rel = 0;
  PyObject *__pyx_v_kwargs = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_transient_tolerances (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_default,&__pyx_n_s_Y,&__pyx_n_s_abs,&__pyx_n_s_rel,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);

    /* "cantera/_onedim.pyx":156
 * 
 *     def set_transient_tolerances(self, *, default=None, Y=None, abs=None,
 *                                  rel=None, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Set the error tolerances for the steady-state problem.
 */
    values[3] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      if (kw_args > 0 && (kw_args <= 4)) {
        Py_ssize_t index;
        for (index = 0; index < 4 && kw_args > 0; index++) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
          if (value) { values[index] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 155, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, 0, "set_transient_tolerances") < 0)) __PYX_ERR(0, 155, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 0)) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_default = values[0];
    __pyx_v_Y = values[1];
    __pyx_v_abs = values[2];
    __pyx_v_rel = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_transient_tolerances", 1, 0, 0, __pyx_nargs); __PYX_ERR(0, 155, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.set_transient_tolerances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_16set_transient_tolerances(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_default, __pyx_v_Y, __pyx_v_abs, __pyx_v_rel, __pyx_v_kwargs);

  /* "cantera/_onedim.pyx":155
 *                                             self.component_index(name))
 * 
 *     def set_transient_tolerances(self, *, default=None, Y=None, abs=None,             # <<<<<<<<<<<<<<
 *                                  rel=None, **kwargs):
 *         """
 */

  /* function exit code */
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_16set_transient_tolerances(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_default, PyObject *__pyx_v_Y, PyObject *__pyx_v_abs, PyObject *__pyx_v_rel, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_v_r = NULL;
  PyObject *__pyx_v_a = NULL;
  PyObject *__pyx_v_k0 = NULL;
  PyObject *__pyx_v_name = NULL;
  PyObject *__pyx_v_rtol = NULL;
  PyObject *__pyx_v_atol = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  double __pyx_t_3;
  double __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  PyObject *(*__pyx_t_14)(PyObject *);
  size_t __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  int __pyx_t_17;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_transient_tolerances", 0);
  __Pyx_INCREF(__pyx_v_abs);
  __Pyx_INCREF(__pyx_v_rel);

  /* "cantera/_onedim.pyx":168
 *         relative tolerances for each solution component.
 *         """
 *         self.have_user_tolerances = True             # <<<<<<<<<<<<<<
 *         if default is not None:
 *             self.domain.setTransientTolerances(default[0], default[1])
 */
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __Pyx_DECREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __pyx_v_self->have_user_tolerances = ((PyBoolObject *)Py_True);

  /* "cantera/_onedim.pyx":169
 *         """
 *         self.have_user_tolerances = True
 *         if default is not None:             # <<<<<<<<<<<<<<
 *             self.domain.setTransientTolerances(default[0], default[1])
 * 
 */
  __pyx_t_1 = (__pyx_v_default != Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":170
 *         self.have_user_tolerances = True
 *         if default is not None:
 *             self.domain.setTransientTolerances(default[0], default[1])             # <<<<<<<<<<<<<<
 * 
 *         if abs is not None or rel is not None:
 */
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_default, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 170, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_default, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 170, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 170, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v_self->domain->setTransientTolerances(__pyx_t_3, __pyx_t_4);

    /* "cantera/_onedim.pyx":169
 *         """
 *         self.have_user_tolerances = True
 *         if default is not None:             # <<<<<<<<<<<<<<
 *             self.domain.setTransientTolerances(default[0], default[1])
 * 
 */
  }

  /* "cantera/_onedim.pyx":172
 *             self.domain.setTransientTolerances(default[0], default[1])
 * 
 *         if abs is not None or rel is not None:             # <<<<<<<<<<<<<<
 *             if rel is None:
 *                 rel = self.transient_reltol()
 */
  __pyx_t_5 = (__pyx_v_abs != Py_None);
  if (!__pyx_t_5) {
  } else {
    __pyx_t_1 = __pyx_t_5;
    goto __pyx_L5_bool_binop_done;
  }
  __pyx_t_5 = (__pyx_v_rel != Py_None);
  __pyx_t_1 = __pyx_t_5;
  __pyx_L5_bool_binop_done:;
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":173
 * 
 *         if abs is not None or rel is not None:
 *             if rel is None:             # <<<<<<<<<<<<<<
 *                 rel = self.transient_reltol()
 *             if abs is None:
 */
    __pyx_t_1 = (__pyx_v_rel == Py_None);
    if (__pyx_t_1) {

      /* "cantera/_onedim.pyx":174
 *         if abs is not None or rel is not None:
 *             if rel is None:
 *                 rel = self.transient_reltol()             # <<<<<<<<<<<<<<
 *             if abs is None:
 *                 abs = self.transient_abstol()
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transient_reltol); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 174, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_7, };
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 174, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF_SET(__pyx_v_rel, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "cantera/_onedim.pyx":173
 * 
 *         if abs is not None or rel is not None:
 *             if rel is None:             # <<<<<<<<<<<<<<
 *                 rel = self.transient_reltol()
 *             if abs is None:
 */
    }

    /* "cantera/_onedim.pyx":175
 *             if rel is None:
 *                 rel = self.transient_reltol()
 *             if abs is None:             # <<<<<<<<<<<<<<
 *                 abs = self.transient_abstol()
 *             assert len(abs) == len(rel) == self.n_components
 */
    __pyx_t_1 = (__pyx_v_abs == Py_None);
    if (__pyx_t_1) {

      /* "cantera/_onedim.pyx":176
 *                 rel = self.transient_reltol()
 *             if abs is None:
 *                 abs = self.transient_abstol()             # <<<<<<<<<<<<<<
 *             assert len(abs) == len(rel) == self.n_components
 *             for n, (r, a) in enumerate(zip(rel, abs)):
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transient_abstol); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 176, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = NULL;
      __pyx_t_8 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_7)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_7);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_8 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_7, };
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 0+__pyx_t_8);
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 176, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_DECREF_SET(__pyx_v_abs, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "cantera/_onedim.pyx":175
 *             if rel is None:
 *                 rel = self.transient_reltol()
 *             if abs is None:             # <<<<<<<<<<<<<<
 *                 abs = self.transient_abstol()
 *             assert len(abs) == len(rel) == self.n_components
 */
    }

    /* "cantera/_onedim.pyx":177
 *             if abs is None:
 *                 abs = self.transient_abstol()
 *             assert len(abs) == len(rel) == self.n_components             # <<<<<<<<<<<<<<
 *             for n, (r, a) in enumerate(zip(rel, abs)):
 *                 self.domain.setTransientTolerances(r, a, n)
 */
    #ifndef CYTHON_WITHOUT_ASSERTIONS
    if (unlikely(__pyx_assertions_enabled())) {
      __pyx_t_9 = PyObject_Length(__pyx_v_abs); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 177, __pyx_L1_error)
      __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_9); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 177, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_9 = PyObject_Length(__pyx_v_rel); if (unlikely(__pyx_t_9 == ((Py_ssize_t)-1))) __PYX_ERR(0, 177, __pyx_L1_error)
      __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_9); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 177, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_7 = PyObject_RichCompare(__pyx_t_2, __pyx_t_6, Py_EQ); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 177, __pyx_L1_error)
      if (__Pyx_PyObject_IsTrue(__pyx_t_7)) {
        __Pyx_DECREF(__pyx_t_7);
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_components); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 177, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_7 = PyObject_RichCompare(__pyx_t_6, __pyx_t_10, Py_EQ); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 177, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      }
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 177, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (unlikely(!__pyx_t_1)) {
        __Pyx_Raise(__pyx_builtin_AssertionError, 0, 0, 0);
        __PYX_ERR(0, 177, __pyx_L1_error)
      }
    }
    #else
    if ((1)); else __PYX_ERR(0, 177, __pyx_L1_error)
    #endif

    /* "cantera/_onedim.pyx":178
 *                 abs = self.transient_abstol()
 *             assert len(abs) == len(rel) == self.n_components
 *             for n, (r, a) in enumerate(zip(rel, abs)):             # <<<<<<<<<<<<<<
 *                 self.domain.setTransientTolerances(r, a, n)
 * 
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_t_7 = __pyx_int_0;
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 178, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_INCREF(__pyx_v_rel);
    __Pyx_GIVEREF(__pyx_v_rel);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_v_rel);
    __Pyx_INCREF(__pyx_v_abs);
    __Pyx_GIVEREF(__pyx_v_abs);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_v_abs);
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_zip, __pyx_t_6, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 178, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (likely(PyList_CheckExact(__pyx_t_2)) || PyTuple_CheckExact(__pyx_t_2)) {
      __pyx_t_6 = __pyx_t_2; __Pyx_INCREF(__pyx_t_6); __pyx_t_9 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_6 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_6); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 178, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_6))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyList_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 178, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 178, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_6)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_2 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_9); __Pyx_INCREF(__pyx_t_2); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 178, __pyx_L1_error)
          #else
          __pyx_t_2 = PySequence_ITEM(__pyx_t_6, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 178, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          #endif
        }
      } else {
        __pyx_t_2 = __pyx_t_11(__pyx_t_6);
        if (unlikely(!__pyx_t_2)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 178, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_2);
      }
      if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
        PyObject* sequence = __pyx_t_2;
        Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
        if (unlikely(size != 2)) {
          if (size > 2) __Pyx_RaiseTooManyValuesError(2);
          else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
          __PYX_ERR(0, 178, __pyx_L1_error)
        }
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        if (likely(PyTuple_CheckExact(sequence))) {
          __pyx_t_10 = PyTuple_GET_ITEM(sequence, 0); 
          __pyx_t_12 = PyTuple_GET_ITEM(sequence, 1); 
        } else {
          __pyx_t_10 = PyList_GET_ITEM(sequence, 0); 
          __pyx_t_12 = PyList_GET_ITEM(sequence, 1); 
        }
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_12);
        #else
        __pyx_t_10 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 178, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_12 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 178, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_12);
        #endif
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      } else {
        Py_ssize_t index = -1;
        __pyx_t_13 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 178, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __pyx_t_14 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_13);
        index = 0; __pyx_t_10 = __pyx_t_14(__pyx_t_13); if (unlikely(!__pyx_t_10)) goto __pyx_L11_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_10);
        index = 1; __pyx_t_12 = __pyx_t_14(__pyx_t_13); if (unlikely(!__pyx_t_12)) goto __pyx_L11_unpacking_failed;
        __Pyx_GOTREF(__pyx_t_12);
        if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_13), 2) < 0) __PYX_ERR(0, 178, __pyx_L1_error)
        __pyx_t_14 = NULL;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        goto __pyx_L12_unpacking_done;
        __pyx_L11_unpacking_failed:;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __pyx_t_14 = NULL;
        if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
        __PYX_ERR(0, 178, __pyx_L1_error)
        __pyx_L12_unpacking_done:;
      }
      __Pyx_XDECREF_SET(__pyx_v_r, __pyx_t_10);
      __pyx_t_10 = 0;
      __Pyx_XDECREF_SET(__pyx_v_a, __pyx_t_12);
      __pyx_t_12 = 0;
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_XDECREF_SET(__pyx_v_n, __pyx_t_7);
      __pyx_t_2 = __Pyx_PyInt_AddObjC(__pyx_t_7, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 178, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7);
      __pyx_t_7 = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "cantera/_onedim.pyx":179
 *             assert len(abs) == len(rel) == self.n_components
 *             for n, (r, a) in enumerate(zip(rel, abs)):
 *                 self.domain.setTransientTolerances(r, a, n)             # <<<<<<<<<<<<<<
 * 
 *         if Y is not None:
 */
      __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_r); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L1_error)
      __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_a); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L1_error)
      __pyx_t_15 = __Pyx_PyInt_As_size_t(__pyx_v_n); if (unlikely((__pyx_t_15 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 179, __pyx_L1_error)
      __pyx_v_self->domain->setTransientTolerances(__pyx_t_4, __pyx_t_3, __pyx_t_15);

      /* "cantera/_onedim.pyx":178
 *                 abs = self.transient_abstol()
 *             assert len(abs) == len(rel) == self.n_components
 *             for n, (r, a) in enumerate(zip(rel, abs)):             # <<<<<<<<<<<<<<
 *                 self.domain.setTransientTolerances(r, a, n)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":172
 *             self.domain.setTransientTolerances(default[0], default[1])
 * 
 *         if abs is not None or rel is not None:             # <<<<<<<<<<<<<<
 *             if rel is None:
 *                 rel = self.transient_reltol()
 */
  }

  /* "cantera/_onedim.pyx":181
 *                 self.domain.setTransientTolerances(r, a, n)
 * 
 *         if Y is not None:             # <<<<<<<<<<<<<<
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):
 */
  __pyx_t_1 = (__pyx_v_Y != Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":182
 * 
 *         if Y is not None:
 *             k0 = self.component_index(self.gas.species_name(0))             # <<<<<<<<<<<<<<
 *             for n in range(k0, k0 + self.gas.n_species):
 *                 self.domain.setTransientTolerances(Y[0], Y[1], n)
 */
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->gas), __pyx_n_s_species_name); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_10 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_int_0};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 182, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_12, __pyx_t_2};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 182, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __pyx_v_k0 = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":183
 *         if Y is not None:
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):             # <<<<<<<<<<<<<<
 *                 self.domain.setTransientTolerances(Y[0], Y[1], n)
 * 
 */
    __pyx_t_7 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->gas), __pyx_n_s_n_species); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_6 = PyNumber_Add(__pyx_v_k0, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_7 = PyTuple_New(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_INCREF(__pyx_v_k0);
    __Pyx_GIVEREF(__pyx_v_k0);
    PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_v_k0);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_7, 1, __pyx_t_6);
    __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_range, __pyx_t_7, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
      __pyx_t_7 = __pyx_t_6; __Pyx_INCREF(__pyx_t_7); __pyx_t_9 = 0;
      __pyx_t_11 = NULL;
    } else {
      __pyx_t_9 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 183, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_11 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_7); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 183, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    for (;;) {
      if (likely(!__pyx_t_11)) {
        if (likely(PyList_CheckExact(__pyx_t_7))) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 183, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 183, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        } else {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_9); __Pyx_INCREF(__pyx_t_6); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 183, __pyx_L1_error)
          #else
          __pyx_t_6 = PySequence_ITEM(__pyx_t_7, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 183, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_6);
          #endif
        }
      } else {
        __pyx_t_6 = __pyx_t_11(__pyx_t_7);
        if (unlikely(!__pyx_t_6)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 183, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_6);
      }
      __Pyx_XDECREF_SET(__pyx_v_n, __pyx_t_6);
      __pyx_t_6 = 0;

      /* "cantera/_onedim.pyx":184
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):
 *                 self.domain.setTransientTolerances(Y[0], Y[1], n)             # <<<<<<<<<<<<<<
 * 
 *         for name, (rtol, atol) in kwargs.items():
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_Y, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 184, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 184, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_Y, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 184, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_6); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 184, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_15 = __Pyx_PyInt_As_size_t(__pyx_v_n); if (unlikely((__pyx_t_15 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 184, __pyx_L1_error)
      __pyx_v_self->domain->setTransientTolerances(__pyx_t_3, __pyx_t_4, __pyx_t_15);

      /* "cantera/_onedim.pyx":183
 *         if Y is not None:
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):             # <<<<<<<<<<<<<<
 *                 self.domain.setTransientTolerances(Y[0], Y[1], n)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":181
 *                 self.domain.setTransientTolerances(r, a, n)
 * 
 *         if Y is not None:             # <<<<<<<<<<<<<<
 *             k0 = self.component_index(self.gas.species_name(0))
 *             for n in range(k0, k0 + self.gas.n_species):
 */
  }

  /* "cantera/_onedim.pyx":186
 *                 self.domain.setTransientTolerances(Y[0], Y[1], n)
 * 
 *         for name, (rtol, atol) in kwargs.items():             # <<<<<<<<<<<<<<
 *             self.domain.setTransientTolerances(rtol, atol,
 *                                                self.component_index(name))
 */
  __pyx_t_9 = 0;
  __pyx_t_6 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, __pyx_n_s_items, (&__pyx_t_16), (&__pyx_t_8)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __pyx_t_7 = __pyx_t_6;
  __pyx_t_6 = 0;
  while (1) {
    __pyx_t_17 = __Pyx_dict_iter_next(__pyx_t_7, __pyx_t_16, &__pyx_t_9, &__pyx_t_6, &__pyx_t_2, NULL, __pyx_t_8);
    if (unlikely(__pyx_t_17 == 0)) break;
    if (unlikely(__pyx_t_17 == -1)) __PYX_ERR(0, 186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_name, __pyx_t_6);
    __pyx_t_6 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_2))) || (PyList_CheckExact(__pyx_t_2))) {
      PyObject* sequence = __pyx_t_2;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 186, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_12 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_6 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_12 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(__pyx_t_12);
      #else
      __pyx_t_6 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_12 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_12);
      #endif
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_10 = PyObject_GetIter(__pyx_t_2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 186, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_14 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_10);
      index = 0; __pyx_t_6 = __pyx_t_14(__pyx_t_10); if (unlikely(!__pyx_t_6)) goto __pyx_L20_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      index = 1; __pyx_t_12 = __pyx_t_14(__pyx_t_10); if (unlikely(!__pyx_t_12)) goto __pyx_L20_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_12);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_14(__pyx_t_10), 2) < 0) __PYX_ERR(0, 186, __pyx_L1_error)
      __pyx_t_14 = NULL;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      goto __pyx_L21_unpacking_done;
      __pyx_L20_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_14 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 186, __pyx_L1_error)
      __pyx_L21_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_rtol, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_XDECREF_SET(__pyx_v_atol, __pyx_t_12);
    __pyx_t_12 = 0;

    /* "cantera/_onedim.pyx":187
 * 
 *         for name, (rtol, atol) in kwargs.items():
 *             self.domain.setTransientTolerances(rtol, atol,             # <<<<<<<<<<<<<<
 *                                                self.component_index(name))
 * 
 */
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_rtol); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 187, __pyx_L1_error)
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_atol); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 187, __pyx_L1_error)

    /* "cantera/_onedim.pyx":188
 *         for name, (rtol, atol) in kwargs.items():
 *             self.domain.setTransientTolerances(rtol, atol,
 *                                                self.component_index(name))             # <<<<<<<<<<<<<<
 * 
 *     def set_default_tolerances(self):
 */
    __pyx_t_12 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_12);
    __pyx_t_6 = NULL;
    __pyx_t_17 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_12))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_12);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_12);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_12, function);
        __pyx_t_17 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_v_name};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_12, __pyx_callargs+1-__pyx_t_17, 1+__pyx_t_17);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 188, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
    }
    __pyx_t_15 = __Pyx_PyInt_As_size_t(__pyx_t_2); if (unlikely((__pyx_t_15 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 188, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":187
 * 
 *         for name, (rtol, atol) in kwargs.items():
 *             self.domain.setTransientTolerances(rtol, atol,             # <<<<<<<<<<<<<<
 *                                                self.component_index(name))
 * 
 */
    __pyx_v_self->domain->setTransientTolerances(__pyx_t_4, __pyx_t_3, __pyx_t_15);
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "cantera/_onedim.pyx":155
 *                                             self.component_index(name))
 * 
 *     def set_transient_tolerances(self, *, default=None, Y=None, abs=None,             # <<<<<<<<<<<<<<
 *                                  rel=None, **kwargs):
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.set_transient_tolerances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XDECREF(__pyx_v_r);
  __Pyx_XDECREF(__pyx_v_a);
  __Pyx_XDECREF(__pyx_v_k0);
  __Pyx_XDECREF(__pyx_v_name);
  __Pyx_XDECREF(__pyx_v_rtol);
  __Pyx_XDECREF(__pyx_v_atol);
  __Pyx_XDECREF(__pyx_v_abs);
  __Pyx_XDECREF(__pyx_v_rel);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":190
 *                                                self.component_index(name))
 * 
 *     def set_default_tolerances(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set all tolerances to their default values
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_19set_default_tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_18set_default_tolerances, "\n        Set all tolerances to their default values\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_19set_default_tolerances = {"set_default_tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_19set_default_tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_18set_default_tolerances};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_19set_default_tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_default_tolerances (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("set_default_tolerances", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "set_default_tolerances", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_18set_default_tolerances(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_18set_default_tolerances(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_default_tolerances", 0);

  /* "cantera/_onedim.pyx":194
 *         Set all tolerances to their default values
 *         """
 *         self.set_steady_tolerances(default=(1e-4, 1e-9))             # <<<<<<<<<<<<<<
 *         self.set_transient_tolerances(default=(1e-4, 1e-11))
 *         self.have_user_tolerances = False
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_steady_tolerances); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_default, __pyx_tuple__4) < 0) __PYX_ERR(0, 194, __pyx_L1_error)
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":195
 *         """
 *         self.set_steady_tolerances(default=(1e-4, 1e-9))
 *         self.set_transient_tolerances(default=(1e-4, 1e-11))             # <<<<<<<<<<<<<<
 *         self.have_user_tolerances = False
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_transient_tolerances); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_default, __pyx_tuple__5) < 0) __PYX_ERR(0, 195, __pyx_L1_error)
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":196
 *         self.set_steady_tolerances(default=(1e-4, 1e-9))
 *         self.set_transient_tolerances(default=(1e-4, 1e-11))
 *         self.have_user_tolerances = False             # <<<<<<<<<<<<<<
 * 
 *     def bounds(self, component):
 */
  __Pyx_INCREF(Py_False);
  __Pyx_GIVEREF(Py_False);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __Pyx_DECREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __pyx_v_self->have_user_tolerances = ((PyBoolObject *)Py_False);

  /* "cantera/_onedim.pyx":190
 *                                                self.component_index(name))
 * 
 *     def set_default_tolerances(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set all tolerances to their default values
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.set_default_tolerances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":198
 *         self.have_user_tolerances = False
 * 
 *     def bounds(self, component):             # <<<<<<<<<<<<<<
 *         """
 *         Return the (lower, upper) bounds for a solution component.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_21bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_20bounds, "\n        Return the (lower, upper) bounds for a solution component.\n\n        >>> d.bounds('T')\n        (200.0, 5000.0)\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_21bounds = {"bounds", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_21bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_20bounds};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_21bounds(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_component = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("bounds (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_component,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 198, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "bounds") < 0)) __PYX_ERR(0, 198, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_component = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("bounds", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 198, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_20bounds(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_component);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_20bounds(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component) {
  PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  size_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("bounds", 0);

  /* "cantera/_onedim.pyx":205
 *         (200.0, 5000.0)
 *         """
 *         n = self.component_index(component)             # <<<<<<<<<<<<<<
 *         return self.domain.lowerBound(n), self.domain.upperBound(n)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 205, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_component};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 205, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_n = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":206
 *         """
 *         n = self.component_index(component)
 *         return self.domain.lowerBound(n), self.domain.upperBound(n)             # <<<<<<<<<<<<<<
 * 
 *     def tolerances(self, component):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_v_n); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 206, __pyx_L1_error)
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->domain->lowerBound(__pyx_t_5)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_v_n); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 206, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->domain->upperBound(__pyx_t_5)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 206, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":198
 *         self.have_user_tolerances = False
 * 
 *     def bounds(self, component):             # <<<<<<<<<<<<<<
 *         """
 *         Return the (lower, upper) bounds for a solution component.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.bounds", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":208
 *         return self.domain.lowerBound(n), self.domain.upperBound(n)
 * 
 *     def tolerances(self, component):             # <<<<<<<<<<<<<<
 *         """
 *         Return the (relative, absolute) error tolerances for a solution
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_23tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_22tolerances, "\n        Return the (relative, absolute) error tolerances for a solution\n        component.\n\n        >>> rtol, atol = d.tolerances('u')\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_23tolerances = {"tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_23tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_22tolerances};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_23tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_component = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("tolerances (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_component,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 208, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "tolerances") < 0)) __PYX_ERR(0, 208, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_component = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("tolerances", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 208, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.tolerances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_22tolerances(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_component);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_22tolerances(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component) {
  PyObject *__pyx_v_k = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  size_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("tolerances", 0);

  /* "cantera/_onedim.pyx":215
 *         >>> rtol, atol = d.tolerances('u')
 *         """
 *         k = self.component_index(component)             # <<<<<<<<<<<<<<
 *         return self.domain.rtol(k), self.domain.atol(k)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 215, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_component};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 215, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_k = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":216
 *         """
 *         k = self.component_index(component)
 *         return self.domain.rtol(k), self.domain.atol(k)             # <<<<<<<<<<<<<<
 * 
 *     def steady_reltol(self, component=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_v_k); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 216, __pyx_L1_error)
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->domain->rtol(__pyx_t_5)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_v_k); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 216, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->domain->atol(__pyx_t_5)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 216, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":208
 *         return self.domain.lowerBound(n), self.domain.upperBound(n)
 * 
 *     def tolerances(self, component):             # <<<<<<<<<<<<<<
 *         """
 *         Return the (relative, absolute) error tolerances for a solution
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.tolerances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":218
 *         return self.domain.rtol(k), self.domain.atol(k)
 * 
 *     def steady_reltol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the relative error tolerance for the steady state problem for a
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_25steady_reltol(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_24steady_reltol, "\n        Return the relative error tolerance for the steady state problem for a\n        specified solution component, or all components if none is specified.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_25steady_reltol = {"steady_reltol", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_25steady_reltol, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_24steady_reltol};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_25steady_reltol(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_component = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("steady_reltol (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_component,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 218, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "steady_reltol") < 0)) __PYX_ERR(0, 218, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_component = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("steady_reltol", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 218, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.steady_reltol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_24steady_reltol(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_component);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_24steady_reltol(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component) {
  PyObject *__pyx_8genexpr1__pyx_v_n = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  size_t __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("steady_reltol", 0);

  /* "cantera/_onedim.pyx":223
 *         specified solution component, or all components if none is specified.
 *         """
 *         if component is None:             # <<<<<<<<<<<<<<
 *             return np.array([self.domain.steady_rtol(n)
 *                              for n in range(self.n_components)])
 */
  __pyx_t_1 = (__pyx_v_component == Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":224
 *         """
 *         if component is None:
 *             return np.array([self.domain.steady_rtol(n)             # <<<<<<<<<<<<<<
 *                              for n in range(self.n_components)])
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 224, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    { /* enter inner scope */
      __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 224, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);

      /* "cantera/_onedim.pyx":225
 *         if component is None:
 *             return np.array([self.domain.steady_rtol(n)
 *                              for n in range(self.n_components)])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.domain.steady_rtol(self.component_index(component))
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_components); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 225, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 225, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
        __pyx_t_5 = __pyx_t_6; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 225, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 225, __pyx_L6_error)
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 225, __pyx_L6_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 225, __pyx_L6_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 225, __pyx_L6_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 225, __pyx_L6_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          }
        } else {
          __pyx_t_6 = __pyx_t_8(__pyx_t_5);
          if (unlikely(!__pyx_t_6)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 225, __pyx_L6_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_6);
        }
        __Pyx_XDECREF_SET(__pyx_8genexpr1__pyx_v_n, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "cantera/_onedim.pyx":224
 *         """
 *         if component is None:
 *             return np.array([self.domain.steady_rtol(n)             # <<<<<<<<<<<<<<
 *                              for n in range(self.n_components)])
 *         else:
 */
        __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_8genexpr1__pyx_v_n); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 224, __pyx_L6_error)
        __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->domain->steady_rtol(__pyx_t_9)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 224, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_6);
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_6))) __PYX_ERR(0, 224, __pyx_L6_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "cantera/_onedim.pyx":225
 *         if component is None:
 *             return np.array([self.domain.steady_rtol(n)
 *                              for n in range(self.n_components)])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.domain.steady_rtol(self.component_index(component))
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_n); __pyx_8genexpr1__pyx_v_n = 0;
      goto __pyx_L10_exit_scope;
      __pyx_L6_error:;
      __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_n); __pyx_8genexpr1__pyx_v_n = 0;
      goto __pyx_L1_error;
      __pyx_L10_exit_scope:;
    } /* exit inner scope */
    __pyx_t_5 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_10 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 224, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":223
 *         specified solution component, or all components if none is specified.
 *         """
 *         if component is None:             # <<<<<<<<<<<<<<
 *             return np.array([self.domain.steady_rtol(n)
 *                              for n in range(self.n_components)])
 */
  }

  /* "cantera/_onedim.pyx":227
 *                              for n in range(self.n_components)])
 *         else:
 *             return self.domain.steady_rtol(self.component_index(component))             # <<<<<<<<<<<<<<
 * 
 *     def steady_abstol(self, component=None):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_10 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_component};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_t_2); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 227, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->domain->steady_rtol(__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 227, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "cantera/_onedim.pyx":218
 *         return self.domain.rtol(k), self.domain.atol(k)
 * 
 *     def steady_reltol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the relative error tolerance for the steady state problem for a
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.steady_reltol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":229
 *             return self.domain.steady_rtol(self.component_index(component))
 * 
 *     def steady_abstol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the absolute error tolerance for the steady state problem for a
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_27steady_abstol(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_26steady_abstol, "\n        Return the absolute error tolerance for the steady state problem for a\n        specified solution component, or all components if none is specified.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_27steady_abstol = {"steady_abstol", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_27steady_abstol, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_26steady_abstol};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_27steady_abstol(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_component = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("steady_abstol (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_component,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 229, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "steady_abstol") < 0)) __PYX_ERR(0, 229, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_component = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("steady_abstol", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 229, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.steady_abstol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_26steady_abstol(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_component);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_26steady_abstol(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component) {
  PyObject *__pyx_8genexpr2__pyx_v_n = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  size_t __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("steady_abstol", 0);

  /* "cantera/_onedim.pyx":234
 *         specified solution component, or all components if none is specified.
 *         """
 *         if component is None:             # <<<<<<<<<<<<<<
 *             return np.array([self.domain.steady_atol(n)
 *                              for n in range(self.n_components)])
 */
  __pyx_t_1 = (__pyx_v_component == Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":235
 *         """
 *         if component is None:
 *             return np.array([self.domain.steady_atol(n)             # <<<<<<<<<<<<<<
 *                              for n in range(self.n_components)])
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 235, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    { /* enter inner scope */
      __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 235, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);

      /* "cantera/_onedim.pyx":236
 *         if component is None:
 *             return np.array([self.domain.steady_atol(n)
 *                              for n in range(self.n_components)])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.domain.steady_atol(self.component_index(component))
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_components); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 236, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 236, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
        __pyx_t_5 = __pyx_t_6; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 236, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 236, __pyx_L6_error)
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 236, __pyx_L6_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 236, __pyx_L6_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 236, __pyx_L6_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 236, __pyx_L6_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          }
        } else {
          __pyx_t_6 = __pyx_t_8(__pyx_t_5);
          if (unlikely(!__pyx_t_6)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 236, __pyx_L6_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_6);
        }
        __Pyx_XDECREF_SET(__pyx_8genexpr2__pyx_v_n, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "cantera/_onedim.pyx":235
 *         """
 *         if component is None:
 *             return np.array([self.domain.steady_atol(n)             # <<<<<<<<<<<<<<
 *                              for n in range(self.n_components)])
 *         else:
 */
        __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_8genexpr2__pyx_v_n); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 235, __pyx_L6_error)
        __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->domain->steady_atol(__pyx_t_9)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 235, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_6);
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_6))) __PYX_ERR(0, 235, __pyx_L6_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "cantera/_onedim.pyx":236
 *         if component is None:
 *             return np.array([self.domain.steady_atol(n)
 *                              for n in range(self.n_components)])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.domain.steady_atol(self.component_index(component))
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_n); __pyx_8genexpr2__pyx_v_n = 0;
      goto __pyx_L10_exit_scope;
      __pyx_L6_error:;
      __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_n); __pyx_8genexpr2__pyx_v_n = 0;
      goto __pyx_L1_error;
      __pyx_L10_exit_scope:;
    } /* exit inner scope */
    __pyx_t_5 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_10 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 235, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":234
 *         specified solution component, or all components if none is specified.
 *         """
 *         if component is None:             # <<<<<<<<<<<<<<
 *             return np.array([self.domain.steady_atol(n)
 *                              for n in range(self.n_components)])
 */
  }

  /* "cantera/_onedim.pyx":238
 *                              for n in range(self.n_components)])
 *         else:
 *             return self.domain.steady_atol(self.component_index(component))             # <<<<<<<<<<<<<<
 * 
 *     def transient_reltol(self, component=None):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 238, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_10 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_component};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 238, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_t_2); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 238, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->domain->steady_atol(__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 238, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "cantera/_onedim.pyx":229
 *             return self.domain.steady_rtol(self.component_index(component))
 * 
 *     def steady_abstol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the absolute error tolerance for the steady state problem for a
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.steady_abstol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":240
 *             return self.domain.steady_atol(self.component_index(component))
 * 
 *     def transient_reltol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the relative error tolerance for the transient problem for a
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_29transient_reltol(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_28transient_reltol, "\n        Return the relative error tolerance for the transient problem for a\n        specified solution component, or all components if none is specified.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_29transient_reltol = {"transient_reltol", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_29transient_reltol, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_28transient_reltol};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_29transient_reltol(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_component = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transient_reltol (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_component,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 240, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "transient_reltol") < 0)) __PYX_ERR(0, 240, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_component = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("transient_reltol", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 240, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.transient_reltol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_28transient_reltol(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_component);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_28transient_reltol(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component) {
  PyObject *__pyx_8genexpr3__pyx_v_n = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  size_t __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transient_reltol", 0);

  /* "cantera/_onedim.pyx":245
 *         specified solution component, or all components if none is specified.
 *         """
 *         if component is None:             # <<<<<<<<<<<<<<
 *             return np.array([self.domain.transient_rtol(n)
 *                              for n in range(self.n_components)])
 */
  __pyx_t_1 = (__pyx_v_component == Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":246
 *         """
 *         if component is None:
 *             return np.array([self.domain.transient_rtol(n)             # <<<<<<<<<<<<<<
 *                              for n in range(self.n_components)])
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    { /* enter inner scope */
      __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 246, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);

      /* "cantera/_onedim.pyx":247
 *         if component is None:
 *             return np.array([self.domain.transient_rtol(n)
 *                              for n in range(self.n_components)])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.domain.transient_rtol(self.component_index(component))
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_components); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 247, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 247, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
        __pyx_t_5 = __pyx_t_6; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 247, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 247, __pyx_L6_error)
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 247, __pyx_L6_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 247, __pyx_L6_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 247, __pyx_L6_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 247, __pyx_L6_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          }
        } else {
          __pyx_t_6 = __pyx_t_8(__pyx_t_5);
          if (unlikely(!__pyx_t_6)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 247, __pyx_L6_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_6);
        }
        __Pyx_XDECREF_SET(__pyx_8genexpr3__pyx_v_n, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "cantera/_onedim.pyx":246
 *         """
 *         if component is None:
 *             return np.array([self.domain.transient_rtol(n)             # <<<<<<<<<<<<<<
 *                              for n in range(self.n_components)])
 *         else:
 */
        __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_8genexpr3__pyx_v_n); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 246, __pyx_L6_error)
        __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->domain->transient_rtol(__pyx_t_9)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 246, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_6);
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_6))) __PYX_ERR(0, 246, __pyx_L6_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "cantera/_onedim.pyx":247
 *         if component is None:
 *             return np.array([self.domain.transient_rtol(n)
 *                              for n in range(self.n_components)])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.domain.transient_rtol(self.component_index(component))
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_8genexpr3__pyx_v_n); __pyx_8genexpr3__pyx_v_n = 0;
      goto __pyx_L10_exit_scope;
      __pyx_L6_error:;
      __Pyx_XDECREF(__pyx_8genexpr3__pyx_v_n); __pyx_8genexpr3__pyx_v_n = 0;
      goto __pyx_L1_error;
      __pyx_L10_exit_scope:;
    } /* exit inner scope */
    __pyx_t_5 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_10 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 246, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":245
 *         specified solution component, or all components if none is specified.
 *         """
 *         if component is None:             # <<<<<<<<<<<<<<
 *             return np.array([self.domain.transient_rtol(n)
 *                              for n in range(self.n_components)])
 */
  }

  /* "cantera/_onedim.pyx":249
 *                              for n in range(self.n_components)])
 *         else:
 *             return self.domain.transient_rtol(self.component_index(component))             # <<<<<<<<<<<<<<
 * 
 *     def transient_abstol(self, component=None):
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 249, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_10 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_component};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 249, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_t_2); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 249, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->domain->transient_rtol(__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 249, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "cantera/_onedim.pyx":240
 *             return self.domain.steady_atol(self.component_index(component))
 * 
 *     def transient_reltol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the relative error tolerance for the transient problem for a
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.transient_reltol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_8genexpr3__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":251
 *             return self.domain.transient_rtol(self.component_index(component))
 * 
 *     def transient_abstol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the absolute error tolerance for the transient problem for a
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_31transient_abstol(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_8Domain1D_30transient_abstol, "\n        Return the absolute error tolerance for the transient problem for a\n        specified solution component, or all components if none is specified.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_31transient_abstol = {"transient_abstol", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_31transient_abstol, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_30transient_abstol};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_31transient_abstol(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_component = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("transient_abstol (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_component,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 251, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "transient_abstol") < 0)) __PYX_ERR(0, 251, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_component = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("transient_abstol", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 251, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.transient_abstol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_30transient_abstol(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), __pyx_v_component);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_30transient_abstol(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_component) {
  PyObject *__pyx_8genexpr4__pyx_v_n = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  size_t __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("transient_abstol", 0);

  /* "cantera/_onedim.pyx":256
 *         specified solution component, or all components if none is specified.
 *         """
 *         if component is None:             # <<<<<<<<<<<<<<
 *             return np.array([self.domain.transient_atol(n)
 *                              for n in range(self.n_components)])
 */
  __pyx_t_1 = (__pyx_v_component == Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":257
 *         """
 *         if component is None:
 *             return np.array([self.domain.transient_atol(n)             # <<<<<<<<<<<<<<
 *                              for n in range(self.n_components)])
 *         else:
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_array); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 257, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    { /* enter inner scope */
      __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 257, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_3);

      /* "cantera/_onedim.pyx":258
 *         if component is None:
 *             return np.array([self.domain.transient_atol(n)
 *                              for n in range(self.n_components)])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.domain.transient_atol(self.component_index(component))
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_components); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 258, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 258, __pyx_L6_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (likely(PyList_CheckExact(__pyx_t_6)) || PyTuple_CheckExact(__pyx_t_6)) {
        __pyx_t_5 = __pyx_t_6; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
        __pyx_t_8 = NULL;
      } else {
        __pyx_t_7 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 258, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 258, __pyx_L6_error)
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      for (;;) {
        if (likely(!__pyx_t_8)) {
          if (likely(PyList_CheckExact(__pyx_t_5))) {
            if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 258, __pyx_L6_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 258, __pyx_L6_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          } else {
            if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_6 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_6); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 258, __pyx_L6_error)
            #else
            __pyx_t_6 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 258, __pyx_L6_error)
            __Pyx_GOTREF(__pyx_t_6);
            #endif
          }
        } else {
          __pyx_t_6 = __pyx_t_8(__pyx_t_5);
          if (unlikely(!__pyx_t_6)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 258, __pyx_L6_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_6);
        }
        __Pyx_XDECREF_SET(__pyx_8genexpr4__pyx_v_n, __pyx_t_6);
        __pyx_t_6 = 0;

        /* "cantera/_onedim.pyx":257
 *         """
 *         if component is None:
 *             return np.array([self.domain.transient_atol(n)             # <<<<<<<<<<<<<<
 *                              for n in range(self.n_components)])
 *         else:
 */
        __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_8genexpr4__pyx_v_n); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 257, __pyx_L6_error)
        __pyx_t_6 = PyFloat_FromDouble(__pyx_v_self->domain->transient_atol(__pyx_t_9)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 257, __pyx_L6_error)
        __Pyx_GOTREF(__pyx_t_6);
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_6))) __PYX_ERR(0, 257, __pyx_L6_error)
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

        /* "cantera/_onedim.pyx":258
 *         if component is None:
 *             return np.array([self.domain.transient_atol(n)
 *                              for n in range(self.n_components)])             # <<<<<<<<<<<<<<
 *         else:
 *             return self.domain.transient_atol(self.component_index(component))
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_n); __pyx_8genexpr4__pyx_v_n = 0;
      goto __pyx_L10_exit_scope;
      __pyx_L6_error:;
      __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_n); __pyx_8genexpr4__pyx_v_n = 0;
      goto __pyx_L1_error;
      __pyx_L10_exit_scope:;
    } /* exit inner scope */
    __pyx_t_5 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_10 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 257, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":256
 *         specified solution component, or all components if none is specified.
 *         """
 *         if component is None:             # <<<<<<<<<<<<<<
 *             return np.array([self.domain.transient_atol(n)
 *                              for n in range(self.n_components)])
 */
  }

  /* "cantera/_onedim.pyx":260
 *                              for n in range(self.n_components)])
 *         else:
 *             return self.domain.transient_atol(self.component_index(component))             # <<<<<<<<<<<<<<
 * 
 *     property grid:
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_index); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = NULL;
    __pyx_t_10 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_10 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_component};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_10, 1+__pyx_t_10);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 260, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_t_2); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 260, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->domain->transient_atol(__pyx_t_9)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 260, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;
  }

  /* "cantera/_onedim.pyx":251
 *             return self.domain.transient_rtol(self.component_index(component))
 * 
 *     def transient_abstol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the absolute error tolerance for the transient problem for a
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.transient_abstol", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":264
 *     property grid:
 *         """ The grid for this domain """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.double_t, ndim=1] grid = np.empty(self.n_points)
 *             cdef int i
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_4grid_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_4grid_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_4grid___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_4grid___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyArrayObject *__pyx_v_grid = 0;
  int __pyx_v_i;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_grid;
  __Pyx_Buffer __pyx_pybuffer_grid;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyArrayObject *__pyx_t_6 = NULL;
  long __pyx_t_7;
  long __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __pyx_pybuffer_grid.pybuffer.buf = NULL;
  __pyx_pybuffer_grid.refcount = 0;
  __pyx_pybuffernd_grid.data = NULL;
  __pyx_pybuffernd_grid.rcbuffer = &__pyx_pybuffer_grid;

  /* "cantera/_onedim.pyx":265
 *         """ The grid for this domain """
 *         def __get__(self):
 *             cdef np.ndarray[np.double_t, ndim=1] grid = np.empty(self.n_points)             # <<<<<<<<<<<<<<
 *             cdef int i
 *             for i in range(self.n_points):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_empty); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_points); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 265, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 265, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 265, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_grid.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_grid = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_grid.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 265, __pyx_L1_error)
    } else {__pyx_pybuffernd_grid.diminfo[0].strides = __pyx_pybuffernd_grid.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_grid.diminfo[0].shape = __pyx_pybuffernd_grid.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_6 = 0;
  __pyx_v_grid = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":267
 *             cdef np.ndarray[np.double_t, ndim=1] grid = np.empty(self.n_points)
 *             cdef int i
 *             for i in range(self.n_points):             # <<<<<<<<<<<<<<
 *                 grid[i] = self.domain.grid(i)
 *             return grid
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_points); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 267, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_8 = __pyx_t_7;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_8; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "cantera/_onedim.pyx":268
 *             cdef int i
 *             for i in range(self.n_points):
 *                 grid[i] = self.domain.grid(i)             # <<<<<<<<<<<<<<
 *             return grid
 * 
 */
    __pyx_t_9 = __pyx_v_i;
    __pyx_t_10 = -1;
    if (__pyx_t_9 < 0) {
      __pyx_t_9 += __pyx_pybuffernd_grid.diminfo[0].shape;
      if (unlikely(__pyx_t_9 < 0)) __pyx_t_10 = 0;
    } else if (unlikely(__pyx_t_9 >= __pyx_pybuffernd_grid.diminfo[0].shape)) __pyx_t_10 = 0;
    if (unlikely(__pyx_t_10 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_10);
      __PYX_ERR(0, 268, __pyx_L1_error)
    }
    *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_grid.rcbuffer->pybuffer.buf, __pyx_t_9, __pyx_pybuffernd_grid.diminfo[0].strides) = __pyx_v_self->domain->grid(__pyx_v_i);
  }

  /* "cantera/_onedim.pyx":269
 *             for i in range(self.n_points):
 *                 grid[i] = self.domain.grid(i)
 *             return grid             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, grid):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_grid);
  __pyx_r = ((PyObject *)__pyx_v_grid);
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":264
 *     property grid:
 *         """ The grid for this domain """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.double_t, ndim=1] grid = np.empty(self.n_points)
 *             cdef int i
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_grid.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cantera._onedim.Domain1D.grid.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_grid.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_grid);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":271
 *             return grid
 * 
 *         def __set__(self, grid):             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.double_t, ndim=1] data = \
 *                 np.ascontiguousarray(grid, dtype=np.double)
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_8Domain1D_4grid_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_grid); /*proto*/
static int __pyx_pw_7cantera_7_onedim_8Domain1D_4grid_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_grid) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_4grid_2__set__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), ((PyObject *)__pyx_v_grid));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_8Domain1D_4grid_2__set__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_grid) {
  PyArrayObject *__pyx_v_data = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_data;
  __Pyx_Buffer __pyx_pybuffer_data;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyArrayObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_pybuffer_data.pybuffer.buf = NULL;
  __pyx_pybuffer_data.refcount = 0;
  __pyx_pybuffernd_data.data = NULL;
  __pyx_pybuffernd_data.rcbuffer = &__pyx_pybuffer_data;

  /* "cantera/_onedim.pyx":273
 *         def __set__(self, grid):
 *             cdef np.ndarray[np.double_t, ndim=1] data = \
 *                 np.ascontiguousarray(grid, dtype=np.double)             # <<<<<<<<<<<<<<
 *             self.domain.setupGrid(len(data), &data[0])
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_ascontiguousarray); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_grid);
  __Pyx_GIVEREF(__pyx_v_grid);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_grid);
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_double); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_dtype, __pyx_t_5) < 0) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_1, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 273, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_5) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_5, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 273, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_5);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_data.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_data = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_data.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 272, __pyx_L1_error)
    } else {__pyx_pybuffernd_data.diminfo[0].strides = __pyx_pybuffernd_data.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_data.diminfo[0].shape = __pyx_pybuffernd_data.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_6 = 0;
  __pyx_v_data = ((PyArrayObject *)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "cantera/_onedim.pyx":274
 *             cdef np.ndarray[np.double_t, ndim=1] data = \
 *                 np.ascontiguousarray(grid, dtype=np.double)
 *             self.domain.setupGrid(len(data), &data[0])             # <<<<<<<<<<<<<<
 * 
 *     property name:
 */
  __pyx_t_7 = PyObject_Length(((PyObject *)__pyx_v_data)); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 274, __pyx_L1_error)
  __pyx_t_8 = 0;
  __pyx_t_9 = -1;
  if (__pyx_t_8 < 0) {
    __pyx_t_8 += __pyx_pybuffernd_data.diminfo[0].shape;
    if (unlikely(__pyx_t_8 < 0)) __pyx_t_9 = 0;
  } else if (unlikely(__pyx_t_8 >= __pyx_pybuffernd_data.diminfo[0].shape)) __pyx_t_9 = 0;
  if (unlikely(__pyx_t_9 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_9);
    __PYX_ERR(0, 274, __pyx_L1_error)
  }
  try {
    __pyx_v_self->domain->setupGrid(__pyx_t_7, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_data.rcbuffer->pybuffer.buf, __pyx_t_8, __pyx_pybuffernd_data.diminfo[0].strides))));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 274, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":271
 *             return grid
 * 
 *         def __set__(self, grid):             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.double_t, ndim=1] data = \
 *                 np.ascontiguousarray(grid, dtype=np.double)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_data.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cantera._onedim.Domain1D.grid.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_data.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_data);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":278
 *     property name:
 *         """ The name / id of this domain """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.domain.id())
 *         def __set__(self, name):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_4name_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_4name___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_4name___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":279
 *         """ The name / id of this domain """
 *         def __get__(self):
 *             return pystr(self.domain.id())             # <<<<<<<<<<<<<<
 *         def __set__(self, name):
 *             self.domain.setID(stringify(name))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->domain->id()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 279, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":278
 *     property name:
 *         """ The name / id of this domain """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.domain.id())
 *         def __set__(self, name):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.name.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":280
 *         def __get__(self):
 *             return pystr(self.domain.id())
 *         def __set__(self, name):             # <<<<<<<<<<<<<<
 *             self.domain.setID(stringify(name))
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_8Domain1D_4name_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_name); /*proto*/
static int __pyx_pw_7cantera_7_onedim_8Domain1D_4name_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_name) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_4name_2__set__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), ((PyObject *)__pyx_v_name));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_8Domain1D_4name_2__set__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_name) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":281
 *             return pystr(self.domain.id())
 *         def __set__(self, name):
 *             self.domain.setID(stringify(name))             # <<<<<<<<<<<<<<
 * 
 *     def __reduce__(self):
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_name); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 281, __pyx_L1_error)
  __pyx_v_self->domain->setID(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1));

  /* "cantera/_onedim.pyx":280
 *         def __get__(self):
 *             return pystr(self.domain.id())
 *         def __set__(self, name):             # <<<<<<<<<<<<<<
 *             self.domain.setID(stringify(name))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Domain1D.name.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":283
 *             self.domain.setID(stringify(name))
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError('Domain1D object is not picklable')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_33__reduce__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_33__reduce__ = {"__reduce__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_33__reduce__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_33__reduce__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_32__reduce__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_32__reduce__(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce__", 0);

  /* "cantera/_onedim.pyx":284
 * 
 *     def __reduce__(self):
 *         raise NotImplementedError('Domain1D object is not picklable')             # <<<<<<<<<<<<<<
 * 
 *     def __copy__(self):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_NotImplementedError, __pyx_tuple__6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 284, __pyx_L1_error)

  /* "cantera/_onedim.pyx":283
 *             self.domain.setID(stringify(name))
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError('Domain1D object is not picklable')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.__reduce__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":286
 *         raise NotImplementedError('Domain1D object is not picklable')
 * 
 *     def __copy__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError('Domain1D object is not copyable')
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_35__copy__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_7_onedim_8Domain1D_35__copy__ = {"__copy__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_35__copy__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_35__copy__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__copy__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__copy__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__copy__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_34__copy__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_34__copy__(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__copy__", 0);

  /* "cantera/_onedim.pyx":287
 * 
 *     def __copy__(self):
 *         raise NotImplementedError('Domain1D object is not copyable')             # <<<<<<<<<<<<<<
 * 
 *     property settings:
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_NotImplementedError, __pyx_tuple__7, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 287, __pyx_L1_error)

  /* "cantera/_onedim.pyx":286
 *         raise NotImplementedError('Domain1D object is not picklable')
 * 
 *     def __copy__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError('Domain1D object is not copyable')
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.__copy__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":298
 *             Added missing domain-specific simulation settings and updated structure.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef shared_ptr[CxxSolutionArray] arr
 *             arr = self.domain.toArray(False)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_8settings_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_8settings_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_8settings___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_8settings___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  std::shared_ptr<Cantera::SolutionArray>  __pyx_v_arr;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::shared_ptr<Cantera::SolutionArray>  __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":300
 *         def __get__(self):
 *             cdef shared_ptr[CxxSolutionArray] arr
 *             arr = self.domain.toArray(False)             # <<<<<<<<<<<<<<
 *             return anymap_to_py(arr.get().meta())
 * 
 */
  try {
    __pyx_t_1 = __pyx_v_self->domain->toArray(0);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 300, __pyx_L1_error)
  }
  __pyx_v_arr = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1);

  /* "cantera/_onedim.pyx":301
 *             cdef shared_ptr[CxxSolutionArray] arr
 *             arr = self.domain.toArray(False)
 *             return anymap_to_py(arr.get().meta())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_7cantera_6_utils_anymap_to_py(__pyx_v_arr.get()->meta()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 301, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":298
 *             Added missing domain-specific simulation settings and updated structure.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef shared_ptr[CxxSolutionArray] arr
 *             arr = self.domain.toArray(False)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.settings.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pxd":158
 *     cdef _SolutionBase gas
 *     cdef object _weakref_proxy
 *     cdef public pybool have_user_tolerances             # <<<<<<<<<<<<<<
 * 
 * cdef class Boundary1D(Domain1D):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_20have_user_tolerances_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_8Domain1D_20have_user_tolerances_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_20have_user_tolerances___get__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_8Domain1D_20have_user_tolerances___get__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __pyx_r = ((PyObject *)__pyx_v_self->have_user_tolerances);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_8Domain1D_20have_user_tolerances_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cantera_7_onedim_8Domain1D_20have_user_tolerances_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_20have_user_tolerances_2__set__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_8Domain1D_20have_user_tolerances_2__set__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_7cpython_4bool_bool))))) __PYX_ERR(4, 158, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __Pyx_DECREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __pyx_v_self->have_user_tolerances = ((PyBoolObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Domain1D.have_user_tolerances.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_8Domain1D_20have_user_tolerances_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7cantera_7_onedim_8Domain1D_20have_user_tolerances_5__del__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_8Domain1D_20have_user_tolerances_4__del__(((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_8Domain1D_20have_user_tolerances_4__del__(struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __Pyx_DECREF((PyObject *)__pyx_v_self->have_user_tolerances);
  __pyx_v_self->have_user_tolerances = ((PyBoolObject *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":311
 *         The (gas) phase corresponding to the adjacent flow domain
 *     """
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):             # <<<<<<<<<<<<<<
 *         if self._domain_type in {"None", "reacting-surface"}:
 *             self.boundary = NULL
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase = 0;
  PyObject *__pyx_v_name = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __pyx_v_args = __Pyx_ArgsSlice_VARARGS(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
    __Pyx_RefNannyFinishContext();
    return -1;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phase,&__pyx_n_s_name,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_kp_u__8);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phase)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 311, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (kw_args == 1) {
        const Py_ssize_t index = 1;
        PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 311, __pyx_L3_error)
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, used_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 311, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_phase = ((struct __pyx_obj_7cantera_12solutionbase__SolutionBase *)values[0]);
    __pyx_v_name = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 311, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_phase), __pyx_ptype_7cantera_12solutionbase__SolutionBase, 1, "phase", 0))) __PYX_ERR(0, 311, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D___cinit__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self), __pyx_v_phase, __pyx_v_name, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_10Boundary1D___cinit__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, PyObject *__pyx_v_name, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  std::string __pyx_t_4;
  std::string __pyx_t_5;
  std::shared_ptr<Cantera::Domain1D>  __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/_onedim.pyx":312
 *     """
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):
 *         if self._domain_type in {"None", "reacting-surface"}:             # <<<<<<<<<<<<<<
 *             self.boundary = NULL
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 312, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_None, Py_EQ)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 312, __pyx_L1_error)
  if (!__pyx_t_3) {
  } else {
    __pyx_t_2 = __pyx_t_3;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_3 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_kp_u_reacting_surface, Py_EQ)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 312, __pyx_L1_error)
  __pyx_t_2 = __pyx_t_3;
  __pyx_L4_bool_binop_done:;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_t_2;
  if (__pyx_t_3) {

    /* "cantera/_onedim.pyx":313
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):
 *         if self._domain_type in {"None", "reacting-surface"}:
 *             self.boundary = NULL             # <<<<<<<<<<<<<<
 *         else:
 *             self._domain = CxxNewDomain1D(
 */
    __pyx_v_self->boundary = NULL;

    /* "cantera/_onedim.pyx":312
 *     """
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):
 *         if self._domain_type in {"None", "reacting-surface"}:             # <<<<<<<<<<<<<<
 *             self.boundary = NULL
 *         else:
 */
    goto __pyx_L3;
  }

  /* "cantera/_onedim.pyx":315
 *             self.boundary = NULL
 *         else:
 *             self._domain = CxxNewDomain1D(             # <<<<<<<<<<<<<<
 *                 stringify(self._domain_type), phase._base, stringify(name))
 *             self.domain = self._domain.get()
 */
  /*else*/ {

    /* "cantera/_onedim.pyx":316
 *         else:
 *             self._domain = CxxNewDomain1D(
 *                 stringify(self._domain_type), phase._base, stringify(name))             # <<<<<<<<<<<<<<
 *             self.domain = self._domain.get()
 *             self.boundary = <CxxBoundary1D*>self.domain
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __pyx_f_7cantera_6_utils_stringify(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 316, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_5 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_name); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 316, __pyx_L1_error)

    /* "cantera/_onedim.pyx":315
 *             self.boundary = NULL
 *         else:
 *             self._domain = CxxNewDomain1D(             # <<<<<<<<<<<<<<
 *                 stringify(self._domain_type), phase._base, stringify(name))
 *             self.domain = self._domain.get()
 */
    try {
      __pyx_t_6 = newDomain(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_4), __pyx_v_phase->_base, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_5));
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 315, __pyx_L1_error)
    }
    __pyx_v_self->__pyx_base._domain = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_6);

    /* "cantera/_onedim.pyx":317
 *             self._domain = CxxNewDomain1D(
 *                 stringify(self._domain_type), phase._base, stringify(name))
 *             self.domain = self._domain.get()             # <<<<<<<<<<<<<<
 *             self.boundary = <CxxBoundary1D*>self.domain
 * 
 */
    __pyx_v_self->__pyx_base.domain = __pyx_v_self->__pyx_base._domain.get();

    /* "cantera/_onedim.pyx":318
 *                 stringify(self._domain_type), phase._base, stringify(name))
 *             self.domain = self._domain.get()
 *             self.boundary = <CxxBoundary1D*>self.domain             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, phase, name=None):
 */
    __pyx_v_self->boundary = ((Cantera::Boundary1D *)__pyx_v_self->__pyx_base.domain);
  }
  __pyx_L3:;

  /* "cantera/_onedim.pyx":311
 *         The (gas) phase corresponding to the adjacent flow domain
 *     """
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):             # <<<<<<<<<<<<<<
 *         if self._domain_type in {"None", "reacting-surface"}:
 *             self.boundary = NULL
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":320
 *             self.boundary = <CxxBoundary1D*>self.domain
 * 
 *     def __init__(self, phase, name=None):             # <<<<<<<<<<<<<<
 *         if self.boundary is NULL:
 *             raise TypeError("Can't instantiate abstract class Boundary1D.")
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_phase = 0;
  PyObject *__pyx_v_name = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phase,&__pyx_n_s_name,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phase)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 320, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_name);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 320, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 320, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_phase = values[0];
    __pyx_v_name = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 320, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_2__init__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self), __pyx_v_phase, __pyx_v_name);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_10Boundary1D_2__init__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_phase, PyObject *__pyx_v_name) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/_onedim.pyx":321
 * 
 *     def __init__(self, phase, name=None):
 *         if self.boundary is NULL:             # <<<<<<<<<<<<<<
 *             raise TypeError("Can't instantiate abstract class Boundary1D.")
 *         Domain1D.__init__(self, phase, name=name)
 */
  __pyx_t_1 = (__pyx_v_self->boundary == NULL);
  if (unlikely(__pyx_t_1)) {

    /* "cantera/_onedim.pyx":322
 *     def __init__(self, phase, name=None):
 *         if self.boundary is NULL:
 *             raise TypeError("Can't instantiate abstract class Boundary1D.")             # <<<<<<<<<<<<<<
 *         Domain1D.__init__(self, phase, name=name)
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__9, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 322, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 322, __pyx_L1_error)

    /* "cantera/_onedim.pyx":321
 * 
 *     def __init__(self, phase, name=None):
 *         if self.boundary is NULL:             # <<<<<<<<<<<<<<
 *             raise TypeError("Can't instantiate abstract class Boundary1D.")
 *         Domain1D.__init__(self, phase, name=name)
 */
  }

  /* "cantera/_onedim.pyx":323
 *         if self.boundary is NULL:
 *             raise TypeError("Can't instantiate abstract class Boundary1D.")
 *         Domain1D.__init__(self, phase, name=name)             # <<<<<<<<<<<<<<
 * 
 *     property T:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D), __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_self));
  __Pyx_INCREF(__pyx_v_phase);
  __Pyx_GIVEREF(__pyx_v_phase);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_phase);
  __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_name, __pyx_v_name) < 0) __PYX_ERR(0, 323, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cantera/_onedim.pyx":320
 *             self.boundary = <CxxBoundary1D*>self.domain
 * 
 *     def __init__(self, phase, name=None):             # <<<<<<<<<<<<<<
 *         if self.boundary is NULL:
 *             raise TypeError("Can't instantiate abstract class Boundary1D.")
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":327
 *     property T:
 *         """ The temperature [K] at this boundary. """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.boundary.temperature()
 *         def __set__(self, T):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_1T_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_1T_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_1T___get__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_1T___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":328
 *         """ The temperature [K] at this boundary. """
 *         def __get__(self):
 *             return self.boundary.temperature()             # <<<<<<<<<<<<<<
 *         def __set__(self, T):
 *             self.boundary.setTemperature(T)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->boundary->temperature()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":327
 *     property T:
 *         """ The temperature [K] at this boundary. """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.boundary.temperature()
 *         def __set__(self, T):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.T.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":329
 *         def __get__(self):
 *             return self.boundary.temperature()
 *         def __set__(self, T):             # <<<<<<<<<<<<<<
 *             self.boundary.setTemperature(T)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_1T_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_T); /*proto*/
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_1T_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_T) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_1T_2__set__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self), ((PyObject *)__pyx_v_T));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_10Boundary1D_1T_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_T) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":330
 *             return self.boundary.temperature()
 *         def __set__(self, T):
 *             self.boundary.setTemperature(T)             # <<<<<<<<<<<<<<
 * 
 *     property mdot:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_T); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 330, __pyx_L1_error)
  __pyx_v_self->boundary->setTemperature(__pyx_t_1);

  /* "cantera/_onedim.pyx":329
 *         def __get__(self):
 *             return self.boundary.temperature()
 *         def __set__(self, T):             # <<<<<<<<<<<<<<
 *             self.boundary.setTemperature(T)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.T.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":334
 *     property mdot:
 *         """ The mass flow rate per unit area [kg/s/m^2] """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.boundary.mdot()
 *         def __set__(self, mdot):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_4mdot_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_4mdot_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_4mdot___get__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_4mdot___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":335
 *         """ The mass flow rate per unit area [kg/s/m^2] """
 *         def __get__(self):
 *             return self.boundary.mdot()             # <<<<<<<<<<<<<<
 *         def __set__(self, mdot):
 *             self.boundary.setMdot(mdot)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->boundary->mdot()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 335, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":334
 *     property mdot:
 *         """ The mass flow rate per unit area [kg/s/m^2] """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.boundary.mdot()
 *         def __set__(self, mdot):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.mdot.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":336
 *         def __get__(self):
 *             return self.boundary.mdot()
 *         def __set__(self, mdot):             # <<<<<<<<<<<<<<
 *             self.boundary.setMdot(mdot)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_4mdot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_mdot); /*proto*/
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_4mdot_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_mdot) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_4mdot_2__set__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self), ((PyObject *)__pyx_v_mdot));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_10Boundary1D_4mdot_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_mdot) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":337
 *             return self.boundary.mdot()
 *         def __set__(self, mdot):
 *             self.boundary.setMdot(mdot)             # <<<<<<<<<<<<<<
 * 
 *     property X:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_mdot); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 337, __pyx_L1_error)
  __pyx_v_self->boundary->setMdot(__pyx_t_1);

  /* "cantera/_onedim.pyx":336
 *         def __get__(self):
 *             return self.boundary.mdot()
 *         def __set__(self, mdot):             # <<<<<<<<<<<<<<
 *             self.boundary.setMdot(mdot)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.mdot.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":344
 *         or as an array.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.gas.TPY = self.gas.T, self.gas.P, self.Y
 *             return self.gas.X
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_1X_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_1X_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_1X___get__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_1X___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":345
 *         """
 *         def __get__(self):
 *             self.gas.TPY = self.gas.T, self.gas.P, self.Y             # <<<<<<<<<<<<<<
 *             return self.gas.X
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_T); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_P); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_Y); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_TPY, __pyx_t_4) < 0) __PYX_ERR(0, 345, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cantera/_onedim.pyx":346
 *         def __get__(self):
 *             self.gas.TPY = self.gas.T, self.gas.P, self.Y
 *             return self.gas.X             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, X):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_X); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 346, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":344
 *         or as an array.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             self.gas.TPY = self.gas.T, self.gas.P, self.Y
 *             return self.gas.X
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.X.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":348
 *             return self.gas.X
 * 
 *         def __set__(self, X):             # <<<<<<<<<<<<<<
 *             self.gas.TPX = None, None, X
 *             cdef np.ndarray[np.double_t, ndim=1] data = self.gas.X
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_1X_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_X); /*proto*/
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_1X_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_X) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_1X_2__set__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self), ((PyObject *)__pyx_v_X));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_10Boundary1D_1X_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_X) {
  PyArrayObject *__pyx_v_data = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_data;
  __Pyx_Buffer __pyx_pybuffer_data;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyArrayObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  __pyx_pybuffer_data.pybuffer.buf = NULL;
  __pyx_pybuffer_data.refcount = 0;
  __pyx_pybuffernd_data.data = NULL;
  __pyx_pybuffernd_data.rcbuffer = &__pyx_pybuffer_data;

  /* "cantera/_onedim.pyx":349
 * 
 *         def __set__(self, X):
 *             self.gas.TPX = None, None, X             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.double_t, ndim=1] data = self.gas.X
 *             self.boundary.setMoleFractions(&data[0])
 */
  __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_1, 0, Py_None);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  PyTuple_SET_ITEM(__pyx_t_1, 1, Py_None);
  __Pyx_INCREF(__pyx_v_X);
  __Pyx_GIVEREF(__pyx_v_X);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_X);
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_TPX, __pyx_t_1) < 0) __PYX_ERR(0, 349, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":350
 *         def __set__(self, X):
 *             self.gas.TPX = None, None, X
 *             cdef np.ndarray[np.double_t, ndim=1] data = self.gas.X             # <<<<<<<<<<<<<<
 *             self.boundary.setMoleFractions(&data[0])
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_X); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 350, __pyx_L1_error)
  __pyx_t_2 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_data.rcbuffer->pybuffer, (PyObject*)__pyx_t_2, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_data = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_data.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 350, __pyx_L1_error)
    } else {__pyx_pybuffernd_data.diminfo[0].strides = __pyx_pybuffernd_data.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_data.diminfo[0].shape = __pyx_pybuffernd_data.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_2 = 0;
  __pyx_v_data = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":351
 *             self.gas.TPX = None, None, X
 *             cdef np.ndarray[np.double_t, ndim=1] data = self.gas.X
 *             self.boundary.setMoleFractions(&data[0])             # <<<<<<<<<<<<<<
 * 
 *     property Y:
 */
  __pyx_t_3 = 0;
  __pyx_t_4 = -1;
  if (__pyx_t_3 < 0) {
    __pyx_t_3 += __pyx_pybuffernd_data.diminfo[0].shape;
    if (unlikely(__pyx_t_3 < 0)) __pyx_t_4 = 0;
  } else if (unlikely(__pyx_t_3 >= __pyx_pybuffernd_data.diminfo[0].shape)) __pyx_t_4 = 0;
  if (unlikely(__pyx_t_4 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_4);
    __PYX_ERR(0, 351, __pyx_L1_error)
  }
  try {
    __pyx_v_self->boundary->setMoleFractions((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_data.rcbuffer->pybuffer.buf, __pyx_t_3, __pyx_pybuffernd_data.diminfo[0].strides))));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 351, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":348
 *             return self.gas.X
 * 
 *         def __set__(self, X):             # <<<<<<<<<<<<<<
 *             self.gas.TPX = None, None, X
 *             cdef np.ndarray[np.double_t, ndim=1] data = self.gas.X
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_data.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.X.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_data.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_data);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":358
 *         or as an array.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef int nsp = self.boundary.nSpecies()
 *             cdef np.ndarray[np.double_t, ndim=1] Y = np.empty(nsp)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_1Y_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_1Y_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_1Y___get__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_1Y___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self) {
  int __pyx_v_nsp;
  PyArrayObject *__pyx_v_Y = 0;
  int __pyx_v_k;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_Y;
  __Pyx_Buffer __pyx_pybuffer_Y;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyArrayObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __pyx_pybuffer_Y.pybuffer.buf = NULL;
  __pyx_pybuffer_Y.refcount = 0;
  __pyx_pybuffernd_Y.data = NULL;
  __pyx_pybuffernd_Y.rcbuffer = &__pyx_pybuffer_Y;

  /* "cantera/_onedim.pyx":359
 *         """
 *         def __get__(self):
 *             cdef int nsp = self.boundary.nSpecies()             # <<<<<<<<<<<<<<
 *             cdef np.ndarray[np.double_t, ndim=1] Y = np.empty(nsp)
 *             cdef int k
 */
  __pyx_v_nsp = __pyx_v_self->boundary->nSpecies();

  /* "cantera/_onedim.pyx":360
 *         def __get__(self):
 *             cdef int nsp = self.boundary.nSpecies()
 *             cdef np.ndarray[np.double_t, ndim=1] Y = np.empty(nsp)             # <<<<<<<<<<<<<<
 *             cdef int k
 *             for k in range(nsp):
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_empty); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_From_int(__pyx_v_nsp); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 360, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 360, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_Y.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_Y = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_Y.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 360, __pyx_L1_error)
    } else {__pyx_pybuffernd_Y.diminfo[0].strides = __pyx_pybuffernd_Y.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_Y.diminfo[0].shape = __pyx_pybuffernd_Y.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_6 = 0;
  __pyx_v_Y = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":362
 *             cdef np.ndarray[np.double_t, ndim=1] Y = np.empty(nsp)
 *             cdef int k
 *             for k in range(nsp):             # <<<<<<<<<<<<<<
 *                 Y[k] = self.boundary.massFraction(k)
 *             return Y
 */
  __pyx_t_5 = __pyx_v_nsp;
  __pyx_t_7 = __pyx_t_5;
  for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
    __pyx_v_k = __pyx_t_8;

    /* "cantera/_onedim.pyx":363
 *             cdef int k
 *             for k in range(nsp):
 *                 Y[k] = self.boundary.massFraction(k)             # <<<<<<<<<<<<<<
 *             return Y
 * 
 */
    __pyx_t_9 = __pyx_v_k;
    __pyx_t_10 = -1;
    if (__pyx_t_9 < 0) {
      __pyx_t_9 += __pyx_pybuffernd_Y.diminfo[0].shape;
      if (unlikely(__pyx_t_9 < 0)) __pyx_t_10 = 0;
    } else if (unlikely(__pyx_t_9 >= __pyx_pybuffernd_Y.diminfo[0].shape)) __pyx_t_10 = 0;
    if (unlikely(__pyx_t_10 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_10);
      __PYX_ERR(0, 363, __pyx_L1_error)
    }
    *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_Y.rcbuffer->pybuffer.buf, __pyx_t_9, __pyx_pybuffernd_Y.diminfo[0].strides) = __pyx_v_self->boundary->massFraction(__pyx_v_k);
  }

  /* "cantera/_onedim.pyx":364
 *             for k in range(nsp):
 *                 Y[k] = self.boundary.massFraction(k)
 *             return Y             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, Y):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_Y);
  __pyx_r = ((PyObject *)__pyx_v_Y);
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":358
 *         or as an array.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef int nsp = self.boundary.nSpecies()
 *             cdef np.ndarray[np.double_t, ndim=1] Y = np.empty(nsp)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Y.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.Y.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_Y.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_Y);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":366
 *             return Y
 * 
 *         def __set__(self, Y):             # <<<<<<<<<<<<<<
 *             self.gas.TPY = self.gas.T, self.gas.P, Y
 *             self.X = self.gas.X
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_1Y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_Y); /*proto*/
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_1Y_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_Y) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_1Y_2__set__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self), ((PyObject *)__pyx_v_Y));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_10Boundary1D_1Y_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_Y) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":367
 * 
 *         def __set__(self, Y):
 *             self.gas.TPY = self.gas.T, self.gas.P, Y             # <<<<<<<<<<<<<<
 *             self.X = self.gas.X
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_T); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_P); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 367, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __Pyx_INCREF(__pyx_v_Y);
  __Pyx_GIVEREF(__pyx_v_Y);
  PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_v_Y);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_TPY, __pyx_t_3) < 0) __PYX_ERR(0, 367, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":368
 *         def __set__(self, Y):
 *             self.gas.TPY = self.gas.T, self.gas.P, Y
 *             self.X = self.gas.X             # <<<<<<<<<<<<<<
 * 
 *     property spread_rate:
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_X); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_X, __pyx_t_3) < 0) __PYX_ERR(0, 368, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":366
 *             return Y
 * 
 *         def __set__(self, Y):             # <<<<<<<<<<<<<<
 *             self.gas.TPY = self.gas.T, self.gas.P, Y
 *             self.X = self.gas.X
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.Y.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":374
 *         Get/set the tangential velocity gradient [1/s] at this boundary.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.boundary.spreadRate()
 *         def __set__(self, s):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_11spread_rate_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_10Boundary1D_11spread_rate_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_11spread_rate___get__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_10Boundary1D_11spread_rate___get__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":375
 *         """
 *         def __get__(self):
 *             return self.boundary.spreadRate()             # <<<<<<<<<<<<<<
 *         def __set__(self, s):
 *             self.boundary.setSpreadRate(s)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->boundary->spreadRate()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 375, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":374
 *         Get/set the tangential velocity gradient [1/s] at this boundary.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.boundary.spreadRate()
 *         def __set__(self, s):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.spread_rate.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":376
 *         def __get__(self):
 *             return self.boundary.spreadRate()
 *         def __set__(self, s):             # <<<<<<<<<<<<<<
 *             self.boundary.setSpreadRate(s)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_11spread_rate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_s); /*proto*/
static int __pyx_pw_7cantera_7_onedim_10Boundary1D_11spread_rate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_s) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_10Boundary1D_11spread_rate_2__set__(((struct __pyx_obj_7cantera_7_onedim_Boundary1D *)__pyx_v_self), ((PyObject *)__pyx_v_s));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_10Boundary1D_11spread_rate_2__set__(struct __pyx_obj_7cantera_7_onedim_Boundary1D *__pyx_v_self, PyObject *__pyx_v_s) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":377
 *             return self.boundary.spreadRate()
 *         def __set__(self, s):
 *             self.boundary.setSpreadRate(s)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_s); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 377, __pyx_L1_error)
  __pyx_v_self->boundary->setSpreadRate(__pyx_t_1);

  /* "cantera/_onedim.pyx":376
 *         def __get__(self):
 *             return self.boundary.spreadRate()
 *         def __set__(self, s):             # <<<<<<<<<<<<<<
 *             self.boundary.setSpreadRate(s)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Boundary1D.spread_rate.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":425
 *     """
 *     _domain_type = "reacting-surface"
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):             # <<<<<<<<<<<<<<
 *         # once legacy path is removed, the parent __cinit__ is sufficient
 *         self.legacy = phase.phase_of_matter == "gas"
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase = 0;
  PyObject *__pyx_v_name = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __pyx_v_args = __Pyx_ArgsSlice_VARARGS(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
    __Pyx_RefNannyFinishContext();
    return -1;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phase,&__pyx_n_s_name,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_kp_u__8);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phase)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 425, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (kw_args == 1) {
        const Py_ssize_t index = 1;
        PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 425, __pyx_L3_error)
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, used_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 425, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_phase = ((struct __pyx_obj_7cantera_12solutionbase__SolutionBase *)values[0]);
    __pyx_v_name = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 425, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera._onedim.ReactingSurface1D.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_phase), __pyx_ptype_7cantera_12solutionbase__SolutionBase, 1, "phase", 0))) __PYX_ERR(0, 425, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_17ReactingSurface1D___cinit__(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self), __pyx_v_phase, __pyx_v_name, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D___cinit__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, PyObject *__pyx_v_name, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  bool __pyx_t_3;
  int __pyx_t_4;
  std::string __pyx_t_5;
  std::string __pyx_t_6;
  std::shared_ptr<Cantera::Domain1D>  __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/_onedim.pyx":427
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):
 *         # once legacy path is removed, the parent __cinit__ is sufficient
 *         self.legacy = phase.phase_of_matter == "gas"             # <<<<<<<<<<<<<<
 *         if self.legacy:
 *             # legacy pathway - deprecation is handled in __init__
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_phase), __pyx_n_s_phase_of_matter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 427, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_RichCompare(__pyx_t_1, __pyx_n_u_gas, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 427, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_3 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 427, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_self->legacy = __pyx_t_3;

  /* "cantera/_onedim.pyx":428
 *         # once legacy path is removed, the parent __cinit__ is sufficient
 *         self.legacy = phase.phase_of_matter == "gas"
 *         if self.legacy:             # <<<<<<<<<<<<<<
 *             # legacy pathway - deprecation is handled in __init__
 *             self.surf = new CxxReactingSurf1D()
 */
  __pyx_t_4 = (__pyx_v_self->legacy != 0);
  if (__pyx_t_4) {

    /* "cantera/_onedim.pyx":430
 *         if self.legacy:
 *             # legacy pathway - deprecation is handled in __init__
 *             self.surf = new CxxReactingSurf1D()             # <<<<<<<<<<<<<<
 *             self.domain = <CxxDomain1D*>(self.surf)
 *         else:
 */
    __pyx_v_self->surf = new Cantera::ReactingSurf1D();

    /* "cantera/_onedim.pyx":431
 *             # legacy pathway - deprecation is handled in __init__
 *             self.surf = new CxxReactingSurf1D()
 *             self.domain = <CxxDomain1D*>(self.surf)             # <<<<<<<<<<<<<<
 *         else:
 *             self._domain = CxxNewDomain1D(stringify(self._domain_type), phase._base, stringify(name))
 */
    __pyx_v_self->__pyx_base.__pyx_base.domain = ((Cantera::Domain1D *)__pyx_v_self->surf);

    /* "cantera/_onedim.pyx":428
 *         # once legacy path is removed, the parent __cinit__ is sufficient
 *         self.legacy = phase.phase_of_matter == "gas"
 *         if self.legacy:             # <<<<<<<<<<<<<<
 *             # legacy pathway - deprecation is handled in __init__
 *             self.surf = new CxxReactingSurf1D()
 */
    goto __pyx_L3;
  }

  /* "cantera/_onedim.pyx":433
 *             self.domain = <CxxDomain1D*>(self.surf)
 *         else:
 *             self._domain = CxxNewDomain1D(stringify(self._domain_type), phase._base, stringify(name))             # <<<<<<<<<<<<<<
 *             self.domain = self._domain.get()
 *             self.surf = <CxxReactingSurf1D*>self.domain
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_type); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 433, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __pyx_f_7cantera_6_utils_stringify(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 433, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_6 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_name); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 433, __pyx_L1_error)
    try {
      __pyx_t_7 = newDomain(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_5), __pyx_v_phase->_base, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_6));
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 433, __pyx_L1_error)
    }
    __pyx_v_self->__pyx_base.__pyx_base._domain = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_7);

    /* "cantera/_onedim.pyx":434
 *         else:
 *             self._domain = CxxNewDomain1D(stringify(self._domain_type), phase._base, stringify(name))
 *             self.domain = self._domain.get()             # <<<<<<<<<<<<<<
 *             self.surf = <CxxReactingSurf1D*>self.domain
 *         self.boundary = <CxxBoundary1D*>(self.surf)
 */
    __pyx_v_self->__pyx_base.__pyx_base.domain = __pyx_v_self->__pyx_base.__pyx_base._domain.get();

    /* "cantera/_onedim.pyx":435
 *             self._domain = CxxNewDomain1D(stringify(self._domain_type), phase._base, stringify(name))
 *             self.domain = self._domain.get()
 *             self.surf = <CxxReactingSurf1D*>self.domain             # <<<<<<<<<<<<<<
 *         self.boundary = <CxxBoundary1D*>(self.surf)
 * 
 */
    __pyx_v_self->surf = ((Cantera::ReactingSurf1D *)__pyx_v_self->__pyx_base.__pyx_base.domain);
  }
  __pyx_L3:;

  /* "cantera/_onedim.pyx":436
 *             self.domain = self._domain.get()
 *             self.surf = <CxxReactingSurf1D*>self.domain
 *         self.boundary = <CxxBoundary1D*>(self.surf)             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, _SolutionBase phase, name=None):
 */
  __pyx_v_self->__pyx_base.boundary = ((Cantera::Boundary1D *)__pyx_v_self->surf);

  /* "cantera/_onedim.pyx":425
 *     """
 *     _domain_type = "reacting-surface"
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):             # <<<<<<<<<<<<<<
 *         # once legacy path is removed, the parent __cinit__ is sufficient
 *         self.legacy = phase.phase_of_matter == "gas"
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera._onedim.ReactingSurface1D.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":438
 *         self.boundary = <CxxBoundary1D*>(self.surf)
 * 
 *     def __init__(self, _SolutionBase phase, name=None):             # <<<<<<<<<<<<<<
 *         self._weakref_proxy = _WeakrefProxy()
 *         if phase.phase_of_matter == "gas":
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase = 0;
  PyObject *__pyx_v_name = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phase,&__pyx_n_s_name,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phase)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 438, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_name);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 438, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__init__") < 0)) __PYX_ERR(0, 438, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_phase = ((struct __pyx_obj_7cantera_12solutionbase__SolutionBase *)values[0]);
    __pyx_v_name = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 438, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.ReactingSurface1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_phase), __pyx_ptype_7cantera_12solutionbase__SolutionBase, 1, "phase", 0))) __PYX_ERR(0, 438, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_2__init__(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self), __pyx_v_phase, __pyx_v_name);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_2__init__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, PyObject *__pyx_v_name) {
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_sol = NULL;
  PyObject *__pyx_v_gas = NULL;
  PyObject *__pyx_v_val = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/_onedim.pyx":439
 * 
 *     def __init__(self, _SolutionBase phase, name=None):
 *         self._weakref_proxy = _WeakrefProxy()             # <<<<<<<<<<<<<<
 *         if phase.phase_of_matter == "gas":
 *             warnings.warn("ReactingSurface1D: Starting in Cantera 3.0, parameter 'phase'"
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_WeakrefProxy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 439, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 439, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__pyx_base.__pyx_base._weakref_proxy);
  __Pyx_DECREF(__pyx_v_self->__pyx_base.__pyx_base._weakref_proxy);
  __pyx_v_self->__pyx_base.__pyx_base._weakref_proxy = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":440
 *     def __init__(self, _SolutionBase phase, name=None):
 *         self._weakref_proxy = _WeakrefProxy()
 *         if phase.phase_of_matter == "gas":             # <<<<<<<<<<<<<<
 *             warnings.warn("ReactingSurface1D: Starting in Cantera 3.0, parameter 'phase'"
 *                 " should reference surface instead of gas phase.", DeprecationWarning)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_phase), __pyx_n_s_phase_of_matter); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_gas, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 440, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "cantera/_onedim.pyx":441
 *         self._weakref_proxy = _WeakrefProxy()
 *         if phase.phase_of_matter == "gas":
 *             warnings.warn("ReactingSurface1D: Starting in Cantera 3.0, parameter 'phase'"             # <<<<<<<<<<<<<<
 *                 " should reference surface instead of gas phase.", DeprecationWarning)
 *             super().__init__(phase)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":442
 *         if phase.phase_of_matter == "gas":
 *             warnings.warn("ReactingSurface1D: Starting in Cantera 3.0, parameter 'phase'"
 *                 " should reference surface instead of gas phase.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *             super().__init__(phase)
 *             if name is not None:
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__10, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 441, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":443
 *             warnings.warn("ReactingSurface1D: Starting in Cantera 3.0, parameter 'phase'"
 *                 " should reference surface instead of gas phase.", DeprecationWarning)
 *             super().__init__(phase)             # <<<<<<<<<<<<<<
 *             if name is not None:
 *                 self.name = name
 */
    __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF((PyObject *)__pyx_ptype_7cantera_7_onedim_ReactingSurface1D);
    __Pyx_GIVEREF((PyObject *)__pyx_ptype_7cantera_7_onedim_ReactingSurface1D);
    PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_7cantera_7_onedim_ReactingSurface1D));
    __Pyx_INCREF((PyObject *)__pyx_v_self);
    __Pyx_GIVEREF((PyObject *)__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_self));
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 443, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_init); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 443, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, ((PyObject *)__pyx_v_phase)};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 443, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":444
 *                 " should reference surface instead of gas phase.", DeprecationWarning)
 *             super().__init__(phase)
 *             if name is not None:             # <<<<<<<<<<<<<<
 *                 self.name = name
 *         else:
 */
    __pyx_t_5 = (__pyx_v_name != Py_None);
    if (__pyx_t_5) {

      /* "cantera/_onedim.pyx":445
 *             super().__init__(phase)
 *             if name is not None:
 *                 self.name = name             # <<<<<<<<<<<<<<
 *         else:
 *             sol = phase
 */
      if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_name, __pyx_v_name) < 0) __PYX_ERR(0, 445, __pyx_L1_error)

      /* "cantera/_onedim.pyx":444
 *                 " should reference surface instead of gas phase.", DeprecationWarning)
 *             super().__init__(phase)
 *             if name is not None:             # <<<<<<<<<<<<<<
 *                 self.name = name
 *         else:
 */
    }

    /* "cantera/_onedim.pyx":440
 *     def __init__(self, _SolutionBase phase, name=None):
 *         self._weakref_proxy = _WeakrefProxy()
 *         if phase.phase_of_matter == "gas":             # <<<<<<<<<<<<<<
 *             warnings.warn("ReactingSurface1D: Starting in Cantera 3.0, parameter 'phase'"
 *                 " should reference surface instead of gas phase.", DeprecationWarning)
 */
    goto __pyx_L3;
  }

  /* "cantera/_onedim.pyx":447
 *                 self.name = name
 *         else:
 *             sol = phase             # <<<<<<<<<<<<<<
 *             gas = None
 *             for val in sol._adjacent.values():
 */
  /*else*/ {
    __Pyx_INCREF((PyObject *)__pyx_v_phase);
    __pyx_v_sol = __pyx_v_phase;

    /* "cantera/_onedim.pyx":448
 *         else:
 *             sol = phase
 *             gas = None             # <<<<<<<<<<<<<<
 *             for val in sol._adjacent.values():
 *                 if val.phase_of_matter == "gas":
 */
    __Pyx_INCREF(Py_None);
    __pyx_v_gas = Py_None;

    /* "cantera/_onedim.pyx":449
 *             sol = phase
 *             gas = None
 *             for val in sol._adjacent.values():             # <<<<<<<<<<<<<<
 *                 if val.phase_of_matter == "gas":
 *                     gas = val
 */
    __pyx_t_6 = 0;
    if (unlikely(__pyx_v_sol->_adjacent == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "values");
      __PYX_ERR(0, 449, __pyx_L1_error)
    }
    __pyx_t_2 = __Pyx_dict_iterator(__pyx_v_sol->_adjacent, 0, __pyx_n_s_values, (&__pyx_t_7), (&__pyx_t_4)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 449, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF(__pyx_t_1);
    __pyx_t_1 = __pyx_t_2;
    __pyx_t_2 = 0;
    while (1) {
      __pyx_t_8 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_7, &__pyx_t_6, NULL, &__pyx_t_2, NULL, __pyx_t_4);
      if (unlikely(__pyx_t_8 == 0)) break;
      if (unlikely(__pyx_t_8 == -1)) __PYX_ERR(0, 449, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XDECREF_SET(__pyx_v_val, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "cantera/_onedim.pyx":450
 *             gas = None
 *             for val in sol._adjacent.values():
 *                 if val.phase_of_matter == "gas":             # <<<<<<<<<<<<<<
 *                     gas = val
 *                     break
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_val, __pyx_n_s_phase_of_matter); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 450, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_5 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_gas, Py_EQ)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 450, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_5) {

        /* "cantera/_onedim.pyx":451
 *             for val in sol._adjacent.values():
 *                 if val.phase_of_matter == "gas":
 *                     gas = val             # <<<<<<<<<<<<<<
 *                     break
 *             if gas is None:
 */
        __Pyx_INCREF(__pyx_v_val);
        __Pyx_DECREF_SET(__pyx_v_gas, __pyx_v_val);

        /* "cantera/_onedim.pyx":452
 *                 if val.phase_of_matter == "gas":
 *                     gas = val
 *                     break             # <<<<<<<<<<<<<<
 *             if gas is None:
 *                 raise CanteraError("ReactingSurface1D needs an adjacent gas phase")
 */
        goto __pyx_L6_break;

        /* "cantera/_onedim.pyx":450
 *             gas = None
 *             for val in sol._adjacent.values():
 *                 if val.phase_of_matter == "gas":             # <<<<<<<<<<<<<<
 *                     gas = val
 *                     break
 */
      }
    }
    __pyx_L6_break:;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":453
 *                     gas = val
 *                     break
 *             if gas is None:             # <<<<<<<<<<<<<<
 *                 raise CanteraError("ReactingSurface1D needs an adjacent gas phase")
 *             super().__init__(gas, name=name)
 */
    __pyx_t_5 = (__pyx_v_gas == Py_None);
    if (unlikely(__pyx_t_5)) {

      /* "cantera/_onedim.pyx":454
 *                     break
 *             if gas is None:
 *                 raise CanteraError("ReactingSurface1D needs an adjacent gas phase")             # <<<<<<<<<<<<<<
 *             super().__init__(gas, name=name)
 * 
 */
      __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 454, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_2, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_kp_u_ReactingSurface1D_needs_an_adjac};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 454, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      }
      __Pyx_Raise(__pyx_t_1, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __PYX_ERR(0, 454, __pyx_L1_error)

      /* "cantera/_onedim.pyx":453
 *                     gas = val
 *                     break
 *             if gas is None:             # <<<<<<<<<<<<<<
 *                 raise CanteraError("ReactingSurface1D needs an adjacent gas phase")
 *             super().__init__(gas, name=name)
 */
    }

    /* "cantera/_onedim.pyx":455
 *             if gas is None:
 *                 raise CanteraError("ReactingSurface1D needs an adjacent gas phase")
 *             super().__init__(gas, name=name)             # <<<<<<<<<<<<<<
 * 
 *         self.surface = phase
 */
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF((PyObject *)__pyx_ptype_7cantera_7_onedim_ReactingSurface1D);
    __Pyx_GIVEREF((PyObject *)__pyx_ptype_7cantera_7_onedim_ReactingSurface1D);
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_ptype_7cantera_7_onedim_ReactingSurface1D));
    __Pyx_INCREF((PyObject *)__pyx_v_self);
    __Pyx_GIVEREF((PyObject *)__pyx_v_self);
    PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self));
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_init); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_gas);
    __Pyx_GIVEREF(__pyx_v_gas);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_gas);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_name, __pyx_v_name) < 0) __PYX_ERR(0, 455, __pyx_L1_error)
    __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 455, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
  }
  __pyx_L3:;

  /* "cantera/_onedim.pyx":457
 *             super().__init__(gas, name=name)
 * 
 *         self.surface = phase             # <<<<<<<<<<<<<<
 *         # Block species from being added to the phase as long as this object exists
 *         self.surface._references[self._weakref_proxy] = True
 */
  if (!(likely(((((PyObject *)__pyx_v_phase)) == Py_None) || likely(__Pyx_TypeTest(((PyObject *)__pyx_v_phase), __pyx_ptype_7cantera_8kinetics_Kinetics))))) __PYX_ERR(0, 457, __pyx_L1_error)
  __pyx_t_9 = ((PyObject *)__pyx_v_phase);
  __Pyx_INCREF(__pyx_t_9);
  __Pyx_GIVEREF(__pyx_t_9);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->surface);
  __Pyx_DECREF((PyObject *)__pyx_v_self->surface);
  __pyx_v_self->surface = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)__pyx_t_9);
  __pyx_t_9 = 0;

  /* "cantera/_onedim.pyx":459
 *         self.surface = phase
 *         # Block species from being added to the phase as long as this object exists
 *         self.surface._references[self._weakref_proxy] = True             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  if (unlikely((PyObject_SetItem(__pyx_v_self->surface->__pyx_base._references, __pyx_v_self->__pyx_base.__pyx_base._weakref_proxy, Py_True) < 0))) __PYX_ERR(0, 459, __pyx_L1_error)

  /* "cantera/_onedim.pyx":438
 *         self.boundary = <CxxBoundary1D*>(self.surf)
 * 
 *     def __init__(self, _SolutionBase phase, name=None):             # <<<<<<<<<<<<<<
 *         self._weakref_proxy = _WeakrefProxy()
 *         if phase.phase_of_matter == "gas":
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_AddTraceback("cantera._onedim.ReactingSurface1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_sol);
  __Pyx_XDECREF(__pyx_v_gas);
  __Pyx_XDECREF(__pyx_v_val);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":461
 *         self.surface._references[self._weakref_proxy] = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.legacy:
 *             del self.surf
 */

/* Python wrapper */
static void __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_5__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_5__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_4__dealloc__(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_4__dealloc__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "cantera/_onedim.pyx":462
 * 
 *     def __dealloc__(self):
 *         if self.legacy:             # <<<<<<<<<<<<<<
 *             del self.surf
 * 
 */
  __pyx_t_1 = (__pyx_v_self->legacy != 0);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":463
 *     def __dealloc__(self):
 *         if self.legacy:
 *             del self.surf             # <<<<<<<<<<<<<<
 * 
 *     property phase:
 */
    delete __pyx_v_self->surf;

    /* "cantera/_onedim.pyx":462
 * 
 *     def __dealloc__(self):
 *         if self.legacy:             # <<<<<<<<<<<<<<
 *             del self.surf
 * 
 */
  }

  /* "cantera/_onedim.pyx":461
 *         self.surface._references[self._weakref_proxy] = True
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.legacy:
 *             del self.surf
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cantera/_onedim.pyx":469
 *         Get the `Interface` object representing species and reactions on the surface
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.surface
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_5phase_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_5phase_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_5phase___get__(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_17ReactingSurface1D_5phase___get__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":470
 *         """
 *         def __get__(self):
 *             return self.surface             # <<<<<<<<<<<<<<
 * 
 *     def set_kinetics(self, Kinetics kin):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_self->surface);
  __pyx_r = ((PyObject *)__pyx_v_self->surface);
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":469
 *         Get the `Interface` object representing species and reactions on the surface
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.surface
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":472
 *             return self.surface
 * 
 *     def set_kinetics(self, Kinetics kin):             # <<<<<<<<<<<<<<
 *         """Set the kinetics manager (surface reaction mechanism object).
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7set_kinetics(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_17ReactingSurface1D_6set_kinetics, "Set the kinetics manager (surface reaction mechanism object).\n\n        .. deprecated:: 3.0\n\n            Method to be removed after Cantera 3.0; set `Kinetics` when instantiating\n            `ReactingSurface1D` instead.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_17ReactingSurface1D_7set_kinetics = {"set_kinetics", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7set_kinetics, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_17ReactingSurface1D_6set_kinetics};
static PyObject *__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7set_kinetics(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kin = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_kinetics (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_kin,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_kin)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 472, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_kinetics") < 0)) __PYX_ERR(0, 472, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_kin = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_kinetics", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 472, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.ReactingSurface1D.set_kinetics", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kin), __pyx_ptype_7cantera_8kinetics_Kinetics, 1, "kin", 0))) __PYX_ERR(0, 472, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_6set_kinetics(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self), __pyx_v_kin);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_17ReactingSurface1D_6set_kinetics(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kin) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_kinetics", 0);

  /* "cantera/_onedim.pyx":480
 *             `ReactingSurface1D` instead.
 *         """
 *         warnings.warn("ReactingSurface1D.set_kinetics: Method to be removed after "             # <<<<<<<<<<<<<<
 *             "Cantera 3.0; set 'Kinetics' when instantiating 'ReactingSurface1D' "
 *             "instead.", DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":482
 *         warnings.warn("ReactingSurface1D.set_kinetics: Method to be removed after "
 *             "Cantera 3.0; set 'Kinetics' when instantiating 'ReactingSurface1D' "
 *             "instead.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *         if pystr(kin.kinetics.kineticsType()) not in ("surface", "edge"):
 *             raise TypeError('Kinetics object must be derived from '
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":483
 *             "Cantera 3.0; set 'Kinetics' when instantiating 'ReactingSurface1D' "
 *             "instead.", DeprecationWarning)
 *         if pystr(kin.kinetics.kineticsType()) not in ("surface", "edge"):             # <<<<<<<<<<<<<<
 *             raise TypeError('Kinetics object must be derived from '
 *                             'InterfaceKinetics.')
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_kin->__pyx_base.kinetics->kineticsType()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 483, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_surface, Py_NE)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 483, __pyx_L1_error)
  if (__pyx_t_4) {
  } else {
    __pyx_t_3 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_n_u_edge, Py_NE)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 483, __pyx_L1_error)
  __pyx_t_3 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __pyx_t_3;
  if (unlikely(__pyx_t_4)) {

    /* "cantera/_onedim.pyx":484
 *             "instead.", DeprecationWarning)
 *         if pystr(kin.kinetics.kineticsType()) not in ("surface", "edge"):
 *             raise TypeError('Kinetics object must be derived from '             # <<<<<<<<<<<<<<
 *                             'InterfaceKinetics.')
 *         self.surf.setKinetics(kin.base.kinetics())
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 484, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 484, __pyx_L1_error)

    /* "cantera/_onedim.pyx":483
 *             "Cantera 3.0; set 'Kinetics' when instantiating 'ReactingSurface1D' "
 *             "instead.", DeprecationWarning)
 *         if pystr(kin.kinetics.kineticsType()) not in ("surface", "edge"):             # <<<<<<<<<<<<<<
 *             raise TypeError('Kinetics object must be derived from '
 *                             'InterfaceKinetics.')
 */
  }

  /* "cantera/_onedim.pyx":486
 *             raise TypeError('Kinetics object must be derived from '
 *                             'InterfaceKinetics.')
 *         self.surf.setKinetics(kin.base.kinetics())             # <<<<<<<<<<<<<<
 *         self.surface = kin
 *         self.surface._references[self._weakref_proxy] = True
 */
  try {
    __pyx_v_self->surf->setKinetics(__pyx_v_kin->__pyx_base.base->kinetics());
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 486, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":487
 *                             'InterfaceKinetics.')
 *         self.surf.setKinetics(kin.base.kinetics())
 *         self.surface = kin             # <<<<<<<<<<<<<<
 *         self.surface._references[self._weakref_proxy] = True
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_kin);
  __Pyx_GIVEREF((PyObject *)__pyx_v_kin);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->surface);
  __Pyx_DECREF((PyObject *)__pyx_v_self->surface);
  __pyx_v_self->surface = __pyx_v_kin;

  /* "cantera/_onedim.pyx":488
 *         self.surf.setKinetics(kin.base.kinetics())
 *         self.surface = kin
 *         self.surface._references[self._weakref_proxy] = True             # <<<<<<<<<<<<<<
 * 
 *     property coverage_enabled:
 */
  if (unlikely((PyObject_SetItem(__pyx_v_self->surface->__pyx_base._references, __pyx_v_self->__pyx_base.__pyx_base._weakref_proxy, Py_True) < 0))) __PYX_ERR(0, 488, __pyx_L1_error)

  /* "cantera/_onedim.pyx":472
 *             return self.surface
 * 
 *     def set_kinetics(self, Kinetics kin):             # <<<<<<<<<<<<<<
 *         """Set the kinetics manager (surface reaction mechanism object).
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera._onedim.ReactingSurface1D.set_kinetics", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":492
 *     property coverage_enabled:
 *         """Controls whether or not to solve the surface coverage equations."""
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.surf.enableCoverageEquations(<cbool>value)
 *         def __get__(self):
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled_1__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled___set__(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled___set__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":493
 *         """Controls whether or not to solve the surface coverage equations."""
 *         def __set__(self, value):
 *             self.surf.enableCoverageEquations(<cbool>value)             # <<<<<<<<<<<<<<
 *         def __get__(self):
 *             return self.surf.coverageEnabled()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_value); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 493, __pyx_L1_error)
  try {
    __pyx_v_self->surf->enableCoverageEquations(((bool)__pyx_t_1));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 493, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":492
 *     property coverage_enabled:
 *         """Controls whether or not to solve the surface coverage equations."""
 *         def __set__(self, value):             # <<<<<<<<<<<<<<
 *             self.surf.enableCoverageEquations(<cbool>value)
 *         def __get__(self):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.ReactingSurface1D.coverage_enabled.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":494
 *         def __set__(self, value):
 *             self.surf.enableCoverageEquations(<cbool>value)
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.surf.coverageEnabled()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled_3__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled_3__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled_2__get__(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled_2__get__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":495
 *             self.surf.enableCoverageEquations(<cbool>value)
 *         def __get__(self):
 *             return self.surf.coverageEnabled()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->surf->coverageEnabled()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 495, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":494
 *         def __set__(self, value):
 *             self.surf.enableCoverageEquations(<cbool>value)
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.surf.coverageEnabled()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.ReactingSurface1D.coverage_enabled.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pxd":166
 *     cdef cbool legacy
 *     cdef CxxReactingSurf1D* surf
 *     cdef public Kinetics surface             # <<<<<<<<<<<<<<
 * 
 * cdef class _FlowBase(Domain1D):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7surface_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7surface_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_7surface___get__(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_17ReactingSurface1D_7surface___get__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_self->surface);
  __pyx_r = ((PyObject *)__pyx_v_self->surface);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7surface_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7surface_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_7surface_2__set__(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_7surface_2__set__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_7cantera_8kinetics_Kinetics))))) __PYX_ERR(4, 166, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->surface);
  __Pyx_DECREF((PyObject *)__pyx_v_self->surface);
  __pyx_v_self->surface = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.ReactingSurface1D.surface.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7surface_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7surface_5__del__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_7surface_4__del__(((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_17ReactingSurface1D_7surface_4__del__(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->surface);
  __Pyx_DECREF((PyObject *)__pyx_v_self->surface);
  __pyx_v_self->surface = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":500
 * cdef class _FlowBase(Domain1D):
 *     """ Base class for 1D flow domains """
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):             # <<<<<<<<<<<<<<
 *         self._domain = CxxNewDomain1D(
 *             stringify(self._domain_type), phase._base, stringify(name))
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase = 0;
  PyObject *__pyx_v_name = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __pyx_v_args = __Pyx_ArgsSlice_VARARGS(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
    __Pyx_RefNannyFinishContext();
    return -1;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phase,&__pyx_n_s_name,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)__pyx_kp_u__8);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phase)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 500, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (kw_args == 1) {
        const Py_ssize_t index = 1;
        PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 500, __pyx_L3_error)
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, used_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 500, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_phase = ((struct __pyx_obj_7cantera_12solutionbase__SolutionBase *)values[0]);
    __pyx_v_name = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 500, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_phase), __pyx_ptype_7cantera_12solutionbase__SolutionBase, 1, "phase", 0))) __PYX_ERR(0, 500, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase___cinit__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), __pyx_v_phase, __pyx_v_name, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase___cinit__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase, PyObject *__pyx_v_name, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  std::string __pyx_t_2;
  std::string __pyx_t_3;
  std::shared_ptr<Cantera::Domain1D>  __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/_onedim.pyx":502
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):
 *         self._domain = CxxNewDomain1D(
 *             stringify(self._domain_type), phase._base, stringify(name))             # <<<<<<<<<<<<<<
 *         self.domain = self._domain.get()
 *         self.flow = <CxxStFlow*>self.domain
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 502, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __pyx_f_7cantera_6_utils_stringify(__pyx_t_1); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 502, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_3 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_name); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 502, __pyx_L1_error)

  /* "cantera/_onedim.pyx":501
 *     """ Base class for 1D flow domains """
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):
 *         self._domain = CxxNewDomain1D(             # <<<<<<<<<<<<<<
 *             stringify(self._domain_type), phase._base, stringify(name))
 *         self.domain = self._domain.get()
 */
  try {
    __pyx_t_4 = newDomain(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_2), __pyx_v_phase->_base, __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 501, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base._domain = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_4);

  /* "cantera/_onedim.pyx":503
 *         self._domain = CxxNewDomain1D(
 *             stringify(self._domain_type), phase._base, stringify(name))
 *         self.domain = self._domain.get()             # <<<<<<<<<<<<<<
 *         self.flow = <CxxStFlow*>self.domain
 * 
 */
  __pyx_v_self->__pyx_base.domain = __pyx_v_self->__pyx_base._domain.get();

  /* "cantera/_onedim.pyx":504
 *             stringify(self._domain_type), phase._base, stringify(name))
 *         self.domain = self._domain.get()
 *         self.flow = <CxxStFlow*>self.domain             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, **kwargs):
 */
  __pyx_v_self->flow = ((Cantera::StFlow *)__pyx_v_self->__pyx_base.domain);

  /* "cantera/_onedim.pyx":500
 * cdef class _FlowBase(Domain1D):
 *     """ Base class for 1D flow domains """
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):             # <<<<<<<<<<<<<<
 *         self._domain = CxxNewDomain1D(
 *             stringify(self._domain_type), phase._base, stringify(name))
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":506
 *         self.flow = <CxxStFlow*>self.domain
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         super().__init__(*args, **kwargs)
 *         self.P = self.gas.P
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = __Pyx_KwargsAsDict_VARARGS(__pyx_kwds, __pyx_kwvalues);
    if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = PyDict_New();
    if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_2__init__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_2__init__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/_onedim.pyx":507
 * 
 *     def __init__(self, *args, **kwargs):
 *         super().__init__(*args, **kwargs)             # <<<<<<<<<<<<<<
 *         self.P = self.gas.P
 *         self.flow.solveEnergyEqn()
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase);
  __Pyx_GIVEREF((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase);
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase));
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_init); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyDict_Copy(__pyx_v_kwargs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_v_args, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":508
 *     def __init__(self, *args, **kwargs):
 *         super().__init__(*args, **kwargs)
 *         self.P = self.gas.P             # <<<<<<<<<<<<<<
 *         self.flow.solveEnergyEqn()
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_P); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 508, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_P, __pyx_t_3) < 0) __PYX_ERR(0, 508, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":509
 *         super().__init__(*args, **kwargs)
 *         self.P = self.gas.P
 *         self.flow.solveEnergyEqn()             # <<<<<<<<<<<<<<
 * 
 *     property P:
 */
  __pyx_v_self->flow->solveEnergyEqn();

  /* "cantera/_onedim.pyx":506
 *         self.flow = <CxxStFlow*>self.domain
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         super().__init__(*args, **kwargs)
 *         self.P = self.gas.P
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":513
 *     property P:
 *         """ Pressure [Pa] """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.pressure()
 *         def __set__(self, P):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_1P_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_1P_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_1P___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_1P___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":514
 *         """ Pressure [Pa] """
 *         def __get__(self):
 *             return self.flow.pressure()             # <<<<<<<<<<<<<<
 *         def __set__(self, P):
 *             self.flow.setPressure(P)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->flow->pressure()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 514, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":513
 *     property P:
 *         """ Pressure [Pa] """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.pressure()
 *         def __set__(self, P):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.P.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":515
 *         def __get__(self):
 *             return self.flow.pressure()
 *         def __set__(self, P):             # <<<<<<<<<<<<<<
 *             self.flow.setPressure(P)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_1P_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_P); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_1P_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_P) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_1P_2__set__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), ((PyObject *)__pyx_v_P));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_1P_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_P) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":516
 *             return self.flow.pressure()
 *         def __set__(self, P):
 *             self.flow.setPressure(P)             # <<<<<<<<<<<<<<
 * 
 *     property transport_model:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_P); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 516, __pyx_L1_error)
  __pyx_v_self->flow->setPressure(__pyx_t_1);

  /* "cantera/_onedim.pyx":515
 *         def __get__(self):
 *             return self.flow.pressure()
 *         def __set__(self, P):             # <<<<<<<<<<<<<<
 *             self.flow.setPressure(P)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.P.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":524
 *         .. versionadded:: 3.0
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.flow.transportModel())
 *         def __set__(self, model):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_15transport_model_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_15transport_model_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_15transport_model___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_15transport_model___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":525
 *         """
 *         def __get__(self):
 *             return pystr(self.flow.transportModel())             # <<<<<<<<<<<<<<
 *         def __set__(self, model):
 *             self.flow.setTransportModel(stringify(model))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->flow->transportModel()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 525, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":524
 *         .. versionadded:: 3.0
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.flow.transportModel())
 *         def __set__(self, model):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.transport_model.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":526
 *         def __get__(self):
 *             return pystr(self.flow.transportModel())
 *         def __set__(self, model):             # <<<<<<<<<<<<<<
 *             self.flow.setTransportModel(stringify(model))
 *             # ensure that transport remains accessible
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_15transport_model_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_model); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_15transport_model_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_model) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_15transport_model_2__set__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), ((PyObject *)__pyx_v_model));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_15transport_model_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_model) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":527
 *             return pystr(self.flow.transportModel())
 *         def __set__(self, model):
 *             self.flow.setTransportModel(stringify(model))             # <<<<<<<<<<<<<<
 *             # ensure that transport remains accessible
 *             self.gas.transport = self.gas.base.transport().get()
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_model); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 527, __pyx_L1_error)
  try {
    __pyx_v_self->flow->setTransportModel(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 527, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":529
 *             self.flow.setTransportModel(stringify(model))
 *             # ensure that transport remains accessible
 *             self.gas.transport = self.gas.base.transport().get()             # <<<<<<<<<<<<<<
 * 
 *     def set_transport(self, _SolutionBase phase):
 */
  __pyx_v_self->__pyx_base.gas->transport = __pyx_v_self->__pyx_base.gas->base->transport().get();

  /* "cantera/_onedim.pyx":526
 *         def __get__(self):
 *             return pystr(self.flow.transportModel())
 *         def __set__(self, model):             # <<<<<<<<<<<<<<
 *             self.flow.setTransportModel(stringify(model))
 *             # ensure that transport remains accessible
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.transport_model.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":531
 *             self.gas.transport = self.gas.base.transport().get()
 * 
 *     def set_transport(self, _SolutionBase phase):             # <<<<<<<<<<<<<<
 *         """
 *         Set the `Solution` object used for calculating transport properties.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_5set_transport(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_9_FlowBase_4set_transport, "\n        Set the `Solution` object used for calculating transport properties.\n\n        .. deprecated:: 3.0\n\n            Method to be removed after Cantera 3.0. Replaceable by `transport_model`\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_9_FlowBase_5set_transport = {"set_transport", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_5set_transport, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_4set_transport};
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_5set_transport(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_transport (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_phase,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_phase)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 531, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_transport") < 0)) __PYX_ERR(0, 531, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_phase = ((struct __pyx_obj_7cantera_12solutionbase__SolutionBase *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_transport", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 531, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.set_transport", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_phase), __pyx_ptype_7cantera_12solutionbase__SolutionBase, 1, "phase", 0))) __PYX_ERR(0, 531, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_4set_transport(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), __pyx_v_phase);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_4set_transport(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, struct __pyx_obj_7cantera_12solutionbase__SolutionBase *__pyx_v_phase) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_transport", 0);

  /* "cantera/_onedim.pyx":539
 *             Method to be removed after Cantera 3.0. Replaceable by `transport_model`
 *         """
 *         warnings.warn("_FlowBase.set_transport: Method to be removed after Cantera 3.0;"             # <<<<<<<<<<<<<<
 *                       " use property 'transport_model' instead.", DeprecationWarning)
 *         self._weakref_proxy = _WeakrefProxy()
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":540
 *         """
 *         warnings.warn("_FlowBase.set_transport: Method to be removed after Cantera 3.0;"
 *                       " use property 'transport_model' instead.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *         self._weakref_proxy = _WeakrefProxy()
 *         self.gas._references[self._weakref_proxy] = True
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":541
 *         warnings.warn("_FlowBase.set_transport: Method to be removed after Cantera 3.0;"
 *                       " use property 'transport_model' instead.", DeprecationWarning)
 *         self._weakref_proxy = _WeakrefProxy()             # <<<<<<<<<<<<<<
 *         self.gas._references[self._weakref_proxy] = True
 *         self.gas = phase
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_WeakrefProxy); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 541, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 541, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->__pyx_base._weakref_proxy);
  __Pyx_DECREF(__pyx_v_self->__pyx_base._weakref_proxy);
  __pyx_v_self->__pyx_base._weakref_proxy = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":542
 *                       " use property 'transport_model' instead.", DeprecationWarning)
 *         self._weakref_proxy = _WeakrefProxy()
 *         self.gas._references[self._weakref_proxy] = True             # <<<<<<<<<<<<<<
 *         self.gas = phase
 *         self.flow.setTransport(deref(self.gas.transport))
 */
  if (unlikely((PyObject_SetItem(__pyx_v_self->__pyx_base.gas->_references, __pyx_v_self->__pyx_base._weakref_proxy, Py_True) < 0))) __PYX_ERR(0, 542, __pyx_L1_error)

  /* "cantera/_onedim.pyx":543
 *         self._weakref_proxy = _WeakrefProxy()
 *         self.gas._references[self._weakref_proxy] = True
 *         self.gas = phase             # <<<<<<<<<<<<<<
 *         self.flow.setTransport(deref(self.gas.transport))
 * 
 */
  __Pyx_INCREF((PyObject *)__pyx_v_phase);
  __Pyx_GIVEREF((PyObject *)__pyx_v_phase);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base.gas);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base.gas);
  __pyx_v_self->__pyx_base.gas = __pyx_v_phase;

  /* "cantera/_onedim.pyx":544
 *         self.gas._references[self._weakref_proxy] = True
 *         self.gas = phase
 *         self.flow.setTransport(deref(self.gas.transport))             # <<<<<<<<<<<<<<
 * 
 *     def set_default_tolerances(self):
 */
  try {
    __pyx_v_self->flow->setTransport((*__pyx_v_self->__pyx_base.gas->transport));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 544, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":531
 *             self.gas.transport = self.gas.base.transport().get()
 * 
 *     def set_transport(self, _SolutionBase phase):             # <<<<<<<<<<<<<<
 *         """
 *         Set the `Solution` object used for calculating transport properties.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.set_transport", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":546
 *         self.flow.setTransport(deref(self.gas.transport))
 * 
 *     def set_default_tolerances(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set all tolerances to their default values
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_7set_default_tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_9_FlowBase_6set_default_tolerances, "\n        Set all tolerances to their default values\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_9_FlowBase_7set_default_tolerances = {"set_default_tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_7set_default_tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_6set_default_tolerances};
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_7set_default_tolerances(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_default_tolerances (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("set_default_tolerances", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "set_default_tolerances", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_6set_default_tolerances(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_6set_default_tolerances(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_v_chargetol = NULL;
  PyObject *__pyx_v_S = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_default_tolerances", 0);

  /* "cantera/_onedim.pyx":550
 *         Set all tolerances to their default values
 *         """
 *         super().set_default_tolerances()             # <<<<<<<<<<<<<<
 *         if self.transport_model != "ionized-gas":
 *             return
 */
  __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase);
  __Pyx_GIVEREF((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase);
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase));
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_2, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_2, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_set_default_tolerances); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 550, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 550, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":551
 *         """
 *         super().set_default_tolerances()
 *         if self.transport_model != "ionized-gas":             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transport_model); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_5 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_kp_u_ionized_gas, Py_NE)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 551, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_5) {

    /* "cantera/_onedim.pyx":552
 *         super().set_default_tolerances()
 *         if self.transport_model != "ionized-gas":
 *             return             # <<<<<<<<<<<<<<
 * 
 *         chargetol = {}
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":551
 *         """
 *         super().set_default_tolerances()
 *         if self.transport_model != "ionized-gas":             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "cantera/_onedim.pyx":554
 *             return
 * 
 *         chargetol = {}             # <<<<<<<<<<<<<<
 *         for S in self.gas.species():
 *             if S.composition == {'E': 1.0}:
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 554, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_chargetol = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":555
 * 
 *         chargetol = {}
 *         for S in self.gas.species():             # <<<<<<<<<<<<<<
 *             if S.composition == {'E': 1.0}:
 *                 chargetol[S.name] = (1e-5, 1e-20)
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self->__pyx_base.gas), __pyx_n_s_species); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 555, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_6 = 0;
    __pyx_t_7 = NULL;
  } else {
    __pyx_t_6 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 555, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_7 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 555, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_7)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 555, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_6); __Pyx_INCREF(__pyx_t_1); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 555, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 555, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_7(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 555, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_S, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":556
 *         chargetol = {}
 *         for S in self.gas.species():
 *             if S.composition == {'E': 1.0}:             # <<<<<<<<<<<<<<
 *                 chargetol[S.name] = (1e-5, 1e-20)
 *             elif S.charge != 0:
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_S, __pyx_n_s_composition); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_E, __pyx_float_1_0) < 0) __PYX_ERR(0, 556, __pyx_L1_error)
    __pyx_t_8 = PyObject_RichCompare(__pyx_t_1, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 556, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (__pyx_t_5) {

      /* "cantera/_onedim.pyx":557
 *         for S in self.gas.species():
 *             if S.composition == {'E': 1.0}:
 *                 chargetol[S.name] = (1e-5, 1e-20)             # <<<<<<<<<<<<<<
 *             elif S.charge != 0:
 *                 chargetol[S.name] = (1e-5, 1e-16)
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_S, __pyx_n_s_name); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 557, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (unlikely((PyDict_SetItem(__pyx_v_chargetol, __pyx_t_8, __pyx_tuple__14) < 0))) __PYX_ERR(0, 557, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "cantera/_onedim.pyx":556
 *         chargetol = {}
 *         for S in self.gas.species():
 *             if S.composition == {'E': 1.0}:             # <<<<<<<<<<<<<<
 *                 chargetol[S.name] = (1e-5, 1e-20)
 *             elif S.charge != 0:
 */
      goto __pyx_L6;
    }

    /* "cantera/_onedim.pyx":558
 *             if S.composition == {'E': 1.0}:
 *                 chargetol[S.name] = (1e-5, 1e-20)
 *             elif S.charge != 0:             # <<<<<<<<<<<<<<
 *                 chargetol[S.name] = (1e-5, 1e-16)
 *         self.set_steady_tolerances(**chargetol)
 */
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_S, __pyx_n_s_charge); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 558, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_5 = (__Pyx_PyInt_BoolNeObjC(__pyx_t_8, __pyx_int_0, 0, 0)); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 558, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (__pyx_t_5) {

      /* "cantera/_onedim.pyx":559
 *                 chargetol[S.name] = (1e-5, 1e-20)
 *             elif S.charge != 0:
 *                 chargetol[S.name] = (1e-5, 1e-16)             # <<<<<<<<<<<<<<
 *         self.set_steady_tolerances(**chargetol)
 *         self.set_transient_tolerances(**chargetol)
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_v_S, __pyx_n_s_name); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 559, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (unlikely((PyDict_SetItem(__pyx_v_chargetol, __pyx_t_8, __pyx_tuple__15) < 0))) __PYX_ERR(0, 559, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

      /* "cantera/_onedim.pyx":558
 *             if S.composition == {'E': 1.0}:
 *                 chargetol[S.name] = (1e-5, 1e-20)
 *             elif S.charge != 0:             # <<<<<<<<<<<<<<
 *                 chargetol[S.name] = (1e-5, 1e-16)
 *         self.set_steady_tolerances(**chargetol)
 */
    }
    __pyx_L6:;

    /* "cantera/_onedim.pyx":555
 * 
 *         chargetol = {}
 *         for S in self.gas.species():             # <<<<<<<<<<<<<<
 *             if S.composition == {'E': 1.0}:
 *                 chargetol[S.name] = (1e-5, 1e-20)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":560
 *             elif S.charge != 0:
 *                 chargetol[S.name] = (1e-5, 1e-16)
 *         self.set_steady_tolerances(**chargetol)             # <<<<<<<<<<<<<<
 *         self.set_transient_tolerances(**chargetol)
 *         self.have_user_tolerances = False
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_steady_tolerances); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_8 = PyDict_Copy(__pyx_v_chargetol); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_8); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":561
 *                 chargetol[S.name] = (1e-5, 1e-16)
 *         self.set_steady_tolerances(**chargetol)
 *         self.set_transient_tolerances(**chargetol)             # <<<<<<<<<<<<<<
 *         self.have_user_tolerances = False
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_transient_tolerances); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = PyDict_Copy(__pyx_v_chargetol); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_8);
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_empty_tuple, __pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 561, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":562
 *         self.set_steady_tolerances(**chargetol)
 *         self.set_transient_tolerances(**chargetol)
 *         self.have_user_tolerances = False             # <<<<<<<<<<<<<<
 * 
 *     property soret_enabled:
 */
  __Pyx_INCREF(Py_False);
  __Pyx_GIVEREF(Py_False);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->__pyx_base.have_user_tolerances);
  __Pyx_DECREF((PyObject *)__pyx_v_self->__pyx_base.have_user_tolerances);
  __pyx_v_self->__pyx_base.have_user_tolerances = ((PyBoolObject *)Py_False);

  /* "cantera/_onedim.pyx":546
 *         self.flow.setTransport(deref(self.gas.transport))
 * 
 *     def set_default_tolerances(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set all tolerances to their default values
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.set_default_tolerances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_chargetol);
  __Pyx_XDECREF(__pyx_v_S);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":570
 *         multicomponent transport model.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.withSoret()
 *         def __set__(self, enable):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_13soret_enabled_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_13soret_enabled_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_13soret_enabled___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_13soret_enabled___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":571
 *         """
 *         def __get__(self):
 *             return self.flow.withSoret()             # <<<<<<<<<<<<<<
 *         def __set__(self, enable):
 *             self.flow.enableSoret(<cbool>enable)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->flow->withSoret()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":570
 *         multicomponent transport model.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.withSoret()
 *         def __set__(self, enable):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.soret_enabled.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":572
 *         def __get__(self):
 *             return self.flow.withSoret()
 *         def __set__(self, enable):             # <<<<<<<<<<<<<<
 *             self.flow.enableSoret(<cbool>enable)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_13soret_enabled_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_enable); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_13soret_enabled_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_enable) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_13soret_enabled_2__set__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), ((PyObject *)__pyx_v_enable));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_13soret_enabled_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_enable) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":573
 *             return self.flow.withSoret()
 *         def __set__(self, enable):
 *             self.flow.enableSoret(<cbool>enable)             # <<<<<<<<<<<<<<
 * 
 *     property energy_enabled:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_enable); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 573, __pyx_L1_error)
  try {
    __pyx_v_self->flow->enableSoret(((bool)__pyx_t_1));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 573, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":572
 *         def __get__(self):
 *             return self.flow.withSoret()
 *         def __set__(self, enable):             # <<<<<<<<<<<<<<
 *             self.flow.enableSoret(<cbool>enable)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.soret_enabled.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":577
 *     property energy_enabled:
 *         """ Determines whether or not to solve the energy equation."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.doEnergy(0)
 *         def __set__(self, enable):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_14energy_enabled_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_14energy_enabled_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_14energy_enabled___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_14energy_enabled___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":578
 *         """ Determines whether or not to solve the energy equation."""
 *         def __get__(self):
 *             return self.flow.doEnergy(0)             # <<<<<<<<<<<<<<
 *         def __set__(self, enable):
 *             if enable:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->flow->doEnergy(0)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 578, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":577
 *     property energy_enabled:
 *         """ Determines whether or not to solve the energy equation."""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.doEnergy(0)
 *         def __set__(self, enable):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.energy_enabled.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":579
 *         def __get__(self):
 *             return self.flow.doEnergy(0)
 *         def __set__(self, enable):             # <<<<<<<<<<<<<<
 *             if enable:
 *                 self.flow.solveEnergyEqn()
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_14energy_enabled_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_enable); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_14energy_enabled_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_enable) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_14energy_enabled_2__set__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), ((PyObject *)__pyx_v_enable));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_14energy_enabled_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_enable) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":580
 *             return self.flow.doEnergy(0)
 *         def __set__(self, enable):
 *             if enable:             # <<<<<<<<<<<<<<
 *                 self.flow.solveEnergyEqn()
 *             else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_enable); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 580, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":581
 *         def __set__(self, enable):
 *             if enable:
 *                 self.flow.solveEnergyEqn()             # <<<<<<<<<<<<<<
 *             else:
 *                 self.flow.fixTemperature()
 */
    __pyx_v_self->flow->solveEnergyEqn();

    /* "cantera/_onedim.pyx":580
 *             return self.flow.doEnergy(0)
 *         def __set__(self, enable):
 *             if enable:             # <<<<<<<<<<<<<<
 *                 self.flow.solveEnergyEqn()
 *             else:
 */
    goto __pyx_L3;
  }

  /* "cantera/_onedim.pyx":583
 *                 self.flow.solveEnergyEqn()
 *             else:
 *                 self.flow.fixTemperature()             # <<<<<<<<<<<<<<
 * 
 *     def set_fixed_temp_profile(self, pos, T):
 */
  /*else*/ {
    __pyx_v_self->flow->fixTemperature();
  }
  __pyx_L3:;

  /* "cantera/_onedim.pyx":579
 *         def __get__(self):
 *             return self.flow.doEnergy(0)
 *         def __set__(self, enable):             # <<<<<<<<<<<<<<
 *             if enable:
 *                 self.flow.solveEnergyEqn()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.energy_enabled.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":585
 *                 self.flow.fixTemperature()
 * 
 *     def set_fixed_temp_profile(self, pos, T):             # <<<<<<<<<<<<<<
 *         """Set the fixed temperature profile. This profile is used
 *         whenever the energy equation is disabled.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_9set_fixed_temp_profile(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_9_FlowBase_8set_fixed_temp_profile, "Set the fixed temperature profile. This profile is used\n        whenever the energy equation is disabled.\n\n        :param pos:\n            array of relative positions from 0 to 1\n        :param temp:\n            array of temperature values\n\n        >>> d.set_fixed_temp_profile(array([0.0, 0.5, 1.0]),\n        ...                          array([500.0, 1500.0, 2000.0])\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_9_FlowBase_9set_fixed_temp_profile = {"set_fixed_temp_profile", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_9set_fixed_temp_profile, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_8set_fixed_temp_profile};
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_9set_fixed_temp_profile(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_pos = 0;
  PyObject *__pyx_v_T = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_fixed_temp_profile (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pos,&__pyx_n_s_T,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pos)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 585, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_T)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 585, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_fixed_temp_profile", 1, 2, 2, 1); __PYX_ERR(0, 585, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_fixed_temp_profile") < 0)) __PYX_ERR(0, 585, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_pos = values[0];
    __pyx_v_T = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_fixed_temp_profile", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 585, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.set_fixed_temp_profile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_8set_fixed_temp_profile(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), __pyx_v_pos, __pyx_v_T);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_8set_fixed_temp_profile(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_pos, PyObject *__pyx_v_T) {
  std::vector<double>  __pyx_v_x;
  std::vector<double>  __pyx_v_y;
  PyObject *__pyx_v_p = NULL;
  PyObject *__pyx_v_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_fixed_temp_profile", 0);

  /* "cantera/_onedim.pyx":598
 *         """
 *         cdef vector[double] x, y
 *         for p in pos:             # <<<<<<<<<<<<<<
 *             x.push_back(p)
 *         for t in T:
 */
  if (likely(PyList_CheckExact(__pyx_v_pos)) || PyTuple_CheckExact(__pyx_v_pos)) {
    __pyx_t_1 = __pyx_v_pos; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_pos); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 598, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 598, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 598, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 598, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 598, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 598, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 598, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_p, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":599
 *         cdef vector[double] x, y
 *         for p in pos:
 *             x.push_back(p)             # <<<<<<<<<<<<<<
 *         for t in T:
 *             y.push_back(t)
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_p); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 599, __pyx_L1_error)
    try {
      __pyx_v_x.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 599, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":598
 *         """
 *         cdef vector[double] x, y
 *         for p in pos:             # <<<<<<<<<<<<<<
 *             x.push_back(p)
 *         for t in T:
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":600
 *         for p in pos:
 *             x.push_back(p)
 *         for t in T:             # <<<<<<<<<<<<<<
 *             y.push_back(t)
 *         self.flow.setFixedTempProfile(x, y)
 */
  if (likely(PyList_CheckExact(__pyx_v_T)) || PyTuple_CheckExact(__pyx_v_T)) {
    __pyx_t_1 = __pyx_v_T; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_T); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 600, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 600, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 600, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 600, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 600, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 600, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 600, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_t, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":601
 *             x.push_back(p)
 *         for t in T:
 *             y.push_back(t)             # <<<<<<<<<<<<<<
 *         self.flow.setFixedTempProfile(x, y)
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_t); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 601, __pyx_L1_error)
    try {
      __pyx_v_y.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 601, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":600
 *         for p in pos:
 *             x.push_back(p)
 *         for t in T:             # <<<<<<<<<<<<<<
 *             y.push_back(t)
 *         self.flow.setFixedTempProfile(x, y)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":602
 *         for t in T:
 *             y.push_back(t)
 *         self.flow.setFixedTempProfile(x, y)             # <<<<<<<<<<<<<<
 * 
 *     def get_settings3(self):
 */
  __pyx_v_self->flow->setFixedTempProfile(__pyx_v_x, __pyx_v_y);

  /* "cantera/_onedim.pyx":585
 *                 self.flow.fixTemperature()
 * 
 *     def set_fixed_temp_profile(self, pos, T):             # <<<<<<<<<<<<<<
 *         """Set the fixed temperature profile. This profile is used
 *         whenever the energy equation is disabled.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.set_fixed_temp_profile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_p);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":604
 *         self.flow.setFixedTempProfile(x, y)
 * 
 *     def get_settings3(self):             # <<<<<<<<<<<<<<
 *         """
 *         Temporary method returning new behavior of settings getter.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_11get_settings3(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_9_FlowBase_10get_settings3, "\n        Temporary method returning new behavior of settings getter.\n\n        .. versionadded:: 3.0\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_9_FlowBase_11get_settings3 = {"get_settings3", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_11get_settings3, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_10get_settings3};
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_11get_settings3(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_settings3 (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("get_settings3", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "get_settings3", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_10get_settings3(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_10get_settings3(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_settings3", 0);

  /* "cantera/_onedim.pyx":610
 *         .. versionadded:: 3.0
 *         """
 *         return super().settings             # <<<<<<<<<<<<<<
 * 
 *     property settings:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase);
  __Pyx_GIVEREF((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase);
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase));
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_settings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 610, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":604
 *         self.flow.setFixedTempProfile(x, y)
 * 
 *     def get_settings3(self):             # <<<<<<<<<<<<<<
 *         """
 *         Temporary method returning new behavior of settings getter.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.get_settings3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":625
 *             different output from Cantera 2.6.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "_FlowBase.settings: Property getter to change after Cantera 3.0.\n"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_8settings_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_8settings_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_8settings___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_8settings___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_v_out = NULL;
  PyObject *__pyx_v_epsilon = NULL;
  PyObject *__pyx_v_tols = NULL;
  PyObject *__pyx_v_comp = NULL;
  PyObject *__pyx_v_tname = NULL;
  PyObject *__pyx_v_tol = NULL;
  PyObject *__pyx_v_values = NULL;
  PyObject *__pyx_v_counts = NULL;
  PyObject *__pyx_v_ix = NULL;
  PyObject *__pyx_8genexpr5__pyx_v_c = NULL;
  PyObject *__pyx_8genexpr5__pyx_v_t = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *(*__pyx_t_10)(PyObject *);
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  Py_ssize_t __pyx_t_13;
  PyObject *(*__pyx_t_14)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":626
 *         """
 *         def __get__(self):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "_FlowBase.settings: Property getter to change after Cantera 3.0.\n"
 *                 "For new behavior, use 'get_settings3'.", DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":628
 *             warnings.warn(
 *                 "_FlowBase.settings: Property getter to change after Cantera 3.0.\n"
 *                 "For new behavior, use 'get_settings3'.", DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *             out = {
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":631
 * 
 *             out = {
 *                 'Domain1D_type': type(self).__name__,             # <<<<<<<<<<<<<<
 *                 'name': self.name}
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_name_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_Domain1D_type, __pyx_t_2) < 0) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":632
 *             out = {
 *                 'Domain1D_type': type(self).__name__,
 *                 'name': self.name}             # <<<<<<<<<<<<<<
 * 
 *             epsilon = self.boundary_emissivities
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_name, __pyx_t_2) < 0) __PYX_ERR(0, 631, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_out = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":634
 *                 'name': self.name}
 * 
 *             epsilon = self.boundary_emissivities             # <<<<<<<<<<<<<<
 *             out.update({'emissivity_left': epsilon[0],
 *                         'emissivity_right': epsilon[1]})
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_boundary_emissivities); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_epsilon = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":635
 * 
 *             epsilon = self.boundary_emissivities
 *             out.update({'emissivity_left': epsilon[0],             # <<<<<<<<<<<<<<
 *                         'emissivity_right': epsilon[1]})
 * 
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_emissivity_left, __pyx_t_2) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":636
 *             epsilon = self.boundary_emissivities
 *             out.update({'emissivity_left': epsilon[0],
 *                         'emissivity_right': epsilon[1]})             # <<<<<<<<<<<<<<
 * 
 *             # add tolerance settings
 */
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_emissivity_right, __pyx_t_2) < 0) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":635
 * 
 *             epsilon = self.boundary_emissivities
 *             out.update({'emissivity_left': epsilon[0],             # <<<<<<<<<<<<<<
 *                         'emissivity_right': epsilon[1]})
 * 
 */
  __pyx_t_2 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_update, __pyx_v_out, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 635, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":639
 * 
 *             # add tolerance settings
 *             tols = {'steady_reltol': self.steady_reltol(),             # <<<<<<<<<<<<<<
 *                     'steady_abstol': self.steady_abstol(),
 *                     'transient_reltol': self.transient_reltol(),
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_steady_reltol); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 639, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_steady_reltol, __pyx_t_1) < 0) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":640
 *             # add tolerance settings
 *             tols = {'steady_reltol': self.steady_reltol(),
 *                     'steady_abstol': self.steady_abstol(),             # <<<<<<<<<<<<<<
 *                     'transient_reltol': self.transient_reltol(),
 *                     'transient_abstol': self.transient_abstol()}
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_steady_abstol); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 640, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 640, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_steady_abstol, __pyx_t_1) < 0) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":641
 *             tols = {'steady_reltol': self.steady_reltol(),
 *                     'steady_abstol': self.steady_abstol(),
 *                     'transient_reltol': self.transient_reltol(),             # <<<<<<<<<<<<<<
 *                     'transient_abstol': self.transient_abstol()}
 *             comp = np.array(self.component_names)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transient_reltol); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 641, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 641, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_transient_reltol, __pyx_t_1) < 0) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":642
 *                     'steady_abstol': self.steady_abstol(),
 *                     'transient_reltol': self.transient_reltol(),
 *                     'transient_abstol': self.transient_abstol()}             # <<<<<<<<<<<<<<
 *             comp = np.array(self.component_names)
 *             for tname, tol in tols.items():
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_transient_abstol); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_4, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 642, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_transient_abstol, __pyx_t_1) < 0) __PYX_ERR(0, 639, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_tols = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":643
 *                     'transient_reltol': self.transient_reltol(),
 *                     'transient_abstol': self.transient_abstol()}
 *             comp = np.array(self.component_names)             # <<<<<<<<<<<<<<
 *             for tname, tol in tols.items():
 *                 # add mode (most frequent tolerance setting)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_array); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_names); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_1};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 643, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v_comp = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":644
 *                     'transient_abstol': self.transient_abstol()}
 *             comp = np.array(self.component_names)
 *             for tname, tol in tols.items():             # <<<<<<<<<<<<<<
 *                 # add mode (most frequent tolerance setting)
 *                 values, counts = np.unique(tol, return_counts=True)
 */
  __pyx_t_6 = 0;
  __pyx_t_3 = __Pyx_dict_iterator(__pyx_v_tols, 1, __pyx_n_s_items, (&__pyx_t_7), (&__pyx_t_5)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 644, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_2);
  __pyx_t_2 = __pyx_t_3;
  __pyx_t_3 = 0;
  while (1) {
    __pyx_t_8 = __Pyx_dict_iter_next(__pyx_t_2, __pyx_t_7, &__pyx_t_6, &__pyx_t_3, &__pyx_t_1, NULL, __pyx_t_5);
    if (unlikely(__pyx_t_8 == 0)) break;
    if (unlikely(__pyx_t_8 == -1)) __PYX_ERR(0, 644, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_tname, __pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF_SET(__pyx_v_tol, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":646
 *             for tname, tol in tols.items():
 *                 # add mode (most frequent tolerance setting)
 *                 values, counts = np.unique(tol, return_counts=True)             # <<<<<<<<<<<<<<
 *                 ix = np.argmax(counts)
 *                 out.update({tname: values[ix]})
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 646, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_unique); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 646, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 646, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_tol);
    __Pyx_GIVEREF(__pyx_v_tol);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_tol);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 646, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_return_counts, Py_True) < 0) __PYX_ERR(0, 646, __pyx_L1_error)
    __pyx_t_9 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 646, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if ((likely(PyTuple_CheckExact(__pyx_t_9))) || (PyList_CheckExact(__pyx_t_9))) {
      PyObject* sequence = __pyx_t_9;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 646, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_4 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_1 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_4 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_1 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_1);
      #else
      __pyx_t_4 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 646, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_1 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 646, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      #endif
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_3 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 646, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3);
      index = 0; __pyx_t_4 = __pyx_t_10(__pyx_t_3); if (unlikely(!__pyx_t_4)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      index = 1; __pyx_t_1 = __pyx_t_10(__pyx_t_3); if (unlikely(!__pyx_t_1)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_1);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_3), 2) < 0) __PYX_ERR(0, 646, __pyx_L1_error)
      __pyx_t_10 = NULL;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_10 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 646, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    __Pyx_XDECREF_SET(__pyx_v_values, __pyx_t_4);
    __pyx_t_4 = 0;
    __Pyx_XDECREF_SET(__pyx_v_counts, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":647
 *                 # add mode (most frequent tolerance setting)
 *                 values, counts = np.unique(tol, return_counts=True)
 *                 ix = np.argmax(counts)             # <<<<<<<<<<<<<<
 *                 out.update({tname: values[ix]})
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 647, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_argmax); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 647, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_v_counts};
      __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 647, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_XDECREF_SET(__pyx_v_ix, __pyx_t_9);
    __pyx_t_9 = 0;

    /* "cantera/_onedim.pyx":648
 *                 values, counts = np.unique(tol, return_counts=True)
 *                 ix = np.argmax(counts)
 *                 out.update({tname: values[ix]})             # <<<<<<<<<<<<<<
 * 
 *                 # add values deviating from mode
 */
    __pyx_t_9 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_4 = __Pyx_PyObject_GetItem(__pyx_v_values, __pyx_v_ix); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_9, __pyx_v_tname, __pyx_t_4) < 0) __PYX_ERR(0, 648, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_update, __pyx_v_out, __pyx_t_9); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":651
 * 
 *                 # add values deviating from mode
 *                 ix = np.logical_not(np.isclose(tol, values[ix]))             # <<<<<<<<<<<<<<
 *                 out.update({'{}_{}'.format(tname, c): t
 *                             for c, t in zip(comp[ix], tol[ix])})
 */
    __Pyx_GetModuleGlobalName(__pyx_t_9, __pyx_n_s_np); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 651, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_9);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_9, __pyx_n_s_logical_not); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 651, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 651, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_isclose); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 651, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_values, __pyx_v_ix); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 651, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_12 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_11))) {
      __pyx_t_12 = PyMethod_GET_SELF(__pyx_t_11);
      if (likely(__pyx_t_12)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
        __Pyx_INCREF(__pyx_t_12);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_11, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_12, __pyx_v_tol, __pyx_t_3};
      __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_11, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 651, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
    }
    __pyx_t_11 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_t_9};
      __pyx_t_4 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 651, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF_SET(__pyx_v_ix, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":652
 *                 # add values deviating from mode
 *                 ix = np.logical_not(np.isclose(tol, values[ix]))
 *                 out.update({'{}_{}'.format(tname, c): t             # <<<<<<<<<<<<<<
 *                             for c, t in zip(comp[ix], tol[ix])})
 * 
 */
    { /* enter inner scope */
      __pyx_t_4 = PyDict_New(); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 652, __pyx_L9_error)
      __Pyx_GOTREF(__pyx_t_4);

      /* "cantera/_onedim.pyx":653
 *                 ix = np.logical_not(np.isclose(tol, values[ix]))
 *                 out.update({'{}_{}'.format(tname, c): t
 *                             for c, t in zip(comp[ix], tol[ix])})             # <<<<<<<<<<<<<<
 * 
 *             return out
 */
      __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_comp, __pyx_v_ix); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 653, __pyx_L9_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_9 = __Pyx_PyObject_GetItem(__pyx_v_tol, __pyx_v_ix); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 653, __pyx_L9_error)
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_11 = PyTuple_New(2); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 653, __pyx_L9_error)
      __Pyx_GOTREF(__pyx_t_11);
      __Pyx_GIVEREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_9);
      PyTuple_SET_ITEM(__pyx_t_11, 1, __pyx_t_9);
      __pyx_t_1 = 0;
      __pyx_t_9 = 0;
      __pyx_t_9 = __Pyx_PyObject_Call(__pyx_builtin_zip, __pyx_t_11, NULL); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 653, __pyx_L9_error)
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (likely(PyList_CheckExact(__pyx_t_9)) || PyTuple_CheckExact(__pyx_t_9)) {
        __pyx_t_11 = __pyx_t_9; __Pyx_INCREF(__pyx_t_11); __pyx_t_13 = 0;
        __pyx_t_14 = NULL;
      } else {
        __pyx_t_13 = -1; __pyx_t_11 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 653, __pyx_L9_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_14 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_11); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 653, __pyx_L9_error)
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      for (;;) {
        if (likely(!__pyx_t_14)) {
          if (likely(PyList_CheckExact(__pyx_t_11))) {
            if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_11)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_9 = PyList_GET_ITEM(__pyx_t_11, __pyx_t_13); __Pyx_INCREF(__pyx_t_9); __pyx_t_13++; if (unlikely((0 < 0))) __PYX_ERR(0, 653, __pyx_L9_error)
            #else
            __pyx_t_9 = PySequence_ITEM(__pyx_t_11, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 653, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_9);
            #endif
          } else {
            if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_11)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_11, __pyx_t_13); __Pyx_INCREF(__pyx_t_9); __pyx_t_13++; if (unlikely((0 < 0))) __PYX_ERR(0, 653, __pyx_L9_error)
            #else
            __pyx_t_9 = PySequence_ITEM(__pyx_t_11, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 653, __pyx_L9_error)
            __Pyx_GOTREF(__pyx_t_9);
            #endif
          }
        } else {
          __pyx_t_9 = __pyx_t_14(__pyx_t_11);
          if (unlikely(!__pyx_t_9)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 653, __pyx_L9_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_9);
        }
        if ((likely(PyTuple_CheckExact(__pyx_t_9))) || (PyList_CheckExact(__pyx_t_9))) {
          PyObject* sequence = __pyx_t_9;
          Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
          if (unlikely(size != 2)) {
            if (size > 2) __Pyx_RaiseTooManyValuesError(2);
            else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
            __PYX_ERR(0, 653, __pyx_L9_error)
          }
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          if (likely(PyTuple_CheckExact(sequence))) {
            __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
            __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
          } else {
            __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
            __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
          }
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_3);
          #else
          __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 653, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 653, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_3);
          #endif
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        } else {
          Py_ssize_t index = -1;
          __pyx_t_12 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 653, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
          __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_12);
          index = 0; __pyx_t_1 = __pyx_t_10(__pyx_t_12); if (unlikely(!__pyx_t_1)) goto __pyx_L12_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_1);
          index = 1; __pyx_t_3 = __pyx_t_10(__pyx_t_12); if (unlikely(!__pyx_t_3)) goto __pyx_L12_unpacking_failed;
          __Pyx_GOTREF(__pyx_t_3);
          if (__Pyx_IternextUnpackEndCheck(__pyx_t_10(__pyx_t_12), 2) < 0) __PYX_ERR(0, 653, __pyx_L9_error)
          __pyx_t_10 = NULL;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          goto __pyx_L13_unpacking_done;
          __pyx_L12_unpacking_failed:;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __pyx_t_10 = NULL;
          if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
          __PYX_ERR(0, 653, __pyx_L9_error)
          __pyx_L13_unpacking_done:;
        }
        __Pyx_XDECREF_SET(__pyx_8genexpr5__pyx_v_c, __pyx_t_1);
        __pyx_t_1 = 0;
        __Pyx_XDECREF_SET(__pyx_8genexpr5__pyx_v_t, __pyx_t_3);
        __pyx_t_3 = 0;

        /* "cantera/_onedim.pyx":652
 *                 # add values deviating from mode
 *                 ix = np.logical_not(np.isclose(tol, values[ix]))
 *                 out.update({'{}_{}'.format(tname, c): t             # <<<<<<<<<<<<<<
 *                             for c, t in zip(comp[ix], tol[ix])})
 * 
 */
        __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u__17, __pyx_n_s_format); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 652, __pyx_L9_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_1 = NULL;
        __pyx_t_8 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
          __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
          if (likely(__pyx_t_1)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
            __Pyx_INCREF(__pyx_t_1);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_3, function);
            __pyx_t_8 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[3] = {__pyx_t_1, __pyx_v_tname, __pyx_8genexpr5__pyx_v_c};
          __pyx_t_9 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_8, 2+__pyx_t_8);
          __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 652, __pyx_L9_error)
          __Pyx_GOTREF(__pyx_t_9);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        }
        if (unlikely(PyDict_SetItem(__pyx_t_4, (PyObject*)__pyx_t_9, (PyObject*)__pyx_8genexpr5__pyx_v_t))) __PYX_ERR(0, 652, __pyx_L9_error)
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "cantera/_onedim.pyx":653
 *                 ix = np.logical_not(np.isclose(tol, values[ix]))
 *                 out.update({'{}_{}'.format(tname, c): t
 *                             for c, t in zip(comp[ix], tol[ix])})             # <<<<<<<<<<<<<<
 * 
 *             return out
 */
      }
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_c); __pyx_8genexpr5__pyx_v_c = 0;
      __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_t); __pyx_8genexpr5__pyx_v_t = 0;
      goto __pyx_L15_exit_scope;
      __pyx_L9_error:;
      __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_c); __pyx_8genexpr5__pyx_v_c = 0;
      __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_t); __pyx_8genexpr5__pyx_v_t = 0;
      goto __pyx_L1_error;
      __pyx_L15_exit_scope:;
    } /* exit inner scope */

    /* "cantera/_onedim.pyx":652
 *                 # add values deviating from mode
 *                 ix = np.logical_not(np.isclose(tol, values[ix]))
 *                 out.update({'{}_{}'.format(tname, c): t             # <<<<<<<<<<<<<<
 *                             for c, t in zip(comp[ix], tol[ix])})
 * 
 */
    __pyx_t_11 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_update, __pyx_v_out, __pyx_t_4); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 652, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_11);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":655
 *                             for c, t in zip(comp[ix], tol[ix])})
 * 
 *             return out             # <<<<<<<<<<<<<<
 *         def __set__(self, meta):
 *             warnings.warn("_FlowBase.settings: Property setter to be removed after "
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_out);
  __pyx_r = __pyx_v_out;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":625
 *             different output from Cantera 2.6.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "_FlowBase.settings: Property getter to change after Cantera 3.0.\n"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.settings.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_out);
  __Pyx_XDECREF(__pyx_v_epsilon);
  __Pyx_XDECREF(__pyx_v_tols);
  __Pyx_XDECREF(__pyx_v_comp);
  __Pyx_XDECREF(__pyx_v_tname);
  __Pyx_XDECREF(__pyx_v_tol);
  __Pyx_XDECREF(__pyx_v_values);
  __Pyx_XDECREF(__pyx_v_counts);
  __Pyx_XDECREF(__pyx_v_ix);
  __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_c);
  __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":656
 * 
 *             return out
 *         def __set__(self, meta):             # <<<<<<<<<<<<<<
 *             warnings.warn("_FlowBase.settings: Property setter to be removed after "
 *             "Cantera 3.0. Replaceable by individual setters.", DeprecationWarning)
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_8settings_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_meta); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_8settings_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_meta) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_8settings_2__set__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), ((PyObject *)__pyx_v_meta));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_8settings_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_meta) {
  PyObject *__pyx_v_epsilon = NULL;
  PyObject *__pyx_v_tols = NULL;
  PyObject *__pyx_v_comp = NULL;
  PyObject *__pyx_v_tname = NULL;
  PyObject *__pyx_v_mode = NULL;
  PyObject *__pyx_v_tol = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_8genexpr6__pyx_v_t = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *(*__pyx_t_12)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":657
 *             return out
 *         def __set__(self, meta):
 *             warnings.warn("_FlowBase.settings: Property setter to be removed after "             # <<<<<<<<<<<<<<
 *             "Cantera 3.0. Replaceable by individual setters.", DeprecationWarning)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":658
 *         def __set__(self, meta):
 *             warnings.warn("_FlowBase.settings: Property setter to be removed after "
 *             "Cantera 3.0. Replaceable by individual setters.", DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *             # boundary emissivities
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":661
 * 
 *             # boundary emissivities
 *             if 'emissivity_left' in meta or 'emissivity_right' in meta:             # <<<<<<<<<<<<<<
 *                 epsilon = self.boundary_emissivities
 *                 epsilon = (meta.get('emissivity_left', epsilon[0]),
 */
  __pyx_t_4 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_emissivity_left, __pyx_v_meta, Py_EQ)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 661, __pyx_L1_error)
  if (!__pyx_t_4) {
  } else {
    __pyx_t_3 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_emissivity_right, __pyx_v_meta, Py_EQ)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 661, __pyx_L1_error)
  __pyx_t_3 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_3) {

    /* "cantera/_onedim.pyx":662
 *             # boundary emissivities
 *             if 'emissivity_left' in meta or 'emissivity_right' in meta:
 *                 epsilon = self.boundary_emissivities             # <<<<<<<<<<<<<<
 *                 epsilon = (meta.get('emissivity_left', epsilon[0]),
 *                            meta.get('emissivity_right', epsilon[1]))
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_boundary_emissivities); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 662, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_v_epsilon = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":663
 *             if 'emissivity_left' in meta or 'emissivity_right' in meta:
 *                 epsilon = self.boundary_emissivities
 *                 epsilon = (meta.get('emissivity_left', epsilon[0]),             # <<<<<<<<<<<<<<
 *                            meta.get('emissivity_right', epsilon[1]))
 *                 self.boundary_emissivities = epsilon
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_meta, __pyx_n_s_get); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 663, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_GetItemInt(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 663, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_6, __pyx_n_u_emissivity_left, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 663, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }

    /* "cantera/_onedim.pyx":664
 *                 epsilon = self.boundary_emissivities
 *                 epsilon = (meta.get('emissivity_left', epsilon[0]),
 *                            meta.get('emissivity_right', epsilon[1]))             # <<<<<<<<<<<<<<
 *                 self.boundary_emissivities = epsilon
 * 
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_meta, __pyx_n_s_get); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 664, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 664, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_8)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_8);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_8, __pyx_n_u_emissivity_right, __pyx_t_6};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 664, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }

    /* "cantera/_onedim.pyx":663
 *             if 'emissivity_left' in meta or 'emissivity_right' in meta:
 *                 epsilon = self.boundary_emissivities
 *                 epsilon = (meta.get('emissivity_left', epsilon[0]),             # <<<<<<<<<<<<<<
 *                            meta.get('emissivity_right', epsilon[1]))
 *                 self.boundary_emissivities = epsilon
 */
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 663, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_2);
    __pyx_t_1 = 0;
    __pyx_t_2 = 0;
    __Pyx_DECREF_SET(__pyx_v_epsilon, __pyx_t_5);
    __pyx_t_5 = 0;

    /* "cantera/_onedim.pyx":665
 *                 epsilon = (meta.get('emissivity_left', epsilon[0]),
 *                            meta.get('emissivity_right', epsilon[1]))
 *                 self.boundary_emissivities = epsilon             # <<<<<<<<<<<<<<
 * 
 *             # tolerances
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_boundary_emissivities, __pyx_v_epsilon) < 0) __PYX_ERR(0, 665, __pyx_L1_error)

    /* "cantera/_onedim.pyx":661
 * 
 *             # boundary emissivities
 *             if 'emissivity_left' in meta or 'emissivity_right' in meta:             # <<<<<<<<<<<<<<
 *                 epsilon = self.boundary_emissivities
 *                 epsilon = (meta.get('emissivity_left', epsilon[0]),
 */
  }

  /* "cantera/_onedim.pyx":668
 * 
 *             # tolerances
 *             tols = ['steady_reltol', 'steady_abstol',             # <<<<<<<<<<<<<<
 *                     'transient_reltol', 'transient_abstol']
 *             tols = [t for t in tols if t in meta]
 */
  __pyx_t_5 = PyList_New(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 668, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_INCREF(__pyx_n_u_steady_reltol);
  __Pyx_GIVEREF(__pyx_n_u_steady_reltol);
  PyList_SET_ITEM(__pyx_t_5, 0, __pyx_n_u_steady_reltol);
  __Pyx_INCREF(__pyx_n_u_steady_abstol);
  __Pyx_GIVEREF(__pyx_n_u_steady_abstol);
  PyList_SET_ITEM(__pyx_t_5, 1, __pyx_n_u_steady_abstol);
  __Pyx_INCREF(__pyx_n_u_transient_reltol);
  __Pyx_GIVEREF(__pyx_n_u_transient_reltol);
  PyList_SET_ITEM(__pyx_t_5, 2, __pyx_n_u_transient_reltol);
  __Pyx_INCREF(__pyx_n_u_transient_abstol);
  __Pyx_GIVEREF(__pyx_n_u_transient_abstol);
  PyList_SET_ITEM(__pyx_t_5, 3, __pyx_n_u_transient_abstol);
  __pyx_v_tols = ((PyObject*)__pyx_t_5);
  __pyx_t_5 = 0;

  /* "cantera/_onedim.pyx":670
 *             tols = ['steady_reltol', 'steady_abstol',
 *                     'transient_reltol', 'transient_abstol']
 *             tols = [t for t in tols if t in meta]             # <<<<<<<<<<<<<<
 *             comp = np.array(self.component_names)
 *             for tname in tols:
 */
  { /* enter inner scope */
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 670, __pyx_L8_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = __pyx_v_tols; __Pyx_INCREF(__pyx_t_2); __pyx_t_9 = 0;
    for (;;) {
      if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_2)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_9); __Pyx_INCREF(__pyx_t_1); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 670, __pyx_L8_error)
      #else
      __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 670, __pyx_L8_error)
      __Pyx_GOTREF(__pyx_t_1);
      #endif
      __Pyx_XDECREF_SET(__pyx_8genexpr6__pyx_v_t, __pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_8genexpr6__pyx_v_t, __pyx_v_meta, Py_EQ)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 670, __pyx_L8_error)
      if (__pyx_t_3) {
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_5, (PyObject*)__pyx_8genexpr6__pyx_v_t))) __PYX_ERR(0, 670, __pyx_L8_error)
      }
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_8genexpr6__pyx_v_t); __pyx_8genexpr6__pyx_v_t = 0;
    goto __pyx_L13_exit_scope;
    __pyx_L8_error:;
    __Pyx_XDECREF(__pyx_8genexpr6__pyx_v_t); __pyx_8genexpr6__pyx_v_t = 0;
    goto __pyx_L1_error;
    __pyx_L13_exit_scope:;
  } /* exit inner scope */
  __Pyx_DECREF_SET(__pyx_v_tols, ((PyObject*)__pyx_t_5));
  __pyx_t_5 = 0;

  /* "cantera/_onedim.pyx":671
 *                     'transient_reltol', 'transient_abstol']
 *             tols = [t for t in tols if t in meta]
 *             comp = np.array(self.component_names)             # <<<<<<<<<<<<<<
 *             for tname in tols:
 *                 mode = tname.split('_')
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_array); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_component_names); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 671, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_2};
    __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 671, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_v_comp = __pyx_t_5;
  __pyx_t_5 = 0;

  /* "cantera/_onedim.pyx":672
 *             tols = [t for t in tols if t in meta]
 *             comp = np.array(self.component_names)
 *             for tname in tols:             # <<<<<<<<<<<<<<
 *                 mode = tname.split('_')
 *                 tol = meta[tname] * np.ones(len(comp))
 */
  __pyx_t_5 = __pyx_v_tols; __Pyx_INCREF(__pyx_t_5); __pyx_t_9 = 0;
  for (;;) {
    if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_5)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_1 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_9); __Pyx_INCREF(__pyx_t_1); __pyx_t_9++; if (unlikely((0 < 0))) __PYX_ERR(0, 672, __pyx_L1_error)
    #else
    __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 672, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_tname, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":673
 *             comp = np.array(self.component_names)
 *             for tname in tols:
 *                 mode = tname.split('_')             # <<<<<<<<<<<<<<
 *                 tol = meta[tname] * np.ones(len(comp))
 *                 for i, c in enumerate(comp):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_tname, __pyx_n_s_split); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 673, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_n_u__19};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 673, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __Pyx_XDECREF_SET(__pyx_v_mode, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":674
 *             for tname in tols:
 *                 mode = tname.split('_')
 *                 tol = meta[tname] * np.ones(len(comp))             # <<<<<<<<<<<<<<
 *                 for i, c in enumerate(comp):
 *                     key = '{}_{}'.format(tname, c)
 */
    __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_meta, __pyx_v_tname); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 674, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_np); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 674, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_8 = __Pyx_PyObject_GetAttrStr(__pyx_t_6, __pyx_n_s_ones); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 674, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_10 = PyObject_Length(__pyx_v_comp); if (unlikely(__pyx_t_10 == ((Py_ssize_t)-1))) __PYX_ERR(0, 674, __pyx_L1_error)
    __pyx_t_6 = PyInt_FromSsize_t(__pyx_t_10); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 674, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_11 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_8))) {
      __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_8);
      if (likely(__pyx_t_11)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_8);
        __Pyx_INCREF(__pyx_t_11);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_8, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_11, __pyx_t_6};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_8, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 674, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __pyx_t_8 = PyNumber_Multiply(__pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 674, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF_SET(__pyx_v_tol, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "cantera/_onedim.pyx":675
 *                 mode = tname.split('_')
 *                 tol = meta[tname] * np.ones(len(comp))
 *                 for i, c in enumerate(comp):             # <<<<<<<<<<<<<<
 *                     key = '{}_{}'.format(tname, c)
 *                     if key in meta:
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_t_8 = __pyx_int_0;
    if (likely(PyList_CheckExact(__pyx_v_comp)) || PyTuple_CheckExact(__pyx_v_comp)) {
      __pyx_t_2 = __pyx_v_comp; __Pyx_INCREF(__pyx_t_2); __pyx_t_10 = 0;
      __pyx_t_12 = NULL;
    } else {
      __pyx_t_10 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_comp); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_12 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 675, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_12)) {
        if (likely(PyList_CheckExact(__pyx_t_2))) {
          if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_1); __pyx_t_10++; if (unlikely((0 < 0))) __PYX_ERR(0, 675, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 675, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        } else {
          if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_1); __pyx_t_10++; if (unlikely((0 < 0))) __PYX_ERR(0, 675, __pyx_L1_error)
          #else
          __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 675, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_1);
          #endif
        }
      } else {
        __pyx_t_1 = __pyx_t_12(__pyx_t_2);
        if (unlikely(!__pyx_t_1)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 675, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);
      __pyx_t_1 = 0;
      __Pyx_INCREF(__pyx_t_8);
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_8);
      __pyx_t_1 = __Pyx_PyInt_AddObjC(__pyx_t_8, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 675, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_8);
      __pyx_t_8 = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "cantera/_onedim.pyx":676
 *                 tol = meta[tname] * np.ones(len(comp))
 *                 for i, c in enumerate(comp):
 *                     key = '{}_{}'.format(tname, c)             # <<<<<<<<<<<<<<
 *                     if key in meta:
 *                         tol[i] = meta[key]
 */
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u__17, __pyx_n_s_format); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 676, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_11 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
        __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_6);
        if (likely(__pyx_t_11)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
          __Pyx_INCREF(__pyx_t_11);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_6, function);
          __pyx_t_7 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[3] = {__pyx_t_11, __pyx_v_tname, __pyx_v_c};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 676, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      }
      __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_1);
      __pyx_t_1 = 0;

      /* "cantera/_onedim.pyx":677
 *                 for i, c in enumerate(comp):
 *                     key = '{}_{}'.format(tname, c)
 *                     if key in meta:             # <<<<<<<<<<<<<<
 *                         tol[i] = meta[key]
 *                 tol = {mode[1][:3]: tol}
 */
      __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_v_key, __pyx_v_meta, Py_EQ)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 677, __pyx_L1_error)
      if (__pyx_t_3) {

        /* "cantera/_onedim.pyx":678
 *                     key = '{}_{}'.format(tname, c)
 *                     if key in meta:
 *                         tol[i] = meta[key]             # <<<<<<<<<<<<<<
 *                 tol = {mode[1][:3]: tol}
 *                 if mode[0] == 'steady':
 */
        __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_meta, __pyx_v_key); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 678, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        if (unlikely((PyObject_SetItem(__pyx_v_tol, __pyx_v_i, __pyx_t_1) < 0))) __PYX_ERR(0, 678, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "cantera/_onedim.pyx":677
 *                 for i, c in enumerate(comp):
 *                     key = '{}_{}'.format(tname, c)
 *                     if key in meta:             # <<<<<<<<<<<<<<
 *                         tol[i] = meta[key]
 *                 tol = {mode[1][:3]: tol}
 */
      }

      /* "cantera/_onedim.pyx":675
 *                 mode = tname.split('_')
 *                 tol = meta[tname] * np.ones(len(comp))
 *                 for i, c in enumerate(comp):             # <<<<<<<<<<<<<<
 *                     key = '{}_{}'.format(tname, c)
 *                     if key in meta:
 */
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;

    /* "cantera/_onedim.pyx":679
 *                     if key in meta:
 *                         tol[i] = meta[key]
 *                 tol = {mode[1][:3]: tol}             # <<<<<<<<<<<<<<
 *                 if mode[0] == 'steady':
 *                     self.set_steady_tolerances(**tol)
 */
    __pyx_t_8 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 679, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_mode, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 679, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetSlice(__pyx_t_2, 0, 3, NULL, NULL, &__pyx_slice__20, 0, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 679, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (PyDict_SetItem(__pyx_t_8, __pyx_t_1, __pyx_v_tol) < 0) __PYX_ERR(0, 679, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_tol, __pyx_t_8);
    __pyx_t_8 = 0;

    /* "cantera/_onedim.pyx":680
 *                         tol[i] = meta[key]
 *                 tol = {mode[1][:3]: tol}
 *                 if mode[0] == 'steady':             # <<<<<<<<<<<<<<
 *                     self.set_steady_tolerances(**tol)
 *                 else:
 */
    __pyx_t_8 = __Pyx_GetItemInt(__pyx_v_mode, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 680, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_8);
    __pyx_t_3 = (__Pyx_PyUnicode_Equals(__pyx_t_8, __pyx_n_u_steady, Py_EQ)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 680, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    if (__pyx_t_3) {

      /* "cantera/_onedim.pyx":681
 *                 tol = {mode[1][:3]: tol}
 *                 if mode[0] == 'steady':
 *                     self.set_steady_tolerances(**tol)             # <<<<<<<<<<<<<<
 *                 else:
 *                     self.set_transient_tolerances(**tol)
 */
      __pyx_t_8 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_steady_tolerances); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 681, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (likely(PyDict_CheckExact(__pyx_v_tol))) {
        __pyx_t_1 = PyDict_Copy(__pyx_v_tol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 681, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
      } else {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg((PyObject*)&PyDict_Type, __pyx_v_tol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 681, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
      }
      __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_8, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 681, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "cantera/_onedim.pyx":680
 *                         tol[i] = meta[key]
 *                 tol = {mode[1][:3]: tol}
 *                 if mode[0] == 'steady':             # <<<<<<<<<<<<<<
 *                     self.set_steady_tolerances(**tol)
 *                 else:
 */
      goto __pyx_L20;
    }

    /* "cantera/_onedim.pyx":683
 *                     self.set_steady_tolerances(**tol)
 *                 else:
 *                     self.set_transient_tolerances(**tol)             # <<<<<<<<<<<<<<
 * 
 *     property boundary_emissivities:
 */
    /*else*/ {
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_transient_tolerances); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 683, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (likely(PyDict_CheckExact(__pyx_v_tol))) {
        __pyx_t_1 = PyDict_Copy(__pyx_v_tol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 683, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
      } else {
        __pyx_t_1 = __Pyx_PyObject_CallOneArg((PyObject*)&PyDict_Type, __pyx_v_tol); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 683, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
      }
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 683, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
    __pyx_L20:;

    /* "cantera/_onedim.pyx":672
 *             tols = [t for t in tols if t in meta]
 *             comp = np.array(self.component_names)
 *             for tname in tols:             # <<<<<<<<<<<<<<
 *                 mode = tname.split('_')
 *                 tol = meta[tname] * np.ones(len(comp))
 */
  }
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cantera/_onedim.pyx":656
 * 
 *             return out
 *         def __set__(self, meta):             # <<<<<<<<<<<<<<
 *             warnings.warn("_FlowBase.settings: Property setter to be removed after "
 *             "Cantera 3.0. Replaceable by individual setters.", DeprecationWarning)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.settings.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_epsilon);
  __Pyx_XDECREF(__pyx_v_tols);
  __Pyx_XDECREF(__pyx_v_comp);
  __Pyx_XDECREF(__pyx_v_tname);
  __Pyx_XDECREF(__pyx_v_mode);
  __Pyx_XDECREF(__pyx_v_tol);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_8genexpr6__pyx_v_t);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":687
 *     property boundary_emissivities:
 *         """ Set/get boundary emissivities. """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.leftEmissivity(), self.flow.rightEmissivity()
 *         def __set__(self, tuple epsilon):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_21boundary_emissivities_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_21boundary_emissivities_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_21boundary_emissivities___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_21boundary_emissivities___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":688
 *         """ Set/get boundary emissivities. """
 *         def __get__(self):
 *             return self.flow.leftEmissivity(), self.flow.rightEmissivity()             # <<<<<<<<<<<<<<
 *         def __set__(self, tuple epsilon):
 *             if len(epsilon) != 2:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->flow->leftEmissivity()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->flow->rightEmissivity()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 688, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":687
 *     property boundary_emissivities:
 *         """ Set/get boundary emissivities. """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.leftEmissivity(), self.flow.rightEmissivity()
 *         def __set__(self, tuple epsilon):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.boundary_emissivities.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":689
 *         def __get__(self):
 *             return self.flow.leftEmissivity(), self.flow.rightEmissivity()
 *         def __set__(self, tuple epsilon):             # <<<<<<<<<<<<<<
 *             if len(epsilon) != 2:
 *                 raise ValueError('Setting the boundary emissivities requires a '
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_21boundary_emissivities_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_epsilon); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_21boundary_emissivities_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_epsilon) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_epsilon), (&PyTuple_Type), 1, "epsilon", 1))) __PYX_ERR(0, 689, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_21boundary_emissivities_2__set__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), ((PyObject*)__pyx_v_epsilon));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_21boundary_emissivities_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_epsilon) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":690
 *             return self.flow.leftEmissivity(), self.flow.rightEmissivity()
 *         def __set__(self, tuple epsilon):
 *             if len(epsilon) != 2:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Setting the boundary emissivities requires a '
 *                                  'tuple of length 2.')
 */
  if (unlikely(__pyx_v_epsilon == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(0, 690, __pyx_L1_error)
  }
  __pyx_t_1 = PyTuple_GET_SIZE(__pyx_v_epsilon); if (unlikely(__pyx_t_1 == ((Py_ssize_t)-1))) __PYX_ERR(0, 690, __pyx_L1_error)
  __pyx_t_2 = (__pyx_t_1 != 2);
  if (unlikely(__pyx_t_2)) {

    /* "cantera/_onedim.pyx":691
 *         def __set__(self, tuple epsilon):
 *             if len(epsilon) != 2:
 *                 raise ValueError('Setting the boundary emissivities requires a '             # <<<<<<<<<<<<<<
 *                                  'tuple of length 2.')
 *             self.flow.setBoundaryEmissivities(epsilon[0], epsilon[1])
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 691, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 691, __pyx_L1_error)

    /* "cantera/_onedim.pyx":690
 *             return self.flow.leftEmissivity(), self.flow.rightEmissivity()
 *         def __set__(self, tuple epsilon):
 *             if len(epsilon) != 2:             # <<<<<<<<<<<<<<
 *                 raise ValueError('Setting the boundary emissivities requires a '
 *                                  'tuple of length 2.')
 */
  }

  /* "cantera/_onedim.pyx":693
 *                 raise ValueError('Setting the boundary emissivities requires a '
 *                                  'tuple of length 2.')
 *             self.flow.setBoundaryEmissivities(epsilon[0], epsilon[1])             # <<<<<<<<<<<<<<
 * 
 *     property radiation_enabled:
 */
  if (unlikely(__pyx_v_epsilon == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 693, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_GetItemInt_Tuple(__pyx_v_epsilon, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (unlikely(__pyx_v_epsilon == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(0, 693, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_GetItemInt_Tuple(__pyx_v_epsilon, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_self->flow->setBoundaryEmissivities(__pyx_t_4, __pyx_t_5);

  /* "cantera/_onedim.pyx":689
 *         def __get__(self):
 *             return self.flow.leftEmissivity(), self.flow.rightEmissivity()
 *         def __set__(self, tuple epsilon):             # <<<<<<<<<<<<<<
 *             if len(epsilon) != 2:
 *                 raise ValueError('Setting the boundary emissivities requires a '
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.boundary_emissivities.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":697
 *     property radiation_enabled:
 *         """ Determines whether or not to include radiative heat transfer """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.radiationEnabled()
 *         def __set__(self, do_radiation):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_17radiation_enabled_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_17radiation_enabled_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_17radiation_enabled___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_17radiation_enabled___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":698
 *         """ Determines whether or not to include radiative heat transfer """
 *         def __get__(self):
 *             return self.flow.radiationEnabled()             # <<<<<<<<<<<<<<
 *         def __set__(self, do_radiation):
 *             self.flow.enableRadiation(<cbool>do_radiation)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->flow->radiationEnabled()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 698, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":697
 *     property radiation_enabled:
 *         """ Determines whether or not to include radiative heat transfer """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.flow.radiationEnabled()
 *         def __set__(self, do_radiation):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.radiation_enabled.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":699
 *         def __get__(self):
 *             return self.flow.radiationEnabled()
 *         def __set__(self, do_radiation):             # <<<<<<<<<<<<<<
 *             self.flow.enableRadiation(<cbool>do_radiation)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_17radiation_enabled_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_do_radiation); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_17radiation_enabled_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_do_radiation) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_17radiation_enabled_2__set__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), ((PyObject *)__pyx_v_do_radiation));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_17radiation_enabled_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_do_radiation) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":700
 *             return self.flow.radiationEnabled()
 *         def __set__(self, do_radiation):
 *             self.flow.enableRadiation(<cbool>do_radiation)             # <<<<<<<<<<<<<<
 * 
 *     property radiative_heat_loss:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_do_radiation); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 700, __pyx_L1_error)
  __pyx_v_self->flow->enableRadiation(((bool)__pyx_t_1));

  /* "cantera/_onedim.pyx":699
 *         def __get__(self):
 *             return self.flow.radiationEnabled()
 *         def __set__(self, do_radiation):             # <<<<<<<<<<<<<<
 *             self.flow.enableRadiation(<cbool>do_radiation)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.radiation_enabled.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":706
 *         Return radiative heat loss (only non-zero if radiation is enabled).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef int j
 *             cdef np.ndarray[np.double_t, ndim=1] data = np.empty(self.n_points)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_19radiative_heat_loss_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_19radiative_heat_loss_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_19radiative_heat_loss___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_19radiative_heat_loss___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  int __pyx_v_j;
  PyArrayObject *__pyx_v_data = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_data;
  __Pyx_Buffer __pyx_pybuffer_data;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyArrayObject *__pyx_t_6 = NULL;
  long __pyx_t_7;
  long __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);
  __pyx_pybuffer_data.pybuffer.buf = NULL;
  __pyx_pybuffer_data.refcount = 0;
  __pyx_pybuffernd_data.data = NULL;
  __pyx_pybuffernd_data.rcbuffer = &__pyx_pybuffer_data;

  /* "cantera/_onedim.pyx":708
 *         def __get__(self):
 *             cdef int j
 *             cdef np.ndarray[np.double_t, ndim=1] data = np.empty(self.n_points)             # <<<<<<<<<<<<<<
 *             for j in range(self.n_points):
 *                 data[j] = self.flow.radiativeHeatLoss(j)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 708, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_empty); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 708, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_points); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 708, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 708, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 708, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_data.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_data = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_data.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 708, __pyx_L1_error)
    } else {__pyx_pybuffernd_data.diminfo[0].strides = __pyx_pybuffernd_data.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_data.diminfo[0].shape = __pyx_pybuffernd_data.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_6 = 0;
  __pyx_v_data = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":709
 *             cdef int j
 *             cdef np.ndarray[np.double_t, ndim=1] data = np.empty(self.n_points)
 *             for j in range(self.n_points):             # <<<<<<<<<<<<<<
 *                 data[j] = self.flow.radiativeHeatLoss(j)
 *             return data
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_n_points); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 709, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_7 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_7 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 709, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_8 = __pyx_t_7;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_8; __pyx_t_5+=1) {
    __pyx_v_j = __pyx_t_5;

    /* "cantera/_onedim.pyx":710
 *             cdef np.ndarray[np.double_t, ndim=1] data = np.empty(self.n_points)
 *             for j in range(self.n_points):
 *                 data[j] = self.flow.radiativeHeatLoss(j)             # <<<<<<<<<<<<<<
 *             return data
 * 
 */
    __pyx_t_9 = __pyx_v_j;
    __pyx_t_10 = -1;
    if (__pyx_t_9 < 0) {
      __pyx_t_9 += __pyx_pybuffernd_data.diminfo[0].shape;
      if (unlikely(__pyx_t_9 < 0)) __pyx_t_10 = 0;
    } else if (unlikely(__pyx_t_9 >= __pyx_pybuffernd_data.diminfo[0].shape)) __pyx_t_10 = 0;
    if (unlikely(__pyx_t_10 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_10);
      __PYX_ERR(0, 710, __pyx_L1_error)
    }
    *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_data.rcbuffer->pybuffer.buf, __pyx_t_9, __pyx_pybuffernd_data.diminfo[0].strides) = __pyx_v_self->flow->radiativeHeatLoss(__pyx_v_j);
  }

  /* "cantera/_onedim.pyx":711
 *             for j in range(self.n_points):
 *                 data[j] = self.flow.radiativeHeatLoss(j)
 *             return data             # <<<<<<<<<<<<<<
 * 
 *     def set_free_flow(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_data);
  __pyx_r = ((PyObject *)__pyx_v_data);
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":706
 *         Return radiative heat loss (only non-zero if radiation is enabled).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef int j
 *             cdef np.ndarray[np.double_t, ndim=1] data = np.empty(self.n_points)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_data.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cantera._onedim._FlowBase.radiative_heat_loss.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_data.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_data);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":713
 *             return data
 * 
 *     def set_free_flow(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set flow configuration for freely-propagating flames, using an internal
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_13set_free_flow(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_9_FlowBase_12set_free_flow, "\n        Set flow configuration for freely-propagating flames, using an internal\n        point with a fixed temperature as the condition to determine the inlet\n        mass flux.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_9_FlowBase_13set_free_flow = {"set_free_flow", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_13set_free_flow, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_12set_free_flow};
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_13set_free_flow(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_free_flow (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("set_free_flow", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "set_free_flow", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_12set_free_flow(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_12set_free_flow(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_free_flow", 0);

  /* "cantera/_onedim.pyx":719
 *         mass flux.
 *         """
 *         self.flow.setFreeFlow()             # <<<<<<<<<<<<<<
 * 
 *     def set_axisymmetric_flow(self):
 */
  __pyx_v_self->flow->setFreeFlow();

  /* "cantera/_onedim.pyx":713
 *             return data
 * 
 *     def set_free_flow(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set flow configuration for freely-propagating flames, using an internal
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":721
 *         self.flow.setFreeFlow()
 * 
 *     def set_axisymmetric_flow(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set flow configuration for axisymmetric counterflow or burner-stabilized
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_15set_axisymmetric_flow(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_9_FlowBase_14set_axisymmetric_flow, "\n        Set flow configuration for axisymmetric counterflow or burner-stabilized\n        flames, using specified inlet mass fluxes.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_9_FlowBase_15set_axisymmetric_flow = {"set_axisymmetric_flow", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_15set_axisymmetric_flow, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_14set_axisymmetric_flow};
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_15set_axisymmetric_flow(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_axisymmetric_flow (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("set_axisymmetric_flow", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "set_axisymmetric_flow", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_14set_axisymmetric_flow(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_14set_axisymmetric_flow(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_axisymmetric_flow", 0);

  /* "cantera/_onedim.pyx":726
 *         flames, using specified inlet mass fluxes.
 *         """
 *         self.flow.setAxisymmetricFlow()             # <<<<<<<<<<<<<<
 * 
 *     property flow_type:
 */
  __pyx_v_self->flow->setAxisymmetricFlow();

  /* "cantera/_onedim.pyx":721
 *         self.flow.setFreeFlow()
 * 
 *     def set_axisymmetric_flow(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set flow configuration for axisymmetric counterflow or burner-stabilized
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":737
 *             Method to be removed after Cantera 3.0; superseded by `domain_type`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.flow.flowType())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_9flow_type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_9flow_type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_9flow_type___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_9flow_type___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":738
 *         """
 *         def __get__(self):
 *             return pystr(self.flow.flowType())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->flow->flowType()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 738, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":737
 *             Method to be removed after Cantera 3.0; superseded by `domain_type`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.flow.flowType())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.flow_type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":740
 *             return pystr(self.flow.flowType())
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def type(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_4type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_4type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_4type___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_4type___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":750
 *         - ``unstrained-flow``/``unstrained-ion-flow``
 *         """
 *         return pystr(self.flow.type())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->flow->type()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 750, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":740
 *             return pystr(self.flow.flowType())
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def type(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":752
 *         return pystr(self.flow.type())
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def solving_stage(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_13solving_stage_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_13solving_stage_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_13solving_stage___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_13solving_stage___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":762
 *           ionized species is evaluated
 *         """
 *         return self.flow.getSolvingStage()             # <<<<<<<<<<<<<<
 * 
 *     @solving_stage.setter
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->flow->getSolvingStage();
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 762, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":752
 *         return pystr(self.flow.type())
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def solving_stage(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.solving_stage.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":764
 *         return self.flow.getSolvingStage()
 * 
 *     @solving_stage.setter             # <<<<<<<<<<<<<<
 *     def solving_stage(self, stage):
 *         self.flow.setSolvingStage(stage)
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_13solving_stage_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_stage); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_13solving_stage_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_stage) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_13solving_stage_2__set__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), ((PyObject *)__pyx_v_stage));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_13solving_stage_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_stage) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  size_t __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":766
 *     @solving_stage.setter
 *     def solving_stage(self, stage):
 *         self.flow.setSolvingStage(stage)             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __pyx_t_1 = __Pyx_PyInt_As_size_t(__pyx_v_stage); if (unlikely((__pyx_t_1 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 766, __pyx_L1_error)
  try {
    __pyx_v_self->flow->setSolvingStage(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 766, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":764
 *         return self.flow.getSolvingStage()
 * 
 *     @solving_stage.setter             # <<<<<<<<<<<<<<
 *     def solving_stage(self, stage):
 *         self.flow.setSolvingStage(stage)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.solving_stage.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":768
 *         self.flow.setSolvingStage(stage)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def electric_field_enabled(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_22electric_field_enabled_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_9_FlowBase_22electric_field_enabled_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_22electric_field_enabled___get__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_9_FlowBase_22electric_field_enabled___get__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":774
 *         if transport model is ``ionized-gas``).
 *         """
 *         return self.flow.doElectricField(0)             # <<<<<<<<<<<<<<
 * 
 *     @electric_field_enabled.setter
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->flow->doElectricField(0);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 774, __pyx_L1_error)
  }
  __pyx_t_2 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 774, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":768
 *         self.flow.setSolvingStage(stage)
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def electric_field_enabled(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera._onedim._FlowBase.electric_field_enabled.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":776
 *         return self.flow.doElectricField(0)
 * 
 *     @electric_field_enabled.setter             # <<<<<<<<<<<<<<
 *     def electric_field_enabled(self, enable):
 *         if enable:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_22electric_field_enabled_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_enable); /*proto*/
static int __pyx_pw_7cantera_7_onedim_9_FlowBase_22electric_field_enabled_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_enable) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_9_FlowBase_22electric_field_enabled_2__set__(((struct __pyx_obj_7cantera_7_onedim__FlowBase *)__pyx_v_self), ((PyObject *)__pyx_v_enable));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_9_FlowBase_22electric_field_enabled_2__set__(struct __pyx_obj_7cantera_7_onedim__FlowBase *__pyx_v_self, PyObject *__pyx_v_enable) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":778
 *     @electric_field_enabled.setter
 *     def electric_field_enabled(self, enable):
 *         if enable:             # <<<<<<<<<<<<<<
 *             self.flow.solveElectricField()
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_enable); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 778, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":779
 *     def electric_field_enabled(self, enable):
 *         if enable:
 *             self.flow.solveElectricField()             # <<<<<<<<<<<<<<
 *         else:
 *             self.flow.fixElectricField()
 */
    try {
      __pyx_v_self->flow->solveElectricField();
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 779, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":778
 *     @electric_field_enabled.setter
 *     def electric_field_enabled(self, enable):
 *         if enable:             # <<<<<<<<<<<<<<
 *             self.flow.solveElectricField()
 *         else:
 */
    goto __pyx_L3;
  }

  /* "cantera/_onedim.pyx":781
 *             self.flow.solveElectricField()
 *         else:
 *             self.flow.fixElectricField()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    try {
      __pyx_v_self->flow->fixElectricField();
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 781, __pyx_L1_error)
    }
  }
  __pyx_L3:;

  /* "cantera/_onedim.pyx":776
 *         return self.flow.doElectricField(0)
 * 
 *     @electric_field_enabled.setter             # <<<<<<<<<<<<<<
 *     def electric_field_enabled(self, enable):
 *         if enable:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim._FlowBase.electric_field_enabled.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":878
 *     _domain_type = "gas-flow"
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("Class 'IdealGasFlow' to be removed after Cantera 3.0; use "
 *                       "'FreeFlow', 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_12IdealGasFlow_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_12IdealGasFlow_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = __Pyx_KwargsAsDict_VARARGS(__pyx_kwds, __pyx_kwvalues);
    if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = PyDict_New();
    if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cantera_7_onedim_12IdealGasFlow___init__(((struct __pyx_obj_7cantera_7_onedim_IdealGasFlow *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_12IdealGasFlow___init__(struct __pyx_obj_7cantera_7_onedim_IdealGasFlow *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/_onedim.pyx":879
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("Class 'IdealGasFlow' to be removed after Cantera 3.0; use "             # <<<<<<<<<<<<<<
 *                       "'FreeFlow', 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 *                       DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":881
 *         warnings.warn("Class 'IdealGasFlow' to be removed after Cantera 3.0; use "
 *                       "'FreeFlow', 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 *                       DeprecationWarning)             # <<<<<<<<<<<<<<
 *         super().__init__(*args, **kwargs)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":882
 *                       "'FreeFlow', 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 *                       DeprecationWarning)
 *         super().__init__(*args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF((PyObject *)__pyx_ptype_7cantera_7_onedim_IdealGasFlow);
  __Pyx_GIVEREF((PyObject *)__pyx_ptype_7cantera_7_onedim_IdealGasFlow);
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_ptype_7cantera_7_onedim_IdealGasFlow));
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_init); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyDict_Copy(__pyx_v_kwargs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_v_args, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 882, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":878
 *     _domain_type = "gas-flow"
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("Class 'IdealGasFlow' to be removed after Cantera 3.0; use "
 *                       "'FreeFlow', 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.IdealGasFlow.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":898
 *     _domain_type = "ion-flow"
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("Class 'IonFlow' to be removed after Cantera 3.0; use 'FreeFlow',"
 *                       " 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_7IonFlow_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_7IonFlow_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = __Pyx_KwargsAsDict_VARARGS(__pyx_kwds, __pyx_kwvalues);
    if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = PyDict_New();
    if (unlikely(!__pyx_v_kwargs)) return -1;
    __Pyx_GOTREF(__pyx_v_kwargs);
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cantera_7_onedim_7IonFlow___init__(((struct __pyx_obj_7cantera_7_onedim_IonFlow *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_7IonFlow___init__(struct __pyx_obj_7cantera_7_onedim_IonFlow *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/_onedim.pyx":899
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("Class 'IonFlow' to be removed after Cantera 3.0; use 'FreeFlow',"             # <<<<<<<<<<<<<<
 *                       " 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 *                       DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":901
 *         warnings.warn("Class 'IonFlow' to be removed after Cantera 3.0; use 'FreeFlow',"
 *                       " 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 *                       DeprecationWarning)             # <<<<<<<<<<<<<<
 *         super().__init__(*args, **kwargs)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":902
 *                       " 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 *                       DeprecationWarning)
 *         super().__init__(*args, **kwargs)             # <<<<<<<<<<<<<<
 * 
 *     def set_solving_stage(self, stage):
 */
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF((PyObject *)__pyx_ptype_7cantera_7_onedim_IonFlow);
  __Pyx_GIVEREF((PyObject *)__pyx_ptype_7cantera_7_onedim_IonFlow);
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_ptype_7cantera_7_onedim_IonFlow));
  __Pyx_INCREF((PyObject *)__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_v_self);
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_self));
  __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_super, __pyx_t_1, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_init); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyDict_Copy(__pyx_v_kwargs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_1, __pyx_v_args, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":898
 *     _domain_type = "ion-flow"
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("Class 'IonFlow' to be removed after Cantera 3.0; use 'FreeFlow',"
 *                       " 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.IonFlow.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":904
 *         super().__init__(*args, **kwargs)
 * 
 *     def set_solving_stage(self, stage):             # <<<<<<<<<<<<<<
 *         """
 *         Set the mode for handling ionized species:
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_7IonFlow_3set_solving_stage(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_7IonFlow_2set_solving_stage, "\n        Set the mode for handling ionized species:\n\n        - ``stage == 1``: the fluxes of charged species are set to zero\n        - ``stage == 2``: the electric field equation is solved, and the drift flux for\n          ionized species is evaluated\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_7IonFlow_3set_solving_stage = {"set_solving_stage", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_7IonFlow_3set_solving_stage, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_7IonFlow_2set_solving_stage};
static PyObject *__pyx_pw_7cantera_7_onedim_7IonFlow_3set_solving_stage(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_stage = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_solving_stage (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_stage,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_stage)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 904, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_solving_stage") < 0)) __PYX_ERR(0, 904, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_stage = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_solving_stage", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 904, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.IonFlow.set_solving_stage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_7IonFlow_2set_solving_stage(((struct __pyx_obj_7cantera_7_onedim_IonFlow *)__pyx_v_self), __pyx_v_stage);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_7IonFlow_2set_solving_stage(struct __pyx_obj_7cantera_7_onedim_IonFlow *__pyx_v_self, PyObject *__pyx_v_stage) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_solving_stage", 0);

  /* "cantera/_onedim.pyx":912
 *           ionized species is evaluated
 *         """
 *         warnings.warn("IonFlow.set_solving_stage: Method to be removed after Cantera "             # <<<<<<<<<<<<<<
 *                       "3.0; use 'solving_stage' property instead.", DeprecationWarning)
 *         self.solving_stage = stage
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":913
 *         """
 *         warnings.warn("IonFlow.set_solving_stage: Method to be removed after Cantera "
 *                       "3.0; use 'solving_stage' property instead.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *         self.solving_stage = stage
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":914
 *         warnings.warn("IonFlow.set_solving_stage: Method to be removed after Cantera "
 *                       "3.0; use 'solving_stage' property instead.", DeprecationWarning)
 *         self.solving_stage = stage             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_solving_stage, __pyx_v_stage) < 0) __PYX_ERR(0, 914, __pyx_L1_error)

  /* "cantera/_onedim.pyx":904
 *         super().__init__(*args, **kwargs)
 * 
 *     def set_solving_stage(self, stage):             # <<<<<<<<<<<<<<
 *         """
 *         Set the mode for handling ionized species:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera._onedim.IonFlow.set_solving_stage", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":926
 *     """
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self.sim = NULL
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__cinit__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D___cinit__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D___cinit__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/_onedim.pyx":927
 * 
 *     def __cinit__(self, *args, **kwargs):
 *         self.sim = NULL             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, domains, *args, **kwargs):
 */
  __pyx_v_self->sim = NULL;

  /* "cantera/_onedim.pyx":926
 *     """
 * 
 *     def __cinit__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         self.sim = NULL
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":929
 *         self.sim = NULL
 * 
 *     def __init__(self, domains, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         cdef vector[shared_ptr[CxxDomain1D]] cxx_domains
 *         cdef Domain1D d
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_domains = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __pyx_v_args = __Pyx_ArgsSlice_VARARGS(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
    __Pyx_RefNannyFinishContext();
    return -1;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domains,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domains)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 929, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, used_pos_args, "__init__") < 0)) __PYX_ERR(0, 929, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_domains = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 929, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_2__init__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domains, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D_2__init__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domains, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  std::vector<std::shared_ptr<Cantera::Domain1D> >  __pyx_v_cxx_domains;
  struct __pyx_obj_7cantera_7_onedim_Domain1D *__pyx_v_d = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  Cantera::Sim1D *__pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/_onedim.pyx":932
 *         cdef vector[shared_ptr[CxxDomain1D]] cxx_domains
 *         cdef Domain1D d
 *         for d in domains:             # <<<<<<<<<<<<<<
 *             cxx_domains.push_back(d._domain)
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_domains)) || PyTuple_CheckExact(__pyx_v_domains)) {
    __pyx_t_1 = __pyx_v_domains; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_domains); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 932, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 932, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 932, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 932, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 932, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 932, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 932, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    if (!(likely(((__pyx_t_4) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_4, __pyx_ptype_7cantera_7_onedim_Domain1D))))) __PYX_ERR(0, 932, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_d, ((struct __pyx_obj_7cantera_7_onedim_Domain1D *)__pyx_t_4));
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":933
 *         cdef Domain1D d
 *         for d in domains:
 *             cxx_domains.push_back(d._domain)             # <<<<<<<<<<<<<<
 * 
 *         self.sim = new CxxSim1D(cxx_domains)
 */
    try {
      __pyx_v_cxx_domains.push_back(__pyx_v_d->_domain);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 933, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":932
 *         cdef vector[shared_ptr[CxxDomain1D]] cxx_domains
 *         cdef Domain1D d
 *         for d in domains:             # <<<<<<<<<<<<<<
 *             cxx_domains.push_back(d._domain)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":935
 *             cxx_domains.push_back(d._domain)
 * 
 *         self.sim = new CxxSim1D(cxx_domains)             # <<<<<<<<<<<<<<
 *         self.domains = tuple(domains)
 *         self.set_interrupt(no_op)
 */
  try {
    __pyx_t_5 = new Cantera::Sim1D(__pyx_v_cxx_domains);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 935, __pyx_L1_error)
  }
  __pyx_v_self->sim = __pyx_t_5;

  /* "cantera/_onedim.pyx":936
 * 
 *         self.sim = new CxxSim1D(cxx_domains)
 *         self.domains = tuple(domains)             # <<<<<<<<<<<<<<
 *         self.set_interrupt(no_op)
 *         self._initialized = False
 */
  __pyx_t_1 = __Pyx_PySequence_Tuple(__pyx_v_domains); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 936, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->domains);
  __Pyx_DECREF(__pyx_v_self->domains);
  __pyx_v_self->domains = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":937
 *         self.sim = new CxxSim1D(cxx_domains)
 *         self.domains = tuple(domains)
 *         self.set_interrupt(no_op)             # <<<<<<<<<<<<<<
 *         self._initialized = False
 *         self._initial_guess_args = ()
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_interrupt); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GetModuleGlobalName(__pyx_t_6, __pyx_n_s_no_op); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 937, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_7 = NULL;
  __pyx_t_8 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_8 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_6};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 937, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":938
 *         self.domains = tuple(domains)
 *         self.set_interrupt(no_op)
 *         self._initialized = False             # <<<<<<<<<<<<<<
 *         self._initial_guess_args = ()
 *         self._initial_guess_kwargs = {}
 */
  __Pyx_INCREF(Py_False);
  __Pyx_GIVEREF(Py_False);
  __Pyx_GOTREF(__pyx_v_self->_initialized);
  __Pyx_DECREF(__pyx_v_self->_initialized);
  __pyx_v_self->_initialized = Py_False;

  /* "cantera/_onedim.pyx":939
 *         self.set_interrupt(no_op)
 *         self._initialized = False
 *         self._initial_guess_args = ()             # <<<<<<<<<<<<<<
 *         self._initial_guess_kwargs = {}
 * 
 */
  __Pyx_INCREF(__pyx_empty_tuple);
  __Pyx_GIVEREF(__pyx_empty_tuple);
  __Pyx_GOTREF(__pyx_v_self->_initial_guess_args);
  __Pyx_DECREF(__pyx_v_self->_initial_guess_args);
  __pyx_v_self->_initial_guess_args = __pyx_empty_tuple;

  /* "cantera/_onedim.pyx":940
 *         self._initialized = False
 *         self._initial_guess_args = ()
 *         self._initial_guess_kwargs = {}             # <<<<<<<<<<<<<<
 * 
 *     def phase(self, domain=None):
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 940, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_initial_guess_kwargs);
  __Pyx_DECREF(__pyx_v_self->_initial_guess_kwargs);
  __pyx_v_self->_initial_guess_kwargs = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":929
 *         self.sim = NULL
 * 
 *     def __init__(self, domains, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         cdef vector[shared_ptr[CxxDomain1D]] cxx_domains
 *         cdef Domain1D d
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_d);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":942
 *         self._initial_guess_kwargs = {}
 * 
 *     def phase(self, domain=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return phase describing a domain (that is, a gas phase or surface phase).
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5phase(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_4phase, "\n        Return phase describing a domain (that is, a gas phase or surface phase).\n\n        :param domain: Index of domain within `Sim1D.domains` list; the default\n            is to return the phase of the parent `Sim1D` object.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_5phase = {"phase", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_5phase, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_4phase};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5phase(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("phase (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 942, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "phase") < 0)) __PYX_ERR(0, 942, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_domain = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("phase", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 942, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.phase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_4phase(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_4phase(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain) {
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("phase", 0);

  /* "cantera/_onedim.pyx":949
 *             is to return the phase of the parent `Sim1D` object.
 *         """
 *         if domain is None:             # <<<<<<<<<<<<<<
 *             return self.gas
 * 
 */
  __pyx_t_1 = (__pyx_v_domain == Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":950
 *         """
 *         if domain is None:
 *             return self.gas             # <<<<<<<<<<<<<<
 * 
 *         dom = self.domains[self.domain_index(domain)]
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_gas); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 950, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":949
 *             is to return the phase of the parent `Sim1D` object.
 *         """
 *         if domain is None:             # <<<<<<<<<<<<<<
 *             return self.gas
 * 
 */
  }

  /* "cantera/_onedim.pyx":952
 *             return self.gas
 * 
 *         dom = self.domains[self.domain_index(domain)]             # <<<<<<<<<<<<<<
 *         return dom.phase
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_domain};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 952, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_3 = __Pyx_PyObject_GetItem(__pyx_v_self->domains, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 952, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_dom = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":953
 * 
 *         dom = self.domains[self.domain_index(domain)]
 *         return dom.phase             # <<<<<<<<<<<<<<
 * 
 *     def set_interrupt(self, f):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_dom, __pyx_n_s_phase); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 953, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":942
 *         self._initial_guess_kwargs = {}
 * 
 *     def phase(self, domain=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return phase describing a domain (that is, a gas phase or surface phase).
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.phase", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":955
 *         return dom.phase
 * 
 *     def set_interrupt(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set an interrupt function to be called each time that :ct:`OneDim::eval` is
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_7set_interrupt(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_6set_interrupt, "\n        Set an interrupt function to be called each time that :ct:`OneDim::eval` is\n        called. The signature of ``f`` is ``float f(float)``. The default\n        interrupt function is used to trap `KeyboardInterrupt` exceptions so\n        that ``ctrl-c`` can be used to break out of the C++ solver loop.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_7set_interrupt = {"set_interrupt", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_7set_interrupt, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_6set_interrupt};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_7set_interrupt(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_f = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_interrupt (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_f,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_f)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 955, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_interrupt") < 0)) __PYX_ERR(0, 955, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_f = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_interrupt", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 955, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_interrupt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_6set_interrupt(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_f);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_6set_interrupt(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_interrupt", 0);
  __Pyx_INCREF(__pyx_v_f);

  /* "cantera/_onedim.pyx":962
 *         that ``ctrl-c`` can be used to break out of the C++ solver loop.
 *         """
 *         if f is None:             # <<<<<<<<<<<<<<
 *             self.sim.setInterrupt(NULL)
 *             self._interrupt = None
 */
  __pyx_t_1 = (__pyx_v_f == Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":963
 *         """
 *         if f is None:
 *             self.sim.setInterrupt(NULL)             # <<<<<<<<<<<<<<
 *             self._interrupt = None
 *             return
 */
    try {
      __pyx_v_self->sim->setInterrupt(NULL);
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 963, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":964
 *         if f is None:
 *             self.sim.setInterrupt(NULL)
 *             self._interrupt = None             # <<<<<<<<<<<<<<
 *             return
 * 
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->_interrupt);
    __Pyx_DECREF((PyObject *)__pyx_v_self->_interrupt);
    __pyx_v_self->_interrupt = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None);

    /* "cantera/_onedim.pyx":965
 *             self.sim.setInterrupt(NULL)
 *             self._interrupt = None
 *             return             # <<<<<<<<<<<<<<
 * 
 *         if not isinstance(f, Func1):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":962
 *         that ``ctrl-c`` can be used to break out of the C++ solver loop.
 *         """
 *         if f is None:             # <<<<<<<<<<<<<<
 *             self.sim.setInterrupt(NULL)
 *             self._interrupt = None
 */
  }

  /* "cantera/_onedim.pyx":967
 *             return
 * 
 *         if not isinstance(f, Func1):             # <<<<<<<<<<<<<<
 *             f = Func1(f)
 *         self._interrupt = f
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_f, __pyx_ptype_7cantera_5func1_Func1); 
  __pyx_t_2 = (!__pyx_t_1);
  if (__pyx_t_2) {

    /* "cantera/_onedim.pyx":968
 * 
 *         if not isinstance(f, Func1):
 *             f = Func1(f)             # <<<<<<<<<<<<<<
 *         self._interrupt = f
 *         self.sim.setInterrupt(self._interrupt.func)
 */
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_7cantera_5func1_Func1), __pyx_v_f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 968, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_f, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":967
 *             return
 * 
 *         if not isinstance(f, Func1):             # <<<<<<<<<<<<<<
 *             f = Func1(f)
 *         self._interrupt = f
 */
  }

  /* "cantera/_onedim.pyx":969
 *         if not isinstance(f, Func1):
 *             f = Func1(f)
 *         self._interrupt = f             # <<<<<<<<<<<<<<
 *         self.sim.setInterrupt(self._interrupt.func)
 * 
 */
  if (!(likely(((__pyx_v_f) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_f, __pyx_ptype_7cantera_5func1_Func1))))) __PYX_ERR(0, 969, __pyx_L1_error)
  __pyx_t_3 = __pyx_v_f;
  __Pyx_INCREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_interrupt);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_interrupt);
  __pyx_v_self->_interrupt = ((struct __pyx_obj_7cantera_5func1_Func1 *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":970
 *             f = Func1(f)
 *         self._interrupt = f
 *         self.sim.setInterrupt(self._interrupt.func)             # <<<<<<<<<<<<<<
 * 
 *     def set_time_step_callback(self, f):
 */
  try {
    __pyx_v_self->sim->setInterrupt(__pyx_v_self->_interrupt->func);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 970, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":955
 *         return dom.phase
 * 
 *     def set_interrupt(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set an interrupt function to be called each time that :ct:`OneDim::eval` is
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_interrupt", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":972
 *         self.sim.setInterrupt(self._interrupt.func)
 * 
 *     def set_time_step_callback(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set a callback function to be called after each successful timestep.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_9set_time_step_callback(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_8set_time_step_callback, "\n        Set a callback function to be called after each successful timestep.\n        The signature of ``f`` is ``float f(float)``. The argument passed to ``f`` is\n        the size of the timestep. The output is ignored.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_9set_time_step_callback = {"set_time_step_callback", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_9set_time_step_callback, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_8set_time_step_callback};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_9set_time_step_callback(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_f = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_time_step_callback (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_f,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_f)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_time_step_callback") < 0)) __PYX_ERR(0, 972, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_f = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_time_step_callback", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 972, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_time_step_callback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_8set_time_step_callback(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_f);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_8set_time_step_callback(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_time_step_callback", 0);
  __Pyx_INCREF(__pyx_v_f);

  /* "cantera/_onedim.pyx":978
 *         the size of the timestep. The output is ignored.
 *         """
 *         if f is None:             # <<<<<<<<<<<<<<
 *             self.sim.setTimeStepCallback(NULL)
 *             self._time_step_callback = None
 */
  __pyx_t_1 = (__pyx_v_f == Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":979
 *         """
 *         if f is None:
 *             self.sim.setTimeStepCallback(NULL)             # <<<<<<<<<<<<<<
 *             self._time_step_callback = None
 *             return
 */
    __pyx_v_self->sim->setTimeStepCallback(NULL);

    /* "cantera/_onedim.pyx":980
 *         if f is None:
 *             self.sim.setTimeStepCallback(NULL)
 *             self._time_step_callback = None             # <<<<<<<<<<<<<<
 *             return
 * 
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->_time_step_callback);
    __Pyx_DECREF((PyObject *)__pyx_v_self->_time_step_callback);
    __pyx_v_self->_time_step_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None);

    /* "cantera/_onedim.pyx":981
 *             self.sim.setTimeStepCallback(NULL)
 *             self._time_step_callback = None
 *             return             # <<<<<<<<<<<<<<
 * 
 *         if not isinstance(f, Func1):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":978
 *         the size of the timestep. The output is ignored.
 *         """
 *         if f is None:             # <<<<<<<<<<<<<<
 *             self.sim.setTimeStepCallback(NULL)
 *             self._time_step_callback = None
 */
  }

  /* "cantera/_onedim.pyx":983
 *             return
 * 
 *         if not isinstance(f, Func1):             # <<<<<<<<<<<<<<
 *             f = Func1(f)
 *         self._time_step_callback = f
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_f, __pyx_ptype_7cantera_5func1_Func1); 
  __pyx_t_2 = (!__pyx_t_1);
  if (__pyx_t_2) {

    /* "cantera/_onedim.pyx":984
 * 
 *         if not isinstance(f, Func1):
 *             f = Func1(f)             # <<<<<<<<<<<<<<
 *         self._time_step_callback = f
 *         self.sim.setTimeStepCallback(self._time_step_callback.func)
 */
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_7cantera_5func1_Func1), __pyx_v_f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 984, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_f, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":983
 *             return
 * 
 *         if not isinstance(f, Func1):             # <<<<<<<<<<<<<<
 *             f = Func1(f)
 *         self._time_step_callback = f
 */
  }

  /* "cantera/_onedim.pyx":985
 *         if not isinstance(f, Func1):
 *             f = Func1(f)
 *         self._time_step_callback = f             # <<<<<<<<<<<<<<
 *         self.sim.setTimeStepCallback(self._time_step_callback.func)
 * 
 */
  if (!(likely(((__pyx_v_f) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_f, __pyx_ptype_7cantera_5func1_Func1))))) __PYX_ERR(0, 985, __pyx_L1_error)
  __pyx_t_3 = __pyx_v_f;
  __Pyx_INCREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_time_step_callback);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_time_step_callback);
  __pyx_v_self->_time_step_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":986
 *             f = Func1(f)
 *         self._time_step_callback = f
 *         self.sim.setTimeStepCallback(self._time_step_callback.func)             # <<<<<<<<<<<<<<
 * 
 *     def set_steady_callback(self, f):
 */
  __pyx_v_self->sim->setTimeStepCallback(__pyx_v_self->_time_step_callback->func);

  /* "cantera/_onedim.pyx":972
 *         self.sim.setInterrupt(self._interrupt.func)
 * 
 *     def set_time_step_callback(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set a callback function to be called after each successful timestep.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_time_step_callback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":988
 *         self.sim.setTimeStepCallback(self._time_step_callback.func)
 * 
 *     def set_steady_callback(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set a callback function to be called after each successful steady-state
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_11set_steady_callback(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_10set_steady_callback, "\n        Set a callback function to be called after each successful steady-state\n        solve, before regridding. The signature of ``f`` is ``float f(float)``. The\n        argument passed to ``f`` is 0.0 and the output is ignored.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_11set_steady_callback = {"set_steady_callback", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_11set_steady_callback, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_10set_steady_callback};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_11set_steady_callback(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_f = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_steady_callback (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_f,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_f)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 988, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_steady_callback") < 0)) __PYX_ERR(0, 988, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_f = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_steady_callback", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 988, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_steady_callback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_10set_steady_callback(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_f);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_10set_steady_callback(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_f) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_steady_callback", 0);
  __Pyx_INCREF(__pyx_v_f);

  /* "cantera/_onedim.pyx":994
 *         argument passed to ``f`` is 0.0 and the output is ignored.
 *         """
 *         if f is None:             # <<<<<<<<<<<<<<
 *             self.sim.setSteadyCallback(NULL)
 *             self._steady_callback = None
 */
  __pyx_t_1 = (__pyx_v_f == Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":995
 *         """
 *         if f is None:
 *             self.sim.setSteadyCallback(NULL)             # <<<<<<<<<<<<<<
 *             self._steady_callback = None
 *             return
 */
    __pyx_v_self->sim->setSteadyCallback(NULL);

    /* "cantera/_onedim.pyx":996
 *         if f is None:
 *             self.sim.setSteadyCallback(NULL)
 *             self._steady_callback = None             # <<<<<<<<<<<<<<
 *             return
 * 
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->_steady_callback);
    __Pyx_DECREF((PyObject *)__pyx_v_self->_steady_callback);
    __pyx_v_self->_steady_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None);

    /* "cantera/_onedim.pyx":997
 *             self.sim.setSteadyCallback(NULL)
 *             self._steady_callback = None
 *             return             # <<<<<<<<<<<<<<
 * 
 *         if not isinstance(f, Func1):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":994
 *         argument passed to ``f`` is 0.0 and the output is ignored.
 *         """
 *         if f is None:             # <<<<<<<<<<<<<<
 *             self.sim.setSteadyCallback(NULL)
 *             self._steady_callback = None
 */
  }

  /* "cantera/_onedim.pyx":999
 *             return
 * 
 *         if not isinstance(f, Func1):             # <<<<<<<<<<<<<<
 *             f = Func1(f)
 *         self._steady_callback = f
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_f, __pyx_ptype_7cantera_5func1_Func1); 
  __pyx_t_2 = (!__pyx_t_1);
  if (__pyx_t_2) {

    /* "cantera/_onedim.pyx":1000
 * 
 *         if not isinstance(f, Func1):
 *             f = Func1(f)             # <<<<<<<<<<<<<<
 *         self._steady_callback = f
 *         self.sim.setSteadyCallback(self._steady_callback.func)
 */
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_7cantera_5func1_Func1), __pyx_v_f); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1000, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_f, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":999
 *             return
 * 
 *         if not isinstance(f, Func1):             # <<<<<<<<<<<<<<
 *             f = Func1(f)
 *         self._steady_callback = f
 */
  }

  /* "cantera/_onedim.pyx":1001
 *         if not isinstance(f, Func1):
 *             f = Func1(f)
 *         self._steady_callback = f             # <<<<<<<<<<<<<<
 *         self.sim.setSteadyCallback(self._steady_callback.func)
 * 
 */
  if (!(likely(((__pyx_v_f) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_f, __pyx_ptype_7cantera_5func1_Func1))))) __PYX_ERR(0, 1001, __pyx_L1_error)
  __pyx_t_3 = __pyx_v_f;
  __Pyx_INCREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_3);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_steady_callback);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_steady_callback);
  __pyx_v_self->_steady_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1002
 *             f = Func1(f)
 *         self._steady_callback = f
 *         self.sim.setSteadyCallback(self._steady_callback.func)             # <<<<<<<<<<<<<<
 * 
 *     def domain_index(self, dom):
 */
  __pyx_v_self->sim->setSteadyCallback(__pyx_v_self->_steady_callback->func);

  /* "cantera/_onedim.pyx":988
 *         self.sim.setTimeStepCallback(self._time_step_callback.func)
 * 
 *     def set_steady_callback(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set a callback function to be called after each successful steady-state
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_steady_callback", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_f);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1004
 *         self.sim.setSteadyCallback(self._steady_callback.func)
 * 
 *     def domain_index(self, dom):             # <<<<<<<<<<<<<<
 *         """
 *         Get the index of a domain, specified either by name or as a Domain1D
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_13domain_index(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_12domain_index, "\n        Get the index of a domain, specified either by name or as a Domain1D\n        object.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_13domain_index = {"domain_index", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_13domain_index, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_12domain_index};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_13domain_index(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_dom = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("domain_index (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dom,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dom)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1004, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "domain_index") < 0)) __PYX_ERR(0, 1004, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_dom = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("domain_index", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1004, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.domain_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_12domain_index(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_dom);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_12domain_index(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_dom) {
  PyObject *__pyx_v_idom = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_d = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  PyObject *(*__pyx_t_7)(PyObject *);
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("domain_index", 0);
  __Pyx_INCREF(__pyx_v_dom);

  /* "cantera/_onedim.pyx":1009
 *         object.
 *         """
 *         if isinstance(dom, Domain1D):             # <<<<<<<<<<<<<<
 *             idom = self.domains.index(dom)
 *         elif isinstance(dom, int):
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_dom, __pyx_ptype_7cantera_7_onedim_Domain1D); 
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1010
 *         """
 *         if isinstance(dom, Domain1D):
 *             idom = self.domains.index(dom)             # <<<<<<<<<<<<<<
 *         elif isinstance(dom, int):
 *             idom = dom
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_self->domains, __pyx_n_s_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1010, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_dom};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1010, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_v_idom = __pyx_t_2;
    __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":1009
 *         object.
 *         """
 *         if isinstance(dom, Domain1D):             # <<<<<<<<<<<<<<
 *             idom = self.domains.index(dom)
 *         elif isinstance(dom, int):
 */
    goto __pyx_L3;
  }

  /* "cantera/_onedim.pyx":1011
 *         if isinstance(dom, Domain1D):
 *             idom = self.domains.index(dom)
 *         elif isinstance(dom, int):             # <<<<<<<<<<<<<<
 *             idom = dom
 *         else:
 */
  __pyx_t_1 = PyInt_Check(__pyx_v_dom); 
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1012
 *             idom = self.domains.index(dom)
 *         elif isinstance(dom, int):
 *             idom = dom             # <<<<<<<<<<<<<<
 *         else:
 *             idom = None
 */
    __Pyx_INCREF(__pyx_v_dom);
    __pyx_v_idom = __pyx_v_dom;

    /* "cantera/_onedim.pyx":1011
 *         if isinstance(dom, Domain1D):
 *             idom = self.domains.index(dom)
 *         elif isinstance(dom, int):             # <<<<<<<<<<<<<<
 *             idom = dom
 *         else:
 */
    goto __pyx_L3;
  }

  /* "cantera/_onedim.pyx":1014
 *             idom = dom
 *         else:
 *             idom = None             # <<<<<<<<<<<<<<
 *             for i,d in enumerate(self.domains):
 *                 if d.name == dom:
 */
  /*else*/ {
    __Pyx_INCREF(Py_None);
    __pyx_v_idom = Py_None;

    /* "cantera/_onedim.pyx":1015
 *         else:
 *             idom = None
 *             for i,d in enumerate(self.domains):             # <<<<<<<<<<<<<<
 *                 if d.name == dom:
 *                     idom = i
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_t_2 = __pyx_int_0;
    if (likely(PyList_CheckExact(__pyx_v_self->domains)) || PyTuple_CheckExact(__pyx_v_self->domains)) {
      __pyx_t_3 = __pyx_v_self->domains; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
      __pyx_t_7 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_self->domains); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1015, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_7 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1015, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_7)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 1015, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1015, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 1015, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1015, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_7(__pyx_t_3);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1015, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF_SET(__pyx_v_d, __pyx_t_4);
      __pyx_t_4 = 0;
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_2);
      __pyx_t_4 = __Pyx_PyInt_AddObjC(__pyx_t_2, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1015, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_2);
      __pyx_t_2 = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "cantera/_onedim.pyx":1016
 *             idom = None
 *             for i,d in enumerate(self.domains):
 *                 if d.name == dom:             # <<<<<<<<<<<<<<
 *                     idom = i
 *                     dom = d
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_d, __pyx_n_s_name); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1016, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = PyObject_RichCompare(__pyx_t_4, __pyx_v_dom, Py_EQ); __Pyx_XGOTREF(__pyx_t_8); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1016, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_8); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1016, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      if (__pyx_t_1) {

        /* "cantera/_onedim.pyx":1017
 *             for i,d in enumerate(self.domains):
 *                 if d.name == dom:
 *                     idom = i             # <<<<<<<<<<<<<<
 *                     dom = d
 *             if idom is None:
 */
        __Pyx_INCREF(__pyx_v_i);
        __Pyx_DECREF_SET(__pyx_v_idom, __pyx_v_i);

        /* "cantera/_onedim.pyx":1018
 *                 if d.name == dom:
 *                     idom = i
 *                     dom = d             # <<<<<<<<<<<<<<
 *             if idom is None:
 *                 raise KeyError('Domain named "{0}" not found.'.format(dom))
 */
        __Pyx_INCREF(__pyx_v_d);
        __Pyx_DECREF_SET(__pyx_v_dom, __pyx_v_d);

        /* "cantera/_onedim.pyx":1016
 *             idom = None
 *             for i,d in enumerate(self.domains):
 *                 if d.name == dom:             # <<<<<<<<<<<<<<
 *                     idom = i
 *                     dom = d
 */
      }

      /* "cantera/_onedim.pyx":1015
 *         else:
 *             idom = None
 *             for i,d in enumerate(self.domains):             # <<<<<<<<<<<<<<
 *                 if d.name == dom:
 *                     idom = i
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":1019
 *                     idom = i
 *                     dom = d
 *             if idom is None:             # <<<<<<<<<<<<<<
 *                 raise KeyError('Domain named "{0}" not found.'.format(dom))
 * 
 */
    __pyx_t_1 = (__pyx_v_idom == Py_None);
    if (unlikely(__pyx_t_1)) {

      /* "cantera/_onedim.pyx":1020
 *                     dom = d
 *             if idom is None:
 *                 raise KeyError('Domain named "{0}" not found.'.format(dom))             # <<<<<<<<<<<<<<
 * 
 *         assert 0 <= idom < len(self.domains)
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_Domain_named_0_not_found, __pyx_n_s_format); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1020, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_8 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_v_dom};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1020, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_KeyError, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1020, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(0, 1020, __pyx_L1_error)

      /* "cantera/_onedim.pyx":1019
 *                     idom = i
 *                     dom = d
 *             if idom is None:             # <<<<<<<<<<<<<<
 *                 raise KeyError('Domain named "{0}" not found.'.format(dom))
 * 
 */
    }
  }
  __pyx_L3:;

  /* "cantera/_onedim.pyx":1022
 *                 raise KeyError('Domain named "{0}" not found.'.format(dom))
 * 
 *         assert 0 <= idom < len(self.domains)             # <<<<<<<<<<<<<<
 *         return idom
 * 
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(__pyx_assertions_enabled())) {
    __pyx_t_3 = PyObject_RichCompare(__pyx_int_0, __pyx_v_idom, Py_LE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1022, __pyx_L1_error)
    if (__Pyx_PyObject_IsTrue(__pyx_t_3)) {
      __Pyx_DECREF(__pyx_t_3);
      __pyx_t_2 = __pyx_v_self->domains;
      __Pyx_INCREF(__pyx_t_2);
      __pyx_t_6 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_6 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1022, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyInt_FromSsize_t(__pyx_t_6); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1022, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_idom, __pyx_t_2, Py_LT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1022, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1022, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) {
      __Pyx_Raise(__pyx_builtin_AssertionError, 0, 0, 0);
      __PYX_ERR(0, 1022, __pyx_L1_error)
    }
  }
  #else
  if ((1)); else __PYX_ERR(0, 1022, __pyx_L1_error)
  #endif

  /* "cantera/_onedim.pyx":1023
 * 
 *         assert 0 <= idom < len(self.domains)
 *         return idom             # <<<<<<<<<<<<<<
 * 
 *     def _get_indices(self, dom, comp):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_idom);
  __pyx_r = __pyx_v_idom;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1004
 *         self.sim.setSteadyCallback(self._steady_callback.func)
 * 
 *     def domain_index(self, dom):             # <<<<<<<<<<<<<<
 *         """
 *         Get the index of a domain, specified either by name or as a Domain1D
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.domain_index", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idom);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_d);
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1025
 *         return idom
 * 
 *     def _get_indices(self, dom, comp):             # <<<<<<<<<<<<<<
 *         idom = self.domain_index(dom)
 *         dom = self.domains[idom]
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_15_get_indices(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_15_get_indices = {"_get_indices", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_15_get_indices, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_15_get_indices(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_dom = 0;
  PyObject *__pyx_v_comp = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_indices (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dom,&__pyx_n_s_comp,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dom)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1025, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_comp)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1025, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_get_indices", 1, 2, 2, 1); __PYX_ERR(0, 1025, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_get_indices") < 0)) __PYX_ERR(0, 1025, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_dom = values[0];
    __pyx_v_comp = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_get_indices", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1025, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D._get_indices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_14_get_indices(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_dom, __pyx_v_comp);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_14_get_indices(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_dom, PyObject *__pyx_v_comp) {
  PyObject *__pyx_v_idom = NULL;
  PyObject *__pyx_v_kcomp = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_indices", 0);
  __Pyx_INCREF(__pyx_v_dom);

  /* "cantera/_onedim.pyx":1026
 * 
 *     def _get_indices(self, dom, comp):
 *         idom = self.domain_index(dom)             # <<<<<<<<<<<<<<
 *         dom = self.domains[idom]
 *         if isinstance(comp, (str, bytes)):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1026, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_dom};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1026, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_idom = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1027
 *     def _get_indices(self, dom, comp):
 *         idom = self.domain_index(dom)
 *         dom = self.domains[idom]             # <<<<<<<<<<<<<<
 *         if isinstance(comp, (str, bytes)):
 *             kcomp = dom.component_index(comp)
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_self->domains, __pyx_v_idom); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1027, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF_SET(__pyx_v_dom, __pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1028
 *         idom = self.domain_index(dom)
 *         dom = self.domains[idom]
 *         if isinstance(comp, (str, bytes)):             # <<<<<<<<<<<<<<
 *             kcomp = dom.component_index(comp)
 *         else:
 */
  __pyx_t_6 = PyUnicode_Check(__pyx_v_comp); 
  if (!__pyx_t_6) {
  } else {
    __pyx_t_5 = __pyx_t_6;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_6 = PyBytes_Check(__pyx_v_comp); 
  __pyx_t_5 = __pyx_t_6;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_5) {

    /* "cantera/_onedim.pyx":1029
 *         dom = self.domains[idom]
 *         if isinstance(comp, (str, bytes)):
 *             kcomp = dom.component_index(comp)             # <<<<<<<<<<<<<<
 *         else:
 *             kcomp = comp
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_dom, __pyx_n_s_component_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1029, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_2, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_comp};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1029, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_v_kcomp = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":1028
 *         idom = self.domain_index(dom)
 *         dom = self.domains[idom]
 *         if isinstance(comp, (str, bytes)):             # <<<<<<<<<<<<<<
 *             kcomp = dom.component_index(comp)
 *         else:
 */
    goto __pyx_L3;
  }

  /* "cantera/_onedim.pyx":1031
 *             kcomp = dom.component_index(comp)
 *         else:
 *             kcomp = comp             # <<<<<<<<<<<<<<
 * 
 *         assert 0 <= kcomp < dom.n_components
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_v_comp);
    __pyx_v_kcomp = __pyx_v_comp;
  }
  __pyx_L3:;

  /* "cantera/_onedim.pyx":1033
 *             kcomp = comp
 * 
 *         assert 0 <= kcomp < dom.n_components             # <<<<<<<<<<<<<<
 * 
 *         return idom, kcomp
 */
  #ifndef CYTHON_WITHOUT_ASSERTIONS
  if (unlikely(__pyx_assertions_enabled())) {
    __pyx_t_1 = PyObject_RichCompare(__pyx_int_0, __pyx_v_kcomp, Py_LE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1033, __pyx_L1_error)
    if (__Pyx_PyObject_IsTrue(__pyx_t_1)) {
      __Pyx_DECREF(__pyx_t_1);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_dom, __pyx_n_s_n_components); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1033, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_kcomp, __pyx_t_2, Py_LT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1033, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    }
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 1033, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely(!__pyx_t_5)) {
      __Pyx_Raise(__pyx_builtin_AssertionError, 0, 0, 0);
      __PYX_ERR(0, 1033, __pyx_L1_error)
    }
  }
  #else
  if ((1)); else __PYX_ERR(0, 1033, __pyx_L1_error)
  #endif

  /* "cantera/_onedim.pyx":1035
 *         assert 0 <= kcomp < dom.n_components
 * 
 *         return idom, kcomp             # <<<<<<<<<<<<<<
 * 
 *     def value(self, domain, component, point):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1035, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_idom);
  __Pyx_GIVEREF(__pyx_v_idom);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_idom);
  __Pyx_INCREF(__pyx_v_kcomp);
  __Pyx_GIVEREF(__pyx_v_kcomp);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_kcomp);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1025
 *         return idom
 * 
 *     def _get_indices(self, dom, comp):             # <<<<<<<<<<<<<<
 *         idom = self.domain_index(dom)
 *         dom = self.domains[idom]
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D._get_indices", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idom);
  __Pyx_XDECREF(__pyx_v_kcomp);
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1037
 *         return idom, kcomp
 * 
 *     def value(self, domain, component, point):             # <<<<<<<<<<<<<<
 *         """
 *         Solution value at one point
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_17value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_16value, "\n        Solution value at one point\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param point:\n            grid point number within ``domain`` starting with 0 on the left\n\n        >>> t = s.value('flow', 'T', 6)\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_17value = {"value", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_17value, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_16value};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_17value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  PyObject *__pyx_v_component = 0;
  PyObject *__pyx_v_point = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("value (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,&__pyx_n_s_component,&__pyx_n_s_point,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1037, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1037, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("value", 1, 3, 3, 1); __PYX_ERR(0, 1037, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_point)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1037, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("value", 1, 3, 3, 2); __PYX_ERR(0, 1037, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "value") < 0)) __PYX_ERR(0, 1037, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_domain = values[0];
    __pyx_v_component = values[1];
    __pyx_v_point = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("value", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 1037, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_16value(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain, __pyx_v_component, __pyx_v_point);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_16value(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_point) {
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_v_comp = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  size_t __pyx_t_7;
  size_t __pyx_t_8;
  size_t __pyx_t_9;
  double __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("value", 0);

  /* "cantera/_onedim.pyx":1050
 *         >>> t = s.value('flow', 'T', 6)
 *         """
 *         dom, comp = self._get_indices(domain, component)             # <<<<<<<<<<<<<<
 *         return self.sim.value(dom, comp, point)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_indices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1050, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_v_domain, __pyx_v_component};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
    PyObject* sequence = __pyx_t_1;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1050, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1050, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5);
    index = 0; __pyx_t_2 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 1; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 2) < 0) __PYX_ERR(0, 1050, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1050, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_dom = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_comp = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1051
 *         """
 *         dom, comp = self._get_indices(domain, component)
 *         return self.sim.value(dom, comp, point)             # <<<<<<<<<<<<<<
 * 
 *     def set_value(self, domain, component, point, value):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_7 = __Pyx_PyInt_As_size_t(__pyx_v_dom); if (unlikely((__pyx_t_7 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1051, __pyx_L1_error)
  __pyx_t_8 = __Pyx_PyInt_As_size_t(__pyx_v_comp); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1051, __pyx_L1_error)
  __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_v_point); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1051, __pyx_L1_error)
  try {
    __pyx_t_10 = __pyx_v_self->sim->value(__pyx_t_7, __pyx_t_8, __pyx_t_9);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1051, __pyx_L1_error)
  }
  __pyx_t_1 = PyFloat_FromDouble(__pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1051, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1037
 *         return idom, kcomp
 * 
 *     def value(self, domain, component, point):             # <<<<<<<<<<<<<<
 *         """
 *         Solution value at one point
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XDECREF(__pyx_v_comp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1053
 *         return self.sim.value(dom, comp, point)
 * 
 *     def set_value(self, domain, component, point, value):             # <<<<<<<<<<<<<<
 *         """
 *         Set the value of one component in one domain at one point to 'value'.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_19set_value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_18set_value, "\n        Set the value of one component in one domain at one point to 'value'.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param point:\n            grid point number within ``domain`` starting with 0 on the left\n        :param value:\n            numerical value\n\n        >>> s.set(d, 3, 5, 6.7)\n        >>> s.set(1, 0, 5, 6.7)\n        >>> s.set('flow', 'T', 5, 500)\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_19set_value = {"set_value", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_19set_value, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_18set_value};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_19set_value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  PyObject *__pyx_v_component = 0;
  PyObject *__pyx_v_point = 0;
  PyObject *__pyx_v_value = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_value (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,&__pyx_n_s_component,&__pyx_n_s_point,&__pyx_n_s_value,0};
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1053, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1053, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_value", 1, 4, 4, 1); __PYX_ERR(0, 1053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_point)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1053, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_value", 1, 4, 4, 2); __PYX_ERR(0, 1053, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_value)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1053, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_value", 1, 4, 4, 3); __PYX_ERR(0, 1053, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_value") < 0)) __PYX_ERR(0, 1053, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_domain = values[0];
    __pyx_v_component = values[1];
    __pyx_v_point = values[2];
    __pyx_v_value = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_value", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1053, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_18set_value(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain, __pyx_v_component, __pyx_v_point, __pyx_v_value);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_18set_value(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_point, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_v_comp = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  size_t __pyx_t_7;
  size_t __pyx_t_8;
  size_t __pyx_t_9;
  double __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_value", 0);

  /* "cantera/_onedim.pyx":1070
 *         >>> s.set('flow', 'T', 5, 500)
 *         """
 *         dom, comp = self._get_indices(domain, component)             # <<<<<<<<<<<<<<
 *         self.sim.setValue(dom, comp, point, value)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_indices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1070, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_v_domain, __pyx_v_component};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
    PyObject* sequence = __pyx_t_1;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1070, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1070, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5);
    index = 0; __pyx_t_2 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 1; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 2) < 0) __PYX_ERR(0, 1070, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1070, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_dom = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_comp = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1071
 *         """
 *         dom, comp = self._get_indices(domain, component)
 *         self.sim.setValue(dom, comp, point, value)             # <<<<<<<<<<<<<<
 * 
 *     def eval(self, rdt=0.0):
 */
  __pyx_t_7 = __Pyx_PyInt_As_size_t(__pyx_v_dom); if (unlikely((__pyx_t_7 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1071, __pyx_L1_error)
  __pyx_t_8 = __Pyx_PyInt_As_size_t(__pyx_v_comp); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1071, __pyx_L1_error)
  __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_v_point); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1071, __pyx_L1_error)
  __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1071, __pyx_L1_error)
  try {
    __pyx_v_self->sim->setValue(__pyx_t_7, __pyx_t_8, __pyx_t_9, __pyx_t_10);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1071, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1053
 *         return self.sim.value(dom, comp, point)
 * 
 *     def set_value(self, domain, component, point, value):             # <<<<<<<<<<<<<<
 *         """
 *         Set the value of one component in one domain at one point to 'value'.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XDECREF(__pyx_v_comp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1073
 *         self.sim.setValue(dom, comp, point, value)
 * 
 *     def eval(self, rdt=0.0):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate the governing equations using the current solution estimate,
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_21eval(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_20eval, "\n        Evaluate the governing equations using the current solution estimate,\n        storing the residual in the array which is accessible with the\n        `work_value` function.\n\n        :param rdt:\n           Reciprocal of the time-step\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_21eval = {"eval", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_21eval, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_20eval};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_21eval(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_rdt = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("eval (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_rdt,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_float_0_0);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_rdt);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1073, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "eval") < 0)) __PYX_ERR(0, 1073, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_rdt = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("eval", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 1073, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.eval", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_20eval(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_rdt);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_20eval(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_rdt) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eval", 0);

  /* "cantera/_onedim.pyx":1082
 *            Reciprocal of the time-step
 *         """
 *         self.sim.eval(rdt)             # <<<<<<<<<<<<<<
 * 
 *     def work_value(self, domain, component, point):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_rdt); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1082, __pyx_L1_error)
  try {
    __pyx_v_self->sim->eval(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1082, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1073
 *         self.sim.setValue(dom, comp, point, value)
 * 
 *     def eval(self, rdt=0.0):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate the governing equations using the current solution estimate,
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.eval", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1084
 *         self.sim.eval(rdt)
 * 
 *     def work_value(self, domain, component, point):             # <<<<<<<<<<<<<<
 *         """
 *         Internal work array value at one point. After calling `eval`, this array
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_23work_value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_22work_value, "\n        Internal work array value at one point. After calling `eval`, this array\n        contains the values of the residual function.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param point:\n            grid point number in the domain, starting with zero at the left\n\n        >>> t = s.value(flow, 'T', 6)\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_23work_value = {"work_value", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_23work_value, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_22work_value};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_23work_value(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  PyObject *__pyx_v_component = 0;
  PyObject *__pyx_v_point = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("work_value (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,&__pyx_n_s_component,&__pyx_n_s_point,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("work_value", 1, 3, 3, 1); __PYX_ERR(0, 1084, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_point)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1084, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("work_value", 1, 3, 3, 2); __PYX_ERR(0, 1084, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "work_value") < 0)) __PYX_ERR(0, 1084, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_domain = values[0];
    __pyx_v_component = values[1];
    __pyx_v_point = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("work_value", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 1084, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.work_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_22work_value(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain, __pyx_v_component, __pyx_v_point);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_22work_value(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_point) {
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_v_comp = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  size_t __pyx_t_7;
  size_t __pyx_t_8;
  size_t __pyx_t_9;
  double __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("work_value", 0);

  /* "cantera/_onedim.pyx":1098
 *         >>> t = s.value(flow, 'T', 6)
 *         """
 *         dom, comp = self._get_indices(domain, component)             # <<<<<<<<<<<<<<
 *         return self.sim.workValue(dom, comp, point)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_indices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1098, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_v_domain, __pyx_v_component};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
    PyObject* sequence = __pyx_t_1;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1098, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1098, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5);
    index = 0; __pyx_t_2 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 1; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 2) < 0) __PYX_ERR(0, 1098, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1098, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_dom = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_comp = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1099
 *         """
 *         dom, comp = self._get_indices(domain, component)
 *         return self.sim.workValue(dom, comp, point)             # <<<<<<<<<<<<<<
 * 
 *     def profile(self, domain, component):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_7 = __Pyx_PyInt_As_size_t(__pyx_v_dom); if (unlikely((__pyx_t_7 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1099, __pyx_L1_error)
  __pyx_t_8 = __Pyx_PyInt_As_size_t(__pyx_v_comp); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1099, __pyx_L1_error)
  __pyx_t_9 = __Pyx_PyInt_As_size_t(__pyx_v_point); if (unlikely((__pyx_t_9 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1099, __pyx_L1_error)
  try {
    __pyx_t_10 = __pyx_v_self->sim->workValue(__pyx_t_7, __pyx_t_8, __pyx_t_9);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1099, __pyx_L1_error)
  }
  __pyx_t_1 = PyFloat_FromDouble(__pyx_t_10); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1084
 *         self.sim.eval(rdt)
 * 
 *     def work_value(self, domain, component, point):             # <<<<<<<<<<<<<<
 *         """
 *         Internal work array value at one point. After calling `eval`, this array
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.work_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XDECREF(__pyx_v_comp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1101
 *         return self.sim.workValue(dom, comp, point)
 * 
 *     def profile(self, domain, component):             # <<<<<<<<<<<<<<
 *         """
 *         Spatial profile of one component in one domain.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_25profile(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_24profile, "\n        Spatial profile of one component in one domain.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n\n        >>> T = s.profile(flow, 'T')\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_25profile = {"profile", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_25profile, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_24profile};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_25profile(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  PyObject *__pyx_v_component = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("profile (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,&__pyx_n_s_component,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1101, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1101, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("profile", 1, 2, 2, 1); __PYX_ERR(0, 1101, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "profile") < 0)) __PYX_ERR(0, 1101, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_domain = values[0];
    __pyx_v_component = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("profile", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1101, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.profile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_24profile(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain, __pyx_v_component);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_24profile(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component) {
  PyObject *__pyx_v_idom = NULL;
  PyObject *__pyx_v_kcomp = NULL;
  PyObject *__pyx_v_dom = NULL;
  int __pyx_v_j;
  PyArrayObject *__pyx_v_data = 0;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_data;
  __Pyx_Buffer __pyx_pybuffer_data;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyArrayObject *__pyx_t_7 = NULL;
  long __pyx_t_8;
  long __pyx_t_9;
  size_t __pyx_t_10;
  size_t __pyx_t_11;
  double __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("profile", 0);
  __pyx_pybuffer_data.pybuffer.buf = NULL;
  __pyx_pybuffer_data.refcount = 0;
  __pyx_pybuffernd_data.data = NULL;
  __pyx_pybuffernd_data.rcbuffer = &__pyx_pybuffer_data;

  /* "cantera/_onedim.pyx":1112
 *         >>> T = s.profile(flow, 'T')
 *         """
 *         idom, kcomp = self._get_indices(domain, component)             # <<<<<<<<<<<<<<
 *         dom = self.domains[idom]
 *         cdef int j
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_indices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1112, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_v_domain, __pyx_v_component};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
    PyObject* sequence = __pyx_t_1;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1112, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1112, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5);
    index = 0; __pyx_t_2 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 1; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 2) < 0) __PYX_ERR(0, 1112, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1112, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_idom = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_kcomp = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1113
 *         """
 *         idom, kcomp = self._get_indices(domain, component)
 *         dom = self.domains[idom]             # <<<<<<<<<<<<<<
 *         cdef int j
 *         cdef np.ndarray[np.double_t, ndim=1] data = np.empty(dom.n_points)
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_self->domains, __pyx_v_idom); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1113, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_dom = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1115
 *         dom = self.domains[idom]
 *         cdef int j
 *         cdef np.ndarray[np.double_t, ndim=1] data = np.empty(dom.n_points)             # <<<<<<<<<<<<<<
 *         for j in range(dom.n_points):
 *             data[j] = self.sim.value(idom, kcomp, j)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_empty); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_dom, __pyx_n_s_n_points); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_5 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_t_3};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1115, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1115, __pyx_L1_error)
  __pyx_t_7 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_data.rcbuffer->pybuffer, (PyObject*)__pyx_t_7, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES| PyBUF_WRITABLE, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_data = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_data.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 1115, __pyx_L1_error)
    } else {__pyx_pybuffernd_data.diminfo[0].strides = __pyx_pybuffernd_data.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_data.diminfo[0].shape = __pyx_pybuffernd_data.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_7 = 0;
  __pyx_v_data = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1116
 *         cdef int j
 *         cdef np.ndarray[np.double_t, ndim=1] data = np.empty(dom.n_points)
 *         for j in range(dom.n_points):             # <<<<<<<<<<<<<<
 *             data[j] = self.sim.value(idom, kcomp, j)
 *         return data
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_v_dom, __pyx_n_s_n_points); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_8 = __Pyx_PyInt_As_long(__pyx_t_1); if (unlikely((__pyx_t_8 == (long)-1) && PyErr_Occurred())) __PYX_ERR(0, 1116, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_9 = __pyx_t_8;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_9; __pyx_t_4+=1) {
    __pyx_v_j = __pyx_t_4;

    /* "cantera/_onedim.pyx":1117
 *         cdef np.ndarray[np.double_t, ndim=1] data = np.empty(dom.n_points)
 *         for j in range(dom.n_points):
 *             data[j] = self.sim.value(idom, kcomp, j)             # <<<<<<<<<<<<<<
 *         return data
 * 
 */
    __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_idom); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1117, __pyx_L1_error)
    __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_kcomp); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1117, __pyx_L1_error)
    try {
      __pyx_t_12 = __pyx_v_self->sim->value(__pyx_t_10, __pyx_t_11, __pyx_v_j);
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 1117, __pyx_L1_error)
    }
    __pyx_t_13 = __pyx_v_j;
    __pyx_t_14 = -1;
    if (__pyx_t_13 < 0) {
      __pyx_t_13 += __pyx_pybuffernd_data.diminfo[0].shape;
      if (unlikely(__pyx_t_13 < 0)) __pyx_t_14 = 0;
    } else if (unlikely(__pyx_t_13 >= __pyx_pybuffernd_data.diminfo[0].shape)) __pyx_t_14 = 0;
    if (unlikely(__pyx_t_14 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_14);
      __PYX_ERR(0, 1117, __pyx_L1_error)
    }
    *__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_data.rcbuffer->pybuffer.buf, __pyx_t_13, __pyx_pybuffernd_data.diminfo[0].strides) = __pyx_t_12;
  }

  /* "cantera/_onedim.pyx":1118
 *         for j in range(dom.n_points):
 *             data[j] = self.sim.value(idom, kcomp, j)
 *         return data             # <<<<<<<<<<<<<<
 * 
 *     def set_profile(self, domain, component, positions, values):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_data);
  __pyx_r = ((PyObject *)__pyx_v_data);
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1101
 *         return self.sim.workValue(dom, comp, point)
 * 
 *     def profile(self, domain, component):             # <<<<<<<<<<<<<<
 *         """
 *         Spatial profile of one component in one domain.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_data.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cantera._onedim.Sim1D.profile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_data.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF(__pyx_v_idom);
  __Pyx_XDECREF(__pyx_v_kcomp);
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XDECREF((PyObject *)__pyx_v_data);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1120
 *         return data
 * 
 *     def set_profile(self, domain, component, positions, values):             # <<<<<<<<<<<<<<
 *         """
 *         Set an initial estimate for a profile of one component in one domain.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_27set_profile(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_26set_profile, "\n        Set an initial estimate for a profile of one component in one domain.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param positions:\n            sequence of relative positions, from 0 on the left to 1 on the right\n        :param values:\n            sequence of values at the relative positions specified in ``positions``\n\n        >>> s.set_profile(d, 'T', [0.0, 0.2, 1.0], [400.0, 800.0, 1500.0])\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_27set_profile = {"set_profile", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_27set_profile, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_26set_profile};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_27set_profile(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  PyObject *__pyx_v_component = 0;
  PyObject *__pyx_v_positions = 0;
  PyObject *__pyx_v_values = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_profile (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,&__pyx_n_s_component,&__pyx_n_s_positions,&__pyx_n_s_values,0};
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_profile", 1, 4, 4, 1); __PYX_ERR(0, 1120, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_positions)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_profile", 1, 4, 4, 2); __PYX_ERR(0, 1120, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_values)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1120, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_profile", 1, 4, 4, 3); __PYX_ERR(0, 1120, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_profile") < 0)) __PYX_ERR(0, 1120, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_domain = values[0];
    __pyx_v_component = values[1];
    __pyx_v_positions = values[2];
    __pyx_v_values = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_profile", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1120, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_profile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_26set_profile(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain, __pyx_v_component, __pyx_v_positions, __pyx_v_values);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_26set_profile(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_positions, PyObject *__pyx_v_values) {
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_v_comp = NULL;
  std::vector<double>  __pyx_v_pos_vec;
  std::vector<double>  __pyx_v_val_vec;
  PyObject *__pyx_v_p = NULL;
  PyObject *__pyx_v_v = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  double __pyx_t_9;
  size_t __pyx_t_10;
  size_t __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_profile", 0);

  /* "cantera/_onedim.pyx":1135
 *         >>> s.set_profile(d, 'T', [0.0, 0.2, 1.0], [400.0, 800.0, 1500.0])
 *         """
 *         dom, comp = self._get_indices(domain, component)             # <<<<<<<<<<<<<<
 * 
 *         cdef vector[double] pos_vec, val_vec
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_indices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1135, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_v_domain, __pyx_v_component};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
    PyObject* sequence = __pyx_t_1;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1135, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5);
    index = 0; __pyx_t_2 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 1; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 2) < 0) __PYX_ERR(0, 1135, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1135, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_dom = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_comp = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1138
 * 
 *         cdef vector[double] pos_vec, val_vec
 *         for p in positions:             # <<<<<<<<<<<<<<
 *             pos_vec.push_back(p)
 *         for v in values:
 */
  if (likely(PyList_CheckExact(__pyx_v_positions)) || PyTuple_CheckExact(__pyx_v_positions)) {
    __pyx_t_1 = __pyx_v_positions; __Pyx_INCREF(__pyx_t_1); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_positions); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1138, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1138, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 1138, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1138, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 1138, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1138, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_8(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1138, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_p, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1139
 *         cdef vector[double] pos_vec, val_vec
 *         for p in positions:
 *             pos_vec.push_back(p)             # <<<<<<<<<<<<<<
 *         for v in values:
 *             val_vec.push_back(v)
 */
    __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_v_p); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1139, __pyx_L1_error)
    try {
      __pyx_v_pos_vec.push_back(__pyx_t_9);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1139, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":1138
 * 
 *         cdef vector[double] pos_vec, val_vec
 *         for p in positions:             # <<<<<<<<<<<<<<
 *             pos_vec.push_back(p)
 *         for v in values:
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1140
 *         for p in positions:
 *             pos_vec.push_back(p)
 *         for v in values:             # <<<<<<<<<<<<<<
 *             val_vec.push_back(v)
 * 
 */
  if (likely(PyList_CheckExact(__pyx_v_values)) || PyTuple_CheckExact(__pyx_v_values)) {
    __pyx_t_1 = __pyx_v_values; __Pyx_INCREF(__pyx_t_1); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_values); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1140, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 1140, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1140, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 1140, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1140, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_8(__pyx_t_1);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1140, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_v, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1141
 *             pos_vec.push_back(p)
 *         for v in values:
 *             val_vec.push_back(v)             # <<<<<<<<<<<<<<
 * 
 *         self.sim.setProfile(dom, comp, pos_vec, val_vec)
 */
    __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_v_v); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1141, __pyx_L1_error)
    try {
      __pyx_v_val_vec.push_back(__pyx_t_9);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1141, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":1140
 *         for p in positions:
 *             pos_vec.push_back(p)
 *         for v in values:             # <<<<<<<<<<<<<<
 *             val_vec.push_back(v)
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1143
 *             val_vec.push_back(v)
 * 
 *         self.sim.setProfile(dom, comp, pos_vec, val_vec)             # <<<<<<<<<<<<<<
 * 
 *     def set_flat_profile(self, domain, component, value):
 */
  __pyx_t_10 = __Pyx_PyInt_As_size_t(__pyx_v_dom); if (unlikely((__pyx_t_10 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1143, __pyx_L1_error)
  __pyx_t_11 = __Pyx_PyInt_As_size_t(__pyx_v_comp); if (unlikely((__pyx_t_11 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1143, __pyx_L1_error)
  try {
    __pyx_v_self->sim->setProfile(__pyx_t_10, __pyx_t_11, __pyx_v_pos_vec, __pyx_v_val_vec);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1143, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1120
 *         return data
 * 
 *     def set_profile(self, domain, component, positions, values):             # <<<<<<<<<<<<<<
 *         """
 *         Set an initial estimate for a profile of one component in one domain.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_profile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XDECREF(__pyx_v_comp);
  __Pyx_XDECREF(__pyx_v_p);
  __Pyx_XDECREF(__pyx_v_v);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1145
 *         self.sim.setProfile(dom, comp, pos_vec, val_vec)
 * 
 *     def set_flat_profile(self, domain, component, value):             # <<<<<<<<<<<<<<
 *         """Set a flat profile for one component in one domain.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_29set_flat_profile(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_28set_flat_profile, "Set a flat profile for one component in one domain.\n\n        :param domain:\n            Domain1D object, name, or index\n        :param component:\n            component name or index\n        :param v:\n            value\n\n        >>> s.set_flat_profile(d, 'u', -3.0)\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_29set_flat_profile = {"set_flat_profile", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_29set_flat_profile, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_28set_flat_profile};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_29set_flat_profile(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  PyObject *__pyx_v_component = 0;
  PyObject *__pyx_v_value = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_flat_profile (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,&__pyx_n_s_component,&__pyx_n_s_value,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_component)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_flat_profile", 1, 3, 3, 1); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_value)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_flat_profile", 1, 3, 3, 2); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_flat_profile") < 0)) __PYX_ERR(0, 1145, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_domain = values[0];
    __pyx_v_component = values[1];
    __pyx_v_value = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_flat_profile", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 1145, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_flat_profile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_28set_flat_profile(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain, __pyx_v_component, __pyx_v_value);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_28set_flat_profile(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_component, PyObject *__pyx_v_value) {
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_v_comp = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  size_t __pyx_t_7;
  size_t __pyx_t_8;
  double __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_flat_profile", 0);

  /* "cantera/_onedim.pyx":1157
 *         >>> s.set_flat_profile(d, 'u', -3.0)
 *         """
 *         dom, comp = self._get_indices(domain, component)             # <<<<<<<<<<<<<<
 *         self.sim.setFlatProfile(dom, comp, value)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_indices); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1157, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_3, __pyx_v_domain, __pyx_v_component};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 2+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if ((likely(PyTuple_CheckExact(__pyx_t_1))) || (PyList_CheckExact(__pyx_t_1))) {
    PyObject* sequence = __pyx_t_1;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 2)) {
      if (size > 2) __Pyx_RaiseTooManyValuesError(2);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1157, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 1); 
    } else {
      __pyx_t_2 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 1); 
    }
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_2 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  } else {
    Py_ssize_t index = -1;
    __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1157, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5);
    index = 0; __pyx_t_2 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 1; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 2) < 0) __PYX_ERR(0, 1157, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1157, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_dom = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_comp = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1158
 *         """
 *         dom, comp = self._get_indices(domain, component)
 *         self.sim.setFlatProfile(dom, comp, value)             # <<<<<<<<<<<<<<
 * 
 *     def restore_data(self, domain, states, other_cols, meta):
 */
  __pyx_t_7 = __Pyx_PyInt_As_size_t(__pyx_v_dom); if (unlikely((__pyx_t_7 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1158, __pyx_L1_error)
  __pyx_t_8 = __Pyx_PyInt_As_size_t(__pyx_v_comp); if (unlikely((__pyx_t_8 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1158, __pyx_L1_error)
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_v_value); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1158, __pyx_L1_error)
  try {
    __pyx_v_self->sim->setFlatProfile(__pyx_t_7, __pyx_t_8, __pyx_t_9);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1158, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1145
 *         self.sim.setProfile(dom, comp, pos_vec, val_vec)
 * 
 *     def set_flat_profile(self, domain, component, value):             # <<<<<<<<<<<<<<
 *         """Set a flat profile for one component in one domain.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_flat_profile", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XDECREF(__pyx_v_comp);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1160
 *         self.sim.setFlatProfile(dom, comp, value)
 * 
 *     def restore_data(self, domain, states, other_cols, meta):             # <<<<<<<<<<<<<<
 *         """
 *         Restore a ``domain`` from underlying data. This method is used as
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_31restore_data(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_30restore_data, "\n        Restore a ``domain`` from underlying data. This method is used as\n        a service function for import via `FlameBase.from_solution_array`.\n\n        Derived classes set default values for ``domain`` and ``other``, where\n        defaults describe flow domain and essential non-thermodynamic solution\n        components of the configuration, respectively. An alternative ``domain``\n        (such as inlet, outlet, etc.), can be specified either by name or the\n        corresponding Domain1D object itself.\n\n        .. deprecated:: 3.0\n\n            Method to be removed after Cantera 3.0. Unused after moving `SolutionArray`\n            interface to the C++ core, except for `FlameBase.from_solution_array`,\n            which itself is deprecated due to a pending removal of ``h5py`` support.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_31restore_data = {"restore_data", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_31restore_data, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_30restore_data};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_31restore_data(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  PyObject *__pyx_v_states = 0;
  PyObject *__pyx_v_other_cols = 0;
  PyObject *__pyx_v_meta = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("restore_data (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,&__pyx_n_s_states,&__pyx_n_s_other_cols,&__pyx_n_s_meta,0};
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_states)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("restore_data", 1, 4, 4, 1); __PYX_ERR(0, 1160, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_other_cols)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("restore_data", 1, 4, 4, 2); __PYX_ERR(0, 1160, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_meta)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1160, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("restore_data", 1, 4, 4, 3); __PYX_ERR(0, 1160, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "restore_data") < 0)) __PYX_ERR(0, 1160, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_domain = values[0];
    __pyx_v_states = values[1];
    __pyx_v_other_cols = values[2];
    __pyx_v_meta = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("restore_data", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1160, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.restore_data", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_30restore_data(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain, __pyx_v_states, __pyx_v_other_cols, __pyx_v_meta);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_30restore_data(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_states, PyObject *__pyx_v_other_cols, PyObject *__pyx_v_meta) {
  PyObject *__pyx_v_idom = NULL;
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_v_T = NULL;
  PyObject *__pyx_v_P = NULL;
  PyObject *__pyx_v_Y = NULL;
  PyObject *__pyx_v_grid = NULL;
  PyObject *__pyx_v_xi = NULL;
  PyObject *__pyx_v_key = NULL;
  PyObject *__pyx_v_val = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_spc = NULL;
  PyObject *__pyx_v_msg = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  int __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  PyObject *(*__pyx_t_12)(PyObject *);
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("restore_data", 0);

  /* "cantera/_onedim.pyx":1177
 *             which itself is deprecated due to a pending removal of ``h5py`` support.
 *         """
 *         warnings.warn("Sim1D.restore_data: Method to be removed after Cantera 3.0.",             # <<<<<<<<<<<<<<
 *                       DeprecationWarning)
 *         idom = self.domain_index(domain)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1178
 *         """
 *         warnings.warn("Sim1D.restore_data: Method to be removed after Cantera 3.0.",
 *                       DeprecationWarning)             # <<<<<<<<<<<<<<
 *         idom = self.domain_index(domain)
 *         dom = self.domains[idom]
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1179
 *         warnings.warn("Sim1D.restore_data: Method to be removed after Cantera 3.0.",
 *                       DeprecationWarning)
 *         idom = self.domain_index(domain)             # <<<<<<<<<<<<<<
 *         dom = self.domains[idom]
 *         T, P, Y = states
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1179, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_domain};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1179, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_idom = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1180
 *                       DeprecationWarning)
 *         idom = self.domain_index(domain)
 *         dom = self.domains[idom]             # <<<<<<<<<<<<<<
 *         T, P, Y = states
 *         if isinstance(P, np.ndarray) and P.size:
 */
  __pyx_t_1 = __Pyx_PyObject_GetItem(__pyx_v_self->domains, __pyx_v_idom); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_dom = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1181
 *         idom = self.domain_index(domain)
 *         dom = self.domains[idom]
 *         T, P, Y = states             # <<<<<<<<<<<<<<
 *         if isinstance(P, np.ndarray) and P.size:
 *             P = P[0]
 */
  if ((likely(PyTuple_CheckExact(__pyx_v_states))) || (PyList_CheckExact(__pyx_v_states))) {
    PyObject* sequence = __pyx_v_states;
    Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
    if (unlikely(size != 3)) {
      if (size > 3) __Pyx_RaiseTooManyValuesError(3);
      else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
      __PYX_ERR(0, 1181, __pyx_L1_error)
    }
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    if (likely(PyTuple_CheckExact(sequence))) {
      __pyx_t_1 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyTuple_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 2); 
    } else {
      __pyx_t_1 = PyList_GET_ITEM(sequence, 0); 
      __pyx_t_2 = PyList_GET_ITEM(sequence, 1); 
      __pyx_t_3 = PyList_GET_ITEM(sequence, 2); 
    }
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_t_3);
    #else
    __pyx_t_1 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PySequence_ITEM(sequence, 2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
  } else {
    Py_ssize_t index = -1;
    __pyx_t_5 = PyObject_GetIter(__pyx_v_states); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1181, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_5);
    index = 0; __pyx_t_1 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_1)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_1);
    index = 1; __pyx_t_2 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_2)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_2);
    index = 2; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L3_unpacking_failed;
    __Pyx_GOTREF(__pyx_t_3);
    if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 3) < 0) __PYX_ERR(0, 1181, __pyx_L1_error)
    __pyx_t_6 = NULL;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    goto __pyx_L4_unpacking_done;
    __pyx_L3_unpacking_failed:;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
    if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
    __PYX_ERR(0, 1181, __pyx_L1_error)
    __pyx_L4_unpacking_done:;
  }
  __pyx_v_T = __pyx_t_1;
  __pyx_t_1 = 0;
  __pyx_v_P = __pyx_t_2;
  __pyx_t_2 = 0;
  __pyx_v_Y = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1182
 *         dom = self.domains[idom]
 *         T, P, Y = states
 *         if isinstance(P, np.ndarray) and P.size:             # <<<<<<<<<<<<<<
 *             P = P[0]
 * 
 */
  __pyx_t_8 = __Pyx_TypeCheck(__pyx_v_P, __pyx_ptype_5numpy_ndarray); 
  if (__pyx_t_8) {
  } else {
    __pyx_t_7 = __pyx_t_8;
    goto __pyx_L6_bool_binop_done;
  }
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_P, __pyx_n_s_size); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1182, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_8 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 1182, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_7 = __pyx_t_8;
  __pyx_L6_bool_binop_done:;
  if (__pyx_t_7) {

    /* "cantera/_onedim.pyx":1183
 *         T, P, Y = states
 *         if isinstance(P, np.ndarray) and P.size:
 *             P = P[0]             # <<<<<<<<<<<<<<
 * 
 *         if isinstance(dom, _FlowBase):
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_P, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1183, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_P, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1182
 *         dom = self.domains[idom]
 *         T, P, Y = states
 *         if isinstance(P, np.ndarray) and P.size:             # <<<<<<<<<<<<<<
 *             P = P[0]
 * 
 */
  }

  /* "cantera/_onedim.pyx":1185
 *             P = P[0]
 * 
 *         if isinstance(dom, _FlowBase):             # <<<<<<<<<<<<<<
 *             grid = other_cols['grid']
 *             dom.grid = grid
 */
  __pyx_t_7 = __Pyx_TypeCheck(__pyx_v_dom, __pyx_ptype_7cantera_7_onedim__FlowBase); 
  if (__pyx_t_7) {

    /* "cantera/_onedim.pyx":1186
 * 
 *         if isinstance(dom, _FlowBase):
 *             grid = other_cols['grid']             # <<<<<<<<<<<<<<
 *             dom.grid = grid
 *             xi = (grid - grid[0]) / (grid[-1] - grid[0])
 */
    __pyx_t_3 = __Pyx_PyObject_Dict_GetItem(__pyx_v_other_cols, __pyx_n_u_grid); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v_grid = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1187
 *         if isinstance(dom, _FlowBase):
 *             grid = other_cols['grid']
 *             dom.grid = grid             # <<<<<<<<<<<<<<
 *             xi = (grid - grid[0]) / (grid[-1] - grid[0])
 *             self._get_initial_solution()
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_dom, __pyx_n_s_grid, __pyx_v_grid) < 0) __PYX_ERR(0, 1187, __pyx_L1_error)

    /* "cantera/_onedim.pyx":1188
 *             grid = other_cols['grid']
 *             dom.grid = grid
 *             xi = (grid - grid[0]) / (grid[-1] - grid[0])             # <<<<<<<<<<<<<<
 *             self._get_initial_solution()
 * 
 */
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_grid, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Subtract(__pyx_v_grid, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_grid, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_grid, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyNumber_Subtract(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1188, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_v_xi = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":1189
 *             dom.grid = grid
 *             xi = (grid - grid[0]) / (grid[-1] - grid[0])
 *             self._get_initial_solution()             # <<<<<<<<<<<<<<
 * 
 *             # restore temperature and 'other' profiles
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_initial_solution); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_2, };
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1189, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":1192
 * 
 *             # restore temperature and 'other' profiles
 *             self.set_profile('T', xi, T)             # <<<<<<<<<<<<<<
 *             for key, val in other_cols.items():
 *                 if key in ['grid', 'qdot']:
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_profile); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1192, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_2 = NULL;
    __pyx_t_4 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_2)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_2);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_4 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_2, __pyx_n_u_T, __pyx_v_xi, __pyx_v_T};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1192, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":1193
 *             # restore temperature and 'other' profiles
 *             self.set_profile('T', xi, T)
 *             for key, val in other_cols.items():             # <<<<<<<<<<<<<<
 *                 if key in ['grid', 'qdot']:
 *                     pass
 */
    __pyx_t_9 = 0;
    if (unlikely(__pyx_v_other_cols == Py_None)) {
      PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "items");
      __PYX_ERR(0, 1193, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_other_cols, 0, __pyx_n_s_items, (&__pyx_t_10), (&__pyx_t_4)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1193, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1);
    __pyx_t_1 = __pyx_t_5;
    __pyx_t_5 = 0;
    while (1) {
      __pyx_t_11 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_10, &__pyx_t_9, &__pyx_t_5, &__pyx_t_2, NULL, __pyx_t_4);
      if (unlikely(__pyx_t_11 == 0)) break;
      if (unlikely(__pyx_t_11 == -1)) __PYX_ERR(0, 1193, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XDECREF_SET(__pyx_v_key, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_XDECREF_SET(__pyx_v_val, __pyx_t_2);
      __pyx_t_2 = 0;

      /* "cantera/_onedim.pyx":1194
 *             self.set_profile('T', xi, T)
 *             for key, val in other_cols.items():
 *                 if key in ['grid', 'qdot']:             # <<<<<<<<<<<<<<
 *                     pass
 *                 elif key in dom.component_names:
 */
      __Pyx_INCREF(__pyx_v_key);
      __pyx_t_2 = __pyx_v_key;
      __pyx_t_8 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_grid, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 1194, __pyx_L1_error)
      if (!__pyx_t_8) {
      } else {
        __pyx_t_7 = __pyx_t_8;
        goto __pyx_L12_bool_binop_done;
      }
      __pyx_t_8 = (__Pyx_PyUnicode_Equals(__pyx_t_2, __pyx_n_u_qdot, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 1194, __pyx_L1_error)
      __pyx_t_7 = __pyx_t_8;
      __pyx_L12_bool_binop_done:;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_8 = __pyx_t_7;
      if (__pyx_t_8) {
        goto __pyx_L11;
      }

      /* "cantera/_onedim.pyx":1196
 *                 if key in ['grid', 'qdot']:
 *                     pass
 *                 elif key in dom.component_names:             # <<<<<<<<<<<<<<
 *                     self.set_profile(key, xi, val)
 * 
 */
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_dom, __pyx_n_s_component_names); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1196, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_8 = (__Pyx_PySequence_ContainsTF(__pyx_v_key, __pyx_t_2, Py_EQ)); if (unlikely((__pyx_t_8 < 0))) __PYX_ERR(0, 1196, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_8) {

        /* "cantera/_onedim.pyx":1197
 *                     pass
 *                 elif key in dom.component_names:
 *                     self.set_profile(key, xi, val)             # <<<<<<<<<<<<<<
 * 
 *             # restore species profiles
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_profile); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1197, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_3 = NULL;
        __pyx_t_11 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
          __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_5);
          if (likely(__pyx_t_3)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
            __Pyx_INCREF(__pyx_t_3);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_5, function);
            __pyx_t_11 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[4] = {__pyx_t_3, __pyx_v_key, __pyx_v_xi, __pyx_v_val};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_11, 3+__pyx_t_11);
          __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1197, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "cantera/_onedim.pyx":1196
 *                 if key in ['grid', 'qdot']:
 *                     pass
 *                 elif key in dom.component_names:             # <<<<<<<<<<<<<<
 *                     self.set_profile(key, xi, val)
 * 
 */
      }
      __pyx_L11:;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":1200
 * 
 *             # restore species profiles
 *             for i, spc in enumerate(self.gas.species_names):             # <<<<<<<<<<<<<<
 *                 self.set_profile(spc, xi, Y[:, i])
 * 
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_t_1 = __pyx_int_0;
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_gas); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_species_names); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1200, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (likely(PyList_CheckExact(__pyx_t_5)) || PyTuple_CheckExact(__pyx_t_5)) {
      __pyx_t_2 = __pyx_t_5; __Pyx_INCREF(__pyx_t_2); __pyx_t_10 = 0;
      __pyx_t_12 = NULL;
    } else {
      __pyx_t_10 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1200, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_12 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 1200, __pyx_L1_error)
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    for (;;) {
      if (likely(!__pyx_t_12)) {
        if (likely(PyList_CheckExact(__pyx_t_2))) {
          if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_5); __pyx_t_10++; if (unlikely((0 < 0))) __PYX_ERR(0, 1200, __pyx_L1_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1200, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        } else {
          if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_5); __pyx_t_10++; if (unlikely((0 < 0))) __PYX_ERR(0, 1200, __pyx_L1_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1200, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        }
      } else {
        __pyx_t_5 = __pyx_t_12(__pyx_t_2);
        if (unlikely(!__pyx_t_5)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1200, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_5);
      }
      __Pyx_XDECREF_SET(__pyx_v_spc, __pyx_t_5);
      __pyx_t_5 = 0;
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_1);
      __pyx_t_5 = __Pyx_PyInt_AddObjC(__pyx_t_1, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1200, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_1);
      __pyx_t_1 = __pyx_t_5;
      __pyx_t_5 = 0;

      /* "cantera/_onedim.pyx":1201
 *             # restore species profiles
 *             for i, spc in enumerate(self.gas.species_names):
 *                 self.set_profile(spc, xi, Y[:, i])             # <<<<<<<<<<<<<<
 * 
 *             # restore pressure
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_profile); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1201, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_13 = PyTuple_New(2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1201, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_INCREF(__pyx_slice__26);
      __Pyx_GIVEREF(__pyx_slice__26);
      PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_slice__26);
      __Pyx_INCREF(__pyx_v_i);
      __Pyx_GIVEREF(__pyx_v_i);
      PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_v_i);
      __pyx_t_14 = __Pyx_PyObject_GetItem(__pyx_v_Y, __pyx_t_13); if (unlikely(!__pyx_t_14)) __PYX_ERR(0, 1201, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_14);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      __pyx_t_13 = NULL;
      __pyx_t_4 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_4 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[4] = {__pyx_t_13, __pyx_v_spc, __pyx_v_xi, __pyx_t_14};
        __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_4, 3+__pyx_t_4);
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1201, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "cantera/_onedim.pyx":1200
 * 
 *             # restore species profiles
 *             for i, spc in enumerate(self.gas.species_names):             # <<<<<<<<<<<<<<
 *                 self.set_profile(spc, xi, Y[:, i])
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":1204
 * 
 *             # restore pressure
 *             self.P = P             # <<<<<<<<<<<<<<
 * 
 *             # restore settings
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_P, __pyx_v_P) < 0) __PYX_ERR(0, 1204, __pyx_L1_error)

    /* "cantera/_onedim.pyx":1207
 * 
 *             # restore settings
 *             dom.settings = meta             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(dom, Inlet1D):
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_dom, __pyx_n_s_settings, __pyx_v_meta) < 0) __PYX_ERR(0, 1207, __pyx_L1_error)

    /* "cantera/_onedim.pyx":1185
 *             P = P[0]
 * 
 *         if isinstance(dom, _FlowBase):             # <<<<<<<<<<<<<<
 *             grid = other_cols['grid']
 *             dom.grid = grid
 */
    goto __pyx_L8;
  }

  /* "cantera/_onedim.pyx":1209
 *             dom.settings = meta
 * 
 *         elif isinstance(dom, Inlet1D):             # <<<<<<<<<<<<<<
 *             self.gas.TPY = T, P, Y
 *             dom.T = T
 */
  __pyx_t_8 = __Pyx_TypeCheck(__pyx_v_dom, __pyx_ptype_7cantera_7_onedim_Inlet1D); 
  if (__pyx_t_8) {

    /* "cantera/_onedim.pyx":1210
 * 
 *         elif isinstance(dom, Inlet1D):
 *             self.gas.TPY = T, P, Y             # <<<<<<<<<<<<<<
 *             dom.T = T
 *             self.P = P
 */
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_T);
    __Pyx_GIVEREF(__pyx_v_T);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_T);
    __Pyx_INCREF(__pyx_v_P);
    __Pyx_GIVEREF(__pyx_v_P);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_P);
    __Pyx_INCREF(__pyx_v_Y);
    __Pyx_GIVEREF(__pyx_v_Y);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_Y);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_gas); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1210, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (__Pyx_PyObject_SetAttrStr(__pyx_t_2, __pyx_n_s_TPY, __pyx_t_1) < 0) __PYX_ERR(0, 1210, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":1211
 *         elif isinstance(dom, Inlet1D):
 *             self.gas.TPY = T, P, Y
 *             dom.T = T             # <<<<<<<<<<<<<<
 *             self.P = P
 *             dom.Y = Y
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_dom, __pyx_n_s_T, __pyx_v_T) < 0) __PYX_ERR(0, 1211, __pyx_L1_error)

    /* "cantera/_onedim.pyx":1212
 *             self.gas.TPY = T, P, Y
 *             dom.T = T
 *             self.P = P             # <<<<<<<<<<<<<<
 *             dom.Y = Y
 *             dom.mdot = other_cols['velocity'] * self.gas.density
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_P, __pyx_v_P) < 0) __PYX_ERR(0, 1212, __pyx_L1_error)

    /* "cantera/_onedim.pyx":1213
 *             dom.T = T
 *             self.P = P
 *             dom.Y = Y             # <<<<<<<<<<<<<<
 *             dom.mdot = other_cols['velocity'] * self.gas.density
 * 
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_dom, __pyx_n_s_Y, __pyx_v_Y) < 0) __PYX_ERR(0, 1213, __pyx_L1_error)

    /* "cantera/_onedim.pyx":1214
 *             self.P = P
 *             dom.Y = Y
 *             dom.mdot = other_cols['velocity'] * self.gas.density             # <<<<<<<<<<<<<<
 * 
 *         elif isinstance(dom, (Outlet1D, OutletReservoir1D,
 */
    __pyx_t_2 = __Pyx_PyObject_Dict_GetItem(__pyx_v_other_cols, __pyx_n_u_velocity); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1214, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_gas); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1214, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_density); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1214, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Multiply(__pyx_t_2, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1214, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_dom, __pyx_n_s_mdot, __pyx_t_1) < 0) __PYX_ERR(0, 1214, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/_onedim.pyx":1209
 *             dom.settings = meta
 * 
 *         elif isinstance(dom, Inlet1D):             # <<<<<<<<<<<<<<
 *             self.gas.TPY = T, P, Y
 *             dom.T = T
 */
    goto __pyx_L8;
  }

  /* "cantera/_onedim.pyx":1216
 *             dom.mdot = other_cols['velocity'] * self.gas.density
 * 
 *         elif isinstance(dom, (Outlet1D, OutletReservoir1D,             # <<<<<<<<<<<<<<
 *                               SymmetryPlane1D, Surface1D)):
 *             pass
 */
  __pyx_t_7 = __Pyx_TypeCheck(__pyx_v_dom, __pyx_ptype_7cantera_7_onedim_Outlet1D); 
  if (!__pyx_t_7) {
  } else {
    __pyx_t_8 = __pyx_t_7;
    goto __pyx_L17_bool_binop_done;
  }
  __pyx_t_7 = __Pyx_TypeCheck(__pyx_v_dom, __pyx_ptype_7cantera_7_onedim_OutletReservoir1D); 
  if (!__pyx_t_7) {
  } else {
    __pyx_t_8 = __pyx_t_7;
    goto __pyx_L17_bool_binop_done;
  }

  /* "cantera/_onedim.pyx":1217
 * 
 *         elif isinstance(dom, (Outlet1D, OutletReservoir1D,
 *                               SymmetryPlane1D, Surface1D)):             # <<<<<<<<<<<<<<
 *             pass
 * 
 */
  __pyx_t_7 = __Pyx_TypeCheck(__pyx_v_dom, __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D); 
  if (!__pyx_t_7) {
  } else {
    __pyx_t_8 = __pyx_t_7;
    goto __pyx_L17_bool_binop_done;
  }

  /* "cantera/_onedim.pyx":1216
 *             dom.mdot = other_cols['velocity'] * self.gas.density
 * 
 *         elif isinstance(dom, (Outlet1D, OutletReservoir1D,             # <<<<<<<<<<<<<<
 *                               SymmetryPlane1D, Surface1D)):
 *             pass
 */
  __pyx_t_7 = __Pyx_TypeCheck(__pyx_v_dom, __pyx_ptype_7cantera_7_onedim_Surface1D); 
  __pyx_t_8 = __pyx_t_7;
  __pyx_L17_bool_binop_done:;
  if (__pyx_t_8) {
    goto __pyx_L8;
  }

  /* "cantera/_onedim.pyx":1220
 *             pass
 * 
 *         elif isinstance(dom, ReactingSurface1D):             # <<<<<<<<<<<<<<
 *             dom.surface.TPY = T, P, Y
 * 
 */
  __pyx_t_8 = __Pyx_TypeCheck(__pyx_v_dom, __pyx_ptype_7cantera_7_onedim_ReactingSurface1D); 
  if (likely(__pyx_t_8)) {

    /* "cantera/_onedim.pyx":1221
 * 
 *         elif isinstance(dom, ReactingSurface1D):
 *             dom.surface.TPY = T, P, Y             # <<<<<<<<<<<<<<
 * 
 *         else:
 */
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_T);
    __Pyx_GIVEREF(__pyx_v_T);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_T);
    __Pyx_INCREF(__pyx_v_P);
    __Pyx_GIVEREF(__pyx_v_P);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_P);
    __Pyx_INCREF(__pyx_v_Y);
    __Pyx_GIVEREF(__pyx_v_Y);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_Y);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_dom, __pyx_n_s_surface); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (__Pyx_PyObject_SetAttrStr(__pyx_t_5, __pyx_n_s_TPY, __pyx_t_1) < 0) __PYX_ERR(0, 1221, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cantera/_onedim.pyx":1220
 *             pass
 * 
 *         elif isinstance(dom, ReactingSurface1D):             # <<<<<<<<<<<<<<
 *             dom.surface.TPY = T, P, Y
 * 
 */
    goto __pyx_L8;
  }

  /* "cantera/_onedim.pyx":1224
 * 
 *         else:
 *             msg = ("Import of '{}' is not implemented")             # <<<<<<<<<<<<<<
 *             raise NotImplementedError(msg.format(type(self).__name__))
 * 
 */
  /*else*/ {
    __Pyx_INCREF(__pyx_kp_u_Import_of_is_not_implemented);
    __pyx_v_msg = __pyx_kp_u_Import_of_is_not_implemented;

    /* "cantera/_onedim.pyx":1225
 *         else:
 *             msg = ("Import of '{}' is not implemented")
 *             raise NotImplementedError(msg.format(type(self).__name__))             # <<<<<<<<<<<<<<
 * 
 *     def show(self):
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_name_2); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyUnicode_Type_format, __pyx_v_msg, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_NotImplementedError, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1225, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_Raise(__pyx_t_5, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __PYX_ERR(0, 1225, __pyx_L1_error)
  }
  __pyx_L8:;

  /* "cantera/_onedim.pyx":1160
 *         self.sim.setFlatProfile(dom, comp, value)
 * 
 *     def restore_data(self, domain, states, other_cols, meta):             # <<<<<<<<<<<<<<
 *         """
 *         Restore a ``domain`` from underlying data. This method is used as
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.restore_data", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idom);
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XDECREF(__pyx_v_T);
  __Pyx_XDECREF(__pyx_v_P);
  __Pyx_XDECREF(__pyx_v_Y);
  __Pyx_XDECREF(__pyx_v_grid);
  __Pyx_XDECREF(__pyx_v_xi);
  __Pyx_XDECREF(__pyx_v_key);
  __Pyx_XDECREF(__pyx_v_val);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_spc);
  __Pyx_XDECREF(__pyx_v_msg);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1227
 *             raise NotImplementedError(msg.format(type(self).__name__))
 * 
 *     def show(self):             # <<<<<<<<<<<<<<
 *         """ print the current solution. """
 *         if not self._initialized:
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_33show(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_32show, " print the current solution. ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_33show = {"show", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_33show, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_32show};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_33show(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("show", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "show", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_32show(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_32show(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show", 0);

  /* "cantera/_onedim.pyx":1229
 *     def show(self):
 *         """ print the current solution. """
 *         if not self._initialized:             # <<<<<<<<<<<<<<
 *             self.set_initial_guess()
 *         self.sim.show()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_self->_initialized); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1229, __pyx_L1_error)
  __pyx_t_2 = (!__pyx_t_1);
  if (__pyx_t_2) {

    /* "cantera/_onedim.pyx":1230
 *         """ print the current solution. """
 *         if not self._initialized:
 *             self.set_initial_guess()             # <<<<<<<<<<<<<<
 *         self.sim.show()
 * 
 */
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_initial_guess); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1230, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_4, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_5, };
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1230, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1229
 *     def show(self):
 *         """ print the current solution. """
 *         if not self._initialized:             # <<<<<<<<<<<<<<
 *             self.set_initial_guess()
 *         self.sim.show()
 */
  }

  /* "cantera/_onedim.pyx":1231
 *         if not self._initialized:
 *             self.set_initial_guess()
 *         self.sim.show()             # <<<<<<<<<<<<<<
 * 
 *     def show_solution(self):
 */
  try {
    __pyx_v_self->sim->show();
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1231, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1227
 *             raise NotImplementedError(msg.format(type(self).__name__))
 * 
 *     def show(self):             # <<<<<<<<<<<<<<
 *         """ print the current solution. """
 *         if not self._initialized:
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.show", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1233
 *         self.sim.show()
 * 
 *     def show_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         print the current solution.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_35show_solution(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_34show_solution, "\n        print the current solution.\n\n        .. deprecated:: 3.0\n\n            Method to be removed after Cantera 3.0; replaced by `show`.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_35show_solution = {"show_solution", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_35show_solution, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_34show_solution};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_35show_solution(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show_solution (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("show_solution", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "show_solution", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_34show_solution(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_34show_solution(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show_solution", 0);

  /* "cantera/_onedim.pyx":1241
 *             Method to be removed after Cantera 3.0; replaced by `show`.
 *         """
 *         self.show()             # <<<<<<<<<<<<<<
 * 
 *     def set_time_step(self, stepsize, n_steps):
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_show); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1241, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1241, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1233
 *         self.sim.show()
 * 
 *     def show_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         print the current solution.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.show_solution", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1243
 *         self.show()
 * 
 *     def set_time_step(self, stepsize, n_steps):             # <<<<<<<<<<<<<<
 *         """Set the sequence of time steps to try when Newton fails.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_37set_time_step(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_36set_time_step, "Set the sequence of time steps to try when Newton fails.\n\n        :param stepsize:\n            initial time step size [s]\n        :param n_steps:\n            sequence of integer step numbers\n\n        >>> s.set_time_step(1.0e-5, [1, 2, 5, 10])\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_37set_time_step = {"set_time_step", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_37set_time_step, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_36set_time_step};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_37set_time_step(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_stepsize = 0;
  PyObject *__pyx_v_n_steps = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_time_step (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_stepsize,&__pyx_n_s_n_steps,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_stepsize)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1243, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_n_steps)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1243, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_time_step", 1, 2, 2, 1); __PYX_ERR(0, 1243, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_time_step") < 0)) __PYX_ERR(0, 1243, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_stepsize = values[0];
    __pyx_v_n_steps = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_time_step", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1243, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_time_step", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_36set_time_step(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_stepsize, __pyx_v_n_steps);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_36set_time_step(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_stepsize, PyObject *__pyx_v_n_steps) {
  std::vector<int>  __pyx_v_data;
  PyObject *__pyx_v_n = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_time_step", 0);

  /* "cantera/_onedim.pyx":1254
 *         """
 *         cdef vector[int] data
 *         for n in n_steps:             # <<<<<<<<<<<<<<
 *             data.push_back(n)
 *         self.sim.setTimeStep(stepsize, data.size(), &data[0])
 */
  if (likely(PyList_CheckExact(__pyx_v_n_steps)) || PyTuple_CheckExact(__pyx_v_n_steps)) {
    __pyx_t_1 = __pyx_v_n_steps; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_n_steps); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1254, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1254, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1254, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1254, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1254, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1254, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1254, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_n, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":1255
 *         cdef vector[int] data
 *         for n in n_steps:
 *             data.push_back(n)             # <<<<<<<<<<<<<<
 *         self.sim.setTimeStep(stepsize, data.size(), &data[0])
 * 
 */
    __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_n); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1255, __pyx_L1_error)
    try {
      __pyx_v_data.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 1255, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":1254
 *         """
 *         cdef vector[int] data
 *         for n in n_steps:             # <<<<<<<<<<<<<<
 *             data.push_back(n)
 *         self.sim.setTimeStep(stepsize, data.size(), &data[0])
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1256
 *         for n in n_steps:
 *             data.push_back(n)
 *         self.sim.setTimeStep(stepsize, data.size(), &data[0])             # <<<<<<<<<<<<<<
 * 
 *     property max_time_step_count:
 */
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_v_stepsize); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1256, __pyx_L1_error)
  try {
    __pyx_v_self->sim->setTimeStep(__pyx_t_6, __pyx_v_data.size(), (&(__pyx_v_data[0])));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1256, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1243
 *         self.show()
 * 
 *     def set_time_step(self, stepsize, n_steps):             # <<<<<<<<<<<<<<
 *         """Set the sequence of time steps to try when Newton fails.
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_time_step", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_n);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1263
 *         steady-state solution
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.maxTimeStepCount()
 *         def __set__(self, nmax):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_19max_time_step_count_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_19max_time_step_count_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_19max_time_step_count___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_19max_time_step_count___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":1264
 *         """
 *         def __get__(self):
 *             return self.sim.maxTimeStepCount()             # <<<<<<<<<<<<<<
 *         def __set__(self, nmax):
 *             self.sim.setMaxTimeStepCount(nmax)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyInt_From_int(__pyx_v_self->sim->maxTimeStepCount()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1264, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1263
 *         steady-state solution
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.maxTimeStepCount()
 *         def __set__(self, nmax):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.max_time_step_count.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1265
 *         def __get__(self):
 *             return self.sim.maxTimeStepCount()
 *         def __set__(self, nmax):             # <<<<<<<<<<<<<<
 *             self.sim.setMaxTimeStepCount(nmax)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_19max_time_step_count_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_nmax); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_19max_time_step_count_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_nmax) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_19max_time_step_count_2__set__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), ((PyObject *)__pyx_v_nmax));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D_19max_time_step_count_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_nmax) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":1266
 *             return self.sim.maxTimeStepCount()
 *         def __set__(self, nmax):
 *             self.sim.setMaxTimeStepCount(nmax)             # <<<<<<<<<<<<<<
 * 
 *     def set_initial_guess(self, *args, **kwargs):
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_nmax); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1266, __pyx_L1_error)
  __pyx_v_self->sim->setMaxTimeStepCount(__pyx_t_1);

  /* "cantera/_onedim.pyx":1265
 *         def __get__(self):
 *             return self.sim.maxTimeStepCount()
 *         def __set__(self, nmax):             # <<<<<<<<<<<<<<
 *             self.sim.setMaxTimeStepCount(nmax)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.max_time_step_count.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1268
 *             self.sim.setMaxTimeStepCount(nmax)
 * 
 *     def set_initial_guess(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Store arguments for initial guess and prepare storage for solution.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_39set_initial_guess(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_38set_initial_guess, "\n        Store arguments for initial guess and prepare storage for solution.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_39set_initial_guess = {"set_initial_guess", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_39set_initial_guess, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_38set_initial_guess};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_39set_initial_guess(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_args = 0;
  PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_initial_guess (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "set_initial_guess", 1))) return NULL;
  if (unlikely(__pyx_kwds)) {
    __pyx_v_kwargs = __Pyx_KwargsAsDict_VARARGS(__pyx_kwds, __pyx_kwvalues);
    if (unlikely(!__pyx_v_kwargs)) return NULL;
    __Pyx_GOTREF(__pyx_v_kwargs);
  } else {
    __pyx_v_kwargs = PyDict_New();
    if (unlikely(!__pyx_v_kwargs)) return NULL;
    __Pyx_GOTREF(__pyx_v_kwargs);
  }
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_38set_initial_guess(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_38set_initial_guess(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_args, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_initial_guess", 0);

  /* "cantera/_onedim.pyx":1272
 *         Store arguments for initial guess and prepare storage for solution.
 *         """
 *         self._initial_guess_args = args             # <<<<<<<<<<<<<<
 *         self._initial_guess_kwargs = kwargs
 *         self._get_initial_solution()
 */
  __Pyx_INCREF(__pyx_v_args);
  __Pyx_GIVEREF(__pyx_v_args);
  __Pyx_GOTREF(__pyx_v_self->_initial_guess_args);
  __Pyx_DECREF(__pyx_v_self->_initial_guess_args);
  __pyx_v_self->_initial_guess_args = __pyx_v_args;

  /* "cantera/_onedim.pyx":1273
 *         """
 *         self._initial_guess_args = args
 *         self._initial_guess_kwargs = kwargs             # <<<<<<<<<<<<<<
 *         self._get_initial_solution()
 *         self._initialized = True
 */
  __Pyx_INCREF(__pyx_v_kwargs);
  __Pyx_GIVEREF(__pyx_v_kwargs);
  __Pyx_GOTREF(__pyx_v_self->_initial_guess_kwargs);
  __Pyx_DECREF(__pyx_v_self->_initial_guess_kwargs);
  __pyx_v_self->_initial_guess_kwargs = __pyx_v_kwargs;

  /* "cantera/_onedim.pyx":1274
 *         self._initial_guess_args = args
 *         self._initial_guess_kwargs = kwargs
 *         self._get_initial_solution()             # <<<<<<<<<<<<<<
 *         self._initialized = True
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_get_initial_solution); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1274, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1274, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1275
 *         self._initial_guess_kwargs = kwargs
 *         self._get_initial_solution()
 *         self._initialized = True             # <<<<<<<<<<<<<<
 * 
 *     def _get_initial_solution(self):
 */
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  __Pyx_GOTREF(__pyx_v_self->_initialized);
  __Pyx_DECREF(__pyx_v_self->_initialized);
  __pyx_v_self->_initialized = Py_True;

  /* "cantera/_onedim.pyx":1268
 *             self.sim.setMaxTimeStepCount(nmax)
 * 
 *     def set_initial_guess(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Store arguments for initial guess and prepare storage for solution.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_initial_guess", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1277
 *         self._initialized = True
 * 
 *     def _get_initial_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Load the initial solution from each domain into the global solution
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_41_get_initial_solution(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_40_get_initial_solution, "\n        Load the initial solution from each domain into the global solution\n        vector.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_41_get_initial_solution = {"_get_initial_solution", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_41_get_initial_solution, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_40_get_initial_solution};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_41_get_initial_solution(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_get_initial_solution (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("_get_initial_solution", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "_get_initial_solution", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_40_get_initial_solution(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_40_get_initial_solution(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_get_initial_solution", 0);

  /* "cantera/_onedim.pyx":1282
 *         vector.
 *         """
 *         self.sim.resize()             # <<<<<<<<<<<<<<
 *         self.sim.getInitialSoln()
 * 
 */
  try {
    __pyx_v_self->sim->resize();
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1282, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1283
 *         """
 *         self.sim.resize()
 *         self.sim.getInitialSoln()             # <<<<<<<<<<<<<<
 * 
 *     def extinct(self):
 */
  try {
    __pyx_v_self->sim->getInitialSoln();
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1283, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1277
 *         self._initialized = True
 * 
 *     def _get_initial_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Load the initial solution from each domain into the global solution
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D._get_initial_solution", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1285
 *         self.sim.getInitialSoln()
 * 
 *     def extinct(self):             # <<<<<<<<<<<<<<
 *         """
 *         Method overloaded for some flame types to indicate if the flame has been
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_43extinct(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_42extinct, "\n        Method overloaded for some flame types to indicate if the flame has been\n        extinguished. Base class method always returns 'False'\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_43extinct = {"extinct", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_43extinct, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_42extinct};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_43extinct(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("extinct (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("extinct", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "extinct", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_42extinct(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_42extinct(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("extinct", 0);

  /* "cantera/_onedim.pyx":1290
 *         extinguished. Base class method always returns 'False'
 *         """
 *         return False             # <<<<<<<<<<<<<<
 * 
 *     def solve(self, loglevel=1, refine_grid=True, auto=False):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(Py_False);
  __pyx_r = Py_False;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1285
 *         self.sim.getInitialSoln()
 * 
 *     def extinct(self):             # <<<<<<<<<<<<<<
 *         """
 *         Method overloaded for some flame types to indicate if the flame has been
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1292
 *         return False
 * 
 *     def solve(self, loglevel=1, refine_grid=True, auto=False):             # <<<<<<<<<<<<<<
 *         """
 *         Solve the problem.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_45solve(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_44solve, "\n        Solve the problem.\n\n        :param loglevel:\n            integer flag controlling the amount of diagnostic output. Zero\n            suppresses all output, and 5 produces very verbose output.\n        :param refine_grid:\n            if True, enable grid refinement.\n        :param auto: if True, sequentially execute the different solution stages\n            and attempt to automatically recover from errors. Attempts to first\n            solve on the initial grid with energy enabled. If that does not\n            succeed, a fixed-temperature solution will be tried followed by\n            enabling the energy equation, and then with grid refinement enabled.\n            If non-default tolerances have been specified or multicomponent\n            transport is enabled, an additional solution using these options\n            will be calculated.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_45solve = {"solve", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_45solve, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_44solve};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_45solve(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_loglevel = 0;
  PyObject *__pyx_v_refine_grid = 0;
  PyObject *__pyx_v_auto = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("solve (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_loglevel,&__pyx_n_s_refine_grid,&__pyx_n_s_auto,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)__pyx_int_1);
    values[1] = ((PyObject *)Py_True);
    values[2] = ((PyObject *)Py_False);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_loglevel);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1292, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_refine_grid);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1292, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_auto);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1292, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "solve") < 0)) __PYX_ERR(0, 1292, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_loglevel = values[0];
    __pyx_v_refine_grid = values[1];
    __pyx_v_auto = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("solve", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1292, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_44solve(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_loglevel, __pyx_v_refine_grid, __pyx_v_auto);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1317
 *             return
 * 
 *         def set_transport(multi):             # <<<<<<<<<<<<<<
 *             for dom in self.domains:
 *                 if isinstance(dom, _FlowBase):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_1set_transport(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_5solve_1set_transport = {"set_transport", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_1set_transport, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_1set_transport(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_multi = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_transport (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_multi,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_multi)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1317, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_transport") < 0)) __PYX_ERR(0, 1317, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_multi = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_transport", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1317, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve.set_transport", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_set_transport(__pyx_self, __pyx_v_multi);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_set_transport(PyObject *__pyx_self, PyObject *__pyx_v_multi) {
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_cur_scope;
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_outer_scope;
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_transport", 0);
  __pyx_outer_scope = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "cantera/_onedim.pyx":1318
 * 
 *         def set_transport(multi):
 *             for dom in self.domains:             # <<<<<<<<<<<<<<
 *                 if isinstance(dom, _FlowBase):
 *                     dom.transport_model = multi
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(0, 1318, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_v_self->domains; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_self->domains); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1318, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1318, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1318, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1318, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1318, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1318, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1318, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_dom, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":1319
 *         def set_transport(multi):
 *             for dom in self.domains:
 *                 if isinstance(dom, _FlowBase):             # <<<<<<<<<<<<<<
 *                     dom.transport_model = multi
 * 
 */
    __pyx_t_5 = __Pyx_TypeCheck(__pyx_v_dom, __pyx_ptype_7cantera_7_onedim__FlowBase); 
    if (__pyx_t_5) {

      /* "cantera/_onedim.pyx":1320
 *             for dom in self.domains:
 *                 if isinstance(dom, _FlowBase):
 *                     dom.transport_model = multi             # <<<<<<<<<<<<<<
 * 
 *         # Do initial solution steps with default tolerances
 */
      if (__Pyx_PyObject_SetAttrStr(__pyx_v_dom, __pyx_n_s_transport_model, __pyx_v_multi) < 0) __PYX_ERR(0, 1320, __pyx_L1_error)

      /* "cantera/_onedim.pyx":1319
 *         def set_transport(multi):
 *             for dom in self.domains:
 *                 if isinstance(dom, _FlowBase):             # <<<<<<<<<<<<<<
 *                     dom.transport_model = multi
 * 
 */
    }

    /* "cantera/_onedim.pyx":1318
 * 
 *         def set_transport(multi):
 *             for dom in self.domains:             # <<<<<<<<<<<<<<
 *                 if isinstance(dom, _FlowBase):
 *                     dom.transport_model = multi
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1317
 *             return
 * 
 *         def set_transport(multi):             # <<<<<<<<<<<<<<
 *             for dom in self.domains:
 *                 if isinstance(dom, _FlowBase):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve.set_transport", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1331
 *             rtol_ts_final = [dom.transient_reltol() for dom in self.domains]
 * 
 *         def restore_tolerances():             # <<<<<<<<<<<<<<
 *             if have_user_tolerances:
 *                 for i in range(len(self.domains)):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_3restore_tolerances(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_5solve_3restore_tolerances = {"restore_tolerances", (PyCFunction)__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_3restore_tolerances, METH_NOARGS, 0};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_3restore_tolerances(PyObject *__pyx_self, CYTHON_UNUSED PyObject *unused) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("restore_tolerances (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_2restore_tolerances(__pyx_self);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_2restore_tolerances(PyObject *__pyx_self) {
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_cur_scope;
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_outer_scope;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("restore_tolerances", 0);
  __pyx_outer_scope = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "cantera/_onedim.pyx":1332
 * 
 *         def restore_tolerances():
 *             if have_user_tolerances:             # <<<<<<<<<<<<<<
 *                 for i in range(len(self.domains)):
 *                     self.domains[i].set_steady_tolerances(abs=atol_ss_final[i],
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_have_user_tolerances)) { __Pyx_RaiseClosureNameError("have_user_tolerances"); __PYX_ERR(0, 1332, __pyx_L1_error) }
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_have_user_tolerances); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1332, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1333
 *         def restore_tolerances():
 *             if have_user_tolerances:
 *                 for i in range(len(self.domains)):             # <<<<<<<<<<<<<<
 *                     self.domains[i].set_steady_tolerances(abs=atol_ss_final[i],
 *                                                         rel=rtol_ss_final[i])
 */
    if (unlikely(!__pyx_cur_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(0, 1333, __pyx_L1_error) }
    __pyx_t_2 = __pyx_cur_scope->__pyx_v_self->domains;
    __Pyx_INCREF(__pyx_t_2);
    __pyx_t_3 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1333, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_4 = __pyx_t_3;
    for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
      __pyx_v_i = __pyx_t_5;

      /* "cantera/_onedim.pyx":1334
 *             if have_user_tolerances:
 *                 for i in range(len(self.domains)):
 *                     self.domains[i].set_steady_tolerances(abs=atol_ss_final[i],             # <<<<<<<<<<<<<<
 *                                                         rel=rtol_ss_final[i])
 *                     self.domains[i].set_transient_tolerances(abs=atol_ts_final[i],
 */
      if (unlikely(!__pyx_cur_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(0, 1334, __pyx_L1_error) }
      __pyx_t_2 = __Pyx_GetItemInt(__pyx_cur_scope->__pyx_v_self->domains, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1334, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_set_steady_tolerances); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1334, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1334, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (unlikely(!__pyx_cur_scope->__pyx_v_atol_ss_final)) { __Pyx_RaiseClosureNameError("atol_ss_final"); __PYX_ERR(0, 1334, __pyx_L1_error) }
      if (unlikely(__pyx_cur_scope->__pyx_v_atol_ss_final == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1334, __pyx_L1_error)
      }
      __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_cur_scope->__pyx_v_atol_ss_final, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 1, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1334, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_abs, __pyx_t_7) < 0) __PYX_ERR(0, 1334, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "cantera/_onedim.pyx":1335
 *                 for i in range(len(self.domains)):
 *                     self.domains[i].set_steady_tolerances(abs=atol_ss_final[i],
 *                                                         rel=rtol_ss_final[i])             # <<<<<<<<<<<<<<
 *                     self.domains[i].set_transient_tolerances(abs=atol_ts_final[i],
 *                                                             rel=rtol_ts_final[i])
 */
      if (unlikely(!__pyx_cur_scope->__pyx_v_rtol_ss_final)) { __Pyx_RaiseClosureNameError("rtol_ss_final"); __PYX_ERR(0, 1335, __pyx_L1_error) }
      if (unlikely(__pyx_cur_scope->__pyx_v_rtol_ss_final == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1335, __pyx_L1_error)
      }
      __pyx_t_7 = __Pyx_GetItemInt_List(__pyx_cur_scope->__pyx_v_rtol_ss_final, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 1, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1335, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_rel, __pyx_t_7) < 0) __PYX_ERR(0, 1334, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "cantera/_onedim.pyx":1334
 *             if have_user_tolerances:
 *                 for i in range(len(self.domains)):
 *                     self.domains[i].set_steady_tolerances(abs=atol_ss_final[i],             # <<<<<<<<<<<<<<
 *                                                         rel=rtol_ss_final[i])
 *                     self.domains[i].set_transient_tolerances(abs=atol_ts_final[i],
 */
      __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_6, __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1334, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "cantera/_onedim.pyx":1336
 *                     self.domains[i].set_steady_tolerances(abs=atol_ss_final[i],
 *                                                         rel=rtol_ss_final[i])
 *                     self.domains[i].set_transient_tolerances(abs=atol_ts_final[i],             # <<<<<<<<<<<<<<
 *                                                             rel=rtol_ts_final[i])
 * 
 */
      if (unlikely(!__pyx_cur_scope->__pyx_v_self)) { __Pyx_RaiseClosureNameError("self"); __PYX_ERR(0, 1336, __pyx_L1_error) }
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_cur_scope->__pyx_v_self->domains, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 0, 1, 1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1336, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_set_transient_tolerances); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1336, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1336, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      if (unlikely(!__pyx_cur_scope->__pyx_v_atol_ts_final)) { __Pyx_RaiseClosureNameError("atol_ts_final"); __PYX_ERR(0, 1336, __pyx_L1_error) }
      if (unlikely(__pyx_cur_scope->__pyx_v_atol_ts_final == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1336, __pyx_L1_error)
      }
      __pyx_t_6 = __Pyx_GetItemInt_List(__pyx_cur_scope->__pyx_v_atol_ts_final, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 1, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1336, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_abs, __pyx_t_6) < 0) __PYX_ERR(0, 1336, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "cantera/_onedim.pyx":1337
 *                                                         rel=rtol_ss_final[i])
 *                     self.domains[i].set_transient_tolerances(abs=atol_ts_final[i],
 *                                                             rel=rtol_ts_final[i])             # <<<<<<<<<<<<<<
 * 
 *         for dom in self.domains:
 */
      if (unlikely(!__pyx_cur_scope->__pyx_v_rtol_ts_final)) { __Pyx_RaiseClosureNameError("rtol_ts_final"); __PYX_ERR(0, 1337, __pyx_L1_error) }
      if (unlikely(__pyx_cur_scope->__pyx_v_rtol_ts_final == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
        __PYX_ERR(0, 1337, __pyx_L1_error)
      }
      __pyx_t_6 = __Pyx_GetItemInt_List(__pyx_cur_scope->__pyx_v_rtol_ts_final, __pyx_v_i, Py_ssize_t, 1, PyInt_FromSsize_t, 1, 1, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1337, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (PyDict_SetItem(__pyx_t_7, __pyx_n_s_rel, __pyx_t_6) < 0) __PYX_ERR(0, 1336, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

      /* "cantera/_onedim.pyx":1336
 *                     self.domains[i].set_steady_tolerances(abs=atol_ss_final[i],
 *                                                         rel=rtol_ss_final[i])
 *                     self.domains[i].set_transient_tolerances(abs=atol_ts_final[i],             # <<<<<<<<<<<<<<
 *                                                             rel=rtol_ts_final[i])
 * 
 */
      __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_empty_tuple, __pyx_t_7); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 1336, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }

    /* "cantera/_onedim.pyx":1332
 * 
 *         def restore_tolerances():
 *             if have_user_tolerances:             # <<<<<<<<<<<<<<
 *                 for i in range(len(self.domains)):
 *                     self.domains[i].set_steady_tolerances(abs=atol_ss_final[i],
 */
  }

  /* "cantera/_onedim.pyx":1331
 *             rtol_ts_final = [dom.transient_reltol() for dom in self.domains]
 * 
 *         def restore_tolerances():             # <<<<<<<<<<<<<<
 *             if have_user_tolerances:
 *                 for i in range(len(self.domains)):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve.restore_tolerances", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1345
 *         soret_doms = [dom for dom in self.domains if getattr(dom, 'soret_enabled', False)]
 * 
 *         def set_soret(soret):             # <<<<<<<<<<<<<<
 *             for dom in soret_doms:
 *                 dom.soret_enabled = soret
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_5set_soret(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_5solve_5set_soret = {"set_soret", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_5set_soret, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_5set_soret(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_soret = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_soret (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_soret,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_soret)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1345, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_soret") < 0)) __PYX_ERR(0, 1345, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_soret = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_soret", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1345, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve.set_soret", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_4set_soret(__pyx_self, __pyx_v_soret);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_4set_soret(PyObject *__pyx_self, PyObject *__pyx_v_soret) {
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_cur_scope;
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_outer_scope;
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_soret", 0);
  __pyx_outer_scope = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "cantera/_onedim.pyx":1346
 * 
 *         def set_soret(soret):
 *             for dom in soret_doms:             # <<<<<<<<<<<<<<
 *                 dom.soret_enabled = soret
 * 
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_soret_doms)) { __Pyx_RaiseClosureNameError("soret_doms"); __PYX_ERR(0, 1346, __pyx_L1_error) }
  if (unlikely(__pyx_cur_scope->__pyx_v_soret_doms == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    __PYX_ERR(0, 1346, __pyx_L1_error)
  }
  __pyx_t_1 = __pyx_cur_scope->__pyx_v_soret_doms; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1346, __pyx_L1_error)
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1346, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_dom, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1347
 *         def set_soret(soret):
 *             for dom in soret_doms:
 *                 dom.soret_enabled = soret             # <<<<<<<<<<<<<<
 * 
 *         set_soret(False)
 */
    if (__Pyx_PyObject_SetAttrStr(__pyx_v_dom, __pyx_n_s_soret_enabled, __pyx_v_soret) < 0) __PYX_ERR(0, 1347, __pyx_L1_error)

    /* "cantera/_onedim.pyx":1346
 * 
 *         def set_soret(soret):
 *             for dom in soret_doms:             # <<<<<<<<<<<<<<
 *                 dom.soret_enabled = soret
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1345
 *         soret_doms = [dom for dom in self.domains if getattr(dom, 'soret_enabled', False)]
 * 
 *         def set_soret(soret):             # <<<<<<<<<<<<<<
 *             for dom in soret_doms:
 *                 dom.soret_enabled = soret
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve.set_soret", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1357
 *             set_transport('mixture-averaged')
 * 
 *         def log(msg, *args):             # <<<<<<<<<<<<<<
 *             if loglevel:
 *                 print('\n{:*^78s}'.format(' ' + msg.format(*args) + ' '))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_7log(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_5solve_7log = {"log", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_7log, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_5solve_7log(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_msg = 0;
  PyObject *__pyx_v_args = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("log (wrapper)", 0);
  __pyx_v_args = __Pyx_ArgsSlice_FASTCALL(__pyx_args, 1, __pyx_nargs);
  if (unlikely(!__pyx_v_args)) {
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __Pyx_GOTREF(__pyx_v_args);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_msg,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_msg)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1357, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        const Py_ssize_t used_pos_args = (kwd_pos_args < 1) ? kwd_pos_args : 1;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, used_pos_args, "log") < 0)) __PYX_ERR(0, 1357, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_msg = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("log", 0, 1, 1, __pyx_nargs); __PYX_ERR(0, 1357, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_6log(__pyx_self, __pyx_v_msg, __pyx_v_args);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_6log(PyObject *__pyx_self, PyObject *__pyx_v_msg, PyObject *__pyx_v_args) {
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_cur_scope;
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_outer_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("log", 0);
  __pyx_outer_scope = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "cantera/_onedim.pyx":1358
 * 
 *         def log(msg, *args):
 *             if loglevel:             # <<<<<<<<<<<<<<
 *                 print('\n{:*^78s}'.format(' ' + msg.format(*args) + ' '))
 * 
 */
  if (unlikely(!__pyx_cur_scope->__pyx_v_loglevel)) { __Pyx_RaiseClosureNameError("loglevel"); __PYX_ERR(0, 1358, __pyx_L1_error) }
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_loglevel); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1358, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1359
 *         def log(msg, *args):
 *             if loglevel:
 *                 print('\n{:*^78s}'.format(' ' + msg.format(*args) + ' '))             # <<<<<<<<<<<<<<
 * 
 *         flow_domains = [D for D in self.domains if isinstance(D, _FlowBase)]
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_78s, __pyx_n_s_format); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_v_msg, __pyx_n_s_format); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_v_args, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(__pyx_kp_u__27, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyNumber_Add(__pyx_t_4, __pyx_kp_u__27); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_5};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1359, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_print, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1359, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1358
 * 
 *         def log(msg, *args):
 *             if loglevel:             # <<<<<<<<<<<<<<
 *                 print('\n{:*^78s}'.format(' ' + msg.format(*args) + ' '))
 * 
 */
  }

  /* "cantera/_onedim.pyx":1357
 *             set_transport('mixture-averaged')
 * 
 *         def log(msg, *args):             # <<<<<<<<<<<<<<
 *             if loglevel:
 *                 print('\n{:*^78s}'.format(' ' + msg.format(*args) + ' '))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve.log", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static PyObject *__pyx_gb_7cantera_7_onedim_5Sim1D_5solve_10generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value); /* proto */

/* "cantera/_onedim.pyx":1323
 * 
 *         # Do initial solution steps with default tolerances
 *         have_user_tolerances = any(dom.have_user_tolerances for dom in self.domains)             # <<<<<<<<<<<<<<
 *         if have_user_tolerances:
 *             # Save the user-specified tolerances
 */

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_5solve_8genexpr(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_genexpr_arg_0) {
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *__pyx_cur_scope;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("genexpr", 0);
  __pyx_cur_scope = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *)__pyx_tp_new_7cantera_7_onedim___pyx_scope_struct_1_genexpr(__pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1323, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_genexpr_arg_0 = __pyx_genexpr_arg_0;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_genexpr_arg_0);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_genexpr_arg_0);
  {
    __pyx_CoroutineObject *gen = __Pyx_Generator_New((__pyx_coroutine_body_t) __pyx_gb_7cantera_7_onedim_5Sim1D_5solve_10generator, NULL, (PyObject *) __pyx_cur_scope, __pyx_n_s_genexpr, __pyx_n_s_solve_locals_genexpr, __pyx_n_s_cantera__onedim); if (unlikely(!gen)) __PYX_ERR(0, 1323, __pyx_L1_error)
    __Pyx_DECREF(__pyx_cur_scope);
    __Pyx_RefNannyFinishContext();
    return (PyObject *) gen;
  }

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve.genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_gb_7cantera_7_onedim_5Sim1D_5solve_10generator(__pyx_CoroutineObject *__pyx_generator, CYTHON_UNUSED PyThreadState *__pyx_tstate, PyObject *__pyx_sent_value) /* generator body */
{
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *__pyx_cur_scope = ((struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *)__pyx_generator->closure);
  PyObject *__pyx_r = NULL;
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("genexpr", 0);
  switch (__pyx_generator->resume_label) {
    case 0: goto __pyx_L3_first_run;
    default: /* CPython raises the right error here */
    __Pyx_RefNannyFinishContext();
    return NULL;
  }
  __pyx_L3_first_run:;
  if (unlikely(!__pyx_sent_value)) __PYX_ERR(0, 1323, __pyx_L1_error)
  if (unlikely(!__pyx_cur_scope->__pyx_genexpr_arg_0)) { __Pyx_RaiseUnboundLocalError(".0"); __PYX_ERR(0, 1323, __pyx_L1_error) }
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_genexpr_arg_0)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_genexpr_arg_0)) {
    __pyx_t_1 = __pyx_cur_scope->__pyx_genexpr_arg_0; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_cur_scope->__pyx_genexpr_arg_0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1323, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1323, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1323, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 1323, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1323, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1323, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XGOTREF(__pyx_cur_scope->__pyx_v_dom);
    __Pyx_XDECREF_SET(__pyx_cur_scope->__pyx_v_dom, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_dom, __pyx_n_s_have_user_tolerances); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1323, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_4); if (unlikely((__pyx_t_5 < 0))) __PYX_ERR(0, 1323, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (__pyx_t_5) {
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF(Py_True);
      __pyx_r = Py_True;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_False);
    __pyx_r = Py_False;
    goto __pyx_L0;
  }
  CYTHON_MAYBE_UNUSED_VAR(__pyx_cur_scope);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_Generator_Replace_StopIteration(0);
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("genexpr", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  #if !CYTHON_USE_EXC_INFO_STACK
  __Pyx_Coroutine_ResetAndClearException(__pyx_generator);
  #endif
  __pyx_generator->resume_label = -1;
  __Pyx_Coroutine_clear((PyObject*)__pyx_generator);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1292
 *         return False
 * 
 *     def solve(self, loglevel=1, refine_grid=True, auto=False):             # <<<<<<<<<<<<<<
 *         """
 *         Solve the problem.
 */

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_44solve(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_loglevel, PyObject *__pyx_v_refine_grid, PyObject *__pyx_v_auto) {
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_cur_scope;
  PyObject *__pyx_v_set_transport = 0;
  PyObject *__pyx_v_restore_tolerances = 0;
  PyObject *__pyx_v_dom = NULL;
  PyObject *__pyx_v_set_soret = 0;
  PyObject *__pyx_v_transport = NULL;
  PyObject *__pyx_v_solve_multi = NULL;
  PyObject *__pyx_v_log = 0;
  PyObject *__pyx_v_flow_domains = NULL;
  PyObject *__pyx_v_zmin = NULL;
  PyObject *__pyx_v_zmax = NULL;
  PyObject *__pyx_v_data = NULL;
  PyObject *__pyx_v_nPoints = NULL;
  PyObject *__pyx_v_N = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_D = NULL;
  int __pyx_v_solved;
  PyObject *__pyx_v_e = NULL;
  PyObject *__pyx_gb_7cantera_7_onedim_5Sim1D_5solve_10generator = 0;
  PyObject *__pyx_8genexpr8__pyx_v_dom = NULL;
  PyObject *__pyx_8genexpr9__pyx_v_dom = NULL;
  PyObject *__pyx_9genexpr10__pyx_v_dom = NULL;
  PyObject *__pyx_9genexpr11__pyx_v_dom = NULL;
  PyObject *__pyx_9genexpr12__pyx_v_dom = NULL;
  PyObject *__pyx_9genexpr13__pyx_v_D = NULL;
  PyObject *__pyx_9genexpr14__pyx_v_D = NULL;
  PyObject *__pyx_9genexpr15__pyx_v_D = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  bool __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *(*__pyx_t_9)(PyObject *);
  PyObject *__pyx_t_10 = NULL;
  PyObject *__pyx_t_11 = NULL;
  Py_ssize_t __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  Py_ssize_t __pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  PyObject *__pyx_t_17 = NULL;
  PyObject *__pyx_t_18 = NULL;
  PyObject *__pyx_t_19 = NULL;
  int __pyx_t_20;
  char const *__pyx_t_21;
  PyObject *__pyx_t_22 = NULL;
  PyObject *__pyx_t_23 = NULL;
  PyObject *__pyx_t_24 = NULL;
  PyObject *__pyx_t_25 = NULL;
  PyObject *__pyx_t_26 = NULL;
  PyObject *__pyx_t_27 = NULL;
  char const *__pyx_t_28;
  char const *__pyx_t_29;
  char const *__pyx_t_30;
  char const *__pyx_t_31;
  char const *__pyx_t_32;
  int __pyx_t_33;
  char const *__pyx_t_34;
  char const *__pyx_t_35;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("solve", 0);
  __pyx_cur_scope = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *)__pyx_tp_new_7cantera_7_onedim___pyx_scope_struct__solve(__pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 1292, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }
  __pyx_cur_scope->__pyx_v_self = __pyx_v_self;
  __Pyx_INCREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __Pyx_GIVEREF((PyObject *)__pyx_cur_scope->__pyx_v_self);
  __pyx_cur_scope->__pyx_v_loglevel = __pyx_v_loglevel;
  __Pyx_INCREF(__pyx_cur_scope->__pyx_v_loglevel);
  __Pyx_GIVEREF(__pyx_cur_scope->__pyx_v_loglevel);

  /* "cantera/_onedim.pyx":1311
 *         """
 * 
 *         if not auto:             # <<<<<<<<<<<<<<
 *             if not self._initialized:
 *                 self.set_initial_guess()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_auto); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1311, __pyx_L1_error)
  __pyx_t_2 = (!__pyx_t_1);
  if (__pyx_t_2) {

    /* "cantera/_onedim.pyx":1312
 * 
 *         if not auto:
 *             if not self._initialized:             # <<<<<<<<<<<<<<
 *                 self.set_initial_guess()
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 */
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_self->_initialized); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 1312, __pyx_L1_error)
    __pyx_t_1 = (!__pyx_t_2);
    if (__pyx_t_1) {

      /* "cantera/_onedim.pyx":1313
 *         if not auto:
 *             if not self._initialized:
 *                 self.set_initial_guess()             # <<<<<<<<<<<<<<
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 *             return
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_set_initial_guess); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1313, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_4, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_5, };
        __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1313, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

      /* "cantera/_onedim.pyx":1312
 * 
 *         if not auto:
 *             if not self._initialized:             # <<<<<<<<<<<<<<
 *                 self.set_initial_guess()
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 */
    }

    /* "cantera/_onedim.pyx":1314
 *             if not self._initialized:
 *                 self.set_initial_guess()
 *             self.sim.solve(loglevel, <cbool>refine_grid)             # <<<<<<<<<<<<<<
 *             return
 * 
 */
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_cur_scope->__pyx_v_loglevel); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1314, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_refine_grid); if (unlikely((__pyx_t_7 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1314, __pyx_L1_error)
    try {
      __pyx_cur_scope->__pyx_v_self->sim->solve(__pyx_t_6, ((bool)__pyx_t_7));
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 1314, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":1315
 *                 self.set_initial_guess()
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 *             return             # <<<<<<<<<<<<<<
 * 
 *         def set_transport(multi):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cantera/_onedim.pyx":1311
 *         """
 * 
 *         if not auto:             # <<<<<<<<<<<<<<
 *             if not self._initialized:
 *                 self.set_initial_guess()
 */
  }

  /* "cantera/_onedim.pyx":1317
 *             return
 * 
 *         def set_transport(multi):             # <<<<<<<<<<<<<<
 *             for dom in self.domains:
 *                 if isinstance(dom, _FlowBase):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_5solve_1set_transport, 0, __pyx_n_s_solve_locals_set_transport, ((PyObject*)__pyx_cur_scope), __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__29)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_set_transport = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1323
 * 
 *         # Do initial solution steps with default tolerances
 *         have_user_tolerances = any(dom.have_user_tolerances for dom in self.domains)             # <<<<<<<<<<<<<<
 *         if have_user_tolerances:
 *             # Save the user-specified tolerances
 */
  __pyx_t_3 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_8genexpr(NULL, __pyx_cur_scope->__pyx_v_self->domains); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_Generator_Next(__pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1323, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_cur_scope->__pyx_v_have_user_tolerances = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "cantera/_onedim.pyx":1324
 *         # Do initial solution steps with default tolerances
 *         have_user_tolerances = any(dom.have_user_tolerances for dom in self.domains)
 *         if have_user_tolerances:             # <<<<<<<<<<<<<<
 *             # Save the user-specified tolerances
 *             atol_ss_final = [dom.steady_abstol() for dom in self.domains]
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_have_user_tolerances); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1324, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1326
 *         if have_user_tolerances:
 *             # Save the user-specified tolerances
 *             atol_ss_final = [dom.steady_abstol() for dom in self.domains]             # <<<<<<<<<<<<<<
 *             rtol_ss_final = [dom.steady_reltol() for dom in self.domains]
 *             atol_ts_final = [dom.transient_abstol() for dom in self.domains]
 */
    { /* enter inner scope */
      __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1326, __pyx_L8_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_self->domains; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
        __pyx_t_9 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_self->domains); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1326, __pyx_L8_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1326, __pyx_L8_error)
      }
      for (;;) {
        if (likely(!__pyx_t_9)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1326, __pyx_L8_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1326, __pyx_L8_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1326, __pyx_L8_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1326, __pyx_L8_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_9(__pyx_t_3);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 1326, __pyx_L8_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_8genexpr8__pyx_v_dom, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_8genexpr8__pyx_v_dom, __pyx_n_s_steady_abstol); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1326, __pyx_L8_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_11)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_11);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
            __pyx_t_6 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_11, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1326, __pyx_L8_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        }
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 1326, __pyx_L8_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_8genexpr8__pyx_v_dom); __pyx_8genexpr8__pyx_v_dom = 0;
      goto __pyx_L12_exit_scope;
      __pyx_L8_error:;
      __Pyx_XDECREF(__pyx_8genexpr8__pyx_v_dom); __pyx_8genexpr8__pyx_v_dom = 0;
      goto __pyx_L1_error;
      __pyx_L12_exit_scope:;
    } /* exit inner scope */
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_cur_scope->__pyx_v_atol_ss_final = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":1327
 *             # Save the user-specified tolerances
 *             atol_ss_final = [dom.steady_abstol() for dom in self.domains]
 *             rtol_ss_final = [dom.steady_reltol() for dom in self.domains]             # <<<<<<<<<<<<<<
 *             atol_ts_final = [dom.transient_abstol() for dom in self.domains]
 *             rtol_ts_final = [dom.transient_reltol() for dom in self.domains]
 */
    { /* enter inner scope */
      __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1327, __pyx_L15_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_self->domains; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
        __pyx_t_9 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_self->domains); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1327, __pyx_L15_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1327, __pyx_L15_error)
      }
      for (;;) {
        if (likely(!__pyx_t_9)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1327, __pyx_L15_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1327, __pyx_L15_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1327, __pyx_L15_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1327, __pyx_L15_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_9(__pyx_t_3);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 1327, __pyx_L15_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_8genexpr9__pyx_v_dom, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_8genexpr9__pyx_v_dom, __pyx_n_s_steady_reltol); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1327, __pyx_L15_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_11)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_11);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
            __pyx_t_6 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_11, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1327, __pyx_L15_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        }
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 1327, __pyx_L15_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_8genexpr9__pyx_v_dom); __pyx_8genexpr9__pyx_v_dom = 0;
      goto __pyx_L19_exit_scope;
      __pyx_L15_error:;
      __Pyx_XDECREF(__pyx_8genexpr9__pyx_v_dom); __pyx_8genexpr9__pyx_v_dom = 0;
      goto __pyx_L1_error;
      __pyx_L19_exit_scope:;
    } /* exit inner scope */
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_cur_scope->__pyx_v_rtol_ss_final = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":1328
 *             atol_ss_final = [dom.steady_abstol() for dom in self.domains]
 *             rtol_ss_final = [dom.steady_reltol() for dom in self.domains]
 *             atol_ts_final = [dom.transient_abstol() for dom in self.domains]             # <<<<<<<<<<<<<<
 *             rtol_ts_final = [dom.transient_reltol() for dom in self.domains]
 * 
 */
    { /* enter inner scope */
      __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1328, __pyx_L22_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_self->domains; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
        __pyx_t_9 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_self->domains); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1328, __pyx_L22_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1328, __pyx_L22_error)
      }
      for (;;) {
        if (likely(!__pyx_t_9)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1328, __pyx_L22_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1328, __pyx_L22_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1328, __pyx_L22_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1328, __pyx_L22_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_9(__pyx_t_3);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 1328, __pyx_L22_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_9genexpr10__pyx_v_dom, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_9genexpr10__pyx_v_dom, __pyx_n_s_transient_abstol); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1328, __pyx_L22_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_11)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_11);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
            __pyx_t_6 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_11, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1328, __pyx_L22_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        }
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 1328, __pyx_L22_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_9genexpr10__pyx_v_dom); __pyx_9genexpr10__pyx_v_dom = 0;
      goto __pyx_L26_exit_scope;
      __pyx_L22_error:;
      __Pyx_XDECREF(__pyx_9genexpr10__pyx_v_dom); __pyx_9genexpr10__pyx_v_dom = 0;
      goto __pyx_L1_error;
      __pyx_L26_exit_scope:;
    } /* exit inner scope */
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_cur_scope->__pyx_v_atol_ts_final = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":1329
 *             rtol_ss_final = [dom.steady_reltol() for dom in self.domains]
 *             atol_ts_final = [dom.transient_abstol() for dom in self.domains]
 *             rtol_ts_final = [dom.transient_reltol() for dom in self.domains]             # <<<<<<<<<<<<<<
 * 
 *         def restore_tolerances():
 */
    { /* enter inner scope */
      __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1329, __pyx_L29_error)
      __Pyx_GOTREF(__pyx_t_4);
      if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) {
        __pyx_t_3 = __pyx_cur_scope->__pyx_v_self->domains; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
        __pyx_t_9 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_self->domains); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1329, __pyx_L29_error)
        __Pyx_GOTREF(__pyx_t_3);
        __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1329, __pyx_L29_error)
      }
      for (;;) {
        if (likely(!__pyx_t_9)) {
          if (likely(PyList_CheckExact(__pyx_t_3))) {
            if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1329, __pyx_L29_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1329, __pyx_L29_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          } else {
            if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
            #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
            __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1329, __pyx_L29_error)
            #else
            __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1329, __pyx_L29_error)
            __Pyx_GOTREF(__pyx_t_5);
            #endif
          }
        } else {
          __pyx_t_5 = __pyx_t_9(__pyx_t_3);
          if (unlikely(!__pyx_t_5)) {
            PyObject* exc_type = PyErr_Occurred();
            if (exc_type) {
              if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
              else __PYX_ERR(0, 1329, __pyx_L29_error)
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_5);
        }
        __Pyx_XDECREF_SET(__pyx_9genexpr11__pyx_v_dom, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_9genexpr11__pyx_v_dom, __pyx_n_s_transient_reltol); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1329, __pyx_L29_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_11 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_11)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_11);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
            __pyx_t_6 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[1] = {__pyx_t_11, };
          __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1329, __pyx_L29_error)
          __Pyx_GOTREF(__pyx_t_5);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        }
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 1329, __pyx_L29_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_9genexpr11__pyx_v_dom); __pyx_9genexpr11__pyx_v_dom = 0;
      goto __pyx_L33_exit_scope;
      __pyx_L29_error:;
      __Pyx_XDECREF(__pyx_9genexpr11__pyx_v_dom); __pyx_9genexpr11__pyx_v_dom = 0;
      goto __pyx_L1_error;
      __pyx_L33_exit_scope:;
    } /* exit inner scope */
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_cur_scope->__pyx_v_rtol_ts_final = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":1324
 *         # Do initial solution steps with default tolerances
 *         have_user_tolerances = any(dom.have_user_tolerances for dom in self.domains)
 *         if have_user_tolerances:             # <<<<<<<<<<<<<<
 *             # Save the user-specified tolerances
 *             atol_ss_final = [dom.steady_abstol() for dom in self.domains]
 */
  }

  /* "cantera/_onedim.pyx":1331
 *             rtol_ts_final = [dom.transient_reltol() for dom in self.domains]
 * 
 *         def restore_tolerances():             # <<<<<<<<<<<<<<
 *             if have_user_tolerances:
 *                 for i in range(len(self.domains)):
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_5solve_3restore_tolerances, 0, __pyx_n_s_solve_locals_restore_tolerances, ((PyObject*)__pyx_cur_scope), __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__31)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_restore_tolerances = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "cantera/_onedim.pyx":1339
 *                                                             rel=rtol_ts_final[i])
 * 
 *         for dom in self.domains:             # <<<<<<<<<<<<<<
 *             dom.set_default_tolerances()
 * 
 */
  if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) {
    __pyx_t_4 = __pyx_cur_scope->__pyx_v_self->domains; __Pyx_INCREF(__pyx_t_4); __pyx_t_8 = 0;
    __pyx_t_9 = NULL;
  } else {
    __pyx_t_8 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_self->domains); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1339, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_9)) {
      if (likely(PyList_CheckExact(__pyx_t_4))) {
        if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1339, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1339, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_3); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1339, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1339, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_9(__pyx_t_4);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1339, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_dom, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1340
 * 
 *         for dom in self.domains:
 *             dom.set_default_tolerances()             # <<<<<<<<<<<<<<
 * 
 *         # Do initial steps without Soret diffusion
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_v_dom, __pyx_n_s_set_default_tolerances); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1340, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_10, };
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1340, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1339
 *                                                             rel=rtol_ts_final[i])
 * 
 *         for dom in self.domains:             # <<<<<<<<<<<<<<
 *             dom.set_default_tolerances()
 * 
 */
  }
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cantera/_onedim.pyx":1343
 * 
 *         # Do initial steps without Soret diffusion
 *         soret_doms = [dom for dom in self.domains if getattr(dom, 'soret_enabled', False)]             # <<<<<<<<<<<<<<
 * 
 *         def set_soret(soret):
 */
  { /* enter inner scope */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1343, __pyx_L39_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) {
      __pyx_t_3 = __pyx_cur_scope->__pyx_v_self->domains; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_self->domains); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1343, __pyx_L39_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1343, __pyx_L39_error)
    }
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1343, __pyx_L39_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1343, __pyx_L39_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        } else {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1343, __pyx_L39_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1343, __pyx_L39_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        }
      } else {
        __pyx_t_5 = __pyx_t_9(__pyx_t_3);
        if (unlikely(!__pyx_t_5)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1343, __pyx_L39_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_5);
      }
      __Pyx_XDECREF_SET(__pyx_9genexpr12__pyx_v_dom, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_GetAttr3(__pyx_9genexpr12__pyx_v_dom, __pyx_n_u_soret_enabled, Py_False); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1343, __pyx_L39_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1343, __pyx_L39_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_1) {
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_9genexpr12__pyx_v_dom))) __PYX_ERR(0, 1343, __pyx_L39_error)
      }
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_9genexpr12__pyx_v_dom); __pyx_9genexpr12__pyx_v_dom = 0;
    goto __pyx_L44_exit_scope;
    __pyx_L39_error:;
    __Pyx_XDECREF(__pyx_9genexpr12__pyx_v_dom); __pyx_9genexpr12__pyx_v_dom = 0;
    goto __pyx_L1_error;
    __pyx_L44_exit_scope:;
  } /* exit inner scope */
  __Pyx_GIVEREF(__pyx_t_4);
  __pyx_cur_scope->__pyx_v_soret_doms = ((PyObject*)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "cantera/_onedim.pyx":1345
 *         soret_doms = [dom for dom in self.domains if getattr(dom, 'soret_enabled', False)]
 * 
 *         def set_soret(soret):             # <<<<<<<<<<<<<<
 *             for dom in soret_doms:
 *                 dom.soret_enabled = soret
 */
  __pyx_t_4 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_5solve_5set_soret, 0, __pyx_n_s_solve_locals_set_soret, ((PyObject*)__pyx_cur_scope), __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__33)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_set_soret = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "cantera/_onedim.pyx":1349
 *                 dom.soret_enabled = soret
 * 
 *         set_soret(False)             # <<<<<<<<<<<<<<
 * 
 *         # Do initial solution steps without multicomponent transport
 */
  __pyx_t_4 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_4set_soret(__pyx_v_set_soret, Py_False); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1349, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

  /* "cantera/_onedim.pyx":1352
 * 
 *         # Do initial solution steps without multicomponent transport
 *         transport = self.transport_model             # <<<<<<<<<<<<<<
 *         solve_multi = self.transport_model == 'multicomponent'
 *         if solve_multi:
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_transport_model); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1352, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_v_transport = __pyx_t_4;
  __pyx_t_4 = 0;

  /* "cantera/_onedim.pyx":1353
 *         # Do initial solution steps without multicomponent transport
 *         transport = self.transport_model
 *         solve_multi = self.transport_model == 'multicomponent'             # <<<<<<<<<<<<<<
 *         if solve_multi:
 *             set_transport('mixture-averaged')
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_transport_model); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1353, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_3 = PyObject_RichCompare(__pyx_t_4, __pyx_n_u_multicomponent, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1353, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_solve_multi = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1354
 *         transport = self.transport_model
 *         solve_multi = self.transport_model == 'multicomponent'
 *         if solve_multi:             # <<<<<<<<<<<<<<
 *             set_transport('mixture-averaged')
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_solve_multi); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1354, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1355
 *         solve_multi = self.transport_model == 'multicomponent'
 *         if solve_multi:
 *             set_transport('mixture-averaged')             # <<<<<<<<<<<<<<
 * 
 *         def log(msg, *args):
 */
    __pyx_t_3 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_set_transport(__pyx_v_set_transport, __pyx_kp_u_mixture_averaged); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1355, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1354
 *         transport = self.transport_model
 *         solve_multi = self.transport_model == 'multicomponent'
 *         if solve_multi:             # <<<<<<<<<<<<<<
 *             set_transport('mixture-averaged')
 * 
 */
  }

  /* "cantera/_onedim.pyx":1357
 *             set_transport('mixture-averaged')
 * 
 *         def log(msg, *args):             # <<<<<<<<<<<<<<
 *             if loglevel:
 *                 print('\n{:*^78s}'.format(' ' + msg.format(*args) + ' '))
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_5solve_7log, 0, __pyx_n_s_solve_locals_log, ((PyObject*)__pyx_cur_scope), __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__35)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_log = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1361
 *                 print('\n{:*^78s}'.format(' ' + msg.format(*args) + ' '))
 * 
 *         flow_domains = [D for D in self.domains if isinstance(D, _FlowBase)]             # <<<<<<<<<<<<<<
 *         zmin = [D.grid[0] for D in flow_domains]
 *         zmax = [D.grid[-1] for D in flow_domains]
 */
  { /* enter inner scope */
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1361, __pyx_L48_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (likely(PyList_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) || PyTuple_CheckExact(__pyx_cur_scope->__pyx_v_self->domains)) {
      __pyx_t_4 = __pyx_cur_scope->__pyx_v_self->domains; __Pyx_INCREF(__pyx_t_4); __pyx_t_8 = 0;
      __pyx_t_9 = NULL;
    } else {
      __pyx_t_8 = -1; __pyx_t_4 = PyObject_GetIter(__pyx_cur_scope->__pyx_v_self->domains); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1361, __pyx_L48_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_4); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 1361, __pyx_L48_error)
    }
    for (;;) {
      if (likely(!__pyx_t_9)) {
        if (likely(PyList_CheckExact(__pyx_t_4))) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1361, __pyx_L48_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1361, __pyx_L48_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        } else {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_4)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1361, __pyx_L48_error)
          #else
          __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1361, __pyx_L48_error)
          __Pyx_GOTREF(__pyx_t_5);
          #endif
        }
      } else {
        __pyx_t_5 = __pyx_t_9(__pyx_t_4);
        if (unlikely(!__pyx_t_5)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 1361, __pyx_L48_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_5);
      }
      __Pyx_XDECREF_SET(__pyx_9genexpr13__pyx_v_D, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_1 = __Pyx_TypeCheck(__pyx_9genexpr13__pyx_v_D, __pyx_ptype_7cantera_7_onedim__FlowBase); 
      if (__pyx_t_1) {
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_9genexpr13__pyx_v_D))) __PYX_ERR(0, 1361, __pyx_L48_error)
      }
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_9genexpr13__pyx_v_D); __pyx_9genexpr13__pyx_v_D = 0;
    goto __pyx_L53_exit_scope;
    __pyx_L48_error:;
    __Pyx_XDECREF(__pyx_9genexpr13__pyx_v_D); __pyx_9genexpr13__pyx_v_D = 0;
    goto __pyx_L1_error;
    __pyx_L53_exit_scope:;
  } /* exit inner scope */
  __pyx_v_flow_domains = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1362
 * 
 *         flow_domains = [D for D in self.domains if isinstance(D, _FlowBase)]
 *         zmin = [D.grid[0] for D in flow_domains]             # <<<<<<<<<<<<<<
 *         zmax = [D.grid[-1] for D in flow_domains]
 * 
 */
  { /* enter inner scope */
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1362, __pyx_L56_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __pyx_v_flow_domains; __Pyx_INCREF(__pyx_t_4); __pyx_t_8 = 0;
    for (;;) {
      if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_5 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_5); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1362, __pyx_L56_error)
      #else
      __pyx_t_5 = PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1362, __pyx_L56_error)
      __Pyx_GOTREF(__pyx_t_5);
      #endif
      __Pyx_XDECREF_SET(__pyx_9genexpr14__pyx_v_D, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_9genexpr14__pyx_v_D, __pyx_n_s_grid); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1362, __pyx_L56_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_10 = __Pyx_GetItemInt(__pyx_t_5, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1362, __pyx_L56_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_10))) __PYX_ERR(0, 1362, __pyx_L56_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_9genexpr14__pyx_v_D); __pyx_9genexpr14__pyx_v_D = 0;
    goto __pyx_L60_exit_scope;
    __pyx_L56_error:;
    __Pyx_XDECREF(__pyx_9genexpr14__pyx_v_D); __pyx_9genexpr14__pyx_v_D = 0;
    goto __pyx_L1_error;
    __pyx_L60_exit_scope:;
  } /* exit inner scope */
  __pyx_v_zmin = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1363
 *         flow_domains = [D for D in self.domains if isinstance(D, _FlowBase)]
 *         zmin = [D.grid[0] for D in flow_domains]
 *         zmax = [D.grid[-1] for D in flow_domains]             # <<<<<<<<<<<<<<
 * 
 *         # 'data' entry is used for restart
 */
  { /* enter inner scope */
    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1363, __pyx_L63_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __pyx_v_flow_domains; __Pyx_INCREF(__pyx_t_4); __pyx_t_8 = 0;
    for (;;) {
      if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_4)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_10 = PyList_GET_ITEM(__pyx_t_4, __pyx_t_8); __Pyx_INCREF(__pyx_t_10); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1363, __pyx_L63_error)
      #else
      __pyx_t_10 = PySequence_ITEM(__pyx_t_4, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1363, __pyx_L63_error)
      __Pyx_GOTREF(__pyx_t_10);
      #endif
      __Pyx_XDECREF_SET(__pyx_9genexpr15__pyx_v_D, __pyx_t_10);
      __pyx_t_10 = 0;
      __pyx_t_10 = __Pyx_PyObject_GetAttrStr(__pyx_9genexpr15__pyx_v_D, __pyx_n_s_grid); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1363, __pyx_L63_error)
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_5 = __Pyx_GetItemInt(__pyx_t_10, -1L, long, 1, __Pyx_PyInt_From_long, 0, 1, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1363, __pyx_L63_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_3, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 1363, __pyx_L63_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_XDECREF(__pyx_9genexpr15__pyx_v_D); __pyx_9genexpr15__pyx_v_D = 0;
    goto __pyx_L67_exit_scope;
    __pyx_L63_error:;
    __Pyx_XDECREF(__pyx_9genexpr15__pyx_v_D); __pyx_9genexpr15__pyx_v_D = 0;
    goto __pyx_L1_error;
    __pyx_L67_exit_scope:;
  } /* exit inner scope */
  __pyx_v_zmax = ((PyObject*)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1366
 * 
 *         # 'data' entry is used for restart
 *         data = self._initial_guess_kwargs.get('data')             # <<<<<<<<<<<<<<
 *         if data:
 *            nPoints = [len(flow_domains[0].grid)]
 */
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_cur_scope->__pyx_v_self->_initial_guess_kwargs, __pyx_n_s_get); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1366, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_n_u_data};
    __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1366, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_data = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":1367
 *         # 'data' entry is used for restart
 *         data = self._initial_guess_kwargs.get('data')
 *         if data:             # <<<<<<<<<<<<<<
 *            nPoints = [len(flow_domains[0].grid)]
 *         else:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_data); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1367, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1368
 *         data = self._initial_guess_kwargs.get('data')
 *         if data:
 *            nPoints = [len(flow_domains[0].grid)]             # <<<<<<<<<<<<<<
 *         else:
 *            nPoints = [len(flow_domains[0].grid), 12, 24, 48]
 */
    __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_flow_domains, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_grid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1368, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_v_nPoints = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1367
 *         # 'data' entry is used for restart
 *         data = self._initial_guess_kwargs.get('data')
 *         if data:             # <<<<<<<<<<<<<<
 *            nPoints = [len(flow_domains[0].grid)]
 *         else:
 */
    goto __pyx_L68;
  }

  /* "cantera/_onedim.pyx":1370
 *            nPoints = [len(flow_domains[0].grid)]
 *         else:
 *            nPoints = [len(flow_domains[0].grid), 12, 24, 48]             # <<<<<<<<<<<<<<
 * 
 *         for N in nPoints:
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_GetItemInt_List(__pyx_v_flow_domains, 0, long, 1, __Pyx_PyInt_From_long, 1, 0, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_grid); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_8 = PyObject_Length(__pyx_t_4); if (unlikely(__pyx_t_8 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_4 = PyInt_FromSsize_t(__pyx_t_8); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyList_New(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1370, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyList_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_INCREF(__pyx_int_12);
    __Pyx_GIVEREF(__pyx_int_12);
    PyList_SET_ITEM(__pyx_t_3, 1, __pyx_int_12);
    __Pyx_INCREF(__pyx_int_24);
    __Pyx_GIVEREF(__pyx_int_24);
    PyList_SET_ITEM(__pyx_t_3, 2, __pyx_int_24);
    __Pyx_INCREF(__pyx_int_48);
    __Pyx_GIVEREF(__pyx_int_48);
    PyList_SET_ITEM(__pyx_t_3, 3, __pyx_int_48);
    __pyx_t_4 = 0;
    __pyx_v_nPoints = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
  }
  __pyx_L68:;

  /* "cantera/_onedim.pyx":1372
 *            nPoints = [len(flow_domains[0].grid), 12, 24, 48]
 * 
 *         for N in nPoints:             # <<<<<<<<<<<<<<
 *             for i,D in enumerate(flow_domains):
 *                 if N > self.get_max_grid_points(D):
 */
  __pyx_t_3 = __pyx_v_nPoints; __Pyx_INCREF(__pyx_t_3); __pyx_t_8 = 0;
  for (;;) {
    if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_3)) break;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_8); __Pyx_INCREF(__pyx_t_4); __pyx_t_8++; if (unlikely((0 < 0))) __PYX_ERR(0, 1372, __pyx_L1_error)
    #else
    __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1372, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    #endif
    __Pyx_XDECREF_SET(__pyx_v_N, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":1373
 * 
 *         for N in nPoints:
 *             for i,D in enumerate(flow_domains):             # <<<<<<<<<<<<<<
 *                 if N > self.get_max_grid_points(D):
 *                     raise CanteraError('Maximum number of grid points exceeded')
 */
    __Pyx_INCREF(__pyx_int_0);
    __pyx_t_4 = __pyx_int_0;
    __pyx_t_5 = __pyx_v_flow_domains; __Pyx_INCREF(__pyx_t_5); __pyx_t_12 = 0;
    for (;;) {
      if (__pyx_t_12 >= PyList_GET_SIZE(__pyx_t_5)) break;
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      __pyx_t_10 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_12); __Pyx_INCREF(__pyx_t_10); __pyx_t_12++; if (unlikely((0 < 0))) __PYX_ERR(0, 1373, __pyx_L1_error)
      #else
      __pyx_t_10 = PySequence_ITEM(__pyx_t_5, __pyx_t_12); __pyx_t_12++; if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1373, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      #endif
      __Pyx_XDECREF_SET(__pyx_v_D, __pyx_t_10);
      __pyx_t_10 = 0;
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_4);
      __pyx_t_10 = __Pyx_PyInt_AddObjC(__pyx_t_4, __pyx_int_1, 1, 0, 0); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1373, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_4);
      __pyx_t_4 = __pyx_t_10;
      __pyx_t_10 = 0;

      /* "cantera/_onedim.pyx":1374
 *         for N in nPoints:
 *             for i,D in enumerate(flow_domains):
 *                 if N > self.get_max_grid_points(D):             # <<<<<<<<<<<<<<
 *                     raise CanteraError('Maximum number of grid points exceeded')
 * 
 */
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_get_max_grid_points); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1374, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_13 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_11))) {
        __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_11);
        if (likely(__pyx_t_13)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_11);
          __Pyx_INCREF(__pyx_t_13);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_11, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_v_D};
        __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_11, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1374, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      }
      __pyx_t_11 = PyObject_RichCompare(__pyx_v_N, __pyx_t_10, Py_GT); __Pyx_XGOTREF(__pyx_t_11); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1374, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_11); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1374, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      if (unlikely(__pyx_t_1)) {

        /* "cantera/_onedim.pyx":1375
 *             for i,D in enumerate(flow_domains):
 *                 if N > self.get_max_grid_points(D):
 *                     raise CanteraError('Maximum number of grid points exceeded')             # <<<<<<<<<<<<<<
 * 
 *                 if N != len(D.grid):
 */
        __Pyx_GetModuleGlobalName(__pyx_t_10, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1375, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_13 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_10))) {
          __pyx_t_13 = PyMethod_GET_SELF(__pyx_t_10);
          if (likely(__pyx_t_13)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_13);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_10, function);
            __pyx_t_6 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_13, __pyx_kp_u_Maximum_number_of_grid_points_ex};
          __pyx_t_11 = __Pyx_PyObject_FastCall(__pyx_t_10, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1375, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        }
        __Pyx_Raise(__pyx_t_11, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __PYX_ERR(0, 1375, __pyx_L1_error)

        /* "cantera/_onedim.pyx":1374
 *         for N in nPoints:
 *             for i,D in enumerate(flow_domains):
 *                 if N > self.get_max_grid_points(D):             # <<<<<<<<<<<<<<
 *                     raise CanteraError('Maximum number of grid points exceeded')
 * 
 */
      }

      /* "cantera/_onedim.pyx":1377
 *                     raise CanteraError('Maximum number of grid points exceeded')
 * 
 *                 if N != len(D.grid):             # <<<<<<<<<<<<<<
 *                     D.grid = np.linspace(zmin[i], zmax[i], N)
 * 
 */
      __pyx_t_11 = __Pyx_PyObject_GetAttrStr(__pyx_v_D, __pyx_n_s_grid); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1377, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_14 = PyObject_Length(__pyx_t_11); if (unlikely(__pyx_t_14 == ((Py_ssize_t)-1))) __PYX_ERR(0, 1377, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_11 = PyInt_FromSsize_t(__pyx_t_14); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1377, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_11);
      __pyx_t_10 = PyObject_RichCompare(__pyx_v_N, __pyx_t_11, Py_NE); __Pyx_XGOTREF(__pyx_t_10); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1377, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
      __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_10); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1377, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (__pyx_t_1) {

        /* "cantera/_onedim.pyx":1378
 * 
 *                 if N != len(D.grid):
 *                     D.grid = np.linspace(zmin[i], zmax[i], N)             # <<<<<<<<<<<<<<
 * 
 *             if not data:
 */
        __Pyx_GetModuleGlobalName(__pyx_t_11, __pyx_n_s_np); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1378, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_13 = __Pyx_PyObject_GetAttrStr(__pyx_t_11, __pyx_n_s_linspace); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1378, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
        __pyx_t_11 = __Pyx_PyObject_GetItem(__pyx_v_zmin, __pyx_v_i); if (unlikely(!__pyx_t_11)) __PYX_ERR(0, 1378, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_11);
        __pyx_t_15 = __Pyx_PyObject_GetItem(__pyx_v_zmax, __pyx_v_i); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1378, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __pyx_t_16 = NULL;
        __pyx_t_6 = 0;
        if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
          __pyx_t_16 = PyMethod_GET_SELF(__pyx_t_13);
          if (likely(__pyx_t_16)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
            __Pyx_INCREF(__pyx_t_16);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_13, function);
            __pyx_t_6 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[4] = {__pyx_t_16, __pyx_t_11, __pyx_t_15, __pyx_v_N};
          __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_6, 3+__pyx_t_6);
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
          if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1378, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        }
        if (__Pyx_PyObject_SetAttrStr(__pyx_v_D, __pyx_n_s_grid, __pyx_t_10) < 0) __PYX_ERR(0, 1378, __pyx_L1_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

        /* "cantera/_onedim.pyx":1377
 *                     raise CanteraError('Maximum number of grid points exceeded')
 * 
 *                 if N != len(D.grid):             # <<<<<<<<<<<<<<
 *                     D.grid = np.linspace(zmin[i], zmax[i], N)
 * 
 */
      }

      /* "cantera/_onedim.pyx":1373
 * 
 *         for N in nPoints:
 *             for i,D in enumerate(flow_domains):             # <<<<<<<<<<<<<<
 *                 if N > self.get_max_grid_points(D):
 *                     raise CanteraError('Maximum number of grid points exceeded')
 */
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "cantera/_onedim.pyx":1380
 *                     D.grid = np.linspace(zmin[i], zmax[i], N)
 * 
 *             if not data:             # <<<<<<<<<<<<<<
 *                 self.set_initial_guess(*self._initial_guess_args,
 *                                        **self._initial_guess_kwargs)
 */
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_data); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1380, __pyx_L1_error)
    __pyx_t_2 = (!__pyx_t_1);
    if (__pyx_t_2) {

      /* "cantera/_onedim.pyx":1381
 * 
 *             if not data:
 *                 self.set_initial_guess(*self._initial_guess_args,             # <<<<<<<<<<<<<<
 *                                        **self._initial_guess_kwargs)
 * 
 */
      __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_set_initial_guess); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1381, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = __Pyx_PySequence_Tuple(__pyx_cur_scope->__pyx_v_self->_initial_guess_args); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1381, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);

      /* "cantera/_onedim.pyx":1382
 *             if not data:
 *                 self.set_initial_guess(*self._initial_guess_args,
 *                                        **self._initial_guess_kwargs)             # <<<<<<<<<<<<<<
 * 
 *             # Try solving with energy enabled, which usually works
 */
      if (unlikely(__pyx_cur_scope->__pyx_v_self->_initial_guess_kwargs == Py_None)) {
        PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
        __PYX_ERR(0, 1382, __pyx_L1_error)
      }
      if (likely(PyDict_CheckExact(__pyx_cur_scope->__pyx_v_self->_initial_guess_kwargs))) {
        __pyx_t_10 = PyDict_Copy(__pyx_cur_scope->__pyx_v_self->_initial_guess_kwargs); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1382, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
      } else {
        __pyx_t_10 = __Pyx_PyObject_CallOneArg((PyObject*)&PyDict_Type, __pyx_cur_scope->__pyx_v_self->_initial_guess_kwargs); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1381, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
      }

      /* "cantera/_onedim.pyx":1381
 * 
 *             if not data:
 *                 self.set_initial_guess(*self._initial_guess_args,             # <<<<<<<<<<<<<<
 *                                        **self._initial_guess_kwargs)
 * 
 */
      __pyx_t_13 = __Pyx_PyObject_Call(__pyx_t_4, __pyx_t_5, __pyx_t_10); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1381, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

      /* "cantera/_onedim.pyx":1380
 *                     D.grid = np.linspace(zmin[i], zmax[i], N)
 * 
 *             if not data:             # <<<<<<<<<<<<<<
 *                 self.set_initial_guess(*self._initial_guess_args,
 *                                        **self._initial_guess_kwargs)
 */
    }

    /* "cantera/_onedim.pyx":1385
 * 
 *             # Try solving with energy enabled, which usually works
 *             log('Solving on {} point grid with energy equation enabled', N)             # <<<<<<<<<<<<<<
 *             self.energy_enabled = True
 *             try:
 */
    __pyx_t_13 = PyTuple_New(2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1385, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __Pyx_INCREF(__pyx_kp_u_Solving_on_point_grid_with_energ);
    __Pyx_GIVEREF(__pyx_kp_u_Solving_on_point_grid_with_energ);
    PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_kp_u_Solving_on_point_grid_with_energ);
    __Pyx_INCREF(__pyx_v_N);
    __Pyx_GIVEREF(__pyx_v_N);
    PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_v_N);
    __pyx_t_10 = __Pyx_PyObject_Call(__pyx_v_log, __pyx_t_13, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1385, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_10);
    __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

    /* "cantera/_onedim.pyx":1386
 *             # Try solving with energy enabled, which usually works
 *             log('Solving on {} point grid with energy equation enabled', N)
 *             self.energy_enabled = True             # <<<<<<<<<<<<<<
 *             try:
 *                 self.sim.solve(loglevel, <cbool>False)
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_energy_enabled, Py_True) < 0) __PYX_ERR(0, 1386, __pyx_L1_error)

    /* "cantera/_onedim.pyx":1387
 *             log('Solving on {} point grid with energy equation enabled', N)
 *             self.energy_enabled = True
 *             try:             # <<<<<<<<<<<<<<
 *                 self.sim.solve(loglevel, <cbool>False)
 *                 solved = True
 */
    {
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __Pyx_ExceptionSave(&__pyx_t_17, &__pyx_t_18, &__pyx_t_19);
      __Pyx_XGOTREF(__pyx_t_17);
      __Pyx_XGOTREF(__pyx_t_18);
      __Pyx_XGOTREF(__pyx_t_19);
      /*try:*/ {

        /* "cantera/_onedim.pyx":1388
 *             self.energy_enabled = True
 *             try:
 *                 self.sim.solve(loglevel, <cbool>False)             # <<<<<<<<<<<<<<
 *                 solved = True
 *             except CanteraError as e:
 */
        __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_cur_scope->__pyx_v_loglevel); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1388, __pyx_L77_error)
        try {
          __pyx_cur_scope->__pyx_v_self->sim->solve(__pyx_t_6, ((bool)0));
        } catch(...) {
          translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
          __PYX_ERR(0, 1388, __pyx_L77_error)
        }

        /* "cantera/_onedim.pyx":1389
 *             try:
 *                 self.sim.solve(loglevel, <cbool>False)
 *                 solved = True             # <<<<<<<<<<<<<<
 *             except CanteraError as e:
 *                 log(str(e))
 */
        __pyx_v_solved = 1;

        /* "cantera/_onedim.pyx":1387
 *             log('Solving on {} point grid with energy equation enabled', N)
 *             self.energy_enabled = True
 *             try:             # <<<<<<<<<<<<<<
 *                 self.sim.solve(loglevel, <cbool>False)
 *                 solved = True
 */
      }
      __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
      __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
      __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
      goto __pyx_L84_try_end;
      __pyx_L77_error:;
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
      __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
      __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

      /* "cantera/_onedim.pyx":1390
 *                 self.sim.solve(loglevel, <cbool>False)
 *                 solved = True
 *             except CanteraError as e:             # <<<<<<<<<<<<<<
 *                 log(str(e))
 *                 solved = False
 */
      __Pyx_ErrFetch(&__pyx_t_10, &__pyx_t_13, &__pyx_t_5);
      __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1390, __pyx_L79_except_error)
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_6 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_10, __pyx_t_4);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_ErrRestore(__pyx_t_10, __pyx_t_13, __pyx_t_5);
      __pyx_t_10 = 0; __pyx_t_13 = 0; __pyx_t_5 = 0;
      if (__pyx_t_6) {
        __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_13, &__pyx_t_10) < 0) __PYX_ERR(0, 1390, __pyx_L79_except_error)
        __Pyx_XGOTREF(__pyx_t_5);
        __Pyx_XGOTREF(__pyx_t_13);
        __Pyx_XGOTREF(__pyx_t_10);
        __Pyx_INCREF(__pyx_t_13);
        __pyx_v_e = __pyx_t_13;
        /*try:*/ {

          /* "cantera/_onedim.pyx":1391
 *                 solved = True
 *             except CanteraError as e:
 *                 log(str(e))             # <<<<<<<<<<<<<<
 *                 solved = False
 *             except Exception as e:
 */
          __pyx_t_4 = __Pyx_PyObject_Str(__pyx_v_e); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1391, __pyx_L90_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_15 = __Pyx_PyObject_CallOneArg(__pyx_v_log, __pyx_t_4); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1391, __pyx_L90_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

          /* "cantera/_onedim.pyx":1392
 *             except CanteraError as e:
 *                 log(str(e))
 *                 solved = False             # <<<<<<<<<<<<<<
 *             except Exception as e:
 *                 # restore settings before re-raising exception
 */
          __pyx_v_solved = 0;
        }

        /* "cantera/_onedim.pyx":1390
 *                 self.sim.solve(loglevel, <cbool>False)
 *                 solved = True
 *             except CanteraError as e:             # <<<<<<<<<<<<<<
 *                 log(str(e))
 *                 solved = False
 */
        /*finally:*/ {
          /*normal exit:*/{
            __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
            goto __pyx_L91;
          }
          __pyx_L90_error:;
          /*exception exit:*/{
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __pyx_t_22 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0; __pyx_t_25 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0;
            __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
            __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_25, &__pyx_t_26, &__pyx_t_27);
            if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_22, &__pyx_t_23, &__pyx_t_24) < 0)) __Pyx_ErrFetch(&__pyx_t_22, &__pyx_t_23, &__pyx_t_24);
            __Pyx_XGOTREF(__pyx_t_22);
            __Pyx_XGOTREF(__pyx_t_23);
            __Pyx_XGOTREF(__pyx_t_24);
            __Pyx_XGOTREF(__pyx_t_25);
            __Pyx_XGOTREF(__pyx_t_26);
            __Pyx_XGOTREF(__pyx_t_27);
            __pyx_t_6 = __pyx_lineno; __pyx_t_20 = __pyx_clineno; __pyx_t_21 = __pyx_filename;
            {
              __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
            }
            if (PY_MAJOR_VERSION >= 3) {
              __Pyx_XGIVEREF(__pyx_t_25);
              __Pyx_XGIVEREF(__pyx_t_26);
              __Pyx_XGIVEREF(__pyx_t_27);
              __Pyx_ExceptionReset(__pyx_t_25, __pyx_t_26, __pyx_t_27);
            }
            __Pyx_XGIVEREF(__pyx_t_22);
            __Pyx_XGIVEREF(__pyx_t_23);
            __Pyx_XGIVEREF(__pyx_t_24);
            __Pyx_ErrRestore(__pyx_t_22, __pyx_t_23, __pyx_t_24);
            __pyx_t_22 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0; __pyx_t_25 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0;
            __pyx_lineno = __pyx_t_6; __pyx_clineno = __pyx_t_20; __pyx_filename = __pyx_t_21;
            goto __pyx_L79_except_error;
          }
          __pyx_L91:;
        }
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        goto __pyx_L78_exception_handled;
      }

      /* "cantera/_onedim.pyx":1393
 *                 log(str(e))
 *                 solved = False
 *             except Exception as e:             # <<<<<<<<<<<<<<
 *                 # restore settings before re-raising exception
 *                 set_transport(transport)
 */
      __pyx_t_20 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
      if (__pyx_t_20) {
        __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_10, &__pyx_t_13, &__pyx_t_5) < 0) __PYX_ERR(0, 1393, __pyx_L79_except_error)
        __Pyx_XGOTREF(__pyx_t_10);
        __Pyx_XGOTREF(__pyx_t_13);
        __Pyx_XGOTREF(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_13);
        __pyx_v_e = __pyx_t_13;
        /*try:*/ {

          /* "cantera/_onedim.pyx":1395
 *             except Exception as e:
 *                 # restore settings before re-raising exception
 *                 set_transport(transport)             # <<<<<<<<<<<<<<
 *                 set_soret(True)
 *                 restore_tolerances()
 */
          __pyx_t_15 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_set_transport(__pyx_v_set_transport, __pyx_v_transport); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1395, __pyx_L101_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

          /* "cantera/_onedim.pyx":1396
 *                 # restore settings before re-raising exception
 *                 set_transport(transport)
 *                 set_soret(True)             # <<<<<<<<<<<<<<
 *                 restore_tolerances()
 *                 raise e
 */
          __pyx_t_15 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_4set_soret(__pyx_v_set_soret, Py_True); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1396, __pyx_L101_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

          /* "cantera/_onedim.pyx":1397
 *                 set_transport(transport)
 *                 set_soret(True)
 *                 restore_tolerances()             # <<<<<<<<<<<<<<
 *                 raise e
 * 
 */
          __pyx_t_15 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_2restore_tolerances(__pyx_v_restore_tolerances); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1397, __pyx_L101_error)
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

          /* "cantera/_onedim.pyx":1398
 *                 set_soret(True)
 *                 restore_tolerances()
 *                 raise e             # <<<<<<<<<<<<<<
 * 
 *             # If initial solve using energy equation fails, fall back on the
 */
          __Pyx_Raise(__pyx_v_e, 0, 0, 0);
          __PYX_ERR(0, 1398, __pyx_L101_error)
        }

        /* "cantera/_onedim.pyx":1393
 *                 log(str(e))
 *                 solved = False
 *             except Exception as e:             # <<<<<<<<<<<<<<
 *                 # restore settings before re-raising exception
 *                 set_transport(transport)
 */
        /*finally:*/ {
          __pyx_L101_error:;
          /*exception exit:*/{
            __Pyx_PyThreadState_declare
            __Pyx_PyThreadState_assign
            __pyx_t_27 = 0; __pyx_t_26 = 0; __pyx_t_25 = 0; __pyx_t_24 = 0; __pyx_t_23 = 0; __pyx_t_22 = 0;
            __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
            __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
            __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
            if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_24, &__pyx_t_23, &__pyx_t_22);
            if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_27, &__pyx_t_26, &__pyx_t_25) < 0)) __Pyx_ErrFetch(&__pyx_t_27, &__pyx_t_26, &__pyx_t_25);
            __Pyx_XGOTREF(__pyx_t_27);
            __Pyx_XGOTREF(__pyx_t_26);
            __Pyx_XGOTREF(__pyx_t_25);
            __Pyx_XGOTREF(__pyx_t_24);
            __Pyx_XGOTREF(__pyx_t_23);
            __Pyx_XGOTREF(__pyx_t_22);
            __pyx_t_20 = __pyx_lineno; __pyx_t_6 = __pyx_clineno; __pyx_t_28 = __pyx_filename;
            {
              __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
            }
            if (PY_MAJOR_VERSION >= 3) {
              __Pyx_XGIVEREF(__pyx_t_24);
              __Pyx_XGIVEREF(__pyx_t_23);
              __Pyx_XGIVEREF(__pyx_t_22);
              __Pyx_ExceptionReset(__pyx_t_24, __pyx_t_23, __pyx_t_22);
            }
            __Pyx_XGIVEREF(__pyx_t_27);
            __Pyx_XGIVEREF(__pyx_t_26);
            __Pyx_XGIVEREF(__pyx_t_25);
            __Pyx_ErrRestore(__pyx_t_27, __pyx_t_26, __pyx_t_25);
            __pyx_t_27 = 0; __pyx_t_26 = 0; __pyx_t_25 = 0; __pyx_t_24 = 0; __pyx_t_23 = 0; __pyx_t_22 = 0;
            __pyx_lineno = __pyx_t_20; __pyx_clineno = __pyx_t_6; __pyx_filename = __pyx_t_28;
            goto __pyx_L79_except_error;
          }
        }
      }
      goto __pyx_L79_except_error;

      /* "cantera/_onedim.pyx":1387
 *             log('Solving on {} point grid with energy equation enabled', N)
 *             self.energy_enabled = True
 *             try:             # <<<<<<<<<<<<<<
 *                 self.sim.solve(loglevel, <cbool>False)
 *                 solved = True
 */
      __pyx_L79_except_error:;
      __Pyx_XGIVEREF(__pyx_t_17);
      __Pyx_XGIVEREF(__pyx_t_18);
      __Pyx_XGIVEREF(__pyx_t_19);
      __Pyx_ExceptionReset(__pyx_t_17, __pyx_t_18, __pyx_t_19);
      goto __pyx_L1_error;
      __pyx_L78_exception_handled:;
      __Pyx_XGIVEREF(__pyx_t_17);
      __Pyx_XGIVEREF(__pyx_t_18);
      __Pyx_XGIVEREF(__pyx_t_19);
      __Pyx_ExceptionReset(__pyx_t_17, __pyx_t_18, __pyx_t_19);
      __pyx_L84_try_end:;
    }

    /* "cantera/_onedim.pyx":1403
 *             # traditional fixed temperature solve followed by solving the energy
 *             # equation
 *             if not solved or self.extinct():             # <<<<<<<<<<<<<<
 *                 if self.extinct():
 *                     self.set_initial_guess(*self._initial_guess_args,
 */
    __pyx_t_1 = (!__pyx_v_solved);
    if (!__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L108_bool_binop_done;
    }
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_extinct); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1403, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_10 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_10, };
      __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1403, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1403, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_2 = __pyx_t_1;
    __pyx_L108_bool_binop_done:;
    if (__pyx_t_2) {

      /* "cantera/_onedim.pyx":1404
 *             # equation
 *             if not solved or self.extinct():
 *                 if self.extinct():             # <<<<<<<<<<<<<<
 *                     self.set_initial_guess(*self._initial_guess_args,
 *                                            **self._initial_guess_kwargs)
 */
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_extinct); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1404, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_10 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
        __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_13);
        if (likely(__pyx_t_10)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
          __Pyx_INCREF(__pyx_t_10);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_13, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_10, };
        __pyx_t_5 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1404, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      }
      __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 1404, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_2) {

        /* "cantera/_onedim.pyx":1405
 *             if not solved or self.extinct():
 *                 if self.extinct():
 *                     self.set_initial_guess(*self._initial_guess_args,             # <<<<<<<<<<<<<<
 *                                            **self._initial_guess_kwargs)
 *                 log('Initial solve failed; Retrying with energy equation disabled')
 */
        __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_set_initial_guess); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1405, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_13 = __Pyx_PySequence_Tuple(__pyx_cur_scope->__pyx_v_self->_initial_guess_args); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1405, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);

        /* "cantera/_onedim.pyx":1406
 *                 if self.extinct():
 *                     self.set_initial_guess(*self._initial_guess_args,
 *                                            **self._initial_guess_kwargs)             # <<<<<<<<<<<<<<
 *                 log('Initial solve failed; Retrying with energy equation disabled')
 *                 self.energy_enabled = False
 */
        if (unlikely(__pyx_cur_scope->__pyx_v_self->_initial_guess_kwargs == Py_None)) {
          PyErr_SetString(PyExc_TypeError, "argument after ** must be a mapping, not NoneType");
          __PYX_ERR(0, 1406, __pyx_L1_error)
        }
        if (likely(PyDict_CheckExact(__pyx_cur_scope->__pyx_v_self->_initial_guess_kwargs))) {
          __pyx_t_10 = PyDict_Copy(__pyx_cur_scope->__pyx_v_self->_initial_guess_kwargs); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1406, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
        } else {
          __pyx_t_10 = __Pyx_PyObject_CallOneArg((PyObject*)&PyDict_Type, __pyx_cur_scope->__pyx_v_self->_initial_guess_kwargs); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1405, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_10);
        }

        /* "cantera/_onedim.pyx":1405
 *             if not solved or self.extinct():
 *                 if self.extinct():
 *                     self.set_initial_guess(*self._initial_guess_args,             # <<<<<<<<<<<<<<
 *                                            **self._initial_guess_kwargs)
 *                 log('Initial solve failed; Retrying with energy equation disabled')
 */
        __pyx_t_15 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_13, __pyx_t_10); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1405, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_15);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

        /* "cantera/_onedim.pyx":1404
 *             # equation
 *             if not solved or self.extinct():
 *                 if self.extinct():             # <<<<<<<<<<<<<<
 *                     self.set_initial_guess(*self._initial_guess_args,
 *                                            **self._initial_guess_kwargs)
 */
      }

      /* "cantera/_onedim.pyx":1407
 *                     self.set_initial_guess(*self._initial_guess_args,
 *                                            **self._initial_guess_kwargs)
 *                 log('Initial solve failed; Retrying with energy equation disabled')             # <<<<<<<<<<<<<<
 *                 self.energy_enabled = False
 *                 try:
 */
      __pyx_t_15 = __Pyx_PyObject_Call(__pyx_v_log, __pyx_tuple__36, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1407, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

      /* "cantera/_onedim.pyx":1408
 *                                            **self._initial_guess_kwargs)
 *                 log('Initial solve failed; Retrying with energy equation disabled')
 *                 self.energy_enabled = False             # <<<<<<<<<<<<<<
 *                 try:
 *                     self.sim.solve(loglevel, <cbool>False)
 */
      if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_energy_enabled, Py_False) < 0) __PYX_ERR(0, 1408, __pyx_L1_error)

      /* "cantera/_onedim.pyx":1409
 *                 log('Initial solve failed; Retrying with energy equation disabled')
 *                 self.energy_enabled = False
 *                 try:             # <<<<<<<<<<<<<<
 *                     self.sim.solve(loglevel, <cbool>False)
 *                     solved = True
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_19, &__pyx_t_18, &__pyx_t_17);
        __Pyx_XGOTREF(__pyx_t_19);
        __Pyx_XGOTREF(__pyx_t_18);
        __Pyx_XGOTREF(__pyx_t_17);
        /*try:*/ {

          /* "cantera/_onedim.pyx":1410
 *                 self.energy_enabled = False
 *                 try:
 *                     self.sim.solve(loglevel, <cbool>False)             # <<<<<<<<<<<<<<
 *                     solved = True
 *                 except CanteraError as e:
 */
          __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_cur_scope->__pyx_v_loglevel); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1410, __pyx_L111_error)
          try {
            __pyx_cur_scope->__pyx_v_self->sim->solve(__pyx_t_6, ((bool)0));
          } catch(...) {
            translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
            __PYX_ERR(0, 1410, __pyx_L111_error)
          }

          /* "cantera/_onedim.pyx":1411
 *                 try:
 *                     self.sim.solve(loglevel, <cbool>False)
 *                     solved = True             # <<<<<<<<<<<<<<
 *                 except CanteraError as e:
 *                     log(str(e))
 */
          __pyx_v_solved = 1;

          /* "cantera/_onedim.pyx":1409
 *                 log('Initial solve failed; Retrying with energy equation disabled')
 *                 self.energy_enabled = False
 *                 try:             # <<<<<<<<<<<<<<
 *                     self.sim.solve(loglevel, <cbool>False)
 *                     solved = True
 */
        }
        __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        goto __pyx_L118_try_end;
        __pyx_L111_error:;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "cantera/_onedim.pyx":1412
 *                     self.sim.solve(loglevel, <cbool>False)
 *                     solved = True
 *                 except CanteraError as e:             # <<<<<<<<<<<<<<
 *                     log(str(e))
 *                     solved = False
 */
        __Pyx_ErrFetch(&__pyx_t_15, &__pyx_t_10, &__pyx_t_13);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1412, __pyx_L113_except_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_15, __pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_ErrRestore(__pyx_t_15, __pyx_t_10, __pyx_t_13);
        __pyx_t_15 = 0; __pyx_t_10 = 0; __pyx_t_13 = 0;
        if (__pyx_t_6) {
          __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_13, &__pyx_t_10, &__pyx_t_15) < 0) __PYX_ERR(0, 1412, __pyx_L113_except_error)
          __Pyx_XGOTREF(__pyx_t_13);
          __Pyx_XGOTREF(__pyx_t_10);
          __Pyx_XGOTREF(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_10);
          __pyx_v_e = __pyx_t_10;
          /*try:*/ {

            /* "cantera/_onedim.pyx":1413
 *                     solved = True
 *                 except CanteraError as e:
 *                     log(str(e))             # <<<<<<<<<<<<<<
 *                     solved = False
 *                 except Exception as e:
 */
            __pyx_t_5 = __Pyx_PyObject_Str(__pyx_v_e); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1413, __pyx_L124_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_v_log, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1413, __pyx_L124_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "cantera/_onedim.pyx":1414
 *                 except CanteraError as e:
 *                     log(str(e))
 *                     solved = False             # <<<<<<<<<<<<<<
 *                 except Exception as e:
 *                     # restore settings before re-raising exception
 */
            __pyx_v_solved = 0;
          }

          /* "cantera/_onedim.pyx":1412
 *                     self.sim.solve(loglevel, <cbool>False)
 *                     solved = True
 *                 except CanteraError as e:             # <<<<<<<<<<<<<<
 *                     log(str(e))
 *                     solved = False
 */
          /*finally:*/ {
            /*normal exit:*/{
              __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
              goto __pyx_L125;
            }
            __pyx_L124_error:;
            /*exception exit:*/{
              __Pyx_PyThreadState_declare
              __Pyx_PyThreadState_assign
              __pyx_t_22 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0; __pyx_t_25 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0;
              __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
              __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_25, &__pyx_t_26, &__pyx_t_27);
              if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_22, &__pyx_t_23, &__pyx_t_24) < 0)) __Pyx_ErrFetch(&__pyx_t_22, &__pyx_t_23, &__pyx_t_24);
              __Pyx_XGOTREF(__pyx_t_22);
              __Pyx_XGOTREF(__pyx_t_23);
              __Pyx_XGOTREF(__pyx_t_24);
              __Pyx_XGOTREF(__pyx_t_25);
              __Pyx_XGOTREF(__pyx_t_26);
              __Pyx_XGOTREF(__pyx_t_27);
              __pyx_t_6 = __pyx_lineno; __pyx_t_20 = __pyx_clineno; __pyx_t_29 = __pyx_filename;
              {
                __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
              }
              if (PY_MAJOR_VERSION >= 3) {
                __Pyx_XGIVEREF(__pyx_t_25);
                __Pyx_XGIVEREF(__pyx_t_26);
                __Pyx_XGIVEREF(__pyx_t_27);
                __Pyx_ExceptionReset(__pyx_t_25, __pyx_t_26, __pyx_t_27);
              }
              __Pyx_XGIVEREF(__pyx_t_22);
              __Pyx_XGIVEREF(__pyx_t_23);
              __Pyx_XGIVEREF(__pyx_t_24);
              __Pyx_ErrRestore(__pyx_t_22, __pyx_t_23, __pyx_t_24);
              __pyx_t_22 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0; __pyx_t_25 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0;
              __pyx_lineno = __pyx_t_6; __pyx_clineno = __pyx_t_20; __pyx_filename = __pyx_t_29;
              goto __pyx_L113_except_error;
            }
            __pyx_L125:;
          }
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          goto __pyx_L112_exception_handled;
        }

        /* "cantera/_onedim.pyx":1415
 *                     log(str(e))
 *                     solved = False
 *                 except Exception as e:             # <<<<<<<<<<<<<<
 *                     # restore settings before re-raising exception
 *                     set_transport(transport)
 */
        __pyx_t_20 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
        if (__pyx_t_20) {
          __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_15, &__pyx_t_10, &__pyx_t_13) < 0) __PYX_ERR(0, 1415, __pyx_L113_except_error)
          __Pyx_XGOTREF(__pyx_t_15);
          __Pyx_XGOTREF(__pyx_t_10);
          __Pyx_XGOTREF(__pyx_t_13);
          __Pyx_INCREF(__pyx_t_10);
          __pyx_v_e = __pyx_t_10;
          /*try:*/ {

            /* "cantera/_onedim.pyx":1417
 *                 except Exception as e:
 *                     # restore settings before re-raising exception
 *                     set_transport(transport)             # <<<<<<<<<<<<<<
 *                     set_soret(True)
 *                     restore_tolerances()
 */
            __pyx_t_4 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_set_transport(__pyx_v_set_transport, __pyx_v_transport); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1417, __pyx_L135_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "cantera/_onedim.pyx":1418
 *                     # restore settings before re-raising exception
 *                     set_transport(transport)
 *                     set_soret(True)             # <<<<<<<<<<<<<<
 *                     restore_tolerances()
 *                     raise e
 */
            __pyx_t_4 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_4set_soret(__pyx_v_set_soret, Py_True); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1418, __pyx_L135_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "cantera/_onedim.pyx":1419
 *                     set_transport(transport)
 *                     set_soret(True)
 *                     restore_tolerances()             # <<<<<<<<<<<<<<
 *                     raise e
 * 
 */
            __pyx_t_4 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_2restore_tolerances(__pyx_v_restore_tolerances); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1419, __pyx_L135_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "cantera/_onedim.pyx":1420
 *                     set_soret(True)
 *                     restore_tolerances()
 *                     raise e             # <<<<<<<<<<<<<<
 * 
 *                 if solved:
 */
            __Pyx_Raise(__pyx_v_e, 0, 0, 0);
            __PYX_ERR(0, 1420, __pyx_L135_error)
          }

          /* "cantera/_onedim.pyx":1415
 *                     log(str(e))
 *                     solved = False
 *                 except Exception as e:             # <<<<<<<<<<<<<<
 *                     # restore settings before re-raising exception
 *                     set_transport(transport)
 */
          /*finally:*/ {
            __pyx_L135_error:;
            /*exception exit:*/{
              __Pyx_PyThreadState_declare
              __Pyx_PyThreadState_assign
              __pyx_t_27 = 0; __pyx_t_26 = 0; __pyx_t_25 = 0; __pyx_t_24 = 0; __pyx_t_23 = 0; __pyx_t_22 = 0;
              __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
              __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_24, &__pyx_t_23, &__pyx_t_22);
              if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_27, &__pyx_t_26, &__pyx_t_25) < 0)) __Pyx_ErrFetch(&__pyx_t_27, &__pyx_t_26, &__pyx_t_25);
              __Pyx_XGOTREF(__pyx_t_27);
              __Pyx_XGOTREF(__pyx_t_26);
              __Pyx_XGOTREF(__pyx_t_25);
              __Pyx_XGOTREF(__pyx_t_24);
              __Pyx_XGOTREF(__pyx_t_23);
              __Pyx_XGOTREF(__pyx_t_22);
              __pyx_t_20 = __pyx_lineno; __pyx_t_6 = __pyx_clineno; __pyx_t_30 = __pyx_filename;
              {
                __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
              }
              if (PY_MAJOR_VERSION >= 3) {
                __Pyx_XGIVEREF(__pyx_t_24);
                __Pyx_XGIVEREF(__pyx_t_23);
                __Pyx_XGIVEREF(__pyx_t_22);
                __Pyx_ExceptionReset(__pyx_t_24, __pyx_t_23, __pyx_t_22);
              }
              __Pyx_XGIVEREF(__pyx_t_27);
              __Pyx_XGIVEREF(__pyx_t_26);
              __Pyx_XGIVEREF(__pyx_t_25);
              __Pyx_ErrRestore(__pyx_t_27, __pyx_t_26, __pyx_t_25);
              __pyx_t_27 = 0; __pyx_t_26 = 0; __pyx_t_25 = 0; __pyx_t_24 = 0; __pyx_t_23 = 0; __pyx_t_22 = 0;
              __pyx_lineno = __pyx_t_20; __pyx_clineno = __pyx_t_6; __pyx_filename = __pyx_t_30;
              goto __pyx_L113_except_error;
            }
          }
        }
        goto __pyx_L113_except_error;

        /* "cantera/_onedim.pyx":1409
 *                 log('Initial solve failed; Retrying with energy equation disabled')
 *                 self.energy_enabled = False
 *                 try:             # <<<<<<<<<<<<<<
 *                     self.sim.solve(loglevel, <cbool>False)
 *                     solved = True
 */
        __pyx_L113_except_error:;
        __Pyx_XGIVEREF(__pyx_t_19);
        __Pyx_XGIVEREF(__pyx_t_18);
        __Pyx_XGIVEREF(__pyx_t_17);
        __Pyx_ExceptionReset(__pyx_t_19, __pyx_t_18, __pyx_t_17);
        goto __pyx_L1_error;
        __pyx_L112_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_19);
        __Pyx_XGIVEREF(__pyx_t_18);
        __Pyx_XGIVEREF(__pyx_t_17);
        __Pyx_ExceptionReset(__pyx_t_19, __pyx_t_18, __pyx_t_17);
        __pyx_L118_try_end:;
      }

      /* "cantera/_onedim.pyx":1422
 *                     raise e
 * 
 *                 if solved:             # <<<<<<<<<<<<<<
 *                     log('Solving on {} point grid with energy equation re-enabled', N)
 *                     self.energy_enabled = True
 */
      if (__pyx_v_solved) {

        /* "cantera/_onedim.pyx":1423
 * 
 *                 if solved:
 *                     log('Solving on {} point grid with energy equation re-enabled', N)             # <<<<<<<<<<<<<<
 *                     self.energy_enabled = True
 *                     try:
 */
        __pyx_t_13 = PyTuple_New(2); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1423, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_13);
        __Pyx_INCREF(__pyx_kp_u_Solving_on_point_grid_with_energ_2);
        __Pyx_GIVEREF(__pyx_kp_u_Solving_on_point_grid_with_energ_2);
        PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_kp_u_Solving_on_point_grid_with_energ_2);
        __Pyx_INCREF(__pyx_v_N);
        __Pyx_GIVEREF(__pyx_v_N);
        PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_v_N);
        __pyx_t_10 = __Pyx_PyObject_Call(__pyx_v_log, __pyx_t_13, NULL); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1423, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

        /* "cantera/_onedim.pyx":1424
 *                 if solved:
 *                     log('Solving on {} point grid with energy equation re-enabled', N)
 *                     self.energy_enabled = True             # <<<<<<<<<<<<<<
 *                     try:
 *                         self.sim.solve(loglevel, <cbool>False)
 */
        if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_energy_enabled, Py_True) < 0) __PYX_ERR(0, 1424, __pyx_L1_error)

        /* "cantera/_onedim.pyx":1425
 *                     log('Solving on {} point grid with energy equation re-enabled', N)
 *                     self.energy_enabled = True
 *                     try:             # <<<<<<<<<<<<<<
 *                         self.sim.solve(loglevel, <cbool>False)
 *                         solved = True
 */
        {
          __Pyx_PyThreadState_declare
          __Pyx_PyThreadState_assign
          __Pyx_ExceptionSave(&__pyx_t_17, &__pyx_t_18, &__pyx_t_19);
          __Pyx_XGOTREF(__pyx_t_17);
          __Pyx_XGOTREF(__pyx_t_18);
          __Pyx_XGOTREF(__pyx_t_19);
          /*try:*/ {

            /* "cantera/_onedim.pyx":1426
 *                     self.energy_enabled = True
 *                     try:
 *                         self.sim.solve(loglevel, <cbool>False)             # <<<<<<<<<<<<<<
 *                         solved = True
 *                     except CanteraError as e:
 */
            __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_cur_scope->__pyx_v_loglevel); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1426, __pyx_L142_error)
            try {
              __pyx_cur_scope->__pyx_v_self->sim->solve(__pyx_t_6, ((bool)0));
            } catch(...) {
              translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
              __PYX_ERR(0, 1426, __pyx_L142_error)
            }

            /* "cantera/_onedim.pyx":1427
 *                     try:
 *                         self.sim.solve(loglevel, <cbool>False)
 *                         solved = True             # <<<<<<<<<<<<<<
 *                     except CanteraError as e:
 *                         log(str(e))
 */
            __pyx_v_solved = 1;

            /* "cantera/_onedim.pyx":1425
 *                     log('Solving on {} point grid with energy equation re-enabled', N)
 *                     self.energy_enabled = True
 *                     try:             # <<<<<<<<<<<<<<
 *                         self.sim.solve(loglevel, <cbool>False)
 *                         solved = True
 */
          }
          __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
          __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
          __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
          goto __pyx_L149_try_end;
          __pyx_L142_error:;
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
          __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

          /* "cantera/_onedim.pyx":1428
 *                         self.sim.solve(loglevel, <cbool>False)
 *                         solved = True
 *                     except CanteraError as e:             # <<<<<<<<<<<<<<
 *                         log(str(e))
 *                         solved = False
 */
          __Pyx_ErrFetch(&__pyx_t_10, &__pyx_t_13, &__pyx_t_15);
          __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1428, __pyx_L144_except_error)
          __Pyx_GOTREF(__pyx_t_4);
          __pyx_t_6 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_10, __pyx_t_4);
          __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
          __Pyx_ErrRestore(__pyx_t_10, __pyx_t_13, __pyx_t_15);
          __pyx_t_10 = 0; __pyx_t_13 = 0; __pyx_t_15 = 0;
          if (__pyx_t_6) {
            __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_15, &__pyx_t_13, &__pyx_t_10) < 0) __PYX_ERR(0, 1428, __pyx_L144_except_error)
            __Pyx_XGOTREF(__pyx_t_15);
            __Pyx_XGOTREF(__pyx_t_13);
            __Pyx_XGOTREF(__pyx_t_10);
            __Pyx_INCREF(__pyx_t_13);
            __pyx_v_e = __pyx_t_13;
            /*try:*/ {

              /* "cantera/_onedim.pyx":1429
 *                         solved = True
 *                     except CanteraError as e:
 *                         log(str(e))             # <<<<<<<<<<<<<<
 *                         solved = False
 *                     except Exception as e:
 */
              __pyx_t_4 = __Pyx_PyObject_Str(__pyx_v_e); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1429, __pyx_L155_error)
              __Pyx_GOTREF(__pyx_t_4);
              __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_v_log, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1429, __pyx_L155_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

              /* "cantera/_onedim.pyx":1430
 *                     except CanteraError as e:
 *                         log(str(e))
 *                         solved = False             # <<<<<<<<<<<<<<
 *                     except Exception as e:
 *                         # restore settings before re-raising exception
 */
              __pyx_v_solved = 0;
            }

            /* "cantera/_onedim.pyx":1428
 *                         self.sim.solve(loglevel, <cbool>False)
 *                         solved = True
 *                     except CanteraError as e:             # <<<<<<<<<<<<<<
 *                         log(str(e))
 *                         solved = False
 */
            /*finally:*/ {
              /*normal exit:*/{
                __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
                goto __pyx_L156;
              }
              __pyx_L155_error:;
              /*exception exit:*/{
                __Pyx_PyThreadState_declare
                __Pyx_PyThreadState_assign
                __pyx_t_22 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0; __pyx_t_25 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0;
                __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
                __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_25, &__pyx_t_26, &__pyx_t_27);
                if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_22, &__pyx_t_23, &__pyx_t_24) < 0)) __Pyx_ErrFetch(&__pyx_t_22, &__pyx_t_23, &__pyx_t_24);
                __Pyx_XGOTREF(__pyx_t_22);
                __Pyx_XGOTREF(__pyx_t_23);
                __Pyx_XGOTREF(__pyx_t_24);
                __Pyx_XGOTREF(__pyx_t_25);
                __Pyx_XGOTREF(__pyx_t_26);
                __Pyx_XGOTREF(__pyx_t_27);
                __pyx_t_6 = __pyx_lineno; __pyx_t_20 = __pyx_clineno; __pyx_t_31 = __pyx_filename;
                {
                  __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
                }
                if (PY_MAJOR_VERSION >= 3) {
                  __Pyx_XGIVEREF(__pyx_t_25);
                  __Pyx_XGIVEREF(__pyx_t_26);
                  __Pyx_XGIVEREF(__pyx_t_27);
                  __Pyx_ExceptionReset(__pyx_t_25, __pyx_t_26, __pyx_t_27);
                }
                __Pyx_XGIVEREF(__pyx_t_22);
                __Pyx_XGIVEREF(__pyx_t_23);
                __Pyx_XGIVEREF(__pyx_t_24);
                __Pyx_ErrRestore(__pyx_t_22, __pyx_t_23, __pyx_t_24);
                __pyx_t_22 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0; __pyx_t_25 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0;
                __pyx_lineno = __pyx_t_6; __pyx_clineno = __pyx_t_20; __pyx_filename = __pyx_t_31;
                goto __pyx_L144_except_error;
              }
              __pyx_L156:;
            }
            __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
            __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
            __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
            goto __pyx_L143_exception_handled;
          }

          /* "cantera/_onedim.pyx":1431
 *                         log(str(e))
 *                         solved = False
 *                     except Exception as e:             # <<<<<<<<<<<<<<
 *                         # restore settings before re-raising exception
 *                         set_transport(transport)
 */
          __pyx_t_20 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
          if (__pyx_t_20) {
            __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
            if (__Pyx_GetException(&__pyx_t_10, &__pyx_t_13, &__pyx_t_15) < 0) __PYX_ERR(0, 1431, __pyx_L144_except_error)
            __Pyx_XGOTREF(__pyx_t_10);
            __Pyx_XGOTREF(__pyx_t_13);
            __Pyx_XGOTREF(__pyx_t_15);
            __Pyx_INCREF(__pyx_t_13);
            __pyx_v_e = __pyx_t_13;
            /*try:*/ {

              /* "cantera/_onedim.pyx":1433
 *                     except Exception as e:
 *                         # restore settings before re-raising exception
 *                         set_transport(transport)             # <<<<<<<<<<<<<<
 *                         set_soret(True)
 *                         restore_tolerances()
 */
              __pyx_t_5 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_set_transport(__pyx_v_set_transport, __pyx_v_transport); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1433, __pyx_L166_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

              /* "cantera/_onedim.pyx":1434
 *                         # restore settings before re-raising exception
 *                         set_transport(transport)
 *                         set_soret(True)             # <<<<<<<<<<<<<<
 *                         restore_tolerances()
 *                         raise e
 */
              __pyx_t_5 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_4set_soret(__pyx_v_set_soret, Py_True); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1434, __pyx_L166_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

              /* "cantera/_onedim.pyx":1435
 *                         set_transport(transport)
 *                         set_soret(True)
 *                         restore_tolerances()             # <<<<<<<<<<<<<<
 *                         raise e
 * 
 */
              __pyx_t_5 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_2restore_tolerances(__pyx_v_restore_tolerances); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1435, __pyx_L166_error)
              __Pyx_GOTREF(__pyx_t_5);
              __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

              /* "cantera/_onedim.pyx":1436
 *                         set_soret(True)
 *                         restore_tolerances()
 *                         raise e             # <<<<<<<<<<<<<<
 * 
 *             if solved and not self.extinct() and refine_grid:
 */
              __Pyx_Raise(__pyx_v_e, 0, 0, 0);
              __PYX_ERR(0, 1436, __pyx_L166_error)
            }

            /* "cantera/_onedim.pyx":1431
 *                         log(str(e))
 *                         solved = False
 *                     except Exception as e:             # <<<<<<<<<<<<<<
 *                         # restore settings before re-raising exception
 *                         set_transport(transport)
 */
            /*finally:*/ {
              __pyx_L166_error:;
              /*exception exit:*/{
                __Pyx_PyThreadState_declare
                __Pyx_PyThreadState_assign
                __pyx_t_27 = 0; __pyx_t_26 = 0; __pyx_t_25 = 0; __pyx_t_24 = 0; __pyx_t_23 = 0; __pyx_t_22 = 0;
                __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
                __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
                __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
                __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
                if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_24, &__pyx_t_23, &__pyx_t_22);
                if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_27, &__pyx_t_26, &__pyx_t_25) < 0)) __Pyx_ErrFetch(&__pyx_t_27, &__pyx_t_26, &__pyx_t_25);
                __Pyx_XGOTREF(__pyx_t_27);
                __Pyx_XGOTREF(__pyx_t_26);
                __Pyx_XGOTREF(__pyx_t_25);
                __Pyx_XGOTREF(__pyx_t_24);
                __Pyx_XGOTREF(__pyx_t_23);
                __Pyx_XGOTREF(__pyx_t_22);
                __pyx_t_20 = __pyx_lineno; __pyx_t_6 = __pyx_clineno; __pyx_t_32 = __pyx_filename;
                {
                  __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
                }
                if (PY_MAJOR_VERSION >= 3) {
                  __Pyx_XGIVEREF(__pyx_t_24);
                  __Pyx_XGIVEREF(__pyx_t_23);
                  __Pyx_XGIVEREF(__pyx_t_22);
                  __Pyx_ExceptionReset(__pyx_t_24, __pyx_t_23, __pyx_t_22);
                }
                __Pyx_XGIVEREF(__pyx_t_27);
                __Pyx_XGIVEREF(__pyx_t_26);
                __Pyx_XGIVEREF(__pyx_t_25);
                __Pyx_ErrRestore(__pyx_t_27, __pyx_t_26, __pyx_t_25);
                __pyx_t_27 = 0; __pyx_t_26 = 0; __pyx_t_25 = 0; __pyx_t_24 = 0; __pyx_t_23 = 0; __pyx_t_22 = 0;
                __pyx_lineno = __pyx_t_20; __pyx_clineno = __pyx_t_6; __pyx_filename = __pyx_t_32;
                goto __pyx_L144_except_error;
              }
            }
          }
          goto __pyx_L144_except_error;

          /* "cantera/_onedim.pyx":1425
 *                     log('Solving on {} point grid with energy equation re-enabled', N)
 *                     self.energy_enabled = True
 *                     try:             # <<<<<<<<<<<<<<
 *                         self.sim.solve(loglevel, <cbool>False)
 *                         solved = True
 */
          __pyx_L144_except_error:;
          __Pyx_XGIVEREF(__pyx_t_17);
          __Pyx_XGIVEREF(__pyx_t_18);
          __Pyx_XGIVEREF(__pyx_t_19);
          __Pyx_ExceptionReset(__pyx_t_17, __pyx_t_18, __pyx_t_19);
          goto __pyx_L1_error;
          __pyx_L143_exception_handled:;
          __Pyx_XGIVEREF(__pyx_t_17);
          __Pyx_XGIVEREF(__pyx_t_18);
          __Pyx_XGIVEREF(__pyx_t_19);
          __Pyx_ExceptionReset(__pyx_t_17, __pyx_t_18, __pyx_t_19);
          __pyx_L149_try_end:;
        }

        /* "cantera/_onedim.pyx":1422
 *                     raise e
 * 
 *                 if solved:             # <<<<<<<<<<<<<<
 *                     log('Solving on {} point grid with energy equation re-enabled', N)
 *                     self.energy_enabled = True
 */
      }

      /* "cantera/_onedim.pyx":1403
 *             # traditional fixed temperature solve followed by solving the energy
 *             # equation
 *             if not solved or self.extinct():             # <<<<<<<<<<<<<<
 *                 if self.extinct():
 *                     self.set_initial_guess(*self._initial_guess_args,
 */
    }

    /* "cantera/_onedim.pyx":1438
 *                         raise e
 * 
 *             if solved and not self.extinct() and refine_grid:             # <<<<<<<<<<<<<<
 *                 # Found a non-extinct solution on the fixed grid
 *                 log('Solving with grid refinement enabled')
 */
    if (__pyx_v_solved) {
    } else {
      __pyx_t_2 = __pyx_v_solved;
      goto __pyx_L173_bool_binop_done;
    }
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_extinct); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1438, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_10 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_10, };
      __pyx_t_15 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1438, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_15); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1438, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
    __pyx_t_33 = (!__pyx_t_1);
    if (__pyx_t_33) {
    } else {
      __pyx_t_2 = __pyx_t_33;
      goto __pyx_L173_bool_binop_done;
    }
    __pyx_t_33 = __Pyx_PyObject_IsTrue(__pyx_v_refine_grid); if (unlikely((__pyx_t_33 < 0))) __PYX_ERR(0, 1438, __pyx_L1_error)
    __pyx_t_2 = __pyx_t_33;
    __pyx_L173_bool_binop_done:;
    if (__pyx_t_2) {

      /* "cantera/_onedim.pyx":1440
 *             if solved and not self.extinct() and refine_grid:
 *                 # Found a non-extinct solution on the fixed grid
 *                 log('Solving with grid refinement enabled')             # <<<<<<<<<<<<<<
 *                 try:
 *                     self.sim.solve(loglevel, <cbool>True)
 */
      __pyx_t_15 = __Pyx_PyObject_Call(__pyx_v_log, __pyx_tuple__37, NULL); if (unlikely(!__pyx_t_15)) __PYX_ERR(0, 1440, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_15);
      __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

      /* "cantera/_onedim.pyx":1441
 *                 # Found a non-extinct solution on the fixed grid
 *                 log('Solving with grid refinement enabled')
 *                 try:             # <<<<<<<<<<<<<<
 *                     self.sim.solve(loglevel, <cbool>True)
 *                     solved = True
 */
      {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        __Pyx_ExceptionSave(&__pyx_t_19, &__pyx_t_18, &__pyx_t_17);
        __Pyx_XGOTREF(__pyx_t_19);
        __Pyx_XGOTREF(__pyx_t_18);
        __Pyx_XGOTREF(__pyx_t_17);
        /*try:*/ {

          /* "cantera/_onedim.pyx":1442
 *                 log('Solving with grid refinement enabled')
 *                 try:
 *                     self.sim.solve(loglevel, <cbool>True)             # <<<<<<<<<<<<<<
 *                     solved = True
 *                 except CanteraError as e:
 */
          __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_cur_scope->__pyx_v_loglevel); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1442, __pyx_L176_error)
          try {
            __pyx_cur_scope->__pyx_v_self->sim->solve(__pyx_t_6, ((bool)1));
          } catch(...) {
            translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
            __PYX_ERR(0, 1442, __pyx_L176_error)
          }

          /* "cantera/_onedim.pyx":1443
 *                 try:
 *                     self.sim.solve(loglevel, <cbool>True)
 *                     solved = True             # <<<<<<<<<<<<<<
 *                 except CanteraError as e:
 *                     log(str(e))
 */
          __pyx_v_solved = 1;

          /* "cantera/_onedim.pyx":1441
 *                 # Found a non-extinct solution on the fixed grid
 *                 log('Solving with grid refinement enabled')
 *                 try:             # <<<<<<<<<<<<<<
 *                     self.sim.solve(loglevel, <cbool>True)
 *                     solved = True
 */
        }
        __Pyx_XDECREF(__pyx_t_19); __pyx_t_19 = 0;
        __Pyx_XDECREF(__pyx_t_18); __pyx_t_18 = 0;
        __Pyx_XDECREF(__pyx_t_17); __pyx_t_17 = 0;
        goto __pyx_L183_try_end;
        __pyx_L176_error:;
        __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
        __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
        __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
        __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "cantera/_onedim.pyx":1444
 *                     self.sim.solve(loglevel, <cbool>True)
 *                     solved = True
 *                 except CanteraError as e:             # <<<<<<<<<<<<<<
 *                     log(str(e))
 *                     solved = False
 */
        __Pyx_ErrFetch(&__pyx_t_15, &__pyx_t_13, &__pyx_t_10);
        __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1444, __pyx_L178_except_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_6 = __Pyx_PyErr_GivenExceptionMatches(__pyx_t_15, __pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        __Pyx_ErrRestore(__pyx_t_15, __pyx_t_13, __pyx_t_10);
        __pyx_t_15 = 0; __pyx_t_13 = 0; __pyx_t_10 = 0;
        if (__pyx_t_6) {
          __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_10, &__pyx_t_13, &__pyx_t_15) < 0) __PYX_ERR(0, 1444, __pyx_L178_except_error)
          __Pyx_XGOTREF(__pyx_t_10);
          __Pyx_XGOTREF(__pyx_t_13);
          __Pyx_XGOTREF(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_13);
          __pyx_v_e = __pyx_t_13;
          /*try:*/ {

            /* "cantera/_onedim.pyx":1445
 *                     solved = True
 *                 except CanteraError as e:
 *                     log(str(e))             # <<<<<<<<<<<<<<
 *                     solved = False
 *                 except Exception as e:
 */
            __pyx_t_5 = __Pyx_PyObject_Str(__pyx_v_e); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1445, __pyx_L189_error)
            __Pyx_GOTREF(__pyx_t_5);
            __pyx_t_4 = __Pyx_PyObject_CallOneArg(__pyx_v_log, __pyx_t_5); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1445, __pyx_L189_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "cantera/_onedim.pyx":1446
 *                 except CanteraError as e:
 *                     log(str(e))
 *                     solved = False             # <<<<<<<<<<<<<<
 *                 except Exception as e:
 *                     # restore settings before re-raising exception
 */
            __pyx_v_solved = 0;
          }

          /* "cantera/_onedim.pyx":1444
 *                     self.sim.solve(loglevel, <cbool>True)
 *                     solved = True
 *                 except CanteraError as e:             # <<<<<<<<<<<<<<
 *                     log(str(e))
 *                     solved = False
 */
          /*finally:*/ {
            /*normal exit:*/{
              __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
              goto __pyx_L190;
            }
            __pyx_L189_error:;
            /*exception exit:*/{
              __Pyx_PyThreadState_declare
              __Pyx_PyThreadState_assign
              __pyx_t_22 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0; __pyx_t_25 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0;
              __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
              __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_25, &__pyx_t_26, &__pyx_t_27);
              if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_22, &__pyx_t_23, &__pyx_t_24) < 0)) __Pyx_ErrFetch(&__pyx_t_22, &__pyx_t_23, &__pyx_t_24);
              __Pyx_XGOTREF(__pyx_t_22);
              __Pyx_XGOTREF(__pyx_t_23);
              __Pyx_XGOTREF(__pyx_t_24);
              __Pyx_XGOTREF(__pyx_t_25);
              __Pyx_XGOTREF(__pyx_t_26);
              __Pyx_XGOTREF(__pyx_t_27);
              __pyx_t_6 = __pyx_lineno; __pyx_t_20 = __pyx_clineno; __pyx_t_34 = __pyx_filename;
              {
                __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
              }
              if (PY_MAJOR_VERSION >= 3) {
                __Pyx_XGIVEREF(__pyx_t_25);
                __Pyx_XGIVEREF(__pyx_t_26);
                __Pyx_XGIVEREF(__pyx_t_27);
                __Pyx_ExceptionReset(__pyx_t_25, __pyx_t_26, __pyx_t_27);
              }
              __Pyx_XGIVEREF(__pyx_t_22);
              __Pyx_XGIVEREF(__pyx_t_23);
              __Pyx_XGIVEREF(__pyx_t_24);
              __Pyx_ErrRestore(__pyx_t_22, __pyx_t_23, __pyx_t_24);
              __pyx_t_22 = 0; __pyx_t_23 = 0; __pyx_t_24 = 0; __pyx_t_25 = 0; __pyx_t_26 = 0; __pyx_t_27 = 0;
              __pyx_lineno = __pyx_t_6; __pyx_clineno = __pyx_t_20; __pyx_filename = __pyx_t_34;
              goto __pyx_L178_except_error;
            }
            __pyx_L190:;
          }
          __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
          __Pyx_XDECREF(__pyx_t_13); __pyx_t_13 = 0;
          __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
          goto __pyx_L177_exception_handled;
        }

        /* "cantera/_onedim.pyx":1447
 *                     log(str(e))
 *                     solved = False
 *                 except Exception as e:             # <<<<<<<<<<<<<<
 *                     # restore settings before re-raising exception
 *                     set_transport(transport)
 */
        __pyx_t_20 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
        if (__pyx_t_20) {
          __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_15, &__pyx_t_13, &__pyx_t_10) < 0) __PYX_ERR(0, 1447, __pyx_L178_except_error)
          __Pyx_XGOTREF(__pyx_t_15);
          __Pyx_XGOTREF(__pyx_t_13);
          __Pyx_XGOTREF(__pyx_t_10);
          __Pyx_INCREF(__pyx_t_13);
          __pyx_v_e = __pyx_t_13;
          /*try:*/ {

            /* "cantera/_onedim.pyx":1449
 *                 except Exception as e:
 *                     # restore settings before re-raising exception
 *                     set_transport(transport)             # <<<<<<<<<<<<<<
 *                     set_soret(True)
 *                     restore_tolerances()
 */
            __pyx_t_4 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_set_transport(__pyx_v_set_transport, __pyx_v_transport); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1449, __pyx_L200_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "cantera/_onedim.pyx":1450
 *                     # restore settings before re-raising exception
 *                     set_transport(transport)
 *                     set_soret(True)             # <<<<<<<<<<<<<<
 *                     restore_tolerances()
 *                     raise e
 */
            __pyx_t_4 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_4set_soret(__pyx_v_set_soret, Py_True); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1450, __pyx_L200_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "cantera/_onedim.pyx":1451
 *                     set_transport(transport)
 *                     set_soret(True)
 *                     restore_tolerances()             # <<<<<<<<<<<<<<
 *                     raise e
 * 
 */
            __pyx_t_4 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_2restore_tolerances(__pyx_v_restore_tolerances); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1451, __pyx_L200_error)
            __Pyx_GOTREF(__pyx_t_4);
            __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

            /* "cantera/_onedim.pyx":1452
 *                     set_soret(True)
 *                     restore_tolerances()
 *                     raise e             # <<<<<<<<<<<<<<
 * 
 *                 if solved and not self.extinct():
 */
            __Pyx_Raise(__pyx_v_e, 0, 0, 0);
            __PYX_ERR(0, 1452, __pyx_L200_error)
          }

          /* "cantera/_onedim.pyx":1447
 *                     log(str(e))
 *                     solved = False
 *                 except Exception as e:             # <<<<<<<<<<<<<<
 *                     # restore settings before re-raising exception
 *                     set_transport(transport)
 */
          /*finally:*/ {
            __pyx_L200_error:;
            /*exception exit:*/{
              __Pyx_PyThreadState_declare
              __Pyx_PyThreadState_assign
              __pyx_t_27 = 0; __pyx_t_26 = 0; __pyx_t_25 = 0; __pyx_t_24 = 0; __pyx_t_23 = 0; __pyx_t_22 = 0;
              __Pyx_XDECREF(__pyx_t_11); __pyx_t_11 = 0;
              __Pyx_XDECREF(__pyx_t_16); __pyx_t_16 = 0;
              __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
              __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
              if (PY_MAJOR_VERSION >= 3) __Pyx_ExceptionSwap(&__pyx_t_24, &__pyx_t_23, &__pyx_t_22);
              if ((PY_MAJOR_VERSION < 3) || unlikely(__Pyx_GetException(&__pyx_t_27, &__pyx_t_26, &__pyx_t_25) < 0)) __Pyx_ErrFetch(&__pyx_t_27, &__pyx_t_26, &__pyx_t_25);
              __Pyx_XGOTREF(__pyx_t_27);
              __Pyx_XGOTREF(__pyx_t_26);
              __Pyx_XGOTREF(__pyx_t_25);
              __Pyx_XGOTREF(__pyx_t_24);
              __Pyx_XGOTREF(__pyx_t_23);
              __Pyx_XGOTREF(__pyx_t_22);
              __pyx_t_20 = __pyx_lineno; __pyx_t_6 = __pyx_clineno; __pyx_t_35 = __pyx_filename;
              {
                __Pyx_DECREF(__pyx_v_e); __pyx_v_e = 0;
              }
              if (PY_MAJOR_VERSION >= 3) {
                __Pyx_XGIVEREF(__pyx_t_24);
                __Pyx_XGIVEREF(__pyx_t_23);
                __Pyx_XGIVEREF(__pyx_t_22);
                __Pyx_ExceptionReset(__pyx_t_24, __pyx_t_23, __pyx_t_22);
              }
              __Pyx_XGIVEREF(__pyx_t_27);
              __Pyx_XGIVEREF(__pyx_t_26);
              __Pyx_XGIVEREF(__pyx_t_25);
              __Pyx_ErrRestore(__pyx_t_27, __pyx_t_26, __pyx_t_25);
              __pyx_t_27 = 0; __pyx_t_26 = 0; __pyx_t_25 = 0; __pyx_t_24 = 0; __pyx_t_23 = 0; __pyx_t_22 = 0;
              __pyx_lineno = __pyx_t_20; __pyx_clineno = __pyx_t_6; __pyx_filename = __pyx_t_35;
              goto __pyx_L178_except_error;
            }
          }
        }
        goto __pyx_L178_except_error;

        /* "cantera/_onedim.pyx":1441
 *                 # Found a non-extinct solution on the fixed grid
 *                 log('Solving with grid refinement enabled')
 *                 try:             # <<<<<<<<<<<<<<
 *                     self.sim.solve(loglevel, <cbool>True)
 *                     solved = True
 */
        __pyx_L178_except_error:;
        __Pyx_XGIVEREF(__pyx_t_19);
        __Pyx_XGIVEREF(__pyx_t_18);
        __Pyx_XGIVEREF(__pyx_t_17);
        __Pyx_ExceptionReset(__pyx_t_19, __pyx_t_18, __pyx_t_17);
        goto __pyx_L1_error;
        __pyx_L177_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_19);
        __Pyx_XGIVEREF(__pyx_t_18);
        __Pyx_XGIVEREF(__pyx_t_17);
        __Pyx_ExceptionReset(__pyx_t_19, __pyx_t_18, __pyx_t_17);
        __pyx_L183_try_end:;
      }

      /* "cantera/_onedim.pyx":1454
 *                     raise e
 * 
 *                 if solved and not self.extinct():             # <<<<<<<<<<<<<<
 *                     # Found a non-extinct solution on the refined grid
 *                     break
 */
      if (__pyx_v_solved) {
      } else {
        __pyx_t_2 = __pyx_v_solved;
        goto __pyx_L207_bool_binop_done;
      }
      __pyx_t_13 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_extinct); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1454, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __pyx_t_15 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
        __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_13);
        if (likely(__pyx_t_15)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
          __Pyx_INCREF(__pyx_t_15);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_13, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[1] = {__pyx_t_15, };
        __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
        if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1454, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
      }
      __pyx_t_33 = __Pyx_PyObject_IsTrue(__pyx_t_10); if (unlikely((__pyx_t_33 < 0))) __PYX_ERR(0, 1454, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_1 = (!__pyx_t_33);
      __pyx_t_2 = __pyx_t_1;
      __pyx_L207_bool_binop_done:;
      if (__pyx_t_2) {

        /* "cantera/_onedim.pyx":1456
 *                 if solved and not self.extinct():
 *                     # Found a non-extinct solution on the refined grid
 *                     break             # <<<<<<<<<<<<<<
 * 
 *             if self.extinct():
 */
        goto __pyx_L70_break;

        /* "cantera/_onedim.pyx":1454
 *                     raise e
 * 
 *                 if solved and not self.extinct():             # <<<<<<<<<<<<<<
 *                     # Found a non-extinct solution on the refined grid
 *                     break
 */
      }

      /* "cantera/_onedim.pyx":1438
 *                         raise e
 * 
 *             if solved and not self.extinct() and refine_grid:             # <<<<<<<<<<<<<<
 *                 # Found a non-extinct solution on the fixed grid
 *                 log('Solving with grid refinement enabled')
 */
    }

    /* "cantera/_onedim.pyx":1458
 *                     break
 * 
 *             if self.extinct():             # <<<<<<<<<<<<<<
 *                 log('Flame is extinct on {} point grid', N)
 * 
 */
    __pyx_t_13 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_cur_scope->__pyx_v_self), __pyx_n_s_extinct); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1458, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_15 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_15 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_15)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_15);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_15, };
      __pyx_t_10 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_6, 0+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_15); __pyx_t_15 = 0;
      if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1458, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_10); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 1458, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    if (__pyx_t_2) {

      /* "cantera/_onedim.pyx":1459
 * 
 *             if self.extinct():
 *                 log('Flame is extinct on {} point grid', N)             # <<<<<<<<<<<<<<
 * 
 *             if not refine_grid:
 */
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 1459, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_INCREF(__pyx_kp_u_Flame_is_extinct_on_point_grid);
      __Pyx_GIVEREF(__pyx_kp_u_Flame_is_extinct_on_point_grid);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_kp_u_Flame_is_extinct_on_point_grid);
      __Pyx_INCREF(__pyx_v_N);
      __Pyx_GIVEREF(__pyx_v_N);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_v_N);
      __pyx_t_13 = __Pyx_PyObject_Call(__pyx_v_log, __pyx_t_10, NULL); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1459, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_13);
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;

      /* "cantera/_onedim.pyx":1458
 *                     break
 * 
 *             if self.extinct():             # <<<<<<<<<<<<<<
 *                 log('Flame is extinct on {} point grid', N)
 * 
 */
    }

    /* "cantera/_onedim.pyx":1461
 *                 log('Flame is extinct on {} point grid', N)
 * 
 *             if not refine_grid:             # <<<<<<<<<<<<<<
 *                 break
 * 
 */
    __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_refine_grid); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 1461, __pyx_L1_error)
    __pyx_t_1 = (!__pyx_t_2);
    if (__pyx_t_1) {

      /* "cantera/_onedim.pyx":1462
 * 
 *             if not refine_grid:
 *                 break             # <<<<<<<<<<<<<<
 * 
 *         if not solved:
 */
      goto __pyx_L70_break;

      /* "cantera/_onedim.pyx":1461
 *                 log('Flame is extinct on {} point grid', N)
 * 
 *             if not refine_grid:             # <<<<<<<<<<<<<<
 *                 break
 * 
 */
    }

    /* "cantera/_onedim.pyx":1372
 *            nPoints = [len(flow_domains[0].grid), 12, 24, 48]
 * 
 *         for N in nPoints:             # <<<<<<<<<<<<<<
 *             for i,D in enumerate(flow_domains):
 *                 if N > self.get_max_grid_points(D):
 */
  }
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L211_for_end;
  __pyx_L70_break:;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  goto __pyx_L211_for_end;
  __pyx_L211_for_end:;

  /* "cantera/_onedim.pyx":1464
 *                 break
 * 
 *         if not solved:             # <<<<<<<<<<<<<<
 *             raise CanteraError('Could not find a solution for the 1D problem')
 * 
 */
  __pyx_t_1 = (!__pyx_v_solved);
  if (unlikely(__pyx_t_1)) {

    /* "cantera/_onedim.pyx":1465
 * 
 *         if not solved:
 *             raise CanteraError('Could not find a solution for the 1D problem')             # <<<<<<<<<<<<<<
 * 
 *         if solve_multi:
 */
    __Pyx_GetModuleGlobalName(__pyx_t_13, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_13)) __PYX_ERR(0, 1465, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_13);
    __pyx_t_10 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_13))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_13);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_13);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_13, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_kp_u_Could_not_find_a_solution_for_th};
      __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_13, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1465, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
    }
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1465, __pyx_L1_error)

    /* "cantera/_onedim.pyx":1464
 *                 break
 * 
 *         if not solved:             # <<<<<<<<<<<<<<
 *             raise CanteraError('Could not find a solution for the 1D problem')
 * 
 */
  }

  /* "cantera/_onedim.pyx":1467
 *             raise CanteraError('Could not find a solution for the 1D problem')
 * 
 *         if solve_multi:             # <<<<<<<<<<<<<<
 *             log('Solving with multicomponent transport')
 *             set_transport('multicomponent')
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_solve_multi); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1467, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1468
 * 
 *         if solve_multi:
 *             log('Solving with multicomponent transport')             # <<<<<<<<<<<<<<
 *             set_transport('multicomponent')
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_v_log, __pyx_tuple__38, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1468, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1469
 *         if solve_multi:
 *             log('Solving with multicomponent transport')
 *             set_transport('multicomponent')             # <<<<<<<<<<<<<<
 * 
 *         if soret_doms:
 */
    __pyx_t_3 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_set_transport(__pyx_v_set_transport, __pyx_n_u_multicomponent); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1469, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1467
 *             raise CanteraError('Could not find a solution for the 1D problem')
 * 
 *         if solve_multi:             # <<<<<<<<<<<<<<
 *             log('Solving with multicomponent transport')
 *             set_transport('multicomponent')
 */
  }

  /* "cantera/_onedim.pyx":1471
 *             set_transport('multicomponent')
 * 
 *         if soret_doms:             # <<<<<<<<<<<<<<
 *             log('Solving with Soret diffusion')
 *             set_soret(True)
 */
  __pyx_t_1 = (PyList_GET_SIZE(__pyx_cur_scope->__pyx_v_soret_doms) != 0);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1472
 * 
 *         if soret_doms:
 *             log('Solving with Soret diffusion')             # <<<<<<<<<<<<<<
 *             set_soret(True)
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_v_log, __pyx_tuple__39, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1472, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1473
 *         if soret_doms:
 *             log('Solving with Soret diffusion')
 *             set_soret(True)             # <<<<<<<<<<<<<<
 * 
 *         if have_user_tolerances:
 */
    __pyx_t_3 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_4set_soret(__pyx_v_set_soret, Py_True); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1473, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1471
 *             set_transport('multicomponent')
 * 
 *         if soret_doms:             # <<<<<<<<<<<<<<
 *             log('Solving with Soret diffusion')
 *             set_soret(True)
 */
  }

  /* "cantera/_onedim.pyx":1475
 *             set_soret(True)
 * 
 *         if have_user_tolerances:             # <<<<<<<<<<<<<<
 *             log('Solving with user-specified tolerances')
 *             restore_tolerances()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_have_user_tolerances); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1475, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1476
 * 
 *         if have_user_tolerances:
 *             log('Solving with user-specified tolerances')             # <<<<<<<<<<<<<<
 *             restore_tolerances()
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_v_log, __pyx_tuple__40, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1476, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1477
 *         if have_user_tolerances:
 *             log('Solving with user-specified tolerances')
 *             restore_tolerances()             # <<<<<<<<<<<<<<
 * 
 *         # Final call with expensive options enabled
 */
    __pyx_t_3 = __pyx_pf_7cantera_7_onedim_5Sim1D_5solve_2restore_tolerances(__pyx_v_restore_tolerances); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1477, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1475
 *             set_soret(True)
 * 
 *         if have_user_tolerances:             # <<<<<<<<<<<<<<
 *             log('Solving with user-specified tolerances')
 *             restore_tolerances()
 */
  }

  /* "cantera/_onedim.pyx":1480
 * 
 *         # Final call with expensive options enabled
 *         if have_user_tolerances or solve_multi or soret_doms:             # <<<<<<<<<<<<<<
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_cur_scope->__pyx_v_have_user_tolerances); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 1480, __pyx_L1_error)
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L217_bool_binop_done;
  }
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_solve_multi); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 1480, __pyx_L1_error)
  if (!__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L217_bool_binop_done;
  }
  __pyx_t_2 = (PyList_GET_SIZE(__pyx_cur_scope->__pyx_v_soret_doms) != 0);
  __pyx_t_1 = __pyx_t_2;
  __pyx_L217_bool_binop_done:;
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1481
 *         # Final call with expensive options enabled
 *         if have_user_tolerances or solve_multi or soret_doms:
 *             self.sim.solve(loglevel, <cbool>refine_grid)             # <<<<<<<<<<<<<<
 * 
 *     def refine(self, loglevel=1):
 */
    __pyx_t_6 = __Pyx_PyInt_As_int(__pyx_cur_scope->__pyx_v_loglevel); if (unlikely((__pyx_t_6 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1481, __pyx_L1_error)
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_refine_grid); if (unlikely((__pyx_t_7 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1481, __pyx_L1_error)
    try {
      __pyx_cur_scope->__pyx_v_self->sim->solve(__pyx_t_6, ((bool)__pyx_t_7));
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 1481, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":1480
 * 
 *         # Final call with expensive options enabled
 *         if have_user_tolerances or solve_multi or soret_doms:             # <<<<<<<<<<<<<<
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 * 
 */
  }

  /* "cantera/_onedim.pyx":1292
 *         return False
 * 
 *     def solve(self, loglevel=1, refine_grid=True, auto=False):             # <<<<<<<<<<<<<<
 *         """
 *         Solve the problem.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_XDECREF(__pyx_t_16);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_set_transport);
  __Pyx_XDECREF(__pyx_v_restore_tolerances);
  __Pyx_XDECREF(__pyx_v_dom);
  __Pyx_XDECREF(__pyx_v_set_soret);
  __Pyx_XDECREF(__pyx_v_transport);
  __Pyx_XDECREF(__pyx_v_solve_multi);
  __Pyx_XDECREF(__pyx_v_log);
  __Pyx_XDECREF(__pyx_v_flow_domains);
  __Pyx_XDECREF(__pyx_v_zmin);
  __Pyx_XDECREF(__pyx_v_zmax);
  __Pyx_XDECREF(__pyx_v_data);
  __Pyx_XDECREF(__pyx_v_nPoints);
  __Pyx_XDECREF(__pyx_v_N);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_D);
  __Pyx_XDECREF(__pyx_v_e);
  __Pyx_XDECREF(__pyx_gb_7cantera_7_onedim_5Sim1D_5solve_10generator);
  __Pyx_XDECREF(__pyx_8genexpr8__pyx_v_dom);
  __Pyx_XDECREF(__pyx_8genexpr9__pyx_v_dom);
  __Pyx_XDECREF(__pyx_9genexpr10__pyx_v_dom);
  __Pyx_XDECREF(__pyx_9genexpr11__pyx_v_dom);
  __Pyx_XDECREF(__pyx_9genexpr12__pyx_v_dom);
  __Pyx_XDECREF(__pyx_9genexpr13__pyx_v_D);
  __Pyx_XDECREF(__pyx_9genexpr14__pyx_v_D);
  __Pyx_XDECREF(__pyx_9genexpr15__pyx_v_D);
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1483
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 * 
 *     def refine(self, loglevel=1):             # <<<<<<<<<<<<<<
 *         """
 *         Refine the grid, adding points where solution is not adequately
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_47refine(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_46refine, "\n        Refine the grid, adding points where solution is not adequately\n        resolved.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_47refine = {"refine", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_47refine, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_46refine};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_47refine(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_loglevel = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("refine (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_loglevel,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)__pyx_int_1);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_loglevel);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1483, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "refine") < 0)) __PYX_ERR(0, 1483, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_loglevel = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("refine", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 1483, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.refine", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_46refine(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_loglevel);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_46refine(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_loglevel) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("refine", 0);

  /* "cantera/_onedim.pyx":1488
 *         resolved.
 *         """
 *         self.sim.refine(loglevel)             # <<<<<<<<<<<<<<
 * 
 *     def set_refine_criteria(self, domain, ratio=10.0, slope=0.8, curve=0.8,
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_loglevel); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1488, __pyx_L1_error)
  try {
    __pyx_v_self->sim->refine(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1488, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1483
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 * 
 *     def refine(self, loglevel=1):             # <<<<<<<<<<<<<<
 *         """
 *         Refine the grid, adding points where solution is not adequately
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.refine", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1490
 *         self.sim.refine(loglevel)
 * 
 *     def set_refine_criteria(self, domain, ratio=10.0, slope=0.8, curve=0.8,             # <<<<<<<<<<<<<<
 *                           prune=0.05):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_49set_refine_criteria(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_48set_refine_criteria, "\n        Set the criteria used to refine one domain.\n\n        :param domain:\n            domain object, index, or name\n        :param ratio:\n            additional points will be added if the ratio of the spacing on\n            either side of a grid point exceeds this value\n        :param slope:\n            maximum difference in value between two adjacent points, scaled by\n            the maximum difference in the profile (0.0 < slope < 1.0). Adds\n            points in regions of high slope.\n        :param curve:\n            maximum difference in slope between two adjacent intervals, scaled\n            by the maximum difference in the profile (0.0 < curve < 1.0). Adds\n            points in regions of high curvature.\n        :param prune:\n            if the slope or curve criteria are satisfied to the level of\n            'prune', the grid point is assumed not to be needed and is removed.\n            Set prune significantly smaller than 'slope' and 'curve'. Set to\n            zero to disable pruning the grid.\n\n        >>> s.set_refine_criteria(d, ratio=5.0, slope=0.2, curve=0.3, prune=0.03)\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_49set_refine_criteria = {"set_refine_criteria", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_49set_refine_criteria, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_48set_refine_criteria};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_49set_refine_criteria(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  PyObject *__pyx_v_ratio = 0;
  PyObject *__pyx_v_slope = 0;
  PyObject *__pyx_v_curve = 0;
  PyObject *__pyx_v_prune = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_refine_criteria (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,&__pyx_n_s_ratio,&__pyx_n_s_slope,&__pyx_n_s_curve,&__pyx_n_s_prune,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[1] = ((PyObject *)__pyx_float_10_0);
    values[2] = ((PyObject *)__pyx_float_0_8);
    values[3] = ((PyObject *)__pyx_float_0_8);
    values[4] = ((PyObject *)__pyx_float_0_05);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1490, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ratio);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_slope);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_curve);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1490, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_prune);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1490, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_refine_criteria") < 0)) __PYX_ERR(0, 1490, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_domain = values[0];
    __pyx_v_ratio = values[1];
    __pyx_v_slope = values[2];
    __pyx_v_curve = values[3];
    __pyx_v_prune = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_refine_criteria", 0, 1, 5, __pyx_nargs); __PYX_ERR(0, 1490, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_refine_criteria", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_48set_refine_criteria(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain, __pyx_v_ratio, __pyx_v_slope, __pyx_v_curve, __pyx_v_prune);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_48set_refine_criteria(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_ratio, PyObject *__pyx_v_slope, PyObject *__pyx_v_curve, PyObject *__pyx_v_prune) {
  PyObject *__pyx_v_idom = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  size_t __pyx_t_5;
  double __pyx_t_6;
  double __pyx_t_7;
  double __pyx_t_8;
  double __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_refine_criteria", 0);

  /* "cantera/_onedim.pyx":1516
 *         >>> s.set_refine_criteria(d, ratio=5.0, slope=0.2, curve=0.3, prune=0.03)
 *         """
 *         idom = self.domain_index(domain)             # <<<<<<<<<<<<<<
 *         self.sim.setRefineCriteria(idom, ratio, slope, curve, prune)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1516, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_domain};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1516, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_idom = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1517
 *         """
 *         idom = self.domain_index(domain)
 *         self.sim.setRefineCriteria(idom, ratio, slope, curve, prune)             # <<<<<<<<<<<<<<
 * 
 *     def get_refine_criteria(self, domain):
 */
  __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_v_idom); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1517, __pyx_L1_error)
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_v_ratio); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1517, __pyx_L1_error)
  __pyx_t_7 = __pyx_PyFloat_AsDouble(__pyx_v_slope); if (unlikely((__pyx_t_7 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1517, __pyx_L1_error)
  __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_v_curve); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1517, __pyx_L1_error)
  __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_v_prune); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1517, __pyx_L1_error)
  try {
    __pyx_v_self->sim->setRefineCriteria(__pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_t_9);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1517, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1490
 *         self.sim.refine(loglevel)
 * 
 *     def set_refine_criteria(self, domain, ratio=10.0, slope=0.8, curve=0.8,             # <<<<<<<<<<<<<<
 *                           prune=0.05):
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_refine_criteria", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1519
 *         self.sim.setRefineCriteria(idom, ratio, slope, curve, prune)
 * 
 *     def get_refine_criteria(self, domain):             # <<<<<<<<<<<<<<
 *         """
 *         Get a dictionary of the criteria used to refine one domain. The items in
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_51get_refine_criteria(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_50get_refine_criteria, "\n        Get a dictionary of the criteria used to refine one domain. The items in\n        the dictionary are the ``ratio``, ``slope``, ``curve``, and ``prune``,\n        as defined in `~Sim1D.set_refine_criteria`.\n\n        :param domain:\n            domain object, index, or name\n\n        >>> s.set_refine_criteria(d, ratio=5.0, slope=0.2, curve=0.3, prune=0.03)\n        >>> s.get_refine_criteria(d)\n        {'ratio': 5.0, 'slope': 0.2, 'curve': 0.3, 'prune': 0.03}\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_51get_refine_criteria = {"get_refine_criteria", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_51get_refine_criteria, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_50get_refine_criteria};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_51get_refine_criteria(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_refine_criteria (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1519, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_refine_criteria") < 0)) __PYX_ERR(0, 1519, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_domain = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_refine_criteria", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1519, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.get_refine_criteria", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_50get_refine_criteria(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_50get_refine_criteria(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain) {
  PyObject *__pyx_v_idom = NULL;
  std::vector<double>  __pyx_v_c;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  std::vector<double>  __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_refine_criteria", 0);

  /* "cantera/_onedim.pyx":1532
 *         {'ratio': 5.0, 'slope': 0.2, 'curve': 0.3, 'prune': 0.03}
 *         """
 *         idom = self.domain_index(domain)             # <<<<<<<<<<<<<<
 *         c = self.sim.getRefineCriteria(idom)
 *         return {'ratio': c[0], 'slope': c[1], 'curve': c[2], 'prune': c[3]}
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_domain};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1532, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_idom = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1533
 *         """
 *         idom = self.domain_index(domain)
 *         c = self.sim.getRefineCriteria(idom)             # <<<<<<<<<<<<<<
 *         return {'ratio': c[0], 'slope': c[1], 'curve': c[2], 'prune': c[3]}
 * 
 */
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_v_idom); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1533, __pyx_L1_error)
  try {
    __pyx_t_5 = __pyx_v_self->sim->getRefineCriteria(__pyx_t_4);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1533, __pyx_L1_error)
  }
  __pyx_v_c = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_5);

  /* "cantera/_onedim.pyx":1534
 *         idom = self.domain_index(domain)
 *         c = self.sim.getRefineCriteria(idom)
 *         return {'ratio': c[0], 'slope': c[1], 'curve': c[2], 'prune': c[3]}             # <<<<<<<<<<<<<<
 * 
 *     def set_grid_min(self, dz, domain=None):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_c[0])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_ratio, __pyx_t_2) < 0) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_c[1])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_slope, __pyx_t_2) < 0) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_c[2])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_curve, __pyx_t_2) < 0) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble((__pyx_v_c[3])); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_u_prune, __pyx_t_2) < 0) __PYX_ERR(0, 1534, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1519
 *         self.sim.setRefineCriteria(idom, ratio, slope, curve, prune)
 * 
 *     def get_refine_criteria(self, domain):             # <<<<<<<<<<<<<<
 *         """
 *         Get a dictionary of the criteria used to refine one domain. The items in
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.get_refine_criteria", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1536
 *         return {'ratio': c[0], 'slope': c[1], 'curve': c[2], 'prune': c[3]}
 * 
 *     def set_grid_min(self, dz, domain=None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the minimum grid spacing on ``domain``. If ``domain`` is `None`, then
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_53set_grid_min(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_52set_grid_min, "\n        Set the minimum grid spacing on ``domain``. If ``domain`` is `None`, then\n        set the grid spacing for all domains.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_53set_grid_min = {"set_grid_min", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_53set_grid_min, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_52set_grid_min};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_53set_grid_min(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_dz = 0;
  PyObject *__pyx_v_domain = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_grid_min (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_dz,&__pyx_n_s_domain,0};
    PyObject* values[2] = {0,0};
    values[1] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dz)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1536, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1536, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_grid_min") < 0)) __PYX_ERR(0, 1536, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_dz = values[0];
    __pyx_v_domain = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_grid_min", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 1536, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_grid_min", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_52set_grid_min(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_dz, __pyx_v_domain);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_52set_grid_min(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_dz, PyObject *__pyx_v_domain) {
  PyObject *__pyx_v_idom = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_grid_min", 0);

  /* "cantera/_onedim.pyx":1541
 *         set the grid spacing for all domains.
 *         """
 *         if domain is None:             # <<<<<<<<<<<<<<
 *             idom = -1
 *         else:
 */
  __pyx_t_1 = (__pyx_v_domain == Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1542
 *         """
 *         if domain is None:
 *             idom = -1             # <<<<<<<<<<<<<<
 *         else:
 *             idom = self.domain_index(domain)
 */
    __Pyx_INCREF(__pyx_int_neg_1);
    __pyx_v_idom = __pyx_int_neg_1;

    /* "cantera/_onedim.pyx":1541
 *         set the grid spacing for all domains.
 *         """
 *         if domain is None:             # <<<<<<<<<<<<<<
 *             idom = -1
 *         else:
 */
    goto __pyx_L3;
  }

  /* "cantera/_onedim.pyx":1544
 *             idom = -1
 *         else:
 *             idom = self.domain_index(domain)             # <<<<<<<<<<<<<<
 *         self.sim.setGridMin(idom, dz)
 * 
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_index); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1544, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v_domain};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1544, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __pyx_v_idom = __pyx_t_2;
    __pyx_t_2 = 0;
  }
  __pyx_L3:;

  /* "cantera/_onedim.pyx":1545
 *         else:
 *             idom = self.domain_index(domain)
 *         self.sim.setGridMin(idom, dz)             # <<<<<<<<<<<<<<
 * 
 *     def set_max_jac_age(self, ss_age, ts_age):
 */
  __pyx_t_5 = __Pyx_PyInt_As_int(__pyx_v_idom); if (unlikely((__pyx_t_5 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1545, __pyx_L1_error)
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_v_dz); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1545, __pyx_L1_error)
  try {
    __pyx_v_self->sim->setGridMin(__pyx_t_5, __pyx_t_6);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1545, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1536
 *         return {'ratio': c[0], 'slope': c[1], 'curve': c[2], 'prune': c[3]}
 * 
 *     def set_grid_min(self, dz, domain=None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the minimum grid spacing on ``domain``. If ``domain`` is `None`, then
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_grid_min", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1547
 *         self.sim.setGridMin(idom, dz)
 * 
 *     def set_max_jac_age(self, ss_age, ts_age):             # <<<<<<<<<<<<<<
 *         """
 *         Set the maximum number of times the Jacobian will be used before it
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_55set_max_jac_age(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_54set_max_jac_age, "\n        Set the maximum number of times the Jacobian will be used before it\n        must be re-evaluated.\n\n        :param ss_age:\n            age criterion during steady-state mode\n        :param ts_age:\n            age criterion during time-stepping mode\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_55set_max_jac_age = {"set_max_jac_age", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_55set_max_jac_age, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_54set_max_jac_age};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_55set_max_jac_age(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_ss_age = 0;
  PyObject *__pyx_v_ts_age = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_max_jac_age (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_ss_age,&__pyx_n_s_ts_age,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ss_age)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1547, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_ts_age)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1547, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_max_jac_age", 1, 2, 2, 1); __PYX_ERR(0, 1547, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_max_jac_age") < 0)) __PYX_ERR(0, 1547, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_ss_age = values[0];
    __pyx_v_ts_age = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_max_jac_age", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1547, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_max_jac_age", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_54set_max_jac_age(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_ss_age, __pyx_v_ts_age);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_54set_max_jac_age(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_ss_age, PyObject *__pyx_v_ts_age) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_max_jac_age", 0);

  /* "cantera/_onedim.pyx":1557
 *             age criterion during time-stepping mode
 *         """
 *         self.sim.setJacAge(ss_age, ts_age)             # <<<<<<<<<<<<<<
 * 
 *     def set_time_step_factor(self, tfactor):
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_ss_age); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1557, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_As_int(__pyx_v_ts_age); if (unlikely((__pyx_t_2 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1557, __pyx_L1_error)
  __pyx_v_self->sim->setJacAge(__pyx_t_1, __pyx_t_2);

  /* "cantera/_onedim.pyx":1547
 *         self.sim.setGridMin(idom, dz)
 * 
 *     def set_max_jac_age(self, ss_age, ts_age):             # <<<<<<<<<<<<<<
 *         """
 *         Set the maximum number of times the Jacobian will be used before it
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_max_jac_age", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1559
 *         self.sim.setJacAge(ss_age, ts_age)
 * 
 *     def set_time_step_factor(self, tfactor):             # <<<<<<<<<<<<<<
 *         """
 *         Set the factor by which the time step will be increased after a
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_57set_time_step_factor(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_56set_time_step_factor, "\n        Set the factor by which the time step will be increased after a\n        successful step, or decreased after an unsuccessful one.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_57set_time_step_factor = {"set_time_step_factor", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_57set_time_step_factor, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_56set_time_step_factor};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_57set_time_step_factor(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_tfactor = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_time_step_factor (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tfactor,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tfactor)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1559, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_time_step_factor") < 0)) __PYX_ERR(0, 1559, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_tfactor = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_time_step_factor", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1559, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_time_step_factor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_56set_time_step_factor(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_tfactor);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_56set_time_step_factor(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_tfactor) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_time_step_factor", 0);

  /* "cantera/_onedim.pyx":1564
 *         successful step, or decreased after an unsuccessful one.
 *         """
 *         self.sim.setTimeStepFactor(tfactor)             # <<<<<<<<<<<<<<
 * 
 *     def set_min_time_step(self, tsmin):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_tfactor); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1564, __pyx_L1_error)
  __pyx_v_self->sim->setTimeStepFactor(__pyx_t_1);

  /* "cantera/_onedim.pyx":1559
 *         self.sim.setJacAge(ss_age, ts_age)
 * 
 *     def set_time_step_factor(self, tfactor):             # <<<<<<<<<<<<<<
 *         """
 *         Set the factor by which the time step will be increased after a
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_time_step_factor", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1566
 *         self.sim.setTimeStepFactor(tfactor)
 * 
 *     def set_min_time_step(self, tsmin):             # <<<<<<<<<<<<<<
 *         """ Set the minimum time step. """
 *         self.sim.setMinTimeStep(tsmin)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_59set_min_time_step(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_58set_min_time_step, " Set the minimum time step. ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_59set_min_time_step = {"set_min_time_step", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_59set_min_time_step, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_58set_min_time_step};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_59set_min_time_step(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_tsmin = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_min_time_step (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tsmin,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tsmin)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1566, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_min_time_step") < 0)) __PYX_ERR(0, 1566, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_tsmin = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_min_time_step", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1566, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_min_time_step", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_58set_min_time_step(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_tsmin);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_58set_min_time_step(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_tsmin) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_min_time_step", 0);

  /* "cantera/_onedim.pyx":1568
 *     def set_min_time_step(self, tsmin):
 *         """ Set the minimum time step. """
 *         self.sim.setMinTimeStep(tsmin)             # <<<<<<<<<<<<<<
 * 
 *     def set_max_time_step(self, tsmax):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_tsmin); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1568, __pyx_L1_error)
  __pyx_v_self->sim->setMinTimeStep(__pyx_t_1);

  /* "cantera/_onedim.pyx":1566
 *         self.sim.setTimeStepFactor(tfactor)
 * 
 *     def set_min_time_step(self, tsmin):             # <<<<<<<<<<<<<<
 *         """ Set the minimum time step. """
 *         self.sim.setMinTimeStep(tsmin)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_min_time_step", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1570
 *         self.sim.setMinTimeStep(tsmin)
 * 
 *     def set_max_time_step(self, tsmax):             # <<<<<<<<<<<<<<
 *         """ Set the maximum time step. """
 *         self.sim.setMaxTimeStep(tsmax)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_61set_max_time_step(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_60set_max_time_step, " Set the maximum time step. ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_61set_max_time_step = {"set_max_time_step", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_61set_max_time_step, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_60set_max_time_step};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_61set_max_time_step(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_tsmax = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_max_time_step (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_tsmax,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_tsmax)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1570, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_max_time_step") < 0)) __PYX_ERR(0, 1570, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_tsmax = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_max_time_step", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1570, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_max_time_step", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_60set_max_time_step(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_tsmax);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_60set_max_time_step(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_tsmax) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_max_time_step", 0);

  /* "cantera/_onedim.pyx":1572
 *     def set_max_time_step(self, tsmax):
 *         """ Set the maximum time step. """
 *         self.sim.setMaxTimeStep(tsmax)             # <<<<<<<<<<<<<<
 * 
 *     property fixed_temperature:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_tsmax); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1572, __pyx_L1_error)
  __pyx_v_self->sim->setMaxTimeStep(__pyx_t_1);

  /* "cantera/_onedim.pyx":1570
 *         self.sim.setMinTimeStep(tsmin)
 * 
 *     def set_max_time_step(self, tsmax):             # <<<<<<<<<<<<<<
 *         """ Set the maximum time step. """
 *         self.sim.setMaxTimeStep(tsmax)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_max_time_step", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1579
 *         propagating flame.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.fixedTemperature()
 *         def __set__(self, T):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_17fixed_temperature_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_17fixed_temperature_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_17fixed_temperature___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_17fixed_temperature___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":1580
 *         """
 *         def __get__(self):
 *             return self.sim.fixedTemperature()             # <<<<<<<<<<<<<<
 *         def __set__(self, T):
 *             self.sim.setFixedTemperature(T)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->sim->fixedTemperature()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1580, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1579
 *         propagating flame.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.fixedTemperature()
 *         def __set__(self, T):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.fixed_temperature.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1581
 *         def __get__(self):
 *             return self.sim.fixedTemperature()
 *         def __set__(self, T):             # <<<<<<<<<<<<<<
 *             self.sim.setFixedTemperature(T)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_17fixed_temperature_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_T); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_17fixed_temperature_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_T) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_17fixed_temperature_2__set__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), ((PyObject *)__pyx_v_T));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D_17fixed_temperature_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_T) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/_onedim.pyx":1582
 *             return self.sim.fixedTemperature()
 *         def __set__(self, T):
 *             self.sim.setFixedTemperature(T)             # <<<<<<<<<<<<<<
 * 
 *     property fixed_temperature_location:
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_T); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1582, __pyx_L1_error)
  try {
    __pyx_v_self->sim->setFixedTemperature(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1582, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1581
 *         def __get__(self):
 *             return self.sim.fixedTemperature()
 *         def __set__(self, T):             # <<<<<<<<<<<<<<
 *             self.sim.setFixedTemperature(T)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.fixed_temperature.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1589
 *         propagating flame.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.fixedTemperatureLocation()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_26fixed_temperature_location_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_26fixed_temperature_location_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_26fixed_temperature_location___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_26fixed_temperature_location___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":1590
 *         """
 *         def __get__(self):
 *             return self.sim.fixedTemperatureLocation()             # <<<<<<<<<<<<<<
 * 
 *     def save(self, filename='soln.yaml', name='solution', description=None,
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->sim->fixedTemperatureLocation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1589
 *         propagating flame.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.fixedTemperatureLocation()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.fixed_temperature_location.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1592
 *             return self.sim.fixedTemperatureLocation()
 * 
 *     def save(self, filename='soln.yaml', name='solution', description=None,             # <<<<<<<<<<<<<<
 *              loglevel=None, *, overwrite=False, compression=0, basis=None):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_63save(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_62save, "\n        Save current simulation data to a data file (CSV, YAML or HDF).\n\n        In order to save the content of the current object, individual domains are\n        converted to `SolutionArray` objects and saved using the `~SolutionArray.save`\n        method. For HDF and YAML output, all domains are written to a single container\n        file with shared header information. Simulation settings of individual domains\n        are preserved as meta data of the corresponding `SolutionArray` objects.\n        For CSV files, only state and auxiliary data of the main 1D domain are saved.\n\n        The complete state of the current object can be restored from HDF and YAML\n        container files using the `restore` method, while individual domains can be\n        loaded using `SolutionArray.restore` for further analysis. While CSV files do\n        not contain complete information, they can be used for setting initial states\n        of individual simulation objects (example: `~FreeFlame.set_initial_guess`).\n\n        :param filename:\n            Name of output file (CSV, YAML or HDF)\n        :param name:\n            Identifier of storage location within the container file; this node/group\n            contains header information and multiple subgroups holding domain-specific\n            `SolutionArray` data (YAML/HDF only).\n        :param description:\n            Custom comment describing the dataset to be stored (YAML/HDF only).\n        :param overwrite:\n            Force overwrite if file and/or data entry exists; optional (default=`False`)\n        :param compression:\n            Compression level (0-9); optional (default=0; HDF only)\n        :param basis:\n            Output mass (``Y``/``mass``) or mole (``Y``/``mass``) fractions;\n            if not specified (`None`), the native basis of the underlying `ThermoPhase`\n            manager is used.\n\n        >>> s.save(filename='save.yaml', name='energy_off',\n        ...        description='solution"" with energy eqn. disabled')\n\n        .. versionchanged:: 3.0\n            Argument loglevel is no longer supported\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_63save = {"save", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_63save, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_62save};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_63save(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_filename = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_description = 0;
  PyObject *__pyx_v_loglevel = 0;
  PyObject *__pyx_v_overwrite = 0;
  PyObject *__pyx_v_compression = 0;
  PyObject *__pyx_v_basis = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("save (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_filename,&__pyx_n_s_name,&__pyx_n_s_description,&__pyx_n_s_loglevel,&__pyx_n_s_overwrite,&__pyx_n_s_compression,&__pyx_n_s_basis,0};
    PyObject* values[7] = {0,0,0,0,0,0,0};
    values[0] = ((PyObject *)__pyx_kp_u_soln_yaml);
    values[1] = ((PyObject *)__pyx_n_u_solution);
    values[2] = ((PyObject *)Py_None);

    /* "cantera/_onedim.pyx":1593
 * 
 *     def save(self, filename='soln.yaml', name='solution', description=None,
 *              loglevel=None, *, overwrite=False, compression=0, basis=None):             # <<<<<<<<<<<<<<
 *         """
 *         Save current simulation data to a data file (CSV, YAML or HDF).
 */
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_False);
    values[5] = ((PyObject *)__pyx_int_0);
    values[6] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_filename);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1592, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_name);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1592, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_description);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1592, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_loglevel);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1592, __pyx_L3_error)
        }
      }
      if (kw_args > 0 && likely(kw_args <= 3)) {
        Py_ssize_t index;
        for (index = 4; index < 7 && kw_args > 0; index++) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
          if (value) { values[index] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1592, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "save") < 0)) __PYX_ERR(0, 1592, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_filename = values[0];
    __pyx_v_name = values[1];
    __pyx_v_description = values[2];
    __pyx_v_loglevel = values[3];
    __pyx_v_overwrite = values[4];
    __pyx_v_compression = values[5];
    __pyx_v_basis = values[6];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("save", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 1592, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.save", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_62save(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_filename, __pyx_v_name, __pyx_v_description, __pyx_v_loglevel, __pyx_v_overwrite, __pyx_v_compression, __pyx_v_basis);

  /* "cantera/_onedim.pyx":1592
 *             return self.sim.fixedTemperatureLocation()
 * 
 *     def save(self, filename='soln.yaml', name='solution', description=None,             # <<<<<<<<<<<<<<
 *              loglevel=None, *, overwrite=False, compression=0, basis=None):
 *         """
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_62save(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_name, PyObject *__pyx_v_description, PyObject *__pyx_v_loglevel, PyObject *__pyx_v_overwrite, PyObject *__pyx_v_compression, PyObject *__pyx_v_basis) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  std::string __pyx_t_4;
  std::string __pyx_t_5;
  std::string __pyx_t_6;
  bool __pyx_t_7;
  int __pyx_t_8;
  std::string __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("save", 0);

  /* "cantera/_onedim.pyx":1633
 *             Argument loglevel is no longer supported
 *         """
 *         if loglevel is not None:             # <<<<<<<<<<<<<<
 *             warnings.warn("Sim1D.save: Argument 'loglevel' is deprecated and will be "
 *                 "ignored.", DeprecationWarning)
 */
  __pyx_t_1 = (__pyx_v_loglevel != Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1634
 *         """
 *         if loglevel is not None:
 *             warnings.warn("Sim1D.save: Argument 'loglevel' is deprecated and will be "             # <<<<<<<<<<<<<<
 *                 "ignored.", DeprecationWarning)
 *         self.sim.save(stringify(str(filename)), stringify(name),
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_warnings); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1634, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_warn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1634, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":1635
 *         if loglevel is not None:
 *             warnings.warn("Sim1D.save: Argument 'loglevel' is deprecated and will be "
 *                 "ignored.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *         self.sim.save(stringify(str(filename)), stringify(name),
 *                       stringify(description), overwrite, compression, stringify(basis))
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__41, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1634, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":1633
 *             Argument loglevel is no longer supported
 *         """
 *         if loglevel is not None:             # <<<<<<<<<<<<<<
 *             warnings.warn("Sim1D.save: Argument 'loglevel' is deprecated and will be "
 *                 "ignored.", DeprecationWarning)
 */
  }

  /* "cantera/_onedim.pyx":1636
 *             warnings.warn("Sim1D.save: Argument 'loglevel' is deprecated and will be "
 *                 "ignored.", DeprecationWarning)
 *         self.sim.save(stringify(str(filename)), stringify(name),             # <<<<<<<<<<<<<<
 *                       stringify(description), overwrite, compression, stringify(basis))
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_v_filename); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __pyx_f_7cantera_6_utils_stringify(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1636, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_name); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1636, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1637
 *                 "ignored.", DeprecationWarning)
 *         self.sim.save(stringify(str(filename)), stringify(name),
 *                       stringify(description), overwrite, compression, stringify(basis))             # <<<<<<<<<<<<<<
 * 
 *     def restore(self, filename='soln.yaml', name='solution', loglevel=None):
 */
  __pyx_t_6 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_description); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1637, __pyx_L1_error)
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_overwrite); if (unlikely((__pyx_t_7 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1637, __pyx_L1_error)
  __pyx_t_8 = __Pyx_PyInt_As_int(__pyx_v_compression); if (unlikely((__pyx_t_8 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1637, __pyx_L1_error)
  __pyx_t_9 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_basis); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1637, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1636
 *             warnings.warn("Sim1D.save: Argument 'loglevel' is deprecated and will be "
 *                 "ignored.", DeprecationWarning)
 *         self.sim.save(stringify(str(filename)), stringify(name),             # <<<<<<<<<<<<<<
 *                       stringify(description), overwrite, compression, stringify(basis))
 * 
 */
  try {
    __pyx_v_self->sim->save(__pyx_t_4, __pyx_t_5, __pyx_t_6, __pyx_t_7, __pyx_t_8, __pyx_t_9);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1636, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1592
 *             return self.sim.fixedTemperatureLocation()
 * 
 *     def save(self, filename='soln.yaml', name='solution', description=None,             # <<<<<<<<<<<<<<
 *              loglevel=None, *, overwrite=False, compression=0, basis=None):
 *         """
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.save", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1639
 *                       stringify(description), overwrite, compression, stringify(basis))
 * 
 *     def restore(self, filename='soln.yaml', name='solution', loglevel=None):             # <<<<<<<<<<<<<<
 *         """Retrieve data and settings from a previously saved simulation.
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_65restore(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_64restore, "Retrieve data and settings from a previously saved simulation.\n\n        This method restores a simulation object from YAML or HDF data previously saved\n        using the `save` method.\n\n        :param filename:\n            Name of container file (YAML or HDF)\n        :param name:\n            Identifier of location within the container file; this node/group contains\n            header information and subgroups with domain-specific `SolutionArray` data\n        :param loglevel:\n            Amount of logging information to display while restoring,\n            from 0 (disabled) to 2 (most verbose).\n        :return:\n            Dictionary containing header information\n\n        >>> s.restore(filename='save.yaml', name='energy_off')\n\n        .. versionchanged:: 3.0\n            Implemented return value for meta data; loglevel is no longer supported\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_65restore = {"restore", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_65restore, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_64restore};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_65restore(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_filename = 0;
  PyObject *__pyx_v_name = 0;
  PyObject *__pyx_v_loglevel = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("restore (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_filename,&__pyx_n_s_name,&__pyx_n_s_loglevel,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)__pyx_kp_u_soln_yaml);
    values[1] = ((PyObject *)__pyx_n_u_solution);
    values[2] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_filename);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_name);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1639, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_loglevel);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1639, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "restore") < 0)) __PYX_ERR(0, 1639, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_filename = values[0];
    __pyx_v_name = values[1];
    __pyx_v_loglevel = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("restore", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1639, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.restore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_64restore(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_filename, __pyx_v_name, __pyx_v_loglevel);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_64restore(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_filename, PyObject *__pyx_v_name, PyObject *__pyx_v_loglevel) {
  Cantera::AnyMap __pyx_v_header;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  std::string __pyx_t_4;
  std::string __pyx_t_5;
  Cantera::AnyMap __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("restore", 0);

  /* "cantera/_onedim.pyx":1661
 *             Implemented return value for meta data; loglevel is no longer supported
 *         """
 *         if loglevel is not None:             # <<<<<<<<<<<<<<
 *             warnings.warn("Sim1D.restore: Argument 'loglevel' is deprecated and will be"
 *                  " ignored.", DeprecationWarning)
 */
  __pyx_t_1 = (__pyx_v_loglevel != Py_None);
  if (__pyx_t_1) {

    /* "cantera/_onedim.pyx":1662
 *         """
 *         if loglevel is not None:
 *             warnings.warn("Sim1D.restore: Argument 'loglevel' is deprecated and will be"             # <<<<<<<<<<<<<<
 *                  " ignored.", DeprecationWarning)
 *         cdef CxxAnyMap header
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_warnings); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1662, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_warn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1662, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":1663
 *         if loglevel is not None:
 *             warnings.warn("Sim1D.restore: Argument 'loglevel' is deprecated and will be"
 *                  " ignored.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *         cdef CxxAnyMap header
 *         header = self.sim.restore(stringify(str(filename)), stringify(name))
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__42, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1662, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/_onedim.pyx":1661
 *             Implemented return value for meta data; loglevel is no longer supported
 *         """
 *         if loglevel is not None:             # <<<<<<<<<<<<<<
 *             warnings.warn("Sim1D.restore: Argument 'loglevel' is deprecated and will be"
 *                  " ignored.", DeprecationWarning)
 */
  }

  /* "cantera/_onedim.pyx":1665
 *                  " ignored.", DeprecationWarning)
 *         cdef CxxAnyMap header
 *         header = self.sim.restore(stringify(str(filename)), stringify(name))             # <<<<<<<<<<<<<<
 *         self._initialized = True
 *         return anymap_to_py(header)
 */
  __pyx_t_2 = __Pyx_PyObject_Str(__pyx_v_filename); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1665, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __pyx_f_7cantera_6_utils_stringify(__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1665, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_name); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1665, __pyx_L1_error)
  try {
    __pyx_t_6 = __pyx_v_self->sim->restore(__pyx_t_4, __pyx_t_5);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1665, __pyx_L1_error)
  }
  __pyx_v_header = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_6);

  /* "cantera/_onedim.pyx":1666
 *         cdef CxxAnyMap header
 *         header = self.sim.restore(stringify(str(filename)), stringify(name))
 *         self._initialized = True             # <<<<<<<<<<<<<<
 *         return anymap_to_py(header)
 * 
 */
  __Pyx_INCREF(Py_True);
  __Pyx_GIVEREF(Py_True);
  __Pyx_GOTREF(__pyx_v_self->_initialized);
  __Pyx_DECREF(__pyx_v_self->_initialized);
  __pyx_v_self->_initialized = Py_True;

  /* "cantera/_onedim.pyx":1667
 *         header = self.sim.restore(stringify(str(filename)), stringify(name))
 *         self._initialized = True
 *         return anymap_to_py(header)             # <<<<<<<<<<<<<<
 * 
 *     def restore_time_stepping_solution(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __pyx_f_7cantera_6_utils_anymap_to_py(__pyx_v_header); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1667, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1639
 *                       stringify(description), overwrite, compression, stringify(basis))
 * 
 *     def restore(self, filename='soln.yaml', name='solution', loglevel=None):             # <<<<<<<<<<<<<<
 *         """Retrieve data and settings from a previously saved simulation.
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.restore", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1669
 *         return anymap_to_py(header)
 * 
 *     def restore_time_stepping_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the current solution vector to the last successful time-stepping
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_67restore_time_stepping_solution(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_66restore_time_stepping_solution, "\n        Set the current solution vector to the last successful time-stepping\n        solution. This can be used to examine the solver progress after a failed\n        integration.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_67restore_time_stepping_solution = {"restore_time_stepping_solution", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_67restore_time_stepping_solution, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_66restore_time_stepping_solution};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_67restore_time_stepping_solution(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("restore_time_stepping_solution (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("restore_time_stepping_solution", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "restore_time_stepping_solution", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_66restore_time_stepping_solution(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_66restore_time_stepping_solution(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("restore_time_stepping_solution", 0);

  /* "cantera/_onedim.pyx":1675
 *         integration.
 *         """
 *         self.sim.restoreTimeSteppingSolution()             # <<<<<<<<<<<<<<
 * 
 *     def restore_steady_solution(self):
 */
  try {
    __pyx_v_self->sim->restoreTimeSteppingSolution();
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1675, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1669
 *         return anymap_to_py(header)
 * 
 *     def restore_time_stepping_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the current solution vector to the last successful time-stepping
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.restore_time_stepping_solution", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1677
 *         self.sim.restoreTimeSteppingSolution()
 * 
 *     def restore_steady_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the current solution vector to the last successful steady-state
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_69restore_steady_solution(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_68restore_steady_solution, "\n        Set the current solution vector to the last successful steady-state\n        solution. This can be used to examine the solver progress after a\n        failure during grid refinement.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_69restore_steady_solution = {"restore_steady_solution", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_69restore_steady_solution, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_68restore_steady_solution};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_69restore_steady_solution(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("restore_steady_solution (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("restore_steady_solution", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "restore_steady_solution", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_68restore_steady_solution(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_68restore_steady_solution(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("restore_steady_solution", 0);

  /* "cantera/_onedim.pyx":1683
 *         failure during grid refinement.
 *         """
 *         self.sim.restoreSteadySolution()             # <<<<<<<<<<<<<<
 * 
 *     def show_stats(self, print_time=True):
 */
  try {
    __pyx_v_self->sim->restoreSteadySolution();
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1683, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1677
 *         self.sim.restoreTimeSteppingSolution()
 * 
 *     def restore_steady_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the current solution vector to the last successful steady-state
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.restore_steady_solution", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1685
 *         self.sim.restoreSteadySolution()
 * 
 *     def show_stats(self, print_time=True):             # <<<<<<<<<<<<<<
 *         """
 *         Show the statistics for the last solution.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_71show_stats(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_70show_stats, "\n        Show the statistics for the last solution.\n\n        If invoked with no arguments or with a non-zero argument, the timing\n        statistics will be printed. Otherwise, the timing will not be printed.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_71show_stats = {"show_stats", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_71show_stats, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_70show_stats};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_71show_stats(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_print_time = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("show_stats (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_print_time,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_print_time);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1685, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "show_stats") < 0)) __PYX_ERR(0, 1685, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_print_time = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("show_stats", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 1685, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.show_stats", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_70show_stats(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_print_time);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_70show_stats(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_print_time) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("show_stats", 0);

  /* "cantera/_onedim.pyx":1692
 *         statistics will be printed. Otherwise, the timing will not be printed.
 *         """
 *         self.sim.writeStats(print_time)             # <<<<<<<<<<<<<<
 * 
 *     def clear_stats(self):
 */
  __pyx_t_1 = __Pyx_PyInt_As_int(__pyx_v_print_time); if (unlikely((__pyx_t_1 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1692, __pyx_L1_error)
  try {
    __pyx_v_self->sim->writeStats(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1692, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1685
 *         self.sim.restoreSteadySolution()
 * 
 *     def show_stats(self, print_time=True):             # <<<<<<<<<<<<<<
 *         """
 *         Show the statistics for the last solution.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.show_stats", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1694
 *         self.sim.writeStats(print_time)
 * 
 *     def clear_stats(self):             # <<<<<<<<<<<<<<
 *         """
 *         Clear solver statistics.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_73clear_stats(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_72clear_stats, "\n        Clear solver statistics.\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_73clear_stats = {"clear_stats", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_73clear_stats, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_72clear_stats};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_73clear_stats(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear_stats (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("clear_stats", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "clear_stats", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_72clear_stats(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_72clear_stats(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear_stats", 0);

  /* "cantera/_onedim.pyx":1698
 *         Clear solver statistics.
 *         """
 *         self.sim.clearStats()             # <<<<<<<<<<<<<<
 * 
 *     def solve_adjoint(self, perturb, n_params, dgdx, g=None, dp=1e-5):
 */
  __pyx_v_self->sim->clearStats();

  /* "cantera/_onedim.pyx":1694
 *         self.sim.writeStats(print_time)
 * 
 *     def clear_stats(self):             # <<<<<<<<<<<<<<
 *         """
 *         Clear solver statistics.
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1700
 *         self.sim.clearStats()
 * 
 *     def solve_adjoint(self, perturb, n_params, dgdx, g=None, dp=1e-5):             # <<<<<<<<<<<<<<
 *         """
 *         Find the sensitivities of an objective function using an adjoint method.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_75solve_adjoint(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_74solve_adjoint, "\n        Find the sensitivities of an objective function using an adjoint method.\n\n        For an objective function :math:`g(x, p)` where :math:`x` is the state\n        vector of the system and :math:`p` is a vector of parameters, this\n        computes the vector of sensitivities :math:`dg/dp`. This assumes that\n        the system of equations has already been solved to find :math:`x`.\n\n        :param perturb:\n            A function with the signature ``perturb(sim, i, dp)`` which\n            perturbs parameter ``i`` by a relative factor of ``dp``. To\n            perturb a reaction rate constant, this function could be defined\n            as::\n\n                def perturb(sim, i, dp):\n                    sim.gas.set_multiplier(1+dp, i)\n\n            Calling ``perturb(sim, i, 0)`` should restore that parameter to its\n            default value.\n        :param n_params:\n            The length of the vector of sensitivity parameters\n        :param dgdx:\n            The vector of partial derivatives of the function :math:`g(x, p)`\n            with respect to the system state :math:`x`.\n        :param g:\n            A function with the signature ``value = g(sim)`` which computes the\n            value of :math:`g(x,p)` at the current system state. This is used to\n            compute :math:`\\partial g/\\partial p`. If this is identically zero\n            (that is, :math:`g` is independent of :math:`p`) then this argument may\n            be omitted.\n        :param dp:\n            A relative value by which to perturb each parameter\n        ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_75solve_adjoint = {"solve_adjoint", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_75solve_adjoint, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_74solve_adjoint};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_75solve_adjoint(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_perturb = 0;
  PyObject *__pyx_v_n_params = 0;
  PyObject *__pyx_v_dgdx = 0;
  PyObject *__pyx_v_g = 0;
  PyObject *__pyx_v_dp = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("solve_adjoint (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_perturb,&__pyx_n_s_n_params,&__pyx_n_s_dgdx,&__pyx_n_s_g,&__pyx_n_s_dp,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)__pyx_float_1eneg_5);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_perturb)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1700, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_n_params)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1700, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("solve_adjoint", 0, 3, 5, 1); __PYX_ERR(0, 1700, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dgdx)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1700, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("solve_adjoint", 0, 3, 5, 2); __PYX_ERR(0, 1700, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_g);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1700, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_dp);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1700, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "solve_adjoint") < 0)) __PYX_ERR(0, 1700, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_FASTCALL(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_perturb = values[0];
    __pyx_v_n_params = values[1];
    __pyx_v_dgdx = values[2];
    __pyx_v_g = values[3];
    __pyx_v_dp = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("solve_adjoint", 0, 3, 5, __pyx_nargs); __PYX_ERR(0, 1700, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve_adjoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_74solve_adjoint(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_perturb, __pyx_v_n_params, __pyx_v_dgdx, __pyx_v_g, __pyx_v_dp);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_74solve_adjoint(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_perturb, PyObject *__pyx_v_n_params, PyObject *__pyx_v_dgdx, PyObject *__pyx_v_g, PyObject *__pyx_v_dp) {
  size_t __pyx_v_n_vars;
  PyArrayObject *__pyx_v_L = 0;
  PyArrayObject *__pyx_v_gg = 0;
  PyArrayObject *__pyx_v_dgdp = 0;
  PyArrayObject *__pyx_v_dfdp = 0;
  PyArrayObject *__pyx_v_fplus = 0;
  PyArrayObject *__pyx_v_fminus = 0;
  PyObject *__pyx_v_gplus = NULL;
  PyObject *__pyx_v_gminus = NULL;
  PyObject *__pyx_v_i = NULL;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_L;
  __Pyx_Buffer __pyx_pybuffer_L;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_dfdp;
  __Pyx_Buffer __pyx_pybuffer_dfdp;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_dgdp;
  __Pyx_Buffer __pyx_pybuffer_dgdp;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_fminus;
  __Pyx_Buffer __pyx_pybuffer_fminus;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_fplus;
  __Pyx_Buffer __pyx_pybuffer_fplus;
  __Pyx_LocalBuf_ND __pyx_pybuffernd_gg;
  __Pyx_Buffer __pyx_pybuffer_gg;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  PyArrayObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyArrayObject *__pyx_t_8 = NULL;
  Py_ssize_t __pyx_t_9;
  Py_ssize_t __pyx_t_10;
  PyArrayObject *__pyx_t_11 = NULL;
  PyArrayObject *__pyx_t_12 = NULL;
  PyArrayObject *__pyx_t_13 = NULL;
  PyArrayObject *__pyx_t_14 = NULL;
  Py_ssize_t __pyx_t_15;
  PyObject *(*__pyx_t_16)(PyObject *);
  int __pyx_t_17;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("solve_adjoint", 0);
  __pyx_pybuffer_L.pybuffer.buf = NULL;
  __pyx_pybuffer_L.refcount = 0;
  __pyx_pybuffernd_L.data = NULL;
  __pyx_pybuffernd_L.rcbuffer = &__pyx_pybuffer_L;
  __pyx_pybuffer_gg.pybuffer.buf = NULL;
  __pyx_pybuffer_gg.refcount = 0;
  __pyx_pybuffernd_gg.data = NULL;
  __pyx_pybuffernd_gg.rcbuffer = &__pyx_pybuffer_gg;
  __pyx_pybuffer_dgdp.pybuffer.buf = NULL;
  __pyx_pybuffer_dgdp.refcount = 0;
  __pyx_pybuffernd_dgdp.data = NULL;
  __pyx_pybuffernd_dgdp.rcbuffer = &__pyx_pybuffer_dgdp;
  __pyx_pybuffer_dfdp.pybuffer.buf = NULL;
  __pyx_pybuffer_dfdp.refcount = 0;
  __pyx_pybuffernd_dfdp.data = NULL;
  __pyx_pybuffernd_dfdp.rcbuffer = &__pyx_pybuffer_dfdp;
  __pyx_pybuffer_fplus.pybuffer.buf = NULL;
  __pyx_pybuffer_fplus.refcount = 0;
  __pyx_pybuffernd_fplus.data = NULL;
  __pyx_pybuffernd_fplus.rcbuffer = &__pyx_pybuffer_fplus;
  __pyx_pybuffer_fminus.pybuffer.buf = NULL;
  __pyx_pybuffer_fminus.refcount = 0;
  __pyx_pybuffernd_fminus.data = NULL;
  __pyx_pybuffernd_fminus.rcbuffer = &__pyx_pybuffer_fminus;

  /* "cantera/_onedim.pyx":1734
 *             A relative value by which to perturb each parameter
 *         """
 *         n_vars = self.sim.size()             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=1] L = np.empty(n_vars)
 *         cdef np.ndarray[np.double_t, ndim=1] gg = \
 */
  __pyx_v_n_vars = __pyx_v_self->sim->size();

  /* "cantera/_onedim.pyx":1735
 *         """
 *         n_vars = self.sim.size()
 *         cdef np.ndarray[np.double_t, ndim=1] L = np.empty(n_vars)             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=1] gg = \
 *                 np.ascontiguousarray(dgdx, dtype=np.double)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1735, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_empty); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1735, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(__pyx_v_n_vars); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1735, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1735, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (!(likely(((__pyx_t_1) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_1, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1735, __pyx_L1_error)
  __pyx_t_6 = ((PyArrayObject *)__pyx_t_1);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_L.rcbuffer->pybuffer, (PyObject*)__pyx_t_6, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_L = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_L.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 1735, __pyx_L1_error)
    } else {__pyx_pybuffernd_L.diminfo[0].strides = __pyx_pybuffernd_L.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_L.diminfo[0].shape = __pyx_pybuffernd_L.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_6 = 0;
  __pyx_v_L = ((PyArrayObject *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1737
 *         cdef np.ndarray[np.double_t, ndim=1] L = np.empty(n_vars)
 *         cdef np.ndarray[np.double_t, ndim=1] gg = \
 *                 np.ascontiguousarray(dgdx, dtype=np.double)             # <<<<<<<<<<<<<<
 * 
 *         self.sim.solveAdjoint(&gg[0], &L[0])
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_ascontiguousarray); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_dgdx);
  __Pyx_GIVEREF(__pyx_v_dgdx);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_dgdx);
  __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_7 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_double); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_dtype, __pyx_t_7) < 0) __PYX_ERR(0, 1737, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_1, __pyx_t_2); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1737, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1737, __pyx_L1_error)
  __pyx_t_8 = ((PyArrayObject *)__pyx_t_7);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_gg.rcbuffer->pybuffer, (PyObject*)__pyx_t_8, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_gg = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_gg.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 1736, __pyx_L1_error)
    } else {__pyx_pybuffernd_gg.diminfo[0].strides = __pyx_pybuffernd_gg.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_gg.diminfo[0].shape = __pyx_pybuffernd_gg.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_8 = 0;
  __pyx_v_gg = ((PyArrayObject *)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "cantera/_onedim.pyx":1739
 *                 np.ascontiguousarray(dgdx, dtype=np.double)
 * 
 *         self.sim.solveAdjoint(&gg[0], &L[0])             # <<<<<<<<<<<<<<
 * 
 *         cdef np.ndarray[np.double_t, ndim=1] dgdp = np.empty(n_params)
 */
  __pyx_t_9 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_9 < 0) {
    __pyx_t_9 += __pyx_pybuffernd_gg.diminfo[0].shape;
    if (unlikely(__pyx_t_9 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_9 >= __pyx_pybuffernd_gg.diminfo[0].shape)) __pyx_t_5 = 0;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(0, 1739, __pyx_L1_error)
  }
  __pyx_t_10 = 0;
  __pyx_t_5 = -1;
  if (__pyx_t_10 < 0) {
    __pyx_t_10 += __pyx_pybuffernd_L.diminfo[0].shape;
    if (unlikely(__pyx_t_10 < 0)) __pyx_t_5 = 0;
  } else if (unlikely(__pyx_t_10 >= __pyx_pybuffernd_L.diminfo[0].shape)) __pyx_t_5 = 0;
  if (unlikely(__pyx_t_5 != -1)) {
    __Pyx_RaiseBufferIndexError(__pyx_t_5);
    __PYX_ERR(0, 1739, __pyx_L1_error)
  }
  try {
    __pyx_v_self->sim->solveAdjoint((&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_gg.rcbuffer->pybuffer.buf, __pyx_t_9, __pyx_pybuffernd_gg.diminfo[0].strides))), (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_L.rcbuffer->pybuffer.buf, __pyx_t_10, __pyx_pybuffernd_L.diminfo[0].strides))));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1739, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1741
 *         self.sim.solveAdjoint(&gg[0], &L[0])
 * 
 *         cdef np.ndarray[np.double_t, ndim=1] dgdp = np.empty(n_params)             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=2] dfdp = np.empty((n_vars, n_params))
 *         cdef np.ndarray[np.double_t, ndim=1] fplus = np.empty(n_vars)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_empty); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1741, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_2 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_2)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_2);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_2, __pyx_v_n_params};
    __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1741, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1741, __pyx_L1_error)
  __pyx_t_11 = ((PyArrayObject *)__pyx_t_7);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_dgdp.rcbuffer->pybuffer, (PyObject*)__pyx_t_11, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_dgdp = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_dgdp.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 1741, __pyx_L1_error)
    } else {__pyx_pybuffernd_dgdp.diminfo[0].strides = __pyx_pybuffernd_dgdp.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_dgdp.diminfo[0].shape = __pyx_pybuffernd_dgdp.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_11 = 0;
  __pyx_v_dgdp = ((PyArrayObject *)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "cantera/_onedim.pyx":1742
 * 
 *         cdef np.ndarray[np.double_t, ndim=1] dgdp = np.empty(n_params)
 *         cdef np.ndarray[np.double_t, ndim=2] dfdp = np.empty((n_vars, n_params))             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=1] fplus = np.empty(n_vars)
 *         cdef np.ndarray[np.double_t, ndim=1] fminus = np.empty(n_vars)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_np); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_empty); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_v_n_vars); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_INCREF(__pyx_v_n_params);
  __Pyx_GIVEREF(__pyx_v_n_params);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_v_n_params);
  __pyx_t_1 = 0;
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_3};
    __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1742, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1742, __pyx_L1_error)
  __pyx_t_12 = ((PyArrayObject *)__pyx_t_7);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_dfdp.rcbuffer->pybuffer, (PyObject*)__pyx_t_12, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 2, 0, __pyx_stack) == -1)) {
      __pyx_v_dfdp = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_dfdp.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 1742, __pyx_L1_error)
    } else {__pyx_pybuffernd_dfdp.diminfo[0].strides = __pyx_pybuffernd_dfdp.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_dfdp.diminfo[0].shape = __pyx_pybuffernd_dfdp.rcbuffer->pybuffer.shape[0]; __pyx_pybuffernd_dfdp.diminfo[1].strides = __pyx_pybuffernd_dfdp.rcbuffer->pybuffer.strides[1]; __pyx_pybuffernd_dfdp.diminfo[1].shape = __pyx_pybuffernd_dfdp.rcbuffer->pybuffer.shape[1];
    }
  }
  __pyx_t_12 = 0;
  __pyx_v_dfdp = ((PyArrayObject *)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "cantera/_onedim.pyx":1743
 *         cdef np.ndarray[np.double_t, ndim=1] dgdp = np.empty(n_params)
 *         cdef np.ndarray[np.double_t, ndim=2] dfdp = np.empty((n_vars, n_params))
 *         cdef np.ndarray[np.double_t, ndim=1] fplus = np.empty(n_vars)             # <<<<<<<<<<<<<<
 *         cdef np.ndarray[np.double_t, ndim=1] fminus = np.empty(n_vars)
 *         gplus = gminus = 0
 */
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1743, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_empty); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1743, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(__pyx_v_n_vars); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1743, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_2};
    __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1743, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1743, __pyx_L1_error)
  __pyx_t_13 = ((PyArrayObject *)__pyx_t_7);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_fplus.rcbuffer->pybuffer, (PyObject*)__pyx_t_13, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_fplus = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_fplus.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 1743, __pyx_L1_error)
    } else {__pyx_pybuffernd_fplus.diminfo[0].strides = __pyx_pybuffernd_fplus.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_fplus.diminfo[0].shape = __pyx_pybuffernd_fplus.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_13 = 0;
  __pyx_v_fplus = ((PyArrayObject *)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "cantera/_onedim.pyx":1744
 *         cdef np.ndarray[np.double_t, ndim=2] dfdp = np.empty((n_vars, n_params))
 *         cdef np.ndarray[np.double_t, ndim=1] fplus = np.empty(n_vars)
 *         cdef np.ndarray[np.double_t, ndim=1] fminus = np.empty(n_vars)             # <<<<<<<<<<<<<<
 *         gplus = gminus = 0
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_empty); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyInt_FromSize_t(__pyx_v_n_vars); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1744, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_1)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_1);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_1, __pyx_t_3};
    __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1744, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_5numpy_ndarray))))) __PYX_ERR(0, 1744, __pyx_L1_error)
  __pyx_t_14 = ((PyArrayObject *)__pyx_t_7);
  {
    __Pyx_BufFmt_StackElem __pyx_stack[1];
    if (unlikely(__Pyx_GetBufferAndValidate(&__pyx_pybuffernd_fminus.rcbuffer->pybuffer, (PyObject*)__pyx_t_14, &__Pyx_TypeInfo_nn___pyx_t_5numpy_double_t, PyBUF_FORMAT| PyBUF_STRIDES, 1, 0, __pyx_stack) == -1)) {
      __pyx_v_fminus = ((PyArrayObject *)Py_None); __Pyx_INCREF(Py_None); __pyx_pybuffernd_fminus.rcbuffer->pybuffer.buf = NULL;
      __PYX_ERR(0, 1744, __pyx_L1_error)
    } else {__pyx_pybuffernd_fminus.diminfo[0].strides = __pyx_pybuffernd_fminus.rcbuffer->pybuffer.strides[0]; __pyx_pybuffernd_fminus.diminfo[0].shape = __pyx_pybuffernd_fminus.rcbuffer->pybuffer.shape[0];
    }
  }
  __pyx_t_14 = 0;
  __pyx_v_fminus = ((PyArrayObject *)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "cantera/_onedim.pyx":1745
 *         cdef np.ndarray[np.double_t, ndim=1] fplus = np.empty(n_vars)
 *         cdef np.ndarray[np.double_t, ndim=1] fminus = np.empty(n_vars)
 *         gplus = gminus = 0             # <<<<<<<<<<<<<<
 * 
 *         for i in range(n_params):
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_gplus = __pyx_int_0;
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_gminus = __pyx_int_0;

  /* "cantera/_onedim.pyx":1747
 *         gplus = gminus = 0
 * 
 *         for i in range(n_params):             # <<<<<<<<<<<<<<
 *             perturb(self, i, dp)
 *             if g:
 */
  __pyx_t_7 = __Pyx_PyObject_CallOneArg(__pyx_builtin_range, __pyx_v_n_params); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  if (likely(PyList_CheckExact(__pyx_t_7)) || PyTuple_CheckExact(__pyx_t_7)) {
    __pyx_t_2 = __pyx_t_7; __Pyx_INCREF(__pyx_t_2); __pyx_t_15 = 0;
    __pyx_t_16 = NULL;
  } else {
    __pyx_t_15 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1747, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_16 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_16)) __PYX_ERR(0, 1747, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  for (;;) {
    if (likely(!__pyx_t_16)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_15 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_7 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_15); __Pyx_INCREF(__pyx_t_7); __pyx_t_15++; if (unlikely((0 < 0))) __PYX_ERR(0, 1747, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1747, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      } else {
        if (__pyx_t_15 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_15); __Pyx_INCREF(__pyx_t_7); __pyx_t_15++; if (unlikely((0 < 0))) __PYX_ERR(0, 1747, __pyx_L1_error)
        #else
        __pyx_t_7 = PySequence_ITEM(__pyx_t_2, __pyx_t_15); __pyx_t_15++; if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1747, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        #endif
      }
    } else {
      __pyx_t_7 = __pyx_t_16(__pyx_t_2);
      if (unlikely(!__pyx_t_7)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 1747, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_7);
    }
    __Pyx_XDECREF_SET(__pyx_v_i, __pyx_t_7);
    __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":1748
 * 
 *         for i in range(n_params):
 *             perturb(self, i, dp)             # <<<<<<<<<<<<<<
 *             if g:
 *                 gplus = g(self)
 */
    __Pyx_INCREF(__pyx_v_perturb);
    __pyx_t_3 = __pyx_v_perturb; __pyx_t_1 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_1)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_1);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_1, ((PyObject *)__pyx_v_self), __pyx_v_i, __pyx_v_dp};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1748, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":1749
 *         for i in range(n_params):
 *             perturb(self, i, dp)
 *             if g:             # <<<<<<<<<<<<<<
 *                 gplus = g(self)
 *             self.sim.getResidual(0, &fplus[0])
 */
    __pyx_t_17 = __Pyx_PyObject_IsTrue(__pyx_v_g); if (unlikely((__pyx_t_17 < 0))) __PYX_ERR(0, 1749, __pyx_L1_error)
    if (__pyx_t_17) {

      /* "cantera/_onedim.pyx":1750
 *             perturb(self, i, dp)
 *             if g:
 *                 gplus = g(self)             # <<<<<<<<<<<<<<
 *             self.sim.getResidual(0, &fplus[0])
 * 
 */
      __Pyx_INCREF(__pyx_v_g);
      __pyx_t_3 = __pyx_v_g; __pyx_t_1 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_1 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_1)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_1, ((PyObject *)__pyx_v_self)};
        __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1750, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __Pyx_DECREF_SET(__pyx_v_gplus, __pyx_t_7);
      __pyx_t_7 = 0;

      /* "cantera/_onedim.pyx":1749
 *         for i in range(n_params):
 *             perturb(self, i, dp)
 *             if g:             # <<<<<<<<<<<<<<
 *                 gplus = g(self)
 *             self.sim.getResidual(0, &fplus[0])
 */
    }

    /* "cantera/_onedim.pyx":1751
 *             if g:
 *                 gplus = g(self)
 *             self.sim.getResidual(0, &fplus[0])             # <<<<<<<<<<<<<<
 * 
 *             perturb(self, i, -dp)
 */
    __pyx_t_10 = 0;
    __pyx_t_5 = -1;
    if (__pyx_t_10 < 0) {
      __pyx_t_10 += __pyx_pybuffernd_fplus.diminfo[0].shape;
      if (unlikely(__pyx_t_10 < 0)) __pyx_t_5 = 0;
    } else if (unlikely(__pyx_t_10 >= __pyx_pybuffernd_fplus.diminfo[0].shape)) __pyx_t_5 = 0;
    if (unlikely(__pyx_t_5 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_5);
      __PYX_ERR(0, 1751, __pyx_L1_error)
    }
    try {
      __pyx_v_self->sim->getResidual(0.0, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_fplus.rcbuffer->pybuffer.buf, __pyx_t_10, __pyx_pybuffernd_fplus.diminfo[0].strides))));
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 1751, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":1753
 *             self.sim.getResidual(0, &fplus[0])
 * 
 *             perturb(self, i, -dp)             # <<<<<<<<<<<<<<
 *             if g:
 *                 gminus = g(self)
 */
    __pyx_t_3 = PyNumber_Negative(__pyx_v_dp); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_perturb);
    __pyx_t_1 = __pyx_v_perturb; __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_4, ((PyObject *)__pyx_v_self), __pyx_v_i, __pyx_t_3};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1753, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":1754
 * 
 *             perturb(self, i, -dp)
 *             if g:             # <<<<<<<<<<<<<<
 *                 gminus = g(self)
 *             self.sim.getResidual(0, &fminus[0])
 */
    __pyx_t_17 = __Pyx_PyObject_IsTrue(__pyx_v_g); if (unlikely((__pyx_t_17 < 0))) __PYX_ERR(0, 1754, __pyx_L1_error)
    if (__pyx_t_17) {

      /* "cantera/_onedim.pyx":1755
 *             perturb(self, i, -dp)
 *             if g:
 *                 gminus = g(self)             # <<<<<<<<<<<<<<
 *             self.sim.getResidual(0, &fminus[0])
 * 
 */
      __Pyx_INCREF(__pyx_v_g);
      __pyx_t_1 = __pyx_v_g; __pyx_t_3 = NULL;
      __pyx_t_5 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
        __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
        if (likely(__pyx_t_3)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_3);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_1, function);
          __pyx_t_5 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_3, ((PyObject *)__pyx_v_self)};
        __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1755, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __Pyx_DECREF_SET(__pyx_v_gminus, __pyx_t_7);
      __pyx_t_7 = 0;

      /* "cantera/_onedim.pyx":1754
 * 
 *             perturb(self, i, -dp)
 *             if g:             # <<<<<<<<<<<<<<
 *                 gminus = g(self)
 *             self.sim.getResidual(0, &fminus[0])
 */
    }

    /* "cantera/_onedim.pyx":1756
 *             if g:
 *                 gminus = g(self)
 *             self.sim.getResidual(0, &fminus[0])             # <<<<<<<<<<<<<<
 * 
 *             perturb(self, i, 0)
 */
    __pyx_t_10 = 0;
    __pyx_t_5 = -1;
    if (__pyx_t_10 < 0) {
      __pyx_t_10 += __pyx_pybuffernd_fminus.diminfo[0].shape;
      if (unlikely(__pyx_t_10 < 0)) __pyx_t_5 = 0;
    } else if (unlikely(__pyx_t_10 >= __pyx_pybuffernd_fminus.diminfo[0].shape)) __pyx_t_5 = 0;
    if (unlikely(__pyx_t_5 != -1)) {
      __Pyx_RaiseBufferIndexError(__pyx_t_5);
      __PYX_ERR(0, 1756, __pyx_L1_error)
    }
    try {
      __pyx_v_self->sim->getResidual(0.0, (&(*__Pyx_BufPtrStrided1d(__pyx_t_5numpy_double_t *, __pyx_pybuffernd_fminus.rcbuffer->pybuffer.buf, __pyx_t_10, __pyx_pybuffernd_fminus.diminfo[0].strides))));
    } catch(...) {
      translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
      __PYX_ERR(0, 1756, __pyx_L1_error)
    }

    /* "cantera/_onedim.pyx":1758
 *             self.sim.getResidual(0, &fminus[0])
 * 
 *             perturb(self, i, 0)             # <<<<<<<<<<<<<<
 *             dgdp[i] = (gplus - gminus)/(2*dp)
 *             dfdp[:,i] = (fplus - fminus) / (2*dp)
 */
    __Pyx_INCREF(__pyx_v_perturb);
    __pyx_t_1 = __pyx_v_perturb; __pyx_t_3 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_3)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_3);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[4] = {__pyx_t_3, ((PyObject *)__pyx_v_self), __pyx_v_i, __pyx_int_0};
      __pyx_t_7 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 3+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1758, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":1759
 * 
 *             perturb(self, i, 0)
 *             dgdp[i] = (gplus - gminus)/(2*dp)             # <<<<<<<<<<<<<<
 *             dfdp[:,i] = (fplus - fminus) / (2*dp)
 * 
 */
    __pyx_t_7 = PyNumber_Subtract(__pyx_v_gplus, __pyx_v_gminus); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __pyx_t_1 = __Pyx_PyInt_MultiplyCObj(__pyx_int_2, __pyx_v_dp, 2, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_7, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (unlikely((PyObject_SetItem(((PyObject *)__pyx_v_dgdp), __pyx_v_i, __pyx_t_3) < 0))) __PYX_ERR(0, 1759, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/_onedim.pyx":1760
 *             perturb(self, i, 0)
 *             dgdp[i] = (gplus - gminus)/(2*dp)
 *             dfdp[:,i] = (fplus - fminus) / (2*dp)             # <<<<<<<<<<<<<<
 * 
 *         return dgdp - np.dot(L, dfdp)
 */
    __pyx_t_3 = PyNumber_Subtract(((PyObject *)__pyx_v_fplus), ((PyObject *)__pyx_v_fminus)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyInt_MultiplyCObj(__pyx_int_2, __pyx_v_dp, 2, 0, 0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_t_3, __pyx_t_1); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_slice__26);
    __Pyx_GIVEREF(__pyx_slice__26);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_slice__26);
    __Pyx_INCREF(__pyx_v_i);
    __Pyx_GIVEREF(__pyx_v_i);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_i);
    if (unlikely((PyObject_SetItem(((PyObject *)__pyx_v_dfdp), __pyx_t_1, __pyx_t_7) < 0))) __PYX_ERR(0, 1760, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

    /* "cantera/_onedim.pyx":1747
 *         gplus = gminus = 0
 * 
 *         for i in range(n_params):             # <<<<<<<<<<<<<<
 *             perturb(self, i, dp)
 *             if g:
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":1762
 *             dfdp[:,i] = (fplus - fminus) / (2*dp)
 * 
 *         return dgdp - np.dot(L, dfdp)             # <<<<<<<<<<<<<<
 * 
 *     property grid_size_stats:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_np); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 1762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(__pyx_t_7, __pyx_n_s_dot); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
  __pyx_t_7 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_1))) {
    __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_1);
    if (likely(__pyx_t_7)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_1, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_7, ((PyObject *)__pyx_v_L), ((PyObject *)__pyx_v_dfdp)};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_5, 2+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1762, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }
  __pyx_t_1 = PyNumber_Subtract(((PyObject *)__pyx_v_dgdp), __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1762, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1700
 *         self.sim.clearStats()
 * 
 *     def solve_adjoint(self, perturb, n_params, dgdx, g=None, dp=1e-5):             # <<<<<<<<<<<<<<
 *         """
 *         Find the sensitivities of an objective function using an adjoint method.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  { PyObject *__pyx_type, *__pyx_value, *__pyx_tb;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&__pyx_type, &__pyx_value, &__pyx_tb);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_L.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dfdp.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dgdp.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_fminus.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_fplus.rcbuffer->pybuffer);
    __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gg.rcbuffer->pybuffer);
  __Pyx_ErrRestore(__pyx_type, __pyx_value, __pyx_tb);}
  __Pyx_AddTraceback("cantera._onedim.Sim1D.solve_adjoint", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  goto __pyx_L2;
  __pyx_L0:;
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_L.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dfdp.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_dgdp.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_fminus.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_fplus.rcbuffer->pybuffer);
  __Pyx_SafeReleaseBuffer(&__pyx_pybuffernd_gg.rcbuffer->pybuffer);
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_L);
  __Pyx_XDECREF((PyObject *)__pyx_v_gg);
  __Pyx_XDECREF((PyObject *)__pyx_v_dgdp);
  __Pyx_XDECREF((PyObject *)__pyx_v_dfdp);
  __Pyx_XDECREF((PyObject *)__pyx_v_fplus);
  __Pyx_XDECREF((PyObject *)__pyx_v_fminus);
  __Pyx_XDECREF(__pyx_v_gplus);
  __Pyx_XDECREF(__pyx_v_gminus);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1766
 *     property grid_size_stats:
 *         """Return total grid size in each call to solve()"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.gridSizeStats()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_15grid_size_stats_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_15grid_size_stats_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_15grid_size_stats___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_15grid_size_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":1767
 *         """Return total grid size in each call to solve()"""
 *         def __get__(self):
 *             return self.sim.gridSizeStats()             # <<<<<<<<<<<<<<
 * 
 *     property jacobian_time_stats:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_size_t(__pyx_v_self->sim->gridSizeStats()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1766
 *     property grid_size_stats:
 *         """Return total grid size in each call to solve()"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.gridSizeStats()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.grid_size_stats.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1771
 *     property jacobian_time_stats:
 *         """Return CPU time spent evaluating Jacobians in each call to solve()"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.jacobianTimeStats()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_19jacobian_time_stats_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_19jacobian_time_stats_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_19jacobian_time_stats___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_19jacobian_time_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":1772
 *         """Return CPU time spent evaluating Jacobians in each call to solve()"""
 *         def __get__(self):
 *             return self.sim.jacobianTimeStats()             # <<<<<<<<<<<<<<
 * 
 *     property jacobian_count_stats:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_double(__pyx_v_self->sim->jacobianTimeStats()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1772, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1771
 *     property jacobian_time_stats:
 *         """Return CPU time spent evaluating Jacobians in each call to solve()"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.jacobianTimeStats()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.jacobian_time_stats.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1776
 *     property jacobian_count_stats:
 *         """Return number of Jacobian evaluations made in each call to solve()"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.jacobianCountStats()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_20jacobian_count_stats_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_20jacobian_count_stats_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_20jacobian_count_stats___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_20jacobian_count_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":1777
 *         """Return number of Jacobian evaluations made in each call to solve()"""
 *         def __get__(self):
 *             return self.sim.jacobianCountStats()             # <<<<<<<<<<<<<<
 * 
 *     property eval_time_stats:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_int(__pyx_v_self->sim->jacobianCountStats()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1777, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1776
 *     property jacobian_count_stats:
 *         """Return number of Jacobian evaluations made in each call to solve()"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.jacobianCountStats()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.jacobian_count_stats.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1784
 *         to solve()
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.evalTimeStats()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_15eval_time_stats_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_15eval_time_stats_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_15eval_time_stats___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_15eval_time_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":1785
 *         """
 *         def __get__(self):
 *             return self.sim.evalTimeStats()             # <<<<<<<<<<<<<<
 * 
 *     property eval_count_stats:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_double(__pyx_v_self->sim->evalTimeStats()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1785, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1784
 *         to solve()
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.evalTimeStats()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.eval_time_stats.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1792
 *         solve()
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.evalCountStats()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_16eval_count_stats_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_16eval_count_stats_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_16eval_count_stats___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_16eval_count_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":1793
 *         """
 *         def __get__(self):
 *             return self.sim.evalCountStats()             # <<<<<<<<<<<<<<
 * 
 *     property time_step_stats:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_int(__pyx_v_self->sim->evalCountStats()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1792
 *         solve()
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.evalCountStats()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.eval_count_stats.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1797
 *     property time_step_stats:
 *         """Return number of time steps taken in each call to solve()"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.timeStepStats()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_15time_step_stats_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_15time_step_stats_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_15time_step_stats___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_15time_step_stats___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/_onedim.pyx":1798
 *         """Return number of time steps taken in each call to solve()"""
 *         def __get__(self):
 *             return self.sim.timeStepStats()             # <<<<<<<<<<<<<<
 * 
 *     def set_max_grid_points(self, domain, npmax):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_convert_vector_to_py_int(__pyx_v_self->sim->timeStepStats()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1797
 *     property time_step_stats:
 *         """Return number of time steps taken in each call to solve()"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.sim.timeStepStats()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.time_step_stats.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1800
 *             return self.sim.timeStepStats()
 * 
 *     def set_max_grid_points(self, domain, npmax):             # <<<<<<<<<<<<<<
 *         """ Set the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_77set_max_grid_points(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_76set_max_grid_points, " Set the maximum number of grid points in the specified domain. ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_77set_max_grid_points = {"set_max_grid_points", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_77set_max_grid_points, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_76set_max_grid_points};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_77set_max_grid_points(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  PyObject *__pyx_v_npmax = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_max_grid_points (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,&__pyx_n_s_npmax,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1800, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_npmax)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1800, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_max_grid_points", 1, 2, 2, 1); __PYX_ERR(0, 1800, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_max_grid_points") < 0)) __PYX_ERR(0, 1800, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_domain = values[0];
    __pyx_v_npmax = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_max_grid_points", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1800, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_max_grid_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_76set_max_grid_points(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain, __pyx_v_npmax);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_76set_max_grid_points(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain, PyObject *__pyx_v_npmax) {
  PyObject *__pyx_v_idom = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  size_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_max_grid_points", 0);

  /* "cantera/_onedim.pyx":1802
 *     def set_max_grid_points(self, domain, npmax):
 *         """ Set the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)             # <<<<<<<<<<<<<<
 *         self.sim.setMaxGridPoints(idom, npmax)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1802, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_domain};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1802, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_idom = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1803
 *         """ Set the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 *         self.sim.setMaxGridPoints(idom, npmax)             # <<<<<<<<<<<<<<
 * 
 *     def get_max_grid_points(self, domain):
 */
  __pyx_t_4 = __Pyx_PyInt_As_int(__pyx_v_idom); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) __PYX_ERR(0, 1803, __pyx_L1_error)
  __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_v_npmax); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1803, __pyx_L1_error)
  try {
    __pyx_v_self->sim->setMaxGridPoints(__pyx_t_4, __pyx_t_5);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1803, __pyx_L1_error)
  }

  /* "cantera/_onedim.pyx":1800
 *             return self.sim.timeStepStats()
 * 
 *     def set_max_grid_points(self, domain, npmax):             # <<<<<<<<<<<<<<
 *         """ Set the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.set_max_grid_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1805
 *         self.sim.setMaxGridPoints(idom, npmax)
 * 
 *     def get_max_grid_points(self, domain):             # <<<<<<<<<<<<<<
 *         """ Get the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_79get_max_grid_points(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_7_onedim_5Sim1D_78get_max_grid_points, " Get the maximum number of grid points in the specified domain. ");
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_79get_max_grid_points = {"get_max_grid_points", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_79get_max_grid_points, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_78get_max_grid_points};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_79get_max_grid_points(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_domain = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_max_grid_points (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_domain,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_domain)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1805, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_max_grid_points") < 0)) __PYX_ERR(0, 1805, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_domain = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_max_grid_points", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1805, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.get_max_grid_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_78get_max_grid_points(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v_domain);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_78get_max_grid_points(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_domain) {
  PyObject *__pyx_v_idom = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  size_t __pyx_t_5;
  size_t __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_max_grid_points", 0);

  /* "cantera/_onedim.pyx":1807
 *     def get_max_grid_points(self, domain):
 *         """ Get the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)             # <<<<<<<<<<<<<<
 *         return self.sim.maxGridPoints(idom)
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_domain_index); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1807, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_3, __pyx_v_domain};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 1+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1807, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_v_idom = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "cantera/_onedim.pyx":1808
 *         """ Get the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 *         return self.sim.maxGridPoints(idom)             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = __Pyx_PyInt_As_size_t(__pyx_v_idom); if (unlikely((__pyx_t_5 == (size_t)-1) && PyErr_Occurred())) __PYX_ERR(0, 1808, __pyx_L1_error)
  try {
    __pyx_t_6 = __pyx_v_self->sim->maxGridPoints(__pyx_t_5);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1808, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_PyInt_FromSize_t(__pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1808, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/_onedim.pyx":1805
 *         self.sim.setMaxGridPoints(idom, npmax)
 * 
 *     def get_max_grid_points(self, domain):             # <<<<<<<<<<<<<<
 *         """ Get the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera._onedim.Sim1D.get_max_grid_points", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_idom);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pyx":1810
 *         return self.sim.maxGridPoints(idom)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.sim
 */

/* Python wrapper */
static void __pyx_pw_7cantera_7_onedim_5Sim1D_81__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_7cantera_7_onedim_5Sim1D_81__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_7cantera_7_onedim_5Sim1D_80__dealloc__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_7cantera_7_onedim_5Sim1D_80__dealloc__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "cantera/_onedim.pyx":1811
 * 
 *     def __dealloc__(self):
 *         del self.sim             # <<<<<<<<<<<<<<
 */
  delete __pyx_v_self->sim;

  /* "cantera/_onedim.pyx":1810
 *         return self.sim.maxGridPoints(idom)
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         del self.sim
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cantera/_onedim.pxd":173
 * cdef class Sim1D:
 *     cdef CxxSim1D* sim
 *     cdef readonly object domains             # <<<<<<<<<<<<<<
 *     cdef object _initialized
 *     cdef object _initial_guess_args
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_7domains_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_7domains_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_7domains___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_7domains___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->domains);
  __pyx_r = __pyx_v_self->domains;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pxd":177
 *     cdef object _initial_guess_args
 *     cdef object _initial_guess_kwargs
 *     cdef public Func1 _interrupt             # <<<<<<<<<<<<<<
 *     cdef public Func1 _time_step_callback
 *     cdef public Func1 _steady_callback
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_10_interrupt_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_10_interrupt_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_10_interrupt___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_10_interrupt___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_self->_interrupt);
  __pyx_r = ((PyObject *)__pyx_v_self->_interrupt);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_10_interrupt_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_10_interrupt_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_10_interrupt_2__set__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D_10_interrupt_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_7cantera_5func1_Func1))))) __PYX_ERR(4, 177, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_interrupt);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_interrupt);
  __pyx_v_self->_interrupt = ((struct __pyx_obj_7cantera_5func1_Func1 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D._interrupt.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_10_interrupt_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_10_interrupt_5__del__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_10_interrupt_4__del__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D_10_interrupt_4__del__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_interrupt);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_interrupt);
  __pyx_v_self->_interrupt = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pxd":178
 *     cdef object _initial_guess_kwargs
 *     cdef public Func1 _interrupt
 *     cdef public Func1 _time_step_callback             # <<<<<<<<<<<<<<
 *     cdef public Func1 _steady_callback
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_19_time_step_callback_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_19_time_step_callback_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_19_time_step_callback___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_19_time_step_callback___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_self->_time_step_callback);
  __pyx_r = ((PyObject *)__pyx_v_self->_time_step_callback);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_19_time_step_callback_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_19_time_step_callback_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_19_time_step_callback_2__set__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D_19_time_step_callback_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_7cantera_5func1_Func1))))) __PYX_ERR(4, 178, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_time_step_callback);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_time_step_callback);
  __pyx_v_self->_time_step_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D._time_step_callback.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_19_time_step_callback_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_19_time_step_callback_5__del__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_19_time_step_callback_4__del__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D_19_time_step_callback_4__del__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_time_step_callback);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_time_step_callback);
  __pyx_v_self->_time_step_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/_onedim.pxd":179
 *     cdef public Func1 _interrupt
 *     cdef public Func1 _time_step_callback
 *     cdef public Func1 _steady_callback             # <<<<<<<<<<<<<<
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_16_steady_callback_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_16_steady_callback_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_16_steady_callback___get__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_16_steady_callback___get__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_self->_steady_callback);
  __pyx_r = ((PyObject *)__pyx_v_self->_steady_callback);
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_16_steady_callback_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_16_steady_callback_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_16_steady_callback_2__set__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D_16_steady_callback_2__set__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(((__pyx_v_value) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_value, __pyx_ptype_7cantera_5func1_Func1))))) __PYX_ERR(4, 179, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_steady_callback);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_steady_callback);
  __pyx_v_self->_steady_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera._onedim.Sim1D._steady_callback.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_7_onedim_5Sim1D_16_steady_callback_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7cantera_7_onedim_5Sim1D_16_steady_callback_5__del__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_16_steady_callback_4__del__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_7_onedim_5Sim1D_16_steady_callback_4__del__(struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_steady_callback);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_steady_callback);
  __pyx_v_self->_steady_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_83__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_83__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_83__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_83__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_82__reduce_cython__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_82__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_85__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_7_onedim_5Sim1D_85__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_85__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_7_onedim_5Sim1D_85__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_7_onedim_5Sim1D_84__setstate_cython__(((struct __pyx_obj_7cantera_7_onedim_Sim1D *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_7_onedim_5Sim1D_84__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_7_onedim_Sim1D *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera._onedim.Sim1D.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_tp_new_7cantera_7_onedim_Domain1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_7_onedim_Domain1D *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7cantera_7_onedim_Domain1D *)o);
  new((void*)&(p->_domain)) std::shared_ptr<Cantera::Domain1D> ();
  p->gas = ((struct __pyx_obj_7cantera_12solutionbase__SolutionBase *)Py_None); Py_INCREF(Py_None);
  p->_weakref_proxy = Py_None; Py_INCREF(Py_None);
  p->have_user_tolerances = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cantera_7_onedim_8Domain1D_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cantera_7_onedim_Domain1D(PyObject *o) {
  struct __pyx_obj_7cantera_7_onedim_Domain1D *p = (struct __pyx_obj_7cantera_7_onedim_Domain1D *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_7_onedim_Domain1D) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_domain);
  Py_CLEAR(p->gas);
  Py_CLEAR(p->_weakref_proxy);
  Py_CLEAR(p->have_user_tolerances);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cantera_7_onedim_Domain1D(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_7_onedim_Domain1D *p = (struct __pyx_obj_7cantera_7_onedim_Domain1D *)o;
  if (p->gas) {
    e = (*v)(((PyObject *)p->gas), a); if (e) return e;
  }
  if (p->_weakref_proxy) {
    e = (*v)(p->_weakref_proxy, a); if (e) return e;
  }
  if (p->have_user_tolerances) {
    e = (*v)(((PyObject *)p->have_user_tolerances), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_7_onedim_Domain1D(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_7_onedim_Domain1D *p = (struct __pyx_obj_7cantera_7_onedim_Domain1D *)o;
  tmp = ((PyObject*)p->gas);
  p->gas = ((struct __pyx_obj_7cantera_12solutionbase__SolutionBase *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_weakref_proxy);
  p->_weakref_proxy = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->have_user_tolerances);
  p->have_user_tolerances = ((PyBoolObject *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_phase(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_5phase_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_index(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_5index_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_domain_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_11domain_type_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_n_components(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_12n_components_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_n_points(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_8n_points_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_component_names(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_15component_names_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_grid(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_4grid_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_8Domain1D_grid(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_8Domain1D_4grid_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_4name_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_8Domain1D_name(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_8Domain1D_4name_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_settings(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_8settings_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_8Domain1D_have_user_tolerances(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_8Domain1D_20have_user_tolerances_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_8Domain1D_have_user_tolerances(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_8Domain1D_20have_user_tolerances_3__set__(o, v);
  }
  else {
    return __pyx_pw_7cantera_7_onedim_8Domain1D_20have_user_tolerances_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_7cantera_7_onedim_Domain1D[] = {
  {"_to_array", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_5_to_array, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_4_to_array},
  {"_from_array", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_7_from_array, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_6_from_array},
  {"component_name", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_9component_name, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_8component_name},
  {"component_index", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_11component_index, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_10component_index},
  {"set_bounds", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_13set_bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_12set_bounds},
  {"set_steady_tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_15set_steady_tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_14set_steady_tolerances},
  {"set_transient_tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_17set_transient_tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_16set_transient_tolerances},
  {"set_default_tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_19set_default_tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_18set_default_tolerances},
  {"bounds", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_21bounds, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_20bounds},
  {"tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_23tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_22tolerances},
  {"steady_reltol", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_25steady_reltol, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_24steady_reltol},
  {"steady_abstol", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_27steady_abstol, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_26steady_abstol},
  {"transient_reltol", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_29transient_reltol, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_28transient_reltol},
  {"transient_abstol", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_31transient_abstol, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_8Domain1D_30transient_abstol},
  {"__reduce__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_33__reduce__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__copy__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_8Domain1D_35__copy__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_7_onedim_Domain1D[] = {
  {(char *)"phase", __pyx_getprop_7cantera_7_onedim_8Domain1D_phase, 0, (char *)PyDoc_STR("\n        Phase describing the domain (that is, a gas phase or surface phase).\n        "), 0},
  {(char *)"index", __pyx_getprop_7cantera_7_onedim_8Domain1D_index, 0, (char *)PyDoc_STR("\n        Index of this domain in a stack. Returns -1 if this domain is not part\n        of a stack.\n        "), 0},
  {(char *)"domain_type", __pyx_getprop_7cantera_7_onedim_8Domain1D_domain_type, 0, (char *)PyDoc_STR("\n        String indicating the domain implemented.\n        "), 0},
  {(char *)"n_components", __pyx_getprop_7cantera_7_onedim_8Domain1D_n_components, 0, (char *)PyDoc_STR("Number of solution components at each grid point."), 0},
  {(char *)"n_points", __pyx_getprop_7cantera_7_onedim_8Domain1D_n_points, 0, (char *)PyDoc_STR("Number of grid points belonging to this domain."), 0},
  {(char *)"component_names", __pyx_getprop_7cantera_7_onedim_8Domain1D_component_names, 0, (char *)PyDoc_STR("List of the names of all components of this domain."), 0},
  {(char *)"grid", __pyx_getprop_7cantera_7_onedim_8Domain1D_grid, __pyx_setprop_7cantera_7_onedim_8Domain1D_grid, (char *)PyDoc_STR(" The grid for this domain "), 0},
  {(char *)"name", __pyx_getprop_7cantera_7_onedim_8Domain1D_name, __pyx_setprop_7cantera_7_onedim_8Domain1D_name, (char *)PyDoc_STR(" The name / id of this domain "), 0},
  {(char *)"settings", __pyx_getprop_7cantera_7_onedim_8Domain1D_settings, 0, (char *)PyDoc_STR("\n        Return comprehensive dictionary describing type, name, and simulation settings\n        that are specific to domain types.\n\n        .. versionchanged:: 3.0\n\n            Added missing domain-specific simulation settings and updated structure.\n        "), 0},
  {(char *)"have_user_tolerances", __pyx_getprop_7cantera_7_onedim_8Domain1D_have_user_tolerances, __pyx_setprop_7cantera_7_onedim_8Domain1D_have_user_tolerances, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_Domain1D_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_7_onedim_Domain1D},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_7_onedim_Domain1D},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_7_onedim_Domain1D},
  {Py_tp_init, (void *)__pyx_pw_7cantera_7_onedim_8Domain1D_3__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim_Domain1D},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_Domain1D_spec = {
  "cantera._onedim.Domain1D",
  sizeof(struct __pyx_obj_7cantera_7_onedim_Domain1D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_Domain1D_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_Domain1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""Domain1D", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_Domain1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_7_onedim_Domain1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_7_onedim_Domain1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_7_onedim_8Domain1D_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim_Domain1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7cantera_7_onedim_Boundary1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_7cantera_7_onedim_Domain1D(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_7cantera_7_onedim_10Boundary1D_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyObject *__pyx_getprop_7cantera_7_onedim_10Boundary1D_T(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_10Boundary1D_1T_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_10Boundary1D_T(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_10Boundary1D_1T_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_10Boundary1D_mdot(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_10Boundary1D_4mdot_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_10Boundary1D_mdot(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_10Boundary1D_4mdot_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_10Boundary1D_X(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_10Boundary1D_1X_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_10Boundary1D_X(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_10Boundary1D_1X_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_10Boundary1D_Y(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_10Boundary1D_1Y_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_10Boundary1D_Y(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_10Boundary1D_1Y_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_10Boundary1D_spread_rate(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_10Boundary1D_11spread_rate_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_10Boundary1D_spread_rate(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_10Boundary1D_11spread_rate_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_7_onedim_Boundary1D[] = {
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_7_onedim_Boundary1D[] = {
  {(char *)"T", __pyx_getprop_7cantera_7_onedim_10Boundary1D_T, __pyx_setprop_7cantera_7_onedim_10Boundary1D_T, (char *)PyDoc_STR(" The temperature [K] at this boundary. "), 0},
  {(char *)"mdot", __pyx_getprop_7cantera_7_onedim_10Boundary1D_mdot, __pyx_setprop_7cantera_7_onedim_10Boundary1D_mdot, (char *)PyDoc_STR(" The mass flow rate per unit area [kg/s/m^2] "), 0},
  {(char *)"X", __pyx_getprop_7cantera_7_onedim_10Boundary1D_X, __pyx_setprop_7cantera_7_onedim_10Boundary1D_X, (char *)PyDoc_STR("\n        Species mole fractions at this boundary. May be set as either a string\n        or as an array.\n        "), 0},
  {(char *)"Y", __pyx_getprop_7cantera_7_onedim_10Boundary1D_Y, __pyx_setprop_7cantera_7_onedim_10Boundary1D_Y, (char *)PyDoc_STR("\n        Species mass fractions at this boundary. May be set as either a string\n        or as an array.\n        "), 0},
  {(char *)"spread_rate", __pyx_getprop_7cantera_7_onedim_10Boundary1D_spread_rate, __pyx_setprop_7cantera_7_onedim_10Boundary1D_spread_rate, (char *)PyDoc_STR("\n        Get/set the tangential velocity gradient [1/s] at this boundary.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_Boundary1D_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    Base class for boundary domains.\n\n    :param phase:\n        The (gas) phase corresponding to the adjacent flow domain\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_7_onedim_Boundary1D},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_7_onedim_Boundary1D},
  {Py_tp_init, (void *)__pyx_pw_7cantera_7_onedim_10Boundary1D_3__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim_Boundary1D},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_Boundary1D_spec = {
  "cantera._onedim.Boundary1D",
  sizeof(struct __pyx_obj_7cantera_7_onedim_Boundary1D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_Boundary1D_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_Boundary1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""Boundary1D", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_Boundary1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    Base class for boundary domains.\n\n    :param phase:\n        The (gas) phase corresponding to the adjacent flow domain\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_7_onedim_Boundary1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_7_onedim_Boundary1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_7_onedim_10Boundary1D_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim_Boundary1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7cantera_7_onedim_ReactingSurface1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *p;
  PyObject *o = __pyx_tp_new_7cantera_7_onedim_Boundary1D(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)o);
  p->surface = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cantera_7_onedim_ReactingSurface1D(PyObject *o) {
  struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *p = (struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_7_onedim_ReactingSurface1D) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_5__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->surface);
  PyObject_GC_Track(o);
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D(o);
}

static int __pyx_tp_traverse_7cantera_7_onedim_ReactingSurface1D(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *p = (struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)o;
  e = __pyx_tp_traverse_7cantera_7_onedim_Domain1D(o, v, a); if (e) return e;
  if (p->surface) {
    e = (*v)(((PyObject *)p->surface), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_7_onedim_ReactingSurface1D(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *p = (struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D *)o;
  __pyx_tp_clear_7cantera_7_onedim_Domain1D(o);
  tmp = ((PyObject*)p->surface);
  p->surface = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_7cantera_7_onedim_17ReactingSurface1D_phase(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_5phase_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_17ReactingSurface1D_coverage_enabled(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled_3__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_17ReactingSurface1D_coverage_enabled(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_16coverage_enabled_1__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_17ReactingSurface1D_surface(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7surface_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_17ReactingSurface1D_surface(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7surface_3__set__(o, v);
  }
  else {
    return __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7surface_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_7cantera_7_onedim_ReactingSurface1D[] = {
  {"set_kinetics", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_7set_kinetics, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_17ReactingSurface1D_6set_kinetics},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_7_onedim_ReactingSurface1D[] = {
  {(char *)"phase", __pyx_getprop_7cantera_7_onedim_17ReactingSurface1D_phase, 0, (char *)PyDoc_STR("\n        Get the `Interface` object representing species and reactions on the surface\n        "), 0},
  {(char *)"coverage_enabled", __pyx_getprop_7cantera_7_onedim_17ReactingSurface1D_coverage_enabled, __pyx_setprop_7cantera_7_onedim_17ReactingSurface1D_coverage_enabled, (char *)PyDoc_STR("Controls whether or not to solve the surface coverage equations."), 0},
  {(char *)"surface", __pyx_getprop_7cantera_7_onedim_17ReactingSurface1D_surface, __pyx_setprop_7cantera_7_onedim_17ReactingSurface1D_surface, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_ReactingSurface1D_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_7_onedim_ReactingSurface1D},
  {Py_tp_doc, (void *)PyDoc_STR("A reacting solid surface.\n\n    :param phase:\n        The (surface) phase corresponding to the boundary\n\n    .. versionchanged:: 3.0\n\n        Starting in Cantera 3.0, parameter `phase` should reference surface instead of\n        gas phase.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_ReactingSurface1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_ReactingSurface1D},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_7_onedim_ReactingSurface1D},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_7_onedim_ReactingSurface1D},
  {Py_tp_init, (void *)__pyx_pw_7cantera_7_onedim_17ReactingSurface1D_3__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim_ReactingSurface1D},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_ReactingSurface1D_spec = {
  "cantera._onedim.ReactingSurface1D",
  sizeof(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_ReactingSurface1D_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_ReactingSurface1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""ReactingSurface1D", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_ReactingSurface1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_ReactingSurface1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("A reacting solid surface.\n\n    :param phase:\n        The (surface) phase corresponding to the boundary\n\n    .. versionchanged:: 3.0\n\n        Starting in Cantera 3.0, parameter `phase` should reference surface instead of\n        gas phase.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_ReactingSurface1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_ReactingSurface1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_7_onedim_ReactingSurface1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_7_onedim_ReactingSurface1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_7_onedim_17ReactingSurface1D_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim_ReactingSurface1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7cantera_7_onedim__FlowBase(PyTypeObject *t, PyObject *a, PyObject *k) {
  PyObject *o = __pyx_tp_new_7cantera_7_onedim_Domain1D(t, a, k);
  if (unlikely(!o)) return 0;
  if (unlikely(__pyx_pw_7cantera_7_onedim_9_FlowBase_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_P(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_1P_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_9_FlowBase_P(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_9_FlowBase_1P_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_transport_model(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_15transport_model_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_9_FlowBase_transport_model(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_9_FlowBase_15transport_model_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_soret_enabled(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_13soret_enabled_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_9_FlowBase_soret_enabled(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_9_FlowBase_13soret_enabled_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_energy_enabled(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_14energy_enabled_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_9_FlowBase_energy_enabled(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_9_FlowBase_14energy_enabled_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_settings(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_8settings_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_9_FlowBase_settings(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_9_FlowBase_8settings_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_boundary_emissivities(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_21boundary_emissivities_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_9_FlowBase_boundary_emissivities(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_9_FlowBase_21boundary_emissivities_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_radiation_enabled(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_17radiation_enabled_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_9_FlowBase_radiation_enabled(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_9_FlowBase_17radiation_enabled_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_radiative_heat_loss(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_19radiative_heat_loss_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_flow_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_9flow_type_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_4type_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_solving_stage(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_13solving_stage_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_9_FlowBase_solving_stage(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_9_FlowBase_13solving_stage_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_9_FlowBase_electric_field_enabled(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_9_FlowBase_22electric_field_enabled_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_9_FlowBase_electric_field_enabled(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_9_FlowBase_22electric_field_enabled_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_7_onedim__FlowBase[] = {
  {"set_transport", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_5set_transport, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_4set_transport},
  {"set_default_tolerances", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_7set_default_tolerances, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_6set_default_tolerances},
  {"set_fixed_temp_profile", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_9set_fixed_temp_profile, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_8set_fixed_temp_profile},
  {"get_settings3", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_11get_settings3, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_10get_settings3},
  {"set_free_flow", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_13set_free_flow, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_12set_free_flow},
  {"set_axisymmetric_flow", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_9_FlowBase_15set_axisymmetric_flow, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_9_FlowBase_14set_axisymmetric_flow},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_7_onedim__FlowBase[] = {
  {(char *)"P", __pyx_getprop_7cantera_7_onedim_9_FlowBase_P, __pyx_setprop_7cantera_7_onedim_9_FlowBase_P, (char *)PyDoc_STR(" Pressure [Pa] "), 0},
  {(char *)"transport_model", __pyx_getprop_7cantera_7_onedim_9_FlowBase_transport_model, __pyx_setprop_7cantera_7_onedim_9_FlowBase_transport_model, (char *)PyDoc_STR("\n        Get/set the transport model used for calculating transport properties.\n\n        .. versionadded:: 3.0\n        "), 0},
  {(char *)"soret_enabled", __pyx_getprop_7cantera_7_onedim_9_FlowBase_soret_enabled, __pyx_setprop_7cantera_7_onedim_9_FlowBase_soret_enabled, (char *)PyDoc_STR("\n        Determines whether or not to include diffusive mass fluxes due to the\n        Soret effect. Enabling this option works only when using the\n        multicomponent transport model.\n        "), 0},
  {(char *)"energy_enabled", __pyx_getprop_7cantera_7_onedim_9_FlowBase_energy_enabled, __pyx_setprop_7cantera_7_onedim_9_FlowBase_energy_enabled, (char *)PyDoc_STR(" Determines whether or not to solve the energy equation."), 0},
  {(char *)"settings", __pyx_getprop_7cantera_7_onedim_9_FlowBase_settings, __pyx_setprop_7cantera_7_onedim_9_FlowBase_settings, (char *)PyDoc_STR("\n        .. deprecated:: 3.0\n\n            Specialization to be removed after Cantera 3.0, as it is specific to the\n            legacy HDF structure for metadata. For new behavior of the getter, use the\n            temporary method `get_settings3`; the setter will be removed, but is\n            replaceable by setters for individual settings. The global setter is no\n            longer needed, as its intended use as a service function for restoring data\n            from HDF SolutionArray is replaced by a C++ implementation. As the structure\n            of meta data is changed, the settings getter in Cantera 3.0 produces\n            different output from Cantera 2.6.\n        "), 0},
  {(char *)"boundary_emissivities", __pyx_getprop_7cantera_7_onedim_9_FlowBase_boundary_emissivities, __pyx_setprop_7cantera_7_onedim_9_FlowBase_boundary_emissivities, (char *)PyDoc_STR(" Set/get boundary emissivities. "), 0},
  {(char *)"radiation_enabled", __pyx_getprop_7cantera_7_onedim_9_FlowBase_radiation_enabled, __pyx_setprop_7cantera_7_onedim_9_FlowBase_radiation_enabled, (char *)PyDoc_STR(" Determines whether or not to include radiative heat transfer "), 0},
  {(char *)"radiative_heat_loss", __pyx_getprop_7cantera_7_onedim_9_FlowBase_radiative_heat_loss, 0, (char *)PyDoc_STR("\n        Return radiative heat loss (only non-zero if radiation is enabled).\n        "), 0},
  {(char *)"flow_type", __pyx_getprop_7cantera_7_onedim_9_FlowBase_flow_type, 0, (char *)PyDoc_STR("\n        Return the type of flow domain being represented, either \"Free Flame\" or\n        \"Axisymmetric Stagnation\".\n\n        .. deprecated:: 3.0\n\n            Method to be removed after Cantera 3.0; superseded by `domain_type`.\n        "), 0},
  {(char *)"type", __pyx_getprop_7cantera_7_onedim_9_FlowBase_type, 0, (char *)PyDoc_STR("\n        Return the type of flow domain being represented.\n\n        Examples:\n        - ``free-flow``/``free-ion-flow``,\n        - ``axisymmetric-flow``/``axisymmetric-ion-flow``,\n        - ``unstrained-flow``/``unstrained-ion-flow``\n        "), 0},
  {(char *)"solving_stage", __pyx_getprop_7cantera_7_onedim_9_FlowBase_solving_stage, __pyx_setprop_7cantera_7_onedim_9_FlowBase_solving_stage, (char *)PyDoc_STR("\n        Solving stage mode for handling ionized species (only relevant if transport\n        model is ``ionized-gas``):\n\n        - ``stage == 1``: the fluxes of charged species are set to zero\n        - ``stage == 2``: the electric field equation is solved, and the drift flux for\n          ionized species is evaluated\n        "), 0},
  {(char *)"electric_field_enabled", __pyx_getprop_7cantera_7_onedim_9_FlowBase_electric_field_enabled, __pyx_setprop_7cantera_7_onedim_9_FlowBase_electric_field_enabled, (char *)PyDoc_STR("\n        Determines whether or not to solve the electric field equation (only relevant\n        if transport model is ``ionized-gas``).\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim__FlowBase_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR(" Base class for 1D flow domains ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_7_onedim__FlowBase},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_7_onedim__FlowBase},
  {Py_tp_init, (void *)__pyx_pw_7cantera_7_onedim_9_FlowBase_3__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim__FlowBase},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim__FlowBase_spec = {
  "cantera._onedim._FlowBase",
  sizeof(struct __pyx_obj_7cantera_7_onedim__FlowBase),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim__FlowBase_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim__FlowBase = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""_FlowBase", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim__FlowBase), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR(" Base class for 1D flow domains "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_7_onedim__FlowBase, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_7_onedim__FlowBase, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_7_onedim_9_FlowBase_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim__FlowBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyObject *__pyx_tp_new_7cantera_7_onedim_Sim1D(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_7_onedim_Sim1D *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7cantera_7_onedim_Sim1D *)o);
  p->domains = Py_None; Py_INCREF(Py_None);
  p->_initialized = Py_None; Py_INCREF(Py_None);
  p->_initial_guess_args = Py_None; Py_INCREF(Py_None);
  p->_initial_guess_kwargs = Py_None; Py_INCREF(Py_None);
  p->_interrupt = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None); Py_INCREF(Py_None);
  p->_time_step_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None); Py_INCREF(Py_None);
  p->_steady_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cantera_7_onedim_5Sim1D_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cantera_7_onedim_Sim1D(PyObject *o) {
  struct __pyx_obj_7cantera_7_onedim_Sim1D *p = (struct __pyx_obj_7cantera_7_onedim_Sim1D *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_7_onedim_Sim1D) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_7cantera_7_onedim_5Sim1D_81__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->domains);
  Py_CLEAR(p->_initialized);
  Py_CLEAR(p->_initial_guess_args);
  Py_CLEAR(p->_initial_guess_kwargs);
  Py_CLEAR(p->_interrupt);
  Py_CLEAR(p->_time_step_callback);
  Py_CLEAR(p->_steady_callback);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cantera_7_onedim_Sim1D(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_7_onedim_Sim1D *p = (struct __pyx_obj_7cantera_7_onedim_Sim1D *)o;
  if (p->domains) {
    e = (*v)(p->domains, a); if (e) return e;
  }
  if (p->_initialized) {
    e = (*v)(p->_initialized, a); if (e) return e;
  }
  if (p->_initial_guess_args) {
    e = (*v)(p->_initial_guess_args, a); if (e) return e;
  }
  if (p->_initial_guess_kwargs) {
    e = (*v)(p->_initial_guess_kwargs, a); if (e) return e;
  }
  if (p->_interrupt) {
    e = (*v)(((PyObject *)p->_interrupt), a); if (e) return e;
  }
  if (p->_time_step_callback) {
    e = (*v)(((PyObject *)p->_time_step_callback), a); if (e) return e;
  }
  if (p->_steady_callback) {
    e = (*v)(((PyObject *)p->_steady_callback), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_7_onedim_Sim1D(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_7_onedim_Sim1D *p = (struct __pyx_obj_7cantera_7_onedim_Sim1D *)o;
  tmp = ((PyObject*)p->domains);
  p->domains = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_initialized);
  p->_initialized = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_initial_guess_args);
  p->_initial_guess_args = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_initial_guess_kwargs);
  p->_initial_guess_kwargs = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_interrupt);
  p->_interrupt = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_time_step_callback);
  p->_time_step_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_steady_callback);
  p->_steady_callback = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_max_time_step_count(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_19max_time_step_count_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_5Sim1D_max_time_step_count(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_5Sim1D_19max_time_step_count_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_fixed_temperature(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_17fixed_temperature_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_5Sim1D_fixed_temperature(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_5Sim1D_17fixed_temperature_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_fixed_temperature_location(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_26fixed_temperature_location_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_grid_size_stats(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_15grid_size_stats_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_jacobian_time_stats(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_19jacobian_time_stats_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_jacobian_count_stats(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_20jacobian_count_stats_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_eval_time_stats(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_15eval_time_stats_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_eval_count_stats(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_16eval_count_stats_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_time_step_stats(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_15time_step_stats_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D_domains(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_7domains_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D__interrupt(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_10_interrupt_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_5Sim1D__interrupt(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_5Sim1D_10_interrupt_3__set__(o, v);
  }
  else {
    return __pyx_pw_7cantera_7_onedim_5Sim1D_10_interrupt_5__del__(o);
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D__time_step_callback(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_19_time_step_callback_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_5Sim1D__time_step_callback(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_5Sim1D_19_time_step_callback_3__set__(o, v);
  }
  else {
    return __pyx_pw_7cantera_7_onedim_5Sim1D_19_time_step_callback_5__del__(o);
  }
}

static PyObject *__pyx_getprop_7cantera_7_onedim_5Sim1D__steady_callback(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_7_onedim_5Sim1D_16_steady_callback_1__get__(o);
}

static int __pyx_setprop_7cantera_7_onedim_5Sim1D__steady_callback(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_7_onedim_5Sim1D_16_steady_callback_3__set__(o, v);
  }
  else {
    return __pyx_pw_7cantera_7_onedim_5Sim1D_16_steady_callback_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_7cantera_7_onedim_Sim1D[] = {
  {"phase", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_5phase, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_4phase},
  {"set_interrupt", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_7set_interrupt, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_6set_interrupt},
  {"set_time_step_callback", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_9set_time_step_callback, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_8set_time_step_callback},
  {"set_steady_callback", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_11set_steady_callback, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_10set_steady_callback},
  {"domain_index", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_13domain_index, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_12domain_index},
  {"_get_indices", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_15_get_indices, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"value", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_17value, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_16value},
  {"set_value", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_19set_value, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_18set_value},
  {"eval", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_21eval, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_20eval},
  {"work_value", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_23work_value, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_22work_value},
  {"profile", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_25profile, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_24profile},
  {"set_profile", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_27set_profile, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_26set_profile},
  {"set_flat_profile", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_29set_flat_profile, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_28set_flat_profile},
  {"restore_data", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_31restore_data, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_30restore_data},
  {"show", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_33show, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_32show},
  {"show_solution", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_35show_solution, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_34show_solution},
  {"set_time_step", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_37set_time_step, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_36set_time_step},
  {"set_initial_guess", (PyCFunction)(void*)(PyCFunctionWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_39set_initial_guess, METH_VARARGS|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_38set_initial_guess},
  {"_get_initial_solution", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_41_get_initial_solution, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_40_get_initial_solution},
  {"extinct", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_43extinct, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_42extinct},
  {"solve", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_45solve, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_44solve},
  {"refine", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_47refine, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_46refine},
  {"set_refine_criteria", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_49set_refine_criteria, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_48set_refine_criteria},
  {"get_refine_criteria", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_51get_refine_criteria, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_50get_refine_criteria},
  {"set_grid_min", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_53set_grid_min, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_52set_grid_min},
  {"set_max_jac_age", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_55set_max_jac_age, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_54set_max_jac_age},
  {"set_time_step_factor", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_57set_time_step_factor, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_56set_time_step_factor},
  {"set_min_time_step", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_59set_min_time_step, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_58set_min_time_step},
  {"set_max_time_step", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_61set_max_time_step, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_60set_max_time_step},
  {"save", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_63save, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_62save},
  {"restore", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_65restore, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_64restore},
  {"restore_time_stepping_solution", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_67restore_time_stepping_solution, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_66restore_time_stepping_solution},
  {"restore_steady_solution", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_69restore_steady_solution, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_68restore_steady_solution},
  {"show_stats", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_71show_stats, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_70show_stats},
  {"clear_stats", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_73clear_stats, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_72clear_stats},
  {"solve_adjoint", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_75solve_adjoint, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_74solve_adjoint},
  {"set_max_grid_points", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_77set_max_grid_points, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_76set_max_grid_points},
  {"get_max_grid_points", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_79get_max_grid_points, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_5Sim1D_78get_max_grid_points},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_83__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_5Sim1D_85__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_7_onedim_Sim1D[] = {
  {(char *)"max_time_step_count", __pyx_getprop_7cantera_7_onedim_5Sim1D_max_time_step_count, __pyx_setprop_7cantera_7_onedim_5Sim1D_max_time_step_count, (char *)PyDoc_STR("\n        Get/Set the maximum number of time steps allowed before reaching the\n        steady-state solution\n        "), 0},
  {(char *)"fixed_temperature", __pyx_getprop_7cantera_7_onedim_5Sim1D_fixed_temperature, __pyx_setprop_7cantera_7_onedim_5Sim1D_fixed_temperature, (char *)PyDoc_STR("\n        Set the temperature used to fix the spatial location of a freely\n        propagating flame.\n        "), 0},
  {(char *)"fixed_temperature_location", __pyx_getprop_7cantera_7_onedim_5Sim1D_fixed_temperature_location, 0, (char *)PyDoc_STR("\n        Return the location of the point where temperature is fixed for a freely\n        propagating flame.\n        "), 0},
  {(char *)"grid_size_stats", __pyx_getprop_7cantera_7_onedim_5Sim1D_grid_size_stats, 0, (char *)PyDoc_STR("Return total grid size in each call to solve()"), 0},
  {(char *)"jacobian_time_stats", __pyx_getprop_7cantera_7_onedim_5Sim1D_jacobian_time_stats, 0, (char *)PyDoc_STR("Return CPU time spent evaluating Jacobians in each call to solve()"), 0},
  {(char *)"jacobian_count_stats", __pyx_getprop_7cantera_7_onedim_5Sim1D_jacobian_count_stats, 0, (char *)PyDoc_STR("Return number of Jacobian evaluations made in each call to solve()"), 0},
  {(char *)"eval_time_stats", __pyx_getprop_7cantera_7_onedim_5Sim1D_eval_time_stats, 0, (char *)PyDoc_STR("\n        Return CPU time spent on non-Jacobian function evaluations in each call\n        to solve()\n        "), 0},
  {(char *)"eval_count_stats", __pyx_getprop_7cantera_7_onedim_5Sim1D_eval_count_stats, 0, (char *)PyDoc_STR("\n        Return number of non-Jacobian function evaluations made in each call to\n        solve()\n        "), 0},
  {(char *)"time_step_stats", __pyx_getprop_7cantera_7_onedim_5Sim1D_time_step_stats, 0, (char *)PyDoc_STR("Return number of time steps taken in each call to solve()"), 0},
  {(char *)"domains", __pyx_getprop_7cantera_7_onedim_5Sim1D_domains, 0, (char *)0, 0},
  {(char *)"_interrupt", __pyx_getprop_7cantera_7_onedim_5Sim1D__interrupt, __pyx_setprop_7cantera_7_onedim_5Sim1D__interrupt, (char *)0, 0},
  {(char *)"_time_step_callback", __pyx_getprop_7cantera_7_onedim_5Sim1D__time_step_callback, __pyx_setprop_7cantera_7_onedim_5Sim1D__time_step_callback, (char *)0, 0},
  {(char *)"_steady_callback", __pyx_getprop_7cantera_7_onedim_5Sim1D__steady_callback, __pyx_setprop_7cantera_7_onedim_5Sim1D__steady_callback, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_Sim1D_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_7_onedim_Sim1D},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Class Sim1D is a container for one-dimensional domains. It also holds the\n    multi-domain solution vector, and controls the process of finding the\n    solution.\n\n    Domains are ordered left-to-right, with domain number 0 at the left.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Sim1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Sim1D},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_7_onedim_Sim1D},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_7_onedim_Sim1D},
  {Py_tp_init, (void *)__pyx_pw_7cantera_7_onedim_5Sim1D_3__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim_Sim1D},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_Sim1D_spec = {
  "cantera._onedim.Sim1D",
  sizeof(struct __pyx_obj_7cantera_7_onedim_Sim1D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_Sim1D_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_Sim1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""Sim1D", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_Sim1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Sim1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    Class Sim1D is a container for one-dimensional domains. It also holds the\n    multi-domain solution vector, and controls the process of finding the\n    solution.\n\n    Domains are ordered left-to-right, with domain number 0 at the left.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Sim1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Sim1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_7_onedim_Sim1D, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_7_onedim_Sim1D, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_7_onedim_5Sim1D_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim_Sim1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_Inlet1D_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A one-dimensional inlet. Note that an inlet can only be a terminal\n    domain - it must be either the leftmost or rightmost domain in a stack.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim_Boundary1D},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_Inlet1D_spec = {
  "cantera._onedim.Inlet1D",
  sizeof(struct __pyx_obj_7cantera_7_onedim_Inlet1D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_Inlet1D_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_Inlet1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""Inlet1D", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_Inlet1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A one-dimensional inlet. Note that an inlet can only be a terminal\n    domain - it must be either the leftmost or rightmost domain in a stack.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_7_onedim_10Boundary1D_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim_Boundary1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_Outlet1D_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A one-dimensional outlet. An outlet imposes a zero-gradient boundary\n    condition on the flow.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim_Boundary1D},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_Outlet1D_spec = {
  "cantera._onedim.Outlet1D",
  sizeof(struct __pyx_obj_7cantera_7_onedim_Outlet1D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_Outlet1D_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_Outlet1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""Outlet1D", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_Outlet1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A one-dimensional outlet. An outlet imposes a zero-gradient boundary\n    condition on the flow.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_7_onedim_10Boundary1D_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim_Boundary1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_OutletReservoir1D_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A one-dimensional outlet into a reservoir.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim_Boundary1D},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_OutletReservoir1D_spec = {
  "cantera._onedim.OutletReservoir1D",
  sizeof(struct __pyx_obj_7cantera_7_onedim_OutletReservoir1D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_OutletReservoir1D_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_OutletReservoir1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""OutletReservoir1D", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_OutletReservoir1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A one-dimensional outlet into a reservoir.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_7_onedim_10Boundary1D_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim_Boundary1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_SymmetryPlane1D_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("A symmetry plane.")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim_Boundary1D},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_SymmetryPlane1D_spec = {
  "cantera._onedim.SymmetryPlane1D",
  sizeof(struct __pyx_obj_7cantera_7_onedim_SymmetryPlane1D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_SymmetryPlane1D_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_SymmetryPlane1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""SymmetryPlane1D", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_SymmetryPlane1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("A symmetry plane."), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_7_onedim_10Boundary1D_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim_Boundary1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_Surface1D_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("A solid surface.")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim_Boundary1D},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_Surface1D_spec = {
  "cantera._onedim.Surface1D",
  sizeof(struct __pyx_obj_7cantera_7_onedim_Surface1D),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_Surface1D_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_Surface1D = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""Surface1D", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_Surface1D), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("A solid surface."), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_7_onedim_10Boundary1D_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim_Boundary1D, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_FreeFlow_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("A free flow domain. The equations solved are standard equations for adiabatic\n    one-dimensional flow. The solution variables are:\n\n    *velocity*\n        axial velocity\n    *T*\n        temperature\n    *Y_k*\n        species mass fractions\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim__FlowBase},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_FreeFlow_spec = {
  "cantera._onedim.FreeFlow",
  sizeof(struct __pyx_obj_7cantera_7_onedim_FreeFlow),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_FreeFlow_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_FreeFlow = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""FreeFlow", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_FreeFlow), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("A free flow domain. The equations solved are standard equations for adiabatic\n    one-dimensional flow. The solution variables are:\n\n    *velocity*\n        axial velocity\n    *T*\n        temperature\n    *Y_k*\n        species mass fractions\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_7_onedim_9_FlowBase_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim__FlowBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_UnstrainedFlow_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("An unstrained flow domain. The equations solved are standard equations for\n    adiabatic one-dimensional flow. The solution variables are:\n\n    *velocity*\n        axial velocity\n    *T*\n        temperature\n    *Y_k*\n        species mass fractions\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim__FlowBase},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_UnstrainedFlow_spec = {
  "cantera._onedim.UnstrainedFlow",
  sizeof(struct __pyx_obj_7cantera_7_onedim_UnstrainedFlow),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_UnstrainedFlow_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_UnstrainedFlow = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""UnstrainedFlow", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_UnstrainedFlow), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("An unstrained flow domain. The equations solved are standard equations for\n    adiabatic one-dimensional flow. The solution variables are:\n\n    *velocity*\n        axial velocity\n    *T*\n        temperature\n    *Y_k*\n        species mass fractions\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_7_onedim_9_FlowBase_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim__FlowBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_AxisymmetricFlow_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    An axisymmetric flow domain. The equations solved are the similarity equations for\n    the flow in a finite-height gap of infinite radial extent. The solution variables\n    are:\n\n    *velocity*\n        axial velocity\n    *spread_rate*\n        radial velocity divided by radius\n    *T*\n        temperature\n    *lambda*\n        :math:`(1/r)(dP/dr)`\n    *Y_k*\n        species mass fractions\n\n    It may be shown that if the boundary conditions on these variables are independent\n    of radius, then a similarity solution to the exact governing equations exists in\n    which these variables are all independent of radius. This solution holds only in\n    the low-Mach-number limit, in which case :math:`(dP/dz) = 0`, and :math:`lambda` is\n    a constant. (Lambda is treated as a spatially-varying solution variable for\n    numerical reasons, but in the final solution it is always independent of :math:`z`.)\n    As implemented here, the governing equations assume an ideal gas mixture. Arbitrary\n    chemistry is allowed, as well as arbitrary variation of the transport properties.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim__FlowBase},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_AxisymmetricFlow_spec = {
  "cantera._onedim.AxisymmetricFlow",
  sizeof(struct __pyx_obj_7cantera_7_onedim_AxisymmetricFlow),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_AxisymmetricFlow_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_AxisymmetricFlow = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""AxisymmetricFlow", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_AxisymmetricFlow), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    An axisymmetric flow domain. The equations solved are the similarity equations for\n    the flow in a finite-height gap of infinite radial extent. The solution variables\n    are:\n\n    *velocity*\n        axial velocity\n    *spread_rate*\n        radial velocity divided by radius\n    *T*\n        temperature\n    *lambda*\n        :math:`(1/r)(dP/dr)`\n    *Y_k*\n        species mass fractions\n\n    It may be shown that if the boundary conditions on these variables are independent\n    of radius, then a similarity solution to the exact governing equations exists in\n    which these variables are all independent of radius. This solution holds only in\n    the low-Mach-number limit, in which case :math:`(dP/dz) = 0`, and :math:`lambda` is\n    a constant. (Lambda is treated as a spatially-varying solution variable for\n    numerical reasons, but in the final solution it is always independent of :math:`z`.)\n    As implemented here, the governing equations assume an ideal gas mixture. Arbitrary\n    chemistry is allowed, as well as arbitrary variation of the transport properties.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_7_onedim_9_FlowBase_3__init__, /*tp_init*/
  #else
  0, /*tp_init*/
  #endif
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim__FlowBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods_7cantera_7_onedim_IdealGasFlow[] = {
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_IdealGasFlow_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    An ideal gas flow domain. Functions `set_free_flow` and\n    `set_axisymmetric_flow` can be used to set different type of flow.\n\n    For the type of axisymmetric flow, the equations solved are the similarity\n    equations for the flow in a finite-height gap of infinite radial extent.\n    The solution variables are:\n\n    *velocity*\n        axial velocity\n    *spread_rate*\n        radial velocity divided by radius\n    *T*\n        temperature\n    *lambda*\n        (1/r)(dP/dr)\n    *Y_k*\n        species mass fractions\n\n    It may be shown that if the boundary conditions on these variables are\n    independent of radius, then a similarity solution to the exact governing\n    equations exists in which these variables are all independent of radius.\n    This solution holds only in in low-Mach-number limit, in which case\n    (dP/dz) = 0, and lambda is a constant. (Lambda is treated as a spatially-\n    varying solution variable for numerical reasons, but in the final solution\n    it is always independent of z.) As implemented here, the governing\n    equations assume an ideal gas mixture.  Arbitrary chemistry is allowed, as\n    well as arbitrary variation of the transport properties.\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0; replaced by `FreeFlow`,\n        `AxisymmetricFlow` and `UnstrainedFlow`.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_7_onedim_IdealGasFlow},
  {Py_tp_init, (void *)__pyx_pw_7cantera_7_onedim_12IdealGasFlow_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim__FlowBase},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_IdealGasFlow_spec = {
  "cantera._onedim.IdealGasFlow",
  sizeof(struct __pyx_obj_7cantera_7_onedim_IdealGasFlow),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_IdealGasFlow_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_IdealGasFlow = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""IdealGasFlow", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_IdealGasFlow), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    An ideal gas flow domain. Functions `set_free_flow` and\n    `set_axisymmetric_flow` can be used to set different type of flow.\n\n    For the type of axisymmetric flow, the equations solved are the similarity\n    equations for the flow in a finite-height gap of infinite radial extent.\n    The solution variables are:\n\n    *velocity*\n        axial velocity\n    *spread_rate*\n        radial velocity divided by radius\n    *T*\n        temperature\n    *lambda*\n        (1/r)(dP/dr)\n    *Y_k*\n        species mass fractions\n\n    It may be shown that if the boundary conditions on these variables are\n    independent of radius, then a similarity solution to the exact governing\n    equations exists in which these variables are all independent of radius.\n    This solution holds only in in low-Mach-number limit, in which case\n    (dP/dz) = 0, and lambda is a constant. (Lambda is treated as a spatially-\n    varying solution variable for numerical reasons, but in the final solution\n    it is always independent of z.) As implemented here, the governing\n    equations assume an ideal gas mixture.  Arbitrary chemistry is allowed, as\n    well as arbitrary variation of the transport properties.\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0; replaced by `FreeFlow`,\n        `AxisymmetricFlow` and `UnstrainedFlow`.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_7_onedim_IdealGasFlow, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_7_onedim_12IdealGasFlow_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim__FlowBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods_7cantera_7_onedim_IonFlow[] = {
  {"set_solving_stage", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_7_onedim_7IonFlow_3set_solving_stage, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_7_onedim_7IonFlow_2set_solving_stage},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim_IonFlow_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    An ion flow domain.\n\n    In an ion flow domain, the electric drift is added to the diffusion flux\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0; replaced by `FreeFlow`,\n        `AxisymmetricFlow` and `UnstrainedFlow`.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim_Domain1D},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim_Domain1D},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_7_onedim_IonFlow},
  {Py_tp_init, (void *)__pyx_pw_7cantera_7_onedim_7IonFlow_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim__FlowBase},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim_IonFlow_spec = {
  "cantera._onedim.IonFlow",
  sizeof(struct __pyx_obj_7cantera_7_onedim_IonFlow),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_7_onedim_IonFlow_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim_IonFlow = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""IonFlow", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim_IonFlow), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim_Domain1D, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    An ion flow domain.\n\n    In an ion flow domain, the electric drift is added to the diffusion flux\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0; replaced by `FreeFlow`,\n        `AxisymmetricFlow` and `UnstrainedFlow`.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim_Domain1D, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim_Domain1D, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_7_onedim_IonFlow, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_7_onedim_7IonFlow_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim__FlowBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *__pyx_freelist_7cantera_7_onedim___pyx_scope_struct__solve[8];
static int __pyx_freecount_7cantera_7_onedim___pyx_scope_struct__solve = 0;

static PyObject *__pyx_tp_new_7cantera_7_onedim___pyx_scope_struct__solve(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_7cantera_7_onedim___pyx_scope_struct__solve > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve)))) {
    o = (PyObject*)__pyx_freelist_7cantera_7_onedim___pyx_scope_struct__solve[--__pyx_freecount_7cantera_7_onedim___pyx_scope_struct__solve];
    memset(o, 0, sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_7cantera_7_onedim___pyx_scope_struct__solve(PyObject *o) {
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *p = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_7_onedim___pyx_scope_struct__solve) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_atol_ss_final);
  Py_CLEAR(p->__pyx_v_atol_ts_final);
  Py_CLEAR(p->__pyx_v_have_user_tolerances);
  Py_CLEAR(p->__pyx_v_loglevel);
  Py_CLEAR(p->__pyx_v_rtol_ss_final);
  Py_CLEAR(p->__pyx_v_rtol_ts_final);
  Py_CLEAR(p->__pyx_v_self);
  Py_CLEAR(p->__pyx_v_soret_doms);
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_7cantera_7_onedim___pyx_scope_struct__solve < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve)))) {
    __pyx_freelist_7cantera_7_onedim___pyx_scope_struct__solve[__pyx_freecount_7cantera_7_onedim___pyx_scope_struct__solve++] = ((struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7cantera_7_onedim___pyx_scope_struct__solve(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *p = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *)o;
  if (p->__pyx_v_atol_ss_final) {
    e = (*v)(p->__pyx_v_atol_ss_final, a); if (e) return e;
  }
  if (p->__pyx_v_atol_ts_final) {
    e = (*v)(p->__pyx_v_atol_ts_final, a); if (e) return e;
  }
  if (p->__pyx_v_have_user_tolerances) {
    e = (*v)(p->__pyx_v_have_user_tolerances, a); if (e) return e;
  }
  if (p->__pyx_v_loglevel) {
    e = (*v)(p->__pyx_v_loglevel, a); if (e) return e;
  }
  if (p->__pyx_v_rtol_ss_final) {
    e = (*v)(p->__pyx_v_rtol_ss_final, a); if (e) return e;
  }
  if (p->__pyx_v_rtol_ts_final) {
    e = (*v)(p->__pyx_v_rtol_ts_final, a); if (e) return e;
  }
  if (p->__pyx_v_self) {
    e = (*v)(((PyObject *)p->__pyx_v_self), a); if (e) return e;
  }
  if (p->__pyx_v_soret_doms) {
    e = (*v)(p->__pyx_v_soret_doms, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_7_onedim___pyx_scope_struct__solve(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *p = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve *)o;
  tmp = ((PyObject*)p->__pyx_v_atol_ss_final);
  p->__pyx_v_atol_ss_final = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_atol_ts_final);
  p->__pyx_v_atol_ts_final = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_have_user_tolerances);
  p->__pyx_v_have_user_tolerances = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_loglevel);
  p->__pyx_v_loglevel = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_rtol_ss_final);
  p->__pyx_v_rtol_ss_final = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_rtol_ts_final);
  p->__pyx_v_rtol_ts_final = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_self);
  p->__pyx_v_self = ((struct __pyx_obj_7cantera_7_onedim_Sim1D *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->__pyx_v_soret_doms);
  p->__pyx_v_soret_doms = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim___pyx_scope_struct__solve_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_7_onedim___pyx_scope_struct__solve},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim___pyx_scope_struct__solve},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_7_onedim___pyx_scope_struct__solve},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim___pyx_scope_struct__solve},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim___pyx_scope_struct__solve_spec = {
  "cantera._onedim.__pyx_scope_struct__solve",
  sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_7cantera_7_onedim___pyx_scope_struct__solve_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim___pyx_scope_struct__solve = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""__pyx_scope_struct__solve", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct__solve), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim___pyx_scope_struct__solve, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim___pyx_scope_struct__solve, /*tp_traverse*/
  __pyx_tp_clear_7cantera_7_onedim___pyx_scope_struct__solve, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim___pyx_scope_struct__solve, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *__pyx_freelist_7cantera_7_onedim___pyx_scope_struct_1_genexpr[8];
static int __pyx_freecount_7cantera_7_onedim___pyx_scope_struct_1_genexpr = 0;

static PyObject *__pyx_tp_new_7cantera_7_onedim___pyx_scope_struct_1_genexpr(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_7cantera_7_onedim___pyx_scope_struct_1_genexpr > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr)))) {
    o = (PyObject*)__pyx_freelist_7cantera_7_onedim___pyx_scope_struct_1_genexpr[--__pyx_freecount_7cantera_7_onedim___pyx_scope_struct_1_genexpr];
    memset(o, 0, sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_7cantera_7_onedim___pyx_scope_struct_1_genexpr(PyObject *o) {
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_7_onedim___pyx_scope_struct_1_genexpr) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_genexpr_arg_0);
  Py_CLEAR(p->__pyx_v_dom);
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_7cantera_7_onedim___pyx_scope_struct_1_genexpr < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr)))) {
    __pyx_freelist_7cantera_7_onedim___pyx_scope_struct_1_genexpr[__pyx_freecount_7cantera_7_onedim___pyx_scope_struct_1_genexpr++] = ((struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7cantera_7_onedim___pyx_scope_struct_1_genexpr(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *p = (struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr *)o;
  if (p->__pyx_genexpr_arg_0) {
    e = (*v)(p->__pyx_genexpr_arg_0, a); if (e) return e;
  }
  if (p->__pyx_v_dom) {
    e = (*v)(p->__pyx_v_dom, a); if (e) return e;
  }
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_7_onedim___pyx_scope_struct_1_genexpr},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_7_onedim___pyx_scope_struct_1_genexpr},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_7_onedim___pyx_scope_struct_1_genexpr},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr_spec = {
  "cantera._onedim.__pyx_scope_struct_1_genexpr",
  sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera._onedim.""__pyx_scope_struct_1_genexpr", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_7_onedim___pyx_scope_struct_1_genexpr), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_7_onedim___pyx_scope_struct_1_genexpr, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7cantera_7_onedim___pyx_scope_struct_1_genexpr, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_7_onedim___pyx_scope_struct_1_genexpr, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static int __Pyx_CreateStringTabAndInitStrings(void) {
  __Pyx_StringTabEntry __pyx_string_tab[] = {
    {&__pyx_kp_u_78s, __pyx_k_78s, sizeof(__pyx_k_78s), 0, 1, 0, 0},
    {&__pyx_n_s_AssertionError, __pyx_k_AssertionError, sizeof(__pyx_k_AssertionError), 0, 0, 1, 1},
    {&__pyx_n_s_AxisymmetricFlow, __pyx_k_AxisymmetricFlow, sizeof(__pyx_k_AxisymmetricFlow), 0, 0, 1, 1},
    {&__pyx_n_s_Boundary1D, __pyx_k_Boundary1D, sizeof(__pyx_k_Boundary1D), 0, 0, 1, 1},
    {&__pyx_kp_u_Can_t_instantiate_abstract_class, __pyx_k_Can_t_instantiate_abstract_class, sizeof(__pyx_k_Can_t_instantiate_abstract_class), 0, 1, 0, 0},
    {&__pyx_kp_u_Can_t_instantiate_abstract_class_2, __pyx_k_Can_t_instantiate_abstract_class_2, sizeof(__pyx_k_Can_t_instantiate_abstract_class_2), 0, 1, 0, 0},
    {&__pyx_n_s_CanteraError, __pyx_k_CanteraError, sizeof(__pyx_k_CanteraError), 0, 0, 1, 1},
    {&__pyx_kp_u_Class_IdealGasFlow_to_be_removed, __pyx_k_Class_IdealGasFlow_to_be_removed, sizeof(__pyx_k_Class_IdealGasFlow_to_be_removed), 0, 1, 0, 0},
    {&__pyx_kp_u_Class_IonFlow_to_be_removed_afte, __pyx_k_Class_IonFlow_to_be_removed_afte, sizeof(__pyx_k_Class_IonFlow_to_be_removed_afte), 0, 1, 0, 0},
    {&__pyx_kp_u_Could_not_find_a_solution_for_th, __pyx_k_Could_not_find_a_solution_for_th, sizeof(__pyx_k_Could_not_find_a_solution_for_th), 0, 1, 0, 0},
    {&__pyx_n_s_D, __pyx_k_D, sizeof(__pyx_k_D), 0, 0, 1, 1},
    {&__pyx_n_s_DeprecationWarning, __pyx_k_DeprecationWarning, sizeof(__pyx_k_DeprecationWarning), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D, __pyx_k_Domain1D, sizeof(__pyx_k_Domain1D), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D___copy, __pyx_k_Domain1D___copy, sizeof(__pyx_k_Domain1D___copy), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D___reduce, __pyx_k_Domain1D___reduce, sizeof(__pyx_k_Domain1D___reduce), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D__from_array, __pyx_k_Domain1D__from_array, sizeof(__pyx_k_Domain1D__from_array), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D__to_array, __pyx_k_Domain1D__to_array, sizeof(__pyx_k_Domain1D__to_array), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D_bounds, __pyx_k_Domain1D_bounds, sizeof(__pyx_k_Domain1D_bounds), 0, 0, 1, 1},
    {&__pyx_kp_u_Domain1D_bounds_line_198, __pyx_k_Domain1D_bounds_line_198, sizeof(__pyx_k_Domain1D_bounds_line_198), 0, 1, 0, 0},
    {&__pyx_n_s_Domain1D_component_index, __pyx_k_Domain1D_component_index, sizeof(__pyx_k_Domain1D_component_index), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D_component_name, __pyx_k_Domain1D_component_name, sizeof(__pyx_k_Domain1D_component_name), 0, 0, 1, 1},
    {&__pyx_kp_u_Domain1D_object_is_not_copyable, __pyx_k_Domain1D_object_is_not_copyable, sizeof(__pyx_k_Domain1D_object_is_not_copyable), 0, 1, 0, 0},
    {&__pyx_kp_u_Domain1D_object_is_not_picklable, __pyx_k_Domain1D_object_is_not_picklable, sizeof(__pyx_k_Domain1D_object_is_not_picklable), 0, 1, 0, 0},
    {&__pyx_n_s_Domain1D_set_bounds, __pyx_k_Domain1D_set_bounds, sizeof(__pyx_k_Domain1D_set_bounds), 0, 0, 1, 1},
    {&__pyx_kp_u_Domain1D_set_bounds_line_96, __pyx_k_Domain1D_set_bounds_line_96, sizeof(__pyx_k_Domain1D_set_bounds_line_96), 0, 1, 0, 0},
    {&__pyx_n_s_Domain1D_set_default_tolerances, __pyx_k_Domain1D_set_default_tolerances, sizeof(__pyx_k_Domain1D_set_default_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D_set_steady_tolerances, __pyx_k_Domain1D_set_steady_tolerances, sizeof(__pyx_k_Domain1D_set_steady_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D_set_transient_tolerance, __pyx_k_Domain1D_set_transient_tolerance, sizeof(__pyx_k_Domain1D_set_transient_tolerance), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D_steady_abstol, __pyx_k_Domain1D_steady_abstol, sizeof(__pyx_k_Domain1D_steady_abstol), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D_steady_reltol, __pyx_k_Domain1D_steady_reltol, sizeof(__pyx_k_Domain1D_steady_reltol), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D_tolerances, __pyx_k_Domain1D_tolerances, sizeof(__pyx_k_Domain1D_tolerances), 0, 0, 1, 1},
    {&__pyx_kp_u_Domain1D_tolerances_line_208, __pyx_k_Domain1D_tolerances_line_208, sizeof(__pyx_k_Domain1D_tolerances_line_208), 0, 1, 0, 0},
    {&__pyx_n_s_Domain1D_transient_abstol, __pyx_k_Domain1D_transient_abstol, sizeof(__pyx_k_Domain1D_transient_abstol), 0, 0, 1, 1},
    {&__pyx_n_s_Domain1D_transient_reltol, __pyx_k_Domain1D_transient_reltol, sizeof(__pyx_k_Domain1D_transient_reltol), 0, 0, 1, 1},
    {&__pyx_n_u_Domain1D_type, __pyx_k_Domain1D_type, sizeof(__pyx_k_Domain1D_type), 0, 1, 0, 1},
    {&__pyx_kp_u_Domain_named_0_not_found, __pyx_k_Domain_named_0_not_found, sizeof(__pyx_k_Domain_named_0_not_found), 0, 1, 0, 0},
    {&__pyx_n_u_E, __pyx_k_E, sizeof(__pyx_k_E), 0, 1, 0, 1},
    {&__pyx_kp_u_Flame_is_extinct_on_point_grid, __pyx_k_Flame_is_extinct_on_point_grid, sizeof(__pyx_k_Flame_is_extinct_on_point_grid), 0, 1, 0, 0},
    {&__pyx_n_s_FlowBase, __pyx_k_FlowBase, sizeof(__pyx_k_FlowBase), 0, 0, 1, 1},
    {&__pyx_n_s_FlowBase_get_settings3, __pyx_k_FlowBase_get_settings3, sizeof(__pyx_k_FlowBase_get_settings3), 0, 0, 1, 1},
    {&__pyx_n_s_FlowBase_set_axisymmetric_flow, __pyx_k_FlowBase_set_axisymmetric_flow, sizeof(__pyx_k_FlowBase_set_axisymmetric_flow), 0, 0, 1, 1},
    {&__pyx_n_s_FlowBase_set_default_tolerances, __pyx_k_FlowBase_set_default_tolerances, sizeof(__pyx_k_FlowBase_set_default_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_FlowBase_set_fixed_temp_profile, __pyx_k_FlowBase_set_fixed_temp_profile, sizeof(__pyx_k_FlowBase_set_fixed_temp_profile), 0, 0, 1, 1},
    {&__pyx_kp_u_FlowBase_set_fixed_temp_profile_2, __pyx_k_FlowBase_set_fixed_temp_profile_2, sizeof(__pyx_k_FlowBase_set_fixed_temp_profile_2), 0, 1, 0, 0},
    {&__pyx_n_s_FlowBase_set_free_flow, __pyx_k_FlowBase_set_free_flow, sizeof(__pyx_k_FlowBase_set_free_flow), 0, 0, 1, 1},
    {&__pyx_n_s_FlowBase_set_transport, __pyx_k_FlowBase_set_transport, sizeof(__pyx_k_FlowBase_set_transport), 0, 0, 1, 1},
    {&__pyx_kp_u_FlowBase_set_transport_Method_t, __pyx_k_FlowBase_set_transport_Method_t, sizeof(__pyx_k_FlowBase_set_transport_Method_t), 0, 1, 0, 0},
    {&__pyx_kp_u_FlowBase_settings_Property_gett, __pyx_k_FlowBase_settings_Property_gett, sizeof(__pyx_k_FlowBase_settings_Property_gett), 0, 1, 0, 0},
    {&__pyx_kp_u_FlowBase_settings_Property_sett, __pyx_k_FlowBase_settings_Property_sett, sizeof(__pyx_k_FlowBase_settings_Property_sett), 0, 1, 0, 0},
    {&__pyx_n_s_FreeFlow, __pyx_k_FreeFlow, sizeof(__pyx_k_FreeFlow), 0, 0, 1, 1},
    {&__pyx_kp_u_Get_a_dictionary_of_the_criteri, __pyx_k_Get_a_dictionary_of_the_criteri, sizeof(__pyx_k_Get_a_dictionary_of_the_criteri), 0, 1, 0, 0},
    {&__pyx_n_s_IdealGasFlow, __pyx_k_IdealGasFlow, sizeof(__pyx_k_IdealGasFlow), 0, 0, 1, 1},
    {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
    {&__pyx_kp_u_Import_of_is_not_implemented, __pyx_k_Import_of_is_not_implemented, sizeof(__pyx_k_Import_of_is_not_implemented), 0, 1, 0, 0},
    {&__pyx_kp_u_Initial_solve_failed_Retrying_wi, __pyx_k_Initial_solve_failed_Retrying_wi, sizeof(__pyx_k_Initial_solve_failed_Retrying_wi), 0, 1, 0, 0},
    {&__pyx_n_s_Inlet1D, __pyx_k_Inlet1D, sizeof(__pyx_k_Inlet1D), 0, 0, 1, 1},
    {&__pyx_kp_u_Internal_work_array_value_at_on, __pyx_k_Internal_work_array_value_at_on, sizeof(__pyx_k_Internal_work_array_value_at_on), 0, 1, 0, 0},
    {&__pyx_n_s_IonFlow, __pyx_k_IonFlow, sizeof(__pyx_k_IonFlow), 0, 0, 1, 1},
    {&__pyx_n_s_IonFlow_set_solving_stage, __pyx_k_IonFlow_set_solving_stage, sizeof(__pyx_k_IonFlow_set_solving_stage), 0, 0, 1, 1},
    {&__pyx_kp_u_IonFlow_set_solving_stage_Method, __pyx_k_IonFlow_set_solving_stage_Method, sizeof(__pyx_k_IonFlow_set_solving_stage_Method), 0, 1, 0, 0},
    {&__pyx_n_s_KeyError, __pyx_k_KeyError, sizeof(__pyx_k_KeyError), 0, 0, 1, 1},
    {&__pyx_kp_u_Kinetics_object_must_be_derived, __pyx_k_Kinetics_object_must_be_derived, sizeof(__pyx_k_Kinetics_object_must_be_derived), 0, 1, 0, 0},
    {&__pyx_n_s_L, __pyx_k_L, sizeof(__pyx_k_L), 0, 0, 1, 1},
    {&__pyx_kp_u_Maximum_number_of_grid_points_ex, __pyx_k_Maximum_number_of_grid_points_ex, sizeof(__pyx_k_Maximum_number_of_grid_points_ex), 0, 1, 0, 0},
    {&__pyx_n_s_MemoryError, __pyx_k_MemoryError, sizeof(__pyx_k_MemoryError), 0, 0, 1, 1},
    {&__pyx_n_s_N, __pyx_k_N, sizeof(__pyx_k_N), 0, 0, 1, 1},
    {&__pyx_n_u_None, __pyx_k_None, sizeof(__pyx_k_None), 0, 1, 0, 1},
    {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
    {&__pyx_n_s_Outlet1D, __pyx_k_Outlet1D, sizeof(__pyx_k_Outlet1D), 0, 0, 1, 1},
    {&__pyx_n_s_OutletReservoir1D, __pyx_k_OutletReservoir1D, sizeof(__pyx_k_OutletReservoir1D), 0, 0, 1, 1},
    {&__pyx_n_s_P, __pyx_k_P, sizeof(__pyx_k_P), 0, 0, 1, 1},
    {&__pyx_n_s_ReactingSurface1D, __pyx_k_ReactingSurface1D, sizeof(__pyx_k_ReactingSurface1D), 0, 0, 1, 1},
    {&__pyx_kp_u_ReactingSurface1D_Starting_in_Ca, __pyx_k_ReactingSurface1D_Starting_in_Ca, sizeof(__pyx_k_ReactingSurface1D_Starting_in_Ca), 0, 1, 0, 0},
    {&__pyx_kp_u_ReactingSurface1D_needs_an_adjac, __pyx_k_ReactingSurface1D_needs_an_adjac, sizeof(__pyx_k_ReactingSurface1D_needs_an_adjac), 0, 1, 0, 0},
    {&__pyx_n_s_ReactingSurface1D_set_kinetics, __pyx_k_ReactingSurface1D_set_kinetics, sizeof(__pyx_k_ReactingSurface1D_set_kinetics), 0, 0, 1, 1},
    {&__pyx_kp_u_ReactingSurface1D_set_kinetics_M, __pyx_k_ReactingSurface1D_set_kinetics_M, sizeof(__pyx_k_ReactingSurface1D_set_kinetics_M), 0, 1, 0, 0},
    {&__pyx_kp_u_Retrieve_data_and_settings_from, __pyx_k_Retrieve_data_and_settings_from, sizeof(__pyx_k_Retrieve_data_and_settings_from), 0, 1, 0, 0},
    {&__pyx_kp_u_Return_the_lower_upper_bounds_f, __pyx_k_Return_the_lower_upper_bounds_f, sizeof(__pyx_k_Return_the_lower_upper_bounds_f), 0, 1, 0, 0},
    {&__pyx_kp_u_Return_the_relative_absolute_er, __pyx_k_Return_the_relative_absolute_er, sizeof(__pyx_k_Return_the_relative_absolute_er), 0, 1, 0, 0},
    {&__pyx_n_s_S, __pyx_k_S, sizeof(__pyx_k_S), 0, 0, 1, 1},
    {&__pyx_kp_u_Save_current_simulation_data_to, __pyx_k_Save_current_simulation_data_to, sizeof(__pyx_k_Save_current_simulation_data_to), 0, 1, 0, 0},
    {&__pyx_kp_u_Set_a_flat_profile_for_one_compo, __pyx_k_Set_a_flat_profile_for_one_compo, sizeof(__pyx_k_Set_a_flat_profile_for_one_compo), 0, 1, 0, 0},
    {&__pyx_kp_u_Set_an_initial_estimate_for_a_p, __pyx_k_Set_an_initial_estimate_for_a_p, sizeof(__pyx_k_Set_an_initial_estimate_for_a_p), 0, 1, 0, 0},
    {&__pyx_kp_u_Set_the_criteria_used_to_refine, __pyx_k_Set_the_criteria_used_to_refine, sizeof(__pyx_k_Set_the_criteria_used_to_refine), 0, 1, 0, 0},
    {&__pyx_kp_u_Set_the_fixed_temperature_profil, __pyx_k_Set_the_fixed_temperature_profil, sizeof(__pyx_k_Set_the_fixed_temperature_profil), 0, 1, 0, 0},
    {&__pyx_kp_u_Set_the_lower_and_upper_bounds, __pyx_k_Set_the_lower_and_upper_bounds, sizeof(__pyx_k_Set_the_lower_and_upper_bounds), 0, 1, 0, 0},
    {&__pyx_kp_u_Set_the_sequence_of_time_steps_t, __pyx_k_Set_the_sequence_of_time_steps_t, sizeof(__pyx_k_Set_the_sequence_of_time_steps_t), 0, 1, 0, 0},
    {&__pyx_kp_u_Set_the_value_of_one_component, __pyx_k_Set_the_value_of_one_component, sizeof(__pyx_k_Set_the_value_of_one_component), 0, 1, 0, 0},
    {&__pyx_kp_u_Setting_the_boundary_emissivitie, __pyx_k_Setting_the_boundary_emissivitie, sizeof(__pyx_k_Setting_the_boundary_emissivitie), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D, __pyx_k_Sim1D, sizeof(__pyx_k_Sim1D), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D___reduce_cython, __pyx_k_Sim1D___reduce_cython, sizeof(__pyx_k_Sim1D___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D___setstate_cython, __pyx_k_Sim1D___setstate_cython, sizeof(__pyx_k_Sim1D___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D__get_indices, __pyx_k_Sim1D__get_indices, sizeof(__pyx_k_Sim1D__get_indices), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D__get_initial_solution, __pyx_k_Sim1D__get_initial_solution, sizeof(__pyx_k_Sim1D__get_initial_solution), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_clear_stats, __pyx_k_Sim1D_clear_stats, sizeof(__pyx_k_Sim1D_clear_stats), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_domain_index, __pyx_k_Sim1D_domain_index, sizeof(__pyx_k_Sim1D_domain_index), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_eval, __pyx_k_Sim1D_eval, sizeof(__pyx_k_Sim1D_eval), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_extinct, __pyx_k_Sim1D_extinct, sizeof(__pyx_k_Sim1D_extinct), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_get_max_grid_points, __pyx_k_Sim1D_get_max_grid_points, sizeof(__pyx_k_Sim1D_get_max_grid_points), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_get_refine_criteria, __pyx_k_Sim1D_get_refine_criteria, sizeof(__pyx_k_Sim1D_get_refine_criteria), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_get_refine_criteria_line_1, __pyx_k_Sim1D_get_refine_criteria_line_1, sizeof(__pyx_k_Sim1D_get_refine_criteria_line_1), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_phase, __pyx_k_Sim1D_phase, sizeof(__pyx_k_Sim1D_phase), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_profile, __pyx_k_Sim1D_profile, sizeof(__pyx_k_Sim1D_profile), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_profile_line_1101, __pyx_k_Sim1D_profile_line_1101, sizeof(__pyx_k_Sim1D_profile_line_1101), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_refine, __pyx_k_Sim1D_refine, sizeof(__pyx_k_Sim1D_refine), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_restore, __pyx_k_Sim1D_restore, sizeof(__pyx_k_Sim1D_restore), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_restore_Argument_loglevel, __pyx_k_Sim1D_restore_Argument_loglevel, sizeof(__pyx_k_Sim1D_restore_Argument_loglevel), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_restore_data, __pyx_k_Sim1D_restore_data, sizeof(__pyx_k_Sim1D_restore_data), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_restore_data_Method_to_be, __pyx_k_Sim1D_restore_data_Method_to_be, sizeof(__pyx_k_Sim1D_restore_data_Method_to_be), 0, 1, 0, 0},
    {&__pyx_kp_u_Sim1D_restore_line_1639, __pyx_k_Sim1D_restore_line_1639, sizeof(__pyx_k_Sim1D_restore_line_1639), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_restore_steady_solution, __pyx_k_Sim1D_restore_steady_solution, sizeof(__pyx_k_Sim1D_restore_steady_solution), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_restore_time_stepping_solu, __pyx_k_Sim1D_restore_time_stepping_solu, sizeof(__pyx_k_Sim1D_restore_time_stepping_solu), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_save, __pyx_k_Sim1D_save, sizeof(__pyx_k_Sim1D_save), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_save_Argument_loglevel_is, __pyx_k_Sim1D_save_Argument_loglevel_is, sizeof(__pyx_k_Sim1D_save_Argument_loglevel_is), 0, 1, 0, 0},
    {&__pyx_kp_u_Sim1D_save_line_1592, __pyx_k_Sim1D_save_line_1592, sizeof(__pyx_k_Sim1D_save_line_1592), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_set_flat_profile, __pyx_k_Sim1D_set_flat_profile, sizeof(__pyx_k_Sim1D_set_flat_profile), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_set_flat_profile_line_1145, __pyx_k_Sim1D_set_flat_profile_line_1145, sizeof(__pyx_k_Sim1D_set_flat_profile_line_1145), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_set_grid_min, __pyx_k_Sim1D_set_grid_min, sizeof(__pyx_k_Sim1D_set_grid_min), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_initial_guess, __pyx_k_Sim1D_set_initial_guess, sizeof(__pyx_k_Sim1D_set_initial_guess), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_interrupt, __pyx_k_Sim1D_set_interrupt, sizeof(__pyx_k_Sim1D_set_interrupt), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_max_grid_points, __pyx_k_Sim1D_set_max_grid_points, sizeof(__pyx_k_Sim1D_set_max_grid_points), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_max_jac_age, __pyx_k_Sim1D_set_max_jac_age, sizeof(__pyx_k_Sim1D_set_max_jac_age), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_max_time_step, __pyx_k_Sim1D_set_max_time_step, sizeof(__pyx_k_Sim1D_set_max_time_step), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_min_time_step, __pyx_k_Sim1D_set_min_time_step, sizeof(__pyx_k_Sim1D_set_min_time_step), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_profile, __pyx_k_Sim1D_set_profile, sizeof(__pyx_k_Sim1D_set_profile), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_set_profile_line_1120, __pyx_k_Sim1D_set_profile_line_1120, sizeof(__pyx_k_Sim1D_set_profile_line_1120), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_set_refine_criteria, __pyx_k_Sim1D_set_refine_criteria, sizeof(__pyx_k_Sim1D_set_refine_criteria), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_set_refine_criteria_line_1, __pyx_k_Sim1D_set_refine_criteria_line_1, sizeof(__pyx_k_Sim1D_set_refine_criteria_line_1), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_set_steady_callback, __pyx_k_Sim1D_set_steady_callback, sizeof(__pyx_k_Sim1D_set_steady_callback), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_time_step, __pyx_k_Sim1D_set_time_step, sizeof(__pyx_k_Sim1D_set_time_step), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_time_step_callback, __pyx_k_Sim1D_set_time_step_callback, sizeof(__pyx_k_Sim1D_set_time_step_callback), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_set_time_step_factor, __pyx_k_Sim1D_set_time_step_factor, sizeof(__pyx_k_Sim1D_set_time_step_factor), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_set_time_step_line_1243, __pyx_k_Sim1D_set_time_step_line_1243, sizeof(__pyx_k_Sim1D_set_time_step_line_1243), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_set_value, __pyx_k_Sim1D_set_value, sizeof(__pyx_k_Sim1D_set_value), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_set_value_line_1053, __pyx_k_Sim1D_set_value_line_1053, sizeof(__pyx_k_Sim1D_set_value_line_1053), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_show, __pyx_k_Sim1D_show, sizeof(__pyx_k_Sim1D_show), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_show_solution, __pyx_k_Sim1D_show_solution, sizeof(__pyx_k_Sim1D_show_solution), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_show_stats, __pyx_k_Sim1D_show_stats, sizeof(__pyx_k_Sim1D_show_stats), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_solve, __pyx_k_Sim1D_solve, sizeof(__pyx_k_Sim1D_solve), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_solve_adjoint, __pyx_k_Sim1D_solve_adjoint, sizeof(__pyx_k_Sim1D_solve_adjoint), 0, 0, 1, 1},
    {&__pyx_n_s_Sim1D_value, __pyx_k_Sim1D_value, sizeof(__pyx_k_Sim1D_value), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_value_line_1037, __pyx_k_Sim1D_value_line_1037, sizeof(__pyx_k_Sim1D_value_line_1037), 0, 1, 0, 0},
    {&__pyx_n_s_Sim1D_work_value, __pyx_k_Sim1D_work_value, sizeof(__pyx_k_Sim1D_work_value), 0, 0, 1, 1},
    {&__pyx_kp_u_Sim1D_work_value_line_1084, __pyx_k_Sim1D_work_value_line_1084, sizeof(__pyx_k_Sim1D_work_value_line_1084), 0, 1, 0, 0},
    {&__pyx_kp_u_Solution_value_at_one_point_par, __pyx_k_Solution_value_at_one_point_par, sizeof(__pyx_k_Solution_value_at_one_point_par), 0, 1, 0, 0},
    {&__pyx_kp_u_Solving_on_point_grid_with_energ, __pyx_k_Solving_on_point_grid_with_energ, sizeof(__pyx_k_Solving_on_point_grid_with_energ), 0, 1, 0, 0},
    {&__pyx_kp_u_Solving_on_point_grid_with_energ_2, __pyx_k_Solving_on_point_grid_with_energ_2, sizeof(__pyx_k_Solving_on_point_grid_with_energ_2), 0, 1, 0, 0},
    {&__pyx_kp_u_Solving_with_Soret_diffusion, __pyx_k_Solving_with_Soret_diffusion, sizeof(__pyx_k_Solving_with_Soret_diffusion), 0, 1, 0, 0},
    {&__pyx_kp_u_Solving_with_grid_refinement_ena, __pyx_k_Solving_with_grid_refinement_ena, sizeof(__pyx_k_Solving_with_grid_refinement_ena), 0, 1, 0, 0},
    {&__pyx_kp_u_Solving_with_multicomponent_tran, __pyx_k_Solving_with_multicomponent_tran, sizeof(__pyx_k_Solving_with_multicomponent_tran), 0, 1, 0, 0},
    {&__pyx_kp_u_Solving_with_user_specified_tole, __pyx_k_Solving_with_user_specified_tole, sizeof(__pyx_k_Solving_with_user_specified_tole), 0, 1, 0, 0},
    {&__pyx_kp_u_Spatial_profile_of_one_componen, __pyx_k_Spatial_profile_of_one_componen, sizeof(__pyx_k_Spatial_profile_of_one_componen), 0, 1, 0, 0},
    {&__pyx_n_s_Surface1D, __pyx_k_Surface1D, sizeof(__pyx_k_Surface1D), 0, 0, 1, 1},
    {&__pyx_n_s_SymmetryPlane1D, __pyx_k_SymmetryPlane1D, sizeof(__pyx_k_SymmetryPlane1D), 0, 0, 1, 1},
    {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
    {&__pyx_n_u_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 1, 0, 1},
    {&__pyx_n_s_TPX, __pyx_k_TPX, sizeof(__pyx_k_TPX), 0, 0, 1, 1},
    {&__pyx_n_s_TPY, __pyx_k_TPY, sizeof(__pyx_k_TPY), 0, 0, 1, 1},
    {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
    {&__pyx_n_s_UnstrainedFlow, __pyx_k_UnstrainedFlow, sizeof(__pyx_k_UnstrainedFlow), 0, 0, 1, 1},
    {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
    {&__pyx_n_s_WeakrefProxy, __pyx_k_WeakrefProxy, sizeof(__pyx_k_WeakrefProxy), 0, 0, 1, 1},
    {&__pyx_n_s_X, __pyx_k_X, sizeof(__pyx_k_X), 0, 0, 1, 1},
    {&__pyx_n_s_Y, __pyx_k_Y, sizeof(__pyx_k_Y), 0, 0, 1, 1},
    {&__pyx_n_s__161, __pyx_k__161, sizeof(__pyx_k__161), 0, 0, 1, 1},
    {&__pyx_kp_u__17, __pyx_k__17, sizeof(__pyx_k__17), 0, 1, 0, 0},
    {&__pyx_n_u__19, __pyx_k__19, sizeof(__pyx_k__19), 0, 1, 0, 1},
    {&__pyx_kp_u__27, __pyx_k__27, sizeof(__pyx_k__27), 0, 1, 0, 0},
    {&__pyx_kp_u__43, __pyx_k__43, sizeof(__pyx_k__43), 0, 1, 0, 0},
    {&__pyx_n_s__44, __pyx_k__44, sizeof(__pyx_k__44), 0, 0, 1, 1},
    {&__pyx_kp_u__8, __pyx_k__8, sizeof(__pyx_k__8), 0, 1, 0, 0},
    {&__pyx_n_s_a, __pyx_k_a, sizeof(__pyx_k_a), 0, 0, 1, 1},
    {&__pyx_n_s_abs, __pyx_k_abs, sizeof(__pyx_k_abs), 0, 0, 1, 1},
    {&__pyx_n_s_argmax, __pyx_k_argmax, sizeof(__pyx_k_argmax), 0, 0, 1, 1},
    {&__pyx_n_s_args, __pyx_k_args, sizeof(__pyx_k_args), 0, 0, 1, 1},
    {&__pyx_n_s_arr, __pyx_k_arr, sizeof(__pyx_k_arr), 0, 0, 1, 1},
    {&__pyx_n_s_array, __pyx_k_array, sizeof(__pyx_k_array), 0, 0, 1, 1},
    {&__pyx_n_s_ascontiguousarray, __pyx_k_ascontiguousarray, sizeof(__pyx_k_ascontiguousarray), 0, 0, 1, 1},
    {&__pyx_n_s_asyncio_coroutines, __pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 0, 1, 1},
    {&__pyx_n_s_atol, __pyx_k_atol, sizeof(__pyx_k_atol), 0, 0, 1, 1},
    {&__pyx_n_s_atol_ss_final, __pyx_k_atol_ss_final, sizeof(__pyx_k_atol_ss_final), 0, 0, 1, 1},
    {&__pyx_n_s_atol_ts_final, __pyx_k_atol_ts_final, sizeof(__pyx_k_atol_ts_final), 0, 0, 1, 1},
    {&__pyx_n_s_auto, __pyx_k_auto, sizeof(__pyx_k_auto), 0, 0, 1, 1},
    {&__pyx_kp_u_axisymmetric_flow, __pyx_k_axisymmetric_flow, sizeof(__pyx_k_axisymmetric_flow), 0, 1, 0, 0},
    {&__pyx_n_s_basis, __pyx_k_basis, sizeof(__pyx_k_basis), 0, 0, 1, 1},
    {&__pyx_n_s_boundary_emissivities, __pyx_k_boundary_emissivities, sizeof(__pyx_k_boundary_emissivities), 0, 0, 1, 1},
    {&__pyx_n_s_bounds, __pyx_k_bounds, sizeof(__pyx_k_bounds), 0, 0, 1, 1},
    {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
    {&__pyx_n_s_cantera__onedim, __pyx_k_cantera__onedim, sizeof(__pyx_k_cantera__onedim), 0, 0, 1, 1},
    {&__pyx_kp_s_cantera__onedim_pyx, __pyx_k_cantera__onedim_pyx, sizeof(__pyx_k_cantera__onedim_pyx), 0, 0, 1, 0},
    {&__pyx_n_s_charge, __pyx_k_charge, sizeof(__pyx_k_charge), 0, 0, 1, 1},
    {&__pyx_n_s_chargetol, __pyx_k_chargetol, sizeof(__pyx_k_chargetol), 0, 0, 1, 1},
    {&__pyx_n_s_class_getitem, __pyx_k_class_getitem, sizeof(__pyx_k_class_getitem), 0, 0, 1, 1},
    {&__pyx_n_s_clear_stats, __pyx_k_clear_stats, sizeof(__pyx_k_clear_stats), 0, 0, 1, 1},
    {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
    {&__pyx_n_s_close, __pyx_k_close, sizeof(__pyx_k_close), 0, 0, 1, 1},
    {&__pyx_n_s_comp, __pyx_k_comp, sizeof(__pyx_k_comp), 0, 0, 1, 1},
    {&__pyx_n_s_component, __pyx_k_component, sizeof(__pyx_k_component), 0, 0, 1, 1},
    {&__pyx_n_s_component_index, __pyx_k_component_index, sizeof(__pyx_k_component_index), 0, 0, 1, 1},
    {&__pyx_n_s_component_name, __pyx_k_component_name, sizeof(__pyx_k_component_name), 0, 0, 1, 1},
    {&__pyx_n_s_component_names, __pyx_k_component_names, sizeof(__pyx_k_component_names), 0, 0, 1, 1},
    {&__pyx_n_s_composition, __pyx_k_composition, sizeof(__pyx_k_composition), 0, 0, 1, 1},
    {&__pyx_n_s_compression, __pyx_k_compression, sizeof(__pyx_k_compression), 0, 0, 1, 1},
    {&__pyx_n_s_copy, __pyx_k_copy, sizeof(__pyx_k_copy), 0, 0, 1, 1},
    {&__pyx_n_s_curve, __pyx_k_curve, sizeof(__pyx_k_curve), 0, 0, 1, 1},
    {&__pyx_n_u_curve, __pyx_k_curve, sizeof(__pyx_k_curve), 0, 1, 0, 1},
    {&__pyx_n_s_d, __pyx_k_d, sizeof(__pyx_k_d), 0, 0, 1, 1},
    {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
    {&__pyx_n_u_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 1, 0, 1},
    {&__pyx_n_s_default, __pyx_k_default, sizeof(__pyx_k_default), 0, 0, 1, 1},
    {&__pyx_n_s_density, __pyx_k_density, sizeof(__pyx_k_density), 0, 0, 1, 1},
    {&__pyx_n_s_description, __pyx_k_description, sizeof(__pyx_k_description), 0, 0, 1, 1},
    {&__pyx_n_s_dest, __pyx_k_dest, sizeof(__pyx_k_dest), 0, 0, 1, 1},
    {&__pyx_n_s_dfdp, __pyx_k_dfdp, sizeof(__pyx_k_dfdp), 0, 0, 1, 1},
    {&__pyx_n_s_dgdp, __pyx_k_dgdp, sizeof(__pyx_k_dgdp), 0, 0, 1, 1},
    {&__pyx_n_s_dgdx, __pyx_k_dgdx, sizeof(__pyx_k_dgdx), 0, 0, 1, 1},
    {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
    {&__pyx_kp_u_disable, __pyx_k_disable, sizeof(__pyx_k_disable), 0, 1, 0, 0},
    {&__pyx_n_s_doc, __pyx_k_doc, sizeof(__pyx_k_doc), 0, 0, 1, 1},
    {&__pyx_n_s_dom, __pyx_k_dom, sizeof(__pyx_k_dom), 0, 0, 1, 1},
    {&__pyx_n_s_domain, __pyx_k_domain, sizeof(__pyx_k_domain), 0, 0, 1, 1},
    {&__pyx_n_s_domain_index, __pyx_k_domain_index, sizeof(__pyx_k_domain_index), 0, 0, 1, 1},
    {&__pyx_n_s_domain_type, __pyx_k_domain_type, sizeof(__pyx_k_domain_type), 0, 0, 1, 1},
    {&__pyx_n_s_domains, __pyx_k_domains, sizeof(__pyx_k_domains), 0, 0, 1, 1},
    {&__pyx_n_s_dot, __pyx_k_dot, sizeof(__pyx_k_dot), 0, 0, 1, 1},
    {&__pyx_n_s_double, __pyx_k_double, sizeof(__pyx_k_double), 0, 0, 1, 1},
    {&__pyx_n_s_dp, __pyx_k_dp, sizeof(__pyx_k_dp), 0, 0, 1, 1},
    {&__pyx_n_s_dtype, __pyx_k_dtype, sizeof(__pyx_k_dtype), 0, 0, 1, 1},
    {&__pyx_n_s_dz, __pyx_k_dz, sizeof(__pyx_k_dz), 0, 0, 1, 1},
    {&__pyx_n_s_e, __pyx_k_e, sizeof(__pyx_k_e), 0, 0, 1, 1},
    {&__pyx_n_u_edge, __pyx_k_edge, sizeof(__pyx_k_edge), 0, 1, 0, 1},
    {&__pyx_n_u_emissivity_left, __pyx_k_emissivity_left, sizeof(__pyx_k_emissivity_left), 0, 1, 0, 1},
    {&__pyx_n_u_emissivity_right, __pyx_k_emissivity_right, sizeof(__pyx_k_emissivity_right), 0, 1, 0, 1},
    {&__pyx_n_s_empty, __pyx_k_empty, sizeof(__pyx_k_empty), 0, 0, 1, 1},
    {&__pyx_kp_u_enable, __pyx_k_enable, sizeof(__pyx_k_enable), 0, 1, 0, 0},
    {&__pyx_n_s_energy_enabled, __pyx_k_energy_enabled, sizeof(__pyx_k_energy_enabled), 0, 0, 1, 1},
    {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
    {&__pyx_n_s_eval, __pyx_k_eval, sizeof(__pyx_k_eval), 0, 0, 1, 1},
    {&__pyx_n_s_extinct, __pyx_k_extinct, sizeof(__pyx_k_extinct), 0, 0, 1, 1},
    {&__pyx_n_s_f, __pyx_k_f, sizeof(__pyx_k_f), 0, 0, 1, 1},
    {&__pyx_n_s_filename, __pyx_k_filename, sizeof(__pyx_k_filename), 0, 0, 1, 1},
    {&__pyx_n_s_flow_domains, __pyx_k_flow_domains, sizeof(__pyx_k_flow_domains), 0, 0, 1, 1},
    {&__pyx_n_s_fminus, __pyx_k_fminus, sizeof(__pyx_k_fminus), 0, 0, 1, 1},
    {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
    {&__pyx_n_s_fplus, __pyx_k_fplus, sizeof(__pyx_k_fplus), 0, 0, 1, 1},
    {&__pyx_kp_u_free_flow, __pyx_k_free_flow, sizeof(__pyx_k_free_flow), 0, 1, 0, 0},
    {&__pyx_n_s_from_array, __pyx_k_from_array, sizeof(__pyx_k_from_array), 0, 0, 1, 1},
    {&__pyx_n_s_g, __pyx_k_g, sizeof(__pyx_k_g), 0, 0, 1, 1},
    {&__pyx_n_s_gas, __pyx_k_gas, sizeof(__pyx_k_gas), 0, 0, 1, 1},
    {&__pyx_n_u_gas, __pyx_k_gas, sizeof(__pyx_k_gas), 0, 1, 0, 1},
    {&__pyx_kp_u_gas_flow, __pyx_k_gas_flow, sizeof(__pyx_k_gas_flow), 0, 1, 0, 0},
    {&__pyx_kp_u_gc, __pyx_k_gc, sizeof(__pyx_k_gc), 0, 1, 0, 0},
    {&__pyx_n_s_genexpr, __pyx_k_genexpr, sizeof(__pyx_k_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
    {&__pyx_n_s_get_indices, __pyx_k_get_indices, sizeof(__pyx_k_get_indices), 0, 0, 1, 1},
    {&__pyx_n_s_get_initial_solution, __pyx_k_get_initial_solution, sizeof(__pyx_k_get_initial_solution), 0, 0, 1, 1},
    {&__pyx_n_s_get_max_grid_points, __pyx_k_get_max_grid_points, sizeof(__pyx_k_get_max_grid_points), 0, 0, 1, 1},
    {&__pyx_n_s_get_refine_criteria, __pyx_k_get_refine_criteria, sizeof(__pyx_k_get_refine_criteria), 0, 0, 1, 1},
    {&__pyx_n_s_get_settings3, __pyx_k_get_settings3, sizeof(__pyx_k_get_settings3), 0, 0, 1, 1},
    {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
    {&__pyx_n_s_gg, __pyx_k_gg, sizeof(__pyx_k_gg), 0, 0, 1, 1},
    {&__pyx_n_s_gminus, __pyx_k_gminus, sizeof(__pyx_k_gminus), 0, 0, 1, 1},
    {&__pyx_n_s_gplus, __pyx_k_gplus, sizeof(__pyx_k_gplus), 0, 0, 1, 1},
    {&__pyx_n_s_grid, __pyx_k_grid, sizeof(__pyx_k_grid), 0, 0, 1, 1},
    {&__pyx_n_u_grid, __pyx_k_grid, sizeof(__pyx_k_grid), 0, 1, 0, 1},
    {&__pyx_n_s_have_user_tolerances, __pyx_k_have_user_tolerances, sizeof(__pyx_k_have_user_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_header, __pyx_k_header, sizeof(__pyx_k_header), 0, 0, 1, 1},
    {&__pyx_n_s_i, __pyx_k_i, sizeof(__pyx_k_i), 0, 0, 1, 1},
    {&__pyx_n_s_idom, __pyx_k_idom, sizeof(__pyx_k_idom), 0, 0, 1, 1},
    {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
    {&__pyx_n_s_index, __pyx_k_index, sizeof(__pyx_k_index), 0, 0, 1, 1},
    {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
    {&__pyx_n_s_init_subclass, __pyx_k_init_subclass, sizeof(__pyx_k_init_subclass), 0, 0, 1, 1},
    {&__pyx_n_s_initializing, __pyx_k_initializing, sizeof(__pyx_k_initializing), 0, 0, 1, 1},
    {&__pyx_n_u_inlet, __pyx_k_inlet, sizeof(__pyx_k_inlet), 0, 1, 0, 1},
    {&__pyx_n_s_interrupts, __pyx_k_interrupts, sizeof(__pyx_k_interrupts), 0, 0, 1, 1},
    {&__pyx_kp_u_ion_flow, __pyx_k_ion_flow, sizeof(__pyx_k_ion_flow), 0, 1, 0, 0},
    {&__pyx_kp_u_ionized_gas, __pyx_k_ionized_gas, sizeof(__pyx_k_ionized_gas), 0, 1, 0, 0},
    {&__pyx_n_s_is_coroutine, __pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 0, 1, 1},
    {&__pyx_n_s_isclose, __pyx_k_isclose, sizeof(__pyx_k_isclose), 0, 0, 1, 1},
    {&__pyx_kp_u_isenabled, __pyx_k_isenabled, sizeof(__pyx_k_isenabled), 0, 1, 0, 0},
    {&__pyx_n_s_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 0, 1, 1},
    {&__pyx_n_s_j, __pyx_k_j, sizeof(__pyx_k_j), 0, 0, 1, 1},
    {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
    {&__pyx_n_s_k0, __pyx_k_k0, sizeof(__pyx_k_k0), 0, 0, 1, 1},
    {&__pyx_n_s_kcomp, __pyx_k_kcomp, sizeof(__pyx_k_kcomp), 0, 0, 1, 1},
    {&__pyx_n_s_key, __pyx_k_key, sizeof(__pyx_k_key), 0, 0, 1, 1},
    {&__pyx_n_s_kin, __pyx_k_kin, sizeof(__pyx_k_kin), 0, 0, 1, 1},
    {&__pyx_n_s_kwargs, __pyx_k_kwargs, sizeof(__pyx_k_kwargs), 0, 0, 1, 1},
    {&__pyx_n_s_linspace, __pyx_k_linspace, sizeof(__pyx_k_linspace), 0, 0, 1, 1},
    {&__pyx_n_s_log, __pyx_k_log, sizeof(__pyx_k_log), 0, 0, 1, 1},
    {&__pyx_n_s_logical_not, __pyx_k_logical_not, sizeof(__pyx_k_logical_not), 0, 0, 1, 1},
    {&__pyx_n_s_loglevel, __pyx_k_loglevel, sizeof(__pyx_k_loglevel), 0, 0, 1, 1},
    {&__pyx_n_s_lower, __pyx_k_lower, sizeof(__pyx_k_lower), 0, 0, 1, 1},
    {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
    {&__pyx_n_s_mdot, __pyx_k_mdot, sizeof(__pyx_k_mdot), 0, 0, 1, 1},
    {&__pyx_n_s_meta, __pyx_k_meta, sizeof(__pyx_k_meta), 0, 0, 1, 1},
    {&__pyx_n_s_metaclass, __pyx_k_metaclass, sizeof(__pyx_k_metaclass), 0, 0, 1, 1},
    {&__pyx_kp_u_mixture_averaged, __pyx_k_mixture_averaged, sizeof(__pyx_k_mixture_averaged), 0, 1, 0, 0},
    {&__pyx_n_s_module, __pyx_k_module, sizeof(__pyx_k_module), 0, 0, 1, 1},
    {&__pyx_n_s_msg, __pyx_k_msg, sizeof(__pyx_k_msg), 0, 0, 1, 1},
    {&__pyx_n_s_multi, __pyx_k_multi, sizeof(__pyx_k_multi), 0, 0, 1, 1},
    {&__pyx_n_u_multicomponent, __pyx_k_multicomponent, sizeof(__pyx_k_multicomponent), 0, 1, 0, 1},
    {&__pyx_n_s_n, __pyx_k_n, sizeof(__pyx_k_n), 0, 0, 1, 1},
    {&__pyx_n_s_nPoints, __pyx_k_nPoints, sizeof(__pyx_k_nPoints), 0, 0, 1, 1},
    {&__pyx_n_s_n_components, __pyx_k_n_components, sizeof(__pyx_k_n_components), 0, 0, 1, 1},
    {&__pyx_n_s_n_params, __pyx_k_n_params, sizeof(__pyx_k_n_params), 0, 0, 1, 1},
    {&__pyx_n_s_n_points, __pyx_k_n_points, sizeof(__pyx_k_n_points), 0, 0, 1, 1},
    {&__pyx_n_s_n_species, __pyx_k_n_species, sizeof(__pyx_k_n_species), 0, 0, 1, 1},
    {&__pyx_n_s_n_steps, __pyx_k_n_steps, sizeof(__pyx_k_n_steps), 0, 0, 1, 1},
    {&__pyx_n_s_n_vars, __pyx_k_n_vars, sizeof(__pyx_k_n_vars), 0, 0, 1, 1},
    {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
    {&__pyx_n_u_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 1, 0, 1},
    {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
    {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
    {&__pyx_n_s_no_op, __pyx_k_no_op, sizeof(__pyx_k_no_op), 0, 0, 1, 1},
    {&__pyx_n_u_none, __pyx_k_none, sizeof(__pyx_k_none), 0, 1, 0, 1},
    {&__pyx_n_s_normalize, __pyx_k_normalize, sizeof(__pyx_k_normalize), 0, 0, 1, 1},
    {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
    {&__pyx_n_s_npmax, __pyx_k_npmax, sizeof(__pyx_k_npmax), 0, 0, 1, 1},
    {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
    {&__pyx_kp_u_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 1, 0, 0},
    {&__pyx_kp_u_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 1, 0, 0},
    {&__pyx_n_s_ones, __pyx_k_ones, sizeof(__pyx_k_ones), 0, 0, 1, 1},
    {&__pyx_n_s_other_cols, __pyx_k_other_cols, sizeof(__pyx_k_other_cols), 0, 0, 1, 1},
    {&__pyx_n_u_outlet, __pyx_k_outlet, sizeof(__pyx_k_outlet), 0, 1, 0, 1},
    {&__pyx_kp_u_outlet_reservoir, __pyx_k_outlet_reservoir, sizeof(__pyx_k_outlet_reservoir), 0, 1, 0, 0},
    {&__pyx_n_s_overwrite, __pyx_k_overwrite, sizeof(__pyx_k_overwrite), 0, 0, 1, 1},
    {&__pyx_n_s_p, __pyx_k_p, sizeof(__pyx_k_p), 0, 0, 1, 1},
    {&__pyx_n_s_perturb, __pyx_k_perturb, sizeof(__pyx_k_perturb), 0, 0, 1, 1},
    {&__pyx_n_s_phase, __pyx_k_phase, sizeof(__pyx_k_phase), 0, 0, 1, 1},
    {&__pyx_n_s_phase_of_matter, __pyx_k_phase_of_matter, sizeof(__pyx_k_phase_of_matter), 0, 0, 1, 1},
    {&__pyx_n_s_point, __pyx_k_point, sizeof(__pyx_k_point), 0, 0, 1, 1},
    {&__pyx_n_s_pos, __pyx_k_pos, sizeof(__pyx_k_pos), 0, 0, 1, 1},
    {&__pyx_n_s_pos_vec, __pyx_k_pos_vec, sizeof(__pyx_k_pos_vec), 0, 0, 1, 1},
    {&__pyx_n_s_positions, __pyx_k_positions, sizeof(__pyx_k_positions), 0, 0, 1, 1},
    {&__pyx_n_s_prepare, __pyx_k_prepare, sizeof(__pyx_k_prepare), 0, 0, 1, 1},
    {&__pyx_n_s_print, __pyx_k_print, sizeof(__pyx_k_print), 0, 0, 1, 1},
    {&__pyx_n_s_print_time, __pyx_k_print_time, sizeof(__pyx_k_print_time), 0, 0, 1, 1},
    {&__pyx_n_s_profile, __pyx_k_profile, sizeof(__pyx_k_profile), 0, 0, 1, 1},
    {&__pyx_n_s_prune, __pyx_k_prune, sizeof(__pyx_k_prune), 0, 0, 1, 1},
    {&__pyx_n_u_prune, __pyx_k_prune, sizeof(__pyx_k_prune), 0, 1, 0, 1},
    {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
    {&__pyx_n_u_qdot, __pyx_k_qdot, sizeof(__pyx_k_qdot), 0, 1, 0, 1},
    {&__pyx_n_s_qualname, __pyx_k_qualname, sizeof(__pyx_k_qualname), 0, 0, 1, 1},
    {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
    {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
    {&__pyx_n_s_ratio, __pyx_k_ratio, sizeof(__pyx_k_ratio), 0, 0, 1, 1},
    {&__pyx_n_u_ratio, __pyx_k_ratio, sizeof(__pyx_k_ratio), 0, 1, 0, 1},
    {&__pyx_n_s_rdt, __pyx_k_rdt, sizeof(__pyx_k_rdt), 0, 0, 1, 1},
    {&__pyx_kp_u_reacting_surface, __pyx_k_reacting_surface, sizeof(__pyx_k_reacting_surface), 0, 1, 0, 0},
    {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
    {&__pyx_n_s_refine, __pyx_k_refine, sizeof(__pyx_k_refine), 0, 0, 1, 1},
    {&__pyx_n_s_refine_grid, __pyx_k_refine_grid, sizeof(__pyx_k_refine_grid), 0, 0, 1, 1},
    {&__pyx_n_s_rel, __pyx_k_rel, sizeof(__pyx_k_rel), 0, 0, 1, 1},
    {&__pyx_n_s_restore, __pyx_k_restore, sizeof(__pyx_k_restore), 0, 0, 1, 1},
    {&__pyx_n_s_restore_data, __pyx_k_restore_data, sizeof(__pyx_k_restore_data), 0, 0, 1, 1},
    {&__pyx_n_s_restore_steady_solution, __pyx_k_restore_steady_solution, sizeof(__pyx_k_restore_steady_solution), 0, 0, 1, 1},
    {&__pyx_n_s_restore_time_stepping_solution, __pyx_k_restore_time_stepping_solution, sizeof(__pyx_k_restore_time_stepping_solution), 0, 0, 1, 1},
    {&__pyx_n_s_restore_tolerances, __pyx_k_restore_tolerances, sizeof(__pyx_k_restore_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_return_counts, __pyx_k_return_counts, sizeof(__pyx_k_return_counts), 0, 0, 1, 1},
    {&__pyx_n_s_rtol, __pyx_k_rtol, sizeof(__pyx_k_rtol), 0, 0, 1, 1},
    {&__pyx_n_s_rtol_ss_final, __pyx_k_rtol_ss_final, sizeof(__pyx_k_rtol_ss_final), 0, 0, 1, 1},
    {&__pyx_n_s_rtol_ts_final, __pyx_k_rtol_ts_final, sizeof(__pyx_k_rtol_ts_final), 0, 0, 1, 1},
    {&__pyx_n_s_save, __pyx_k_save, sizeof(__pyx_k_save), 0, 0, 1, 1},
    {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
    {&__pyx_n_s_send, __pyx_k_send, sizeof(__pyx_k_send), 0, 0, 1, 1},
    {&__pyx_n_s_set_axisymmetric_flow, __pyx_k_set_axisymmetric_flow, sizeof(__pyx_k_set_axisymmetric_flow), 0, 0, 1, 1},
    {&__pyx_n_s_set_bounds, __pyx_k_set_bounds, sizeof(__pyx_k_set_bounds), 0, 0, 1, 1},
    {&__pyx_n_s_set_default_tolerances, __pyx_k_set_default_tolerances, sizeof(__pyx_k_set_default_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_set_fixed_temp_profile, __pyx_k_set_fixed_temp_profile, sizeof(__pyx_k_set_fixed_temp_profile), 0, 0, 1, 1},
    {&__pyx_n_s_set_flat_profile, __pyx_k_set_flat_profile, sizeof(__pyx_k_set_flat_profile), 0, 0, 1, 1},
    {&__pyx_n_s_set_free_flow, __pyx_k_set_free_flow, sizeof(__pyx_k_set_free_flow), 0, 0, 1, 1},
    {&__pyx_n_s_set_grid_min, __pyx_k_set_grid_min, sizeof(__pyx_k_set_grid_min), 0, 0, 1, 1},
    {&__pyx_n_s_set_initial_guess, __pyx_k_set_initial_guess, sizeof(__pyx_k_set_initial_guess), 0, 0, 1, 1},
    {&__pyx_n_s_set_interrupt, __pyx_k_set_interrupt, sizeof(__pyx_k_set_interrupt), 0, 0, 1, 1},
    {&__pyx_n_s_set_kinetics, __pyx_k_set_kinetics, sizeof(__pyx_k_set_kinetics), 0, 0, 1, 1},
    {&__pyx_n_s_set_max_grid_points, __pyx_k_set_max_grid_points, sizeof(__pyx_k_set_max_grid_points), 0, 0, 1, 1},
    {&__pyx_n_s_set_max_jac_age, __pyx_k_set_max_jac_age, sizeof(__pyx_k_set_max_jac_age), 0, 0, 1, 1},
    {&__pyx_n_s_set_max_time_step, __pyx_k_set_max_time_step, sizeof(__pyx_k_set_max_time_step), 0, 0, 1, 1},
    {&__pyx_n_s_set_min_time_step, __pyx_k_set_min_time_step, sizeof(__pyx_k_set_min_time_step), 0, 0, 1, 1},
    {&__pyx_n_s_set_name, __pyx_k_set_name, sizeof(__pyx_k_set_name), 0, 0, 1, 1},
    {&__pyx_n_s_set_profile, __pyx_k_set_profile, sizeof(__pyx_k_set_profile), 0, 0, 1, 1},
    {&__pyx_n_s_set_refine_criteria, __pyx_k_set_refine_criteria, sizeof(__pyx_k_set_refine_criteria), 0, 0, 1, 1},
    {&__pyx_n_s_set_solving_stage, __pyx_k_set_solving_stage, sizeof(__pyx_k_set_solving_stage), 0, 0, 1, 1},
    {&__pyx_n_s_set_soret, __pyx_k_set_soret, sizeof(__pyx_k_set_soret), 0, 0, 1, 1},
    {&__pyx_n_s_set_steady_callback, __pyx_k_set_steady_callback, sizeof(__pyx_k_set_steady_callback), 0, 0, 1, 1},
    {&__pyx_n_s_set_steady_tolerances, __pyx_k_set_steady_tolerances, sizeof(__pyx_k_set_steady_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_set_time_step, __pyx_k_set_time_step, sizeof(__pyx_k_set_time_step), 0, 0, 1, 1},
    {&__pyx_n_s_set_time_step_callback, __pyx_k_set_time_step_callback, sizeof(__pyx_k_set_time_step_callback), 0, 0, 1, 1},
    {&__pyx_n_s_set_time_step_factor, __pyx_k_set_time_step_factor, sizeof(__pyx_k_set_time_step_factor), 0, 0, 1, 1},
    {&__pyx_n_s_set_transient_tolerances, __pyx_k_set_transient_tolerances, sizeof(__pyx_k_set_transient_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_set_transport, __pyx_k_set_transport, sizeof(__pyx_k_set_transport), 0, 0, 1, 1},
    {&__pyx_n_s_set_value, __pyx_k_set_value, sizeof(__pyx_k_set_value), 0, 0, 1, 1},
    {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
    {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_settings, __pyx_k_settings, sizeof(__pyx_k_settings), 0, 0, 1, 1},
    {&__pyx_n_s_show, __pyx_k_show, sizeof(__pyx_k_show), 0, 0, 1, 1},
    {&__pyx_n_s_show_solution, __pyx_k_show_solution, sizeof(__pyx_k_show_solution), 0, 0, 1, 1},
    {&__pyx_n_s_show_stats, __pyx_k_show_stats, sizeof(__pyx_k_show_stats), 0, 0, 1, 1},
    {&__pyx_n_s_size, __pyx_k_size, sizeof(__pyx_k_size), 0, 0, 1, 1},
    {&__pyx_n_s_slope, __pyx_k_slope, sizeof(__pyx_k_slope), 0, 0, 1, 1},
    {&__pyx_n_u_slope, __pyx_k_slope, sizeof(__pyx_k_slope), 0, 1, 0, 1},
    {&__pyx_kp_u_soln_yaml, __pyx_k_soln_yaml, sizeof(__pyx_k_soln_yaml), 0, 1, 0, 0},
    {&__pyx_n_u_solution, __pyx_k_solution, sizeof(__pyx_k_solution), 0, 1, 0, 1},
    {&__pyx_n_s_solve, __pyx_k_solve, sizeof(__pyx_k_solve), 0, 0, 1, 1},
    {&__pyx_n_s_solve_adjoint, __pyx_k_solve_adjoint, sizeof(__pyx_k_solve_adjoint), 0, 0, 1, 1},
    {&__pyx_n_s_solve_locals_genexpr, __pyx_k_solve_locals_genexpr, sizeof(__pyx_k_solve_locals_genexpr), 0, 0, 1, 1},
    {&__pyx_n_s_solve_locals_log, __pyx_k_solve_locals_log, sizeof(__pyx_k_solve_locals_log), 0, 0, 1, 1},
    {&__pyx_n_s_solve_locals_restore_tolerances, __pyx_k_solve_locals_restore_tolerances, sizeof(__pyx_k_solve_locals_restore_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_solve_locals_set_soret, __pyx_k_solve_locals_set_soret, sizeof(__pyx_k_solve_locals_set_soret), 0, 0, 1, 1},
    {&__pyx_n_s_solve_locals_set_transport, __pyx_k_solve_locals_set_transport, sizeof(__pyx_k_solve_locals_set_transport), 0, 0, 1, 1},
    {&__pyx_n_s_solve_multi, __pyx_k_solve_multi, sizeof(__pyx_k_solve_multi), 0, 0, 1, 1},
    {&__pyx_n_s_solved, __pyx_k_solved, sizeof(__pyx_k_solved), 0, 0, 1, 1},
    {&__pyx_n_s_solving_stage, __pyx_k_solving_stage, sizeof(__pyx_k_solving_stage), 0, 0, 1, 1},
    {&__pyx_n_s_soret, __pyx_k_soret, sizeof(__pyx_k_soret), 0, 0, 1, 1},
    {&__pyx_n_s_soret_doms, __pyx_k_soret_doms, sizeof(__pyx_k_soret_doms), 0, 0, 1, 1},
    {&__pyx_n_s_soret_enabled, __pyx_k_soret_enabled, sizeof(__pyx_k_soret_enabled), 0, 0, 1, 1},
    {&__pyx_n_u_soret_enabled, __pyx_k_soret_enabled, sizeof(__pyx_k_soret_enabled), 0, 1, 0, 1},
    {&__pyx_n_s_spc, __pyx_k_spc, sizeof(__pyx_k_spc), 0, 0, 1, 1},
    {&__pyx_n_s_spec, __pyx_k_spec, sizeof(__pyx_k_spec), 0, 0, 1, 1},
    {&__pyx_n_s_species, __pyx_k_species, sizeof(__pyx_k_species), 0, 0, 1, 1},
    {&__pyx_n_s_species_name, __pyx_k_species_name, sizeof(__pyx_k_species_name), 0, 0, 1, 1},
    {&__pyx_n_s_species_names, __pyx_k_species_names, sizeof(__pyx_k_species_names), 0, 0, 1, 1},
    {&__pyx_n_s_split, __pyx_k_split, sizeof(__pyx_k_split), 0, 0, 1, 1},
    {&__pyx_n_s_ss_age, __pyx_k_ss_age, sizeof(__pyx_k_ss_age), 0, 0, 1, 1},
    {&__pyx_n_s_stage, __pyx_k_stage, sizeof(__pyx_k_stage), 0, 0, 1, 1},
    {&__pyx_n_s_states, __pyx_k_states, sizeof(__pyx_k_states), 0, 0, 1, 1},
    {&__pyx_n_u_steady, __pyx_k_steady, sizeof(__pyx_k_steady), 0, 1, 0, 1},
    {&__pyx_n_s_steady_abstol, __pyx_k_steady_abstol, sizeof(__pyx_k_steady_abstol), 0, 0, 1, 1},
    {&__pyx_n_u_steady_abstol, __pyx_k_steady_abstol, sizeof(__pyx_k_steady_abstol), 0, 1, 0, 1},
    {&__pyx_n_s_steady_reltol, __pyx_k_steady_reltol, sizeof(__pyx_k_steady_reltol), 0, 0, 1, 1},
    {&__pyx_n_u_steady_reltol, __pyx_k_steady_reltol, sizeof(__pyx_k_steady_reltol), 0, 1, 0, 1},
    {&__pyx_n_s_stepsize, __pyx_k_stepsize, sizeof(__pyx_k_stepsize), 0, 0, 1, 1},
    {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
    {&__pyx_n_s_super, __pyx_k_super, sizeof(__pyx_k_super), 0, 0, 1, 1},
    {&__pyx_n_s_surface, __pyx_k_surface, sizeof(__pyx_k_surface), 0, 0, 1, 1},
    {&__pyx_n_u_surface, __pyx_k_surface, sizeof(__pyx_k_surface), 0, 1, 0, 1},
    {&__pyx_kp_u_symmetry_plane, __pyx_k_symmetry_plane, sizeof(__pyx_k_symmetry_plane), 0, 1, 0, 0},
    {&__pyx_n_s_t, __pyx_k_t, sizeof(__pyx_k_t), 0, 0, 1, 1},
    {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
    {&__pyx_n_s_tfactor, __pyx_k_tfactor, sizeof(__pyx_k_tfactor), 0, 0, 1, 1},
    {&__pyx_n_s_throw, __pyx_k_throw, sizeof(__pyx_k_throw), 0, 0, 1, 1},
    {&__pyx_n_s_to_array, __pyx_k_to_array, sizeof(__pyx_k_to_array), 0, 0, 1, 1},
    {&__pyx_n_s_tolerances, __pyx_k_tolerances, sizeof(__pyx_k_tolerances), 0, 0, 1, 1},
    {&__pyx_n_s_transient_abstol, __pyx_k_transient_abstol, sizeof(__pyx_k_transient_abstol), 0, 0, 1, 1},
    {&__pyx_n_u_transient_abstol, __pyx_k_transient_abstol, sizeof(__pyx_k_transient_abstol), 0, 1, 0, 1},
    {&__pyx_n_s_transient_reltol, __pyx_k_transient_reltol, sizeof(__pyx_k_transient_reltol), 0, 0, 1, 1},
    {&__pyx_n_u_transient_reltol, __pyx_k_transient_reltol, sizeof(__pyx_k_transient_reltol), 0, 1, 0, 1},
    {&__pyx_n_s_transport, __pyx_k_transport, sizeof(__pyx_k_transport), 0, 0, 1, 1},
    {&__pyx_n_s_transport_model, __pyx_k_transport_model, sizeof(__pyx_k_transport_model), 0, 0, 1, 1},
    {&__pyx_n_s_ts_age, __pyx_k_ts_age, sizeof(__pyx_k_ts_age), 0, 0, 1, 1},
    {&__pyx_n_s_tsmax, __pyx_k_tsmax, sizeof(__pyx_k_tsmax), 0, 0, 1, 1},
    {&__pyx_n_s_tsmin, __pyx_k_tsmin, sizeof(__pyx_k_tsmin), 0, 0, 1, 1},
    {&__pyx_n_s_unique, __pyx_k_unique, sizeof(__pyx_k_unique), 0, 0, 1, 1},
    {&__pyx_kp_u_unstrained_flow, __pyx_k_unstrained_flow, sizeof(__pyx_k_unstrained_flow), 0, 1, 0, 0},
    {&__pyx_n_s_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 0, 1, 1},
    {&__pyx_n_s_upper, __pyx_k_upper, sizeof(__pyx_k_upper), 0, 0, 1, 1},
    {&__pyx_n_s_utils, __pyx_k_utils, sizeof(__pyx_k_utils), 0, 0, 1, 1},
    {&__pyx_n_s_v, __pyx_k_v, sizeof(__pyx_k_v), 0, 0, 1, 1},
    {&__pyx_n_s_val, __pyx_k_val, sizeof(__pyx_k_val), 0, 0, 1, 1},
    {&__pyx_n_s_val_vec, __pyx_k_val_vec, sizeof(__pyx_k_val_vec), 0, 0, 1, 1},
    {&__pyx_n_s_value, __pyx_k_value, sizeof(__pyx_k_value), 0, 0, 1, 1},
    {&__pyx_n_s_values, __pyx_k_values, sizeof(__pyx_k_values), 0, 0, 1, 1},
    {&__pyx_n_u_velocity, __pyx_k_velocity, sizeof(__pyx_k_velocity), 0, 1, 0, 1},
    {&__pyx_n_s_warn, __pyx_k_warn, sizeof(__pyx_k_warn), 0, 0, 1, 1},
    {&__pyx_n_s_warnings, __pyx_k_warnings, sizeof(__pyx_k_warnings), 0, 0, 1, 1},
    {&__pyx_n_s_work_value, __pyx_k_work_value, sizeof(__pyx_k_work_value), 0, 0, 1, 1},
    {&__pyx_n_s_x, __pyx_k_x, sizeof(__pyx_k_x), 0, 0, 1, 1},
    {&__pyx_n_s_xi, __pyx_k_xi, sizeof(__pyx_k_xi), 0, 0, 1, 1},
    {&__pyx_n_s_y, __pyx_k_y, sizeof(__pyx_k_y), 0, 0, 1, 1},
    {&__pyx_n_s_zip, __pyx_k_zip, sizeof(__pyx_k_zip), 0, 0, 1, 1},
    {&__pyx_n_s_zmax, __pyx_k_zmax, sizeof(__pyx_k_zmax), 0, 0, 1, 1},
    {&__pyx_n_s_zmin, __pyx_k_zmin, sizeof(__pyx_k_zmin), 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0, 0}
  };
  return __Pyx_InitStrings(__pyx_string_tab);
}
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(0, 24, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(0, 90, __pyx_L1_error)
  __pyx_builtin_AssertionError = __Pyx_GetBuiltinName(__pyx_n_s_AssertionError); if (!__pyx_builtin_AssertionError) __PYX_ERR(0, 142, __pyx_L1_error)
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(0, 143, __pyx_L1_error)
  __pyx_builtin_zip = __Pyx_GetBuiltinName(__pyx_n_s_zip); if (!__pyx_builtin_zip) __PYX_ERR(0, 143, __pyx_L1_error)
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(0, 284, __pyx_L1_error)
  __pyx_builtin_DeprecationWarning = __Pyx_GetBuiltinName(__pyx_n_s_DeprecationWarning); if (!__pyx_builtin_DeprecationWarning) __PYX_ERR(0, 442, __pyx_L1_error)
  __pyx_builtin_super = __Pyx_GetBuiltinName(__pyx_n_s_super); if (!__pyx_builtin_super) __PYX_ERR(0, 443, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 691, __pyx_L1_error)
  __pyx_builtin_KeyError = __Pyx_GetBuiltinName(__pyx_n_s_KeyError); if (!__pyx_builtin_KeyError) __PYX_ERR(0, 1020, __pyx_L1_error)
  __pyx_builtin_print = __Pyx_GetBuiltinName(__pyx_n_s_print); if (!__pyx_builtin_print) __PYX_ERR(0, 1359, __pyx_L1_error)
  __pyx_builtin_MemoryError = __Pyx_GetBuiltinName(__pyx_n_s_MemoryError); if (!__pyx_builtin_MemoryError) __PYX_ERR(1, 68, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(3, 987, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":987
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_u_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple_)) __PYX_ERR(3, 987, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":993
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(3, 993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "cantera/_onedim.pyx":24
 *         self._weakref_proxy = _WeakrefProxy()
 *         if self.domain is NULL:
 *             raise TypeError("Can't instantiate abstract class Domain1D.")             # <<<<<<<<<<<<<<
 * 
 *         self.gas = phase
 */
  __pyx_tuple__3 = PyTuple_Pack(1, __pyx_kp_u_Can_t_instantiate_abstract_class); if (unlikely(!__pyx_tuple__3)) __PYX_ERR(0, 24, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__3);
  __Pyx_GIVEREF(__pyx_tuple__3);

  /* "cantera/_onedim.pyx":194
 *         Set all tolerances to their default values
 *         """
 *         self.set_steady_tolerances(default=(1e-4, 1e-9))             # <<<<<<<<<<<<<<
 *         self.set_transient_tolerances(default=(1e-4, 1e-11))
 *         self.have_user_tolerances = False
 */
  __pyx_tuple__4 = PyTuple_Pack(2, __pyx_float_1eneg_4, __pyx_float_1eneg_9); if (unlikely(!__pyx_tuple__4)) __PYX_ERR(0, 194, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__4);
  __Pyx_GIVEREF(__pyx_tuple__4);

  /* "cantera/_onedim.pyx":195
 *         """
 *         self.set_steady_tolerances(default=(1e-4, 1e-9))
 *         self.set_transient_tolerances(default=(1e-4, 1e-11))             # <<<<<<<<<<<<<<
 *         self.have_user_tolerances = False
 * 
 */
  __pyx_tuple__5 = PyTuple_Pack(2, __pyx_float_1eneg_4, __pyx_float_1eneg_11); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 195, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);

  /* "cantera/_onedim.pyx":284
 * 
 *     def __reduce__(self):
 *         raise NotImplementedError('Domain1D object is not picklable')             # <<<<<<<<<<<<<<
 * 
 *     def __copy__(self):
 */
  __pyx_tuple__6 = PyTuple_Pack(1, __pyx_kp_u_Domain1D_object_is_not_picklable); if (unlikely(!__pyx_tuple__6)) __PYX_ERR(0, 284, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__6);
  __Pyx_GIVEREF(__pyx_tuple__6);

  /* "cantera/_onedim.pyx":287
 * 
 *     def __copy__(self):
 *         raise NotImplementedError('Domain1D object is not copyable')             # <<<<<<<<<<<<<<
 * 
 *     property settings:
 */
  __pyx_tuple__7 = PyTuple_Pack(1, __pyx_kp_u_Domain1D_object_is_not_copyable); if (unlikely(!__pyx_tuple__7)) __PYX_ERR(0, 287, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__7);
  __Pyx_GIVEREF(__pyx_tuple__7);

  /* "cantera/_onedim.pyx":322
 *     def __init__(self, phase, name=None):
 *         if self.boundary is NULL:
 *             raise TypeError("Can't instantiate abstract class Boundary1D.")             # <<<<<<<<<<<<<<
 *         Domain1D.__init__(self, phase, name=name)
 * 
 */
  __pyx_tuple__9 = PyTuple_Pack(1, __pyx_kp_u_Can_t_instantiate_abstract_class_2); if (unlikely(!__pyx_tuple__9)) __PYX_ERR(0, 322, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__9);
  __Pyx_GIVEREF(__pyx_tuple__9);

  /* "cantera/_onedim.pyx":441
 *         self._weakref_proxy = _WeakrefProxy()
 *         if phase.phase_of_matter == "gas":
 *             warnings.warn("ReactingSurface1D: Starting in Cantera 3.0, parameter 'phase'"             # <<<<<<<<<<<<<<
 *                 " should reference surface instead of gas phase.", DeprecationWarning)
 *             super().__init__(phase)
 */
  __pyx_tuple__10 = PyTuple_Pack(2, __pyx_kp_u_ReactingSurface1D_Starting_in_Ca, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__10)) __PYX_ERR(0, 441, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__10);
  __Pyx_GIVEREF(__pyx_tuple__10);

  /* "cantera/_onedim.pyx":480
 *             `ReactingSurface1D` instead.
 *         """
 *         warnings.warn("ReactingSurface1D.set_kinetics: Method to be removed after "             # <<<<<<<<<<<<<<
 *             "Cantera 3.0; set 'Kinetics' when instantiating 'ReactingSurface1D' "
 *             "instead.", DeprecationWarning)
 */
  __pyx_tuple__11 = PyTuple_Pack(2, __pyx_kp_u_ReactingSurface1D_set_kinetics_M, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 480, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "cantera/_onedim.pyx":484
 *             "instead.", DeprecationWarning)
 *         if pystr(kin.kinetics.kineticsType()) not in ("surface", "edge"):
 *             raise TypeError('Kinetics object must be derived from '             # <<<<<<<<<<<<<<
 *                             'InterfaceKinetics.')
 *         self.surf.setKinetics(kin.base.kinetics())
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_u_Kinetics_object_must_be_derived); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 484, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "cantera/_onedim.pyx":539
 *             Method to be removed after Cantera 3.0. Replaceable by `transport_model`
 *         """
 *         warnings.warn("_FlowBase.set_transport: Method to be removed after Cantera 3.0;"             # <<<<<<<<<<<<<<
 *                       " use property 'transport_model' instead.", DeprecationWarning)
 *         self._weakref_proxy = _WeakrefProxy()
 */
  __pyx_tuple__13 = PyTuple_Pack(2, __pyx_kp_u_FlowBase_set_transport_Method_t, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 539, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "cantera/_onedim.pyx":557
 *         for S in self.gas.species():
 *             if S.composition == {'E': 1.0}:
 *                 chargetol[S.name] = (1e-5, 1e-20)             # <<<<<<<<<<<<<<
 *             elif S.charge != 0:
 *                 chargetol[S.name] = (1e-5, 1e-16)
 */
  __pyx_tuple__14 = PyTuple_Pack(2, __pyx_float_1eneg_5, __pyx_float_1eneg_20); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 557, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "cantera/_onedim.pyx":559
 *                 chargetol[S.name] = (1e-5, 1e-20)
 *             elif S.charge != 0:
 *                 chargetol[S.name] = (1e-5, 1e-16)             # <<<<<<<<<<<<<<
 *         self.set_steady_tolerances(**chargetol)
 *         self.set_transient_tolerances(**chargetol)
 */
  __pyx_tuple__15 = PyTuple_Pack(2, __pyx_float_1eneg_5, __pyx_float_1eneg_16); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 559, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "cantera/_onedim.pyx":626
 *         """
 *         def __get__(self):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "_FlowBase.settings: Property getter to change after Cantera 3.0.\n"
 *                 "For new behavior, use 'get_settings3'.", DeprecationWarning)
 */
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_kp_u_FlowBase_settings_Property_gett, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 626, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "cantera/_onedim.pyx":657
 *             return out
 *         def __set__(self, meta):
 *             warnings.warn("_FlowBase.settings: Property setter to be removed after "             # <<<<<<<<<<<<<<
 *             "Cantera 3.0. Replaceable by individual setters.", DeprecationWarning)
 * 
 */
  __pyx_tuple__18 = PyTuple_Pack(2, __pyx_kp_u_FlowBase_settings_Property_sett, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 657, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "cantera/_onedim.pyx":679
 *                     if key in meta:
 *                         tol[i] = meta[key]
 *                 tol = {mode[1][:3]: tol}             # <<<<<<<<<<<<<<
 *                 if mode[0] == 'steady':
 *                     self.set_steady_tolerances(**tol)
 */
  __pyx_slice__20 = PySlice_New(Py_None, __pyx_int_3, Py_None); if (unlikely(!__pyx_slice__20)) __PYX_ERR(0, 679, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__20);
  __Pyx_GIVEREF(__pyx_slice__20);

  /* "cantera/_onedim.pyx":691
 *         def __set__(self, tuple epsilon):
 *             if len(epsilon) != 2:
 *                 raise ValueError('Setting the boundary emissivities requires a '             # <<<<<<<<<<<<<<
 *                                  'tuple of length 2.')
 *             self.flow.setBoundaryEmissivities(epsilon[0], epsilon[1])
 */
  __pyx_tuple__21 = PyTuple_Pack(1, __pyx_kp_u_Setting_the_boundary_emissivitie); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 691, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "cantera/_onedim.pyx":879
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("Class 'IdealGasFlow' to be removed after Cantera 3.0; use "             # <<<<<<<<<<<<<<
 *                       "'FreeFlow', 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 *                       DeprecationWarning)
 */
  __pyx_tuple__22 = PyTuple_Pack(2, __pyx_kp_u_Class_IdealGasFlow_to_be_removed, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 879, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "cantera/_onedim.pyx":899
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("Class 'IonFlow' to be removed after Cantera 3.0; use 'FreeFlow',"             # <<<<<<<<<<<<<<
 *                       " 'AxisymmetricFlow' or 'UnstrainedFlow' instead.",
 *                       DeprecationWarning)
 */
  __pyx_tuple__23 = PyTuple_Pack(2, __pyx_kp_u_Class_IonFlow_to_be_removed_afte, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 899, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "cantera/_onedim.pyx":912
 *           ionized species is evaluated
 *         """
 *         warnings.warn("IonFlow.set_solving_stage: Method to be removed after Cantera "             # <<<<<<<<<<<<<<
 *                       "3.0; use 'solving_stage' property instead.", DeprecationWarning)
 *         self.solving_stage = stage
 */
  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_kp_u_IonFlow_set_solving_stage_Method, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 912, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "cantera/_onedim.pyx":1177
 *             which itself is deprecated due to a pending removal of ``h5py`` support.
 *         """
 *         warnings.warn("Sim1D.restore_data: Method to be removed after Cantera 3.0.",             # <<<<<<<<<<<<<<
 *                       DeprecationWarning)
 *         idom = self.domain_index(domain)
 */
  __pyx_tuple__25 = PyTuple_Pack(2, __pyx_kp_u_Sim1D_restore_data_Method_to_be, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 1177, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "cantera/_onedim.pyx":1201
 *             # restore species profiles
 *             for i, spc in enumerate(self.gas.species_names):
 *                 self.set_profile(spc, xi, Y[:, i])             # <<<<<<<<<<<<<<
 * 
 *             # restore pressure
 */
  __pyx_slice__26 = PySlice_New(Py_None, Py_None, Py_None); if (unlikely(!__pyx_slice__26)) __PYX_ERR(0, 1201, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_slice__26);
  __Pyx_GIVEREF(__pyx_slice__26);

  /* "cantera/_onedim.pyx":1317
 *             return
 * 
 *         def set_transport(multi):             # <<<<<<<<<<<<<<
 *             for dom in self.domains:
 *                 if isinstance(dom, _FlowBase):
 */
  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_n_s_multi, __pyx_n_s_dom); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 1317, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);
  __pyx_codeobj__29 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__28, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_transport, 1317, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__29)) __PYX_ERR(0, 1317, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1331
 *             rtol_ts_final = [dom.transient_reltol() for dom in self.domains]
 * 
 *         def restore_tolerances():             # <<<<<<<<<<<<<<
 *             if have_user_tolerances:
 *                 for i in range(len(self.domains)):
 */
  __pyx_tuple__30 = PyTuple_Pack(1, __pyx_n_s_i); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 1331, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);
  __pyx_codeobj__31 = (PyObject*)__Pyx_PyCode_New(0, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__30, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_restore_tolerances, 1331, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__31)) __PYX_ERR(0, 1331, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1345
 *         soret_doms = [dom for dom in self.domains if getattr(dom, 'soret_enabled', False)]
 * 
 *         def set_soret(soret):             # <<<<<<<<<<<<<<
 *             for dom in soret_doms:
 *                 dom.soret_enabled = soret
 */
  __pyx_tuple__32 = PyTuple_Pack(2, __pyx_n_s_soret, __pyx_n_s_dom); if (unlikely(!__pyx_tuple__32)) __PYX_ERR(0, 1345, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__32);
  __Pyx_GIVEREF(__pyx_tuple__32);
  __pyx_codeobj__33 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__32, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_soret, 1345, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__33)) __PYX_ERR(0, 1345, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1357
 *             set_transport('mixture-averaged')
 * 
 *         def log(msg, *args):             # <<<<<<<<<<<<<<
 *             if loglevel:
 *                 print('\n{:*^78s}'.format(' ' + msg.format(*args) + ' '))
 */
  __pyx_tuple__34 = PyTuple_Pack(2, __pyx_n_s_msg, __pyx_n_s_args); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 1357, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_log, 1357, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(0, 1357, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1407
 *                     self.set_initial_guess(*self._initial_guess_args,
 *                                            **self._initial_guess_kwargs)
 *                 log('Initial solve failed; Retrying with energy equation disabled')             # <<<<<<<<<<<<<<
 *                 self.energy_enabled = False
 *                 try:
 */
  __pyx_tuple__36 = PyTuple_Pack(1, __pyx_kp_u_Initial_solve_failed_Retrying_wi); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 1407, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "cantera/_onedim.pyx":1440
 *             if solved and not self.extinct() and refine_grid:
 *                 # Found a non-extinct solution on the fixed grid
 *                 log('Solving with grid refinement enabled')             # <<<<<<<<<<<<<<
 *                 try:
 *                     self.sim.solve(loglevel, <cbool>True)
 */
  __pyx_tuple__37 = PyTuple_Pack(1, __pyx_kp_u_Solving_with_grid_refinement_ena); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 1440, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);

  /* "cantera/_onedim.pyx":1468
 * 
 *         if solve_multi:
 *             log('Solving with multicomponent transport')             # <<<<<<<<<<<<<<
 *             set_transport('multicomponent')
 * 
 */
  __pyx_tuple__38 = PyTuple_Pack(1, __pyx_kp_u_Solving_with_multicomponent_tran); if (unlikely(!__pyx_tuple__38)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__38);
  __Pyx_GIVEREF(__pyx_tuple__38);

  /* "cantera/_onedim.pyx":1472
 * 
 *         if soret_doms:
 *             log('Solving with Soret diffusion')             # <<<<<<<<<<<<<<
 *             set_soret(True)
 * 
 */
  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_kp_u_Solving_with_Soret_diffusion); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(0, 1472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);

  /* "cantera/_onedim.pyx":1476
 * 
 *         if have_user_tolerances:
 *             log('Solving with user-specified tolerances')             # <<<<<<<<<<<<<<
 *             restore_tolerances()
 * 
 */
  __pyx_tuple__40 = PyTuple_Pack(1, __pyx_kp_u_Solving_with_user_specified_tole); if (unlikely(!__pyx_tuple__40)) __PYX_ERR(0, 1476, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__40);
  __Pyx_GIVEREF(__pyx_tuple__40);

  /* "cantera/_onedim.pyx":1634
 *         """
 *         if loglevel is not None:
 *             warnings.warn("Sim1D.save: Argument 'loglevel' is deprecated and will be "             # <<<<<<<<<<<<<<
 *                 "ignored.", DeprecationWarning)
 *         self.sim.save(stringify(str(filename)), stringify(name),
 */
  __pyx_tuple__41 = PyTuple_Pack(2, __pyx_kp_u_Sim1D_save_Argument_loglevel_is, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(0, 1634, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);

  /* "cantera/_onedim.pyx":1662
 *         """
 *         if loglevel is not None:
 *             warnings.warn("Sim1D.restore: Argument 'loglevel' is deprecated and will be"             # <<<<<<<<<<<<<<
 *                  " ignored.", DeprecationWarning)
 *         cdef CxxAnyMap header
 */
  __pyx_tuple__42 = PyTuple_Pack(2, __pyx_kp_u_Sim1D_restore_Argument_loglevel, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__42)) __PYX_ERR(0, 1662, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__42);
  __Pyx_GIVEREF(__pyx_tuple__42);

  /* "cantera/_onedim.pyx":63
 *             return self.domain.nPoints()
 * 
 *     def _to_array(self, SolutionArrayBase dest, cbool normalize):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve domain data as a `SolutionArray` object. Service method used by
 */
  __pyx_tuple__45 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_dest, __pyx_n_s_normalize); if (unlikely(!__pyx_tuple__45)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__45);
  __Pyx_GIVEREF(__pyx_tuple__45);
  __pyx_codeobj__46 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__45, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_to_array, 63, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__46)) __PYX_ERR(0, 63, __pyx_L1_error)

  /* "cantera/_onedim.pyx":74
 *         return dest
 * 
 *     def _from_array(self, SolutionArrayBase arr):             # <<<<<<<<<<<<<<
 *         """
 *         Restore domain data from a `SolutionArray` object. Service method used by
 */
  __pyx_tuple__47 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_arr); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);
  __pyx_codeobj__48 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_from_array, 74, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__48)) __PYX_ERR(0, 74, __pyx_L1_error)

  /* "cantera/_onedim.pyx":83
 *         self.domain.fromArray(arr._base)
 * 
 *     def component_name(self, int n):             # <<<<<<<<<<<<<<
 *         """Name of the nth component."""
 *         return pystr(self.domain.componentName(n))
 */
  __pyx_tuple__49 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_n); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);
  __pyx_codeobj__50 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__49, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_component_name, 83, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__50)) __PYX_ERR(0, 83, __pyx_L1_error)

  /* "cantera/_onedim.pyx":92
 *             return [self.component_name(n) for n in range(self.n_components)]
 * 
 *     def component_index(self, str name):             # <<<<<<<<<<<<<<
 *         """Index of the component with name 'name'"""
 *         return self.domain.componentIndex(stringify(name))
 */
  __pyx_tuple__51 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_name); if (unlikely(!__pyx_tuple__51)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__51);
  __Pyx_GIVEREF(__pyx_tuple__51);
  __pyx_codeobj__52 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__51, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_component_index, 92, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__52)) __PYX_ERR(0, 92, __pyx_L1_error)

  /* "cantera/_onedim.pyx":96
 *         return self.domain.componentIndex(stringify(name))
 * 
 *     def set_bounds(self, *, default=None, Y=None, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Set the lower and upper bounds on the solution.
 */
  __pyx_tuple__53 = PyTuple_Pack(9, __pyx_n_s_self, __pyx_n_s_default, __pyx_n_s_Y, __pyx_n_s_kwargs, __pyx_n_s_n, __pyx_n_s_k0, __pyx_n_s_name, __pyx_n_s_lower, __pyx_n_s_upper); if (unlikely(!__pyx_tuple__53)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__53);
  __Pyx_GIVEREF(__pyx_tuple__53);
  __pyx_codeobj__54 = (PyObject*)__Pyx_PyCode_New(1, 0, 2, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__53, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_bounds, 96, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__54)) __PYX_ERR(0, 96, __pyx_L1_error)

  /* "cantera/_onedim.pyx":120
 *             self.domain.setBounds(self.component_index(name), lower, upper)
 * 
 *     def set_steady_tolerances(self, *, default=None, Y=None, abs=None, rel=None,             # <<<<<<<<<<<<<<
 *                               **kwargs):
 *         """
 */
  __pyx_tuple__55 = PyTuple_Pack(13, __pyx_n_s_self, __pyx_n_s_default, __pyx_n_s_Y, __pyx_n_s_abs, __pyx_n_s_rel, __pyx_n_s_kwargs, __pyx_n_s_n, __pyx_n_s_r, __pyx_n_s_a, __pyx_n_s_k0, __pyx_n_s_name, __pyx_n_s_rtol, __pyx_n_s_atol); if (unlikely(!__pyx_tuple__55)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__55);
  __Pyx_GIVEREF(__pyx_tuple__55);
  __pyx_codeobj__56 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 13, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__55, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_steady_tolerances, 120, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__56)) __PYX_ERR(0, 120, __pyx_L1_error)

  /* "cantera/_onedim.pyx":155
 *                                             self.component_index(name))
 * 
 *     def set_transient_tolerances(self, *, default=None, Y=None, abs=None,             # <<<<<<<<<<<<<<
 *                                  rel=None, **kwargs):
 *         """
 */
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(1, 0, 4, 13, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__55, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_transient_tolerances, 155, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(0, 155, __pyx_L1_error)

  /* "cantera/_onedim.pyx":190
 *                                                self.component_index(name))
 * 
 *     def set_default_tolerances(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set all tolerances to their default values
 */
  __pyx_tuple__58 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__58)) __PYX_ERR(0, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__58);
  __Pyx_GIVEREF(__pyx_tuple__58);
  __pyx_codeobj__59 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_default_tolerances, 190, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__59)) __PYX_ERR(0, 190, __pyx_L1_error)

  /* "cantera/_onedim.pyx":198
 *         self.have_user_tolerances = False
 * 
 *     def bounds(self, component):             # <<<<<<<<<<<<<<
 *         """
 *         Return the (lower, upper) bounds for a solution component.
 */
  __pyx_tuple__60 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_component, __pyx_n_s_n); if (unlikely(!__pyx_tuple__60)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__60);
  __Pyx_GIVEREF(__pyx_tuple__60);
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_bounds, 198, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(0, 198, __pyx_L1_error)

  /* "cantera/_onedim.pyx":208
 *         return self.domain.lowerBound(n), self.domain.upperBound(n)
 * 
 *     def tolerances(self, component):             # <<<<<<<<<<<<<<
 *         """
 *         Return the (relative, absolute) error tolerances for a solution
 */
  __pyx_tuple__62 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_component, __pyx_n_s_k); if (unlikely(!__pyx_tuple__62)) __PYX_ERR(0, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__62);
  __Pyx_GIVEREF(__pyx_tuple__62);
  __pyx_codeobj__63 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__62, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_tolerances, 208, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__63)) __PYX_ERR(0, 208, __pyx_L1_error)

  /* "cantera/_onedim.pyx":218
 *         return self.domain.rtol(k), self.domain.atol(k)
 * 
 *     def steady_reltol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the relative error tolerance for the steady state problem for a
 */
  __pyx_codeobj__64 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_steady_reltol, 218, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__64)) __PYX_ERR(0, 218, __pyx_L1_error)
  __pyx_tuple__65 = PyTuple_Pack(1, Py_None); if (unlikely(!__pyx_tuple__65)) __PYX_ERR(0, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__65);
  __Pyx_GIVEREF(__pyx_tuple__65);

  /* "cantera/_onedim.pyx":229
 *             return self.domain.steady_rtol(self.component_index(component))
 * 
 *     def steady_abstol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the absolute error tolerance for the steady state problem for a
 */
  __pyx_codeobj__66 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_steady_abstol, 229, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__66)) __PYX_ERR(0, 229, __pyx_L1_error)

  /* "cantera/_onedim.pyx":240
 *             return self.domain.steady_atol(self.component_index(component))
 * 
 *     def transient_reltol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the relative error tolerance for the transient problem for a
 */
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_transient_reltol, 240, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(0, 240, __pyx_L1_error)

  /* "cantera/_onedim.pyx":251
 *             return self.domain.transient_rtol(self.component_index(component))
 * 
 *     def transient_abstol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the absolute error tolerance for the transient problem for a
 */
  __pyx_codeobj__68 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__60, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_transient_abstol, 251, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__68)) __PYX_ERR(0, 251, __pyx_L1_error)

  /* "cantera/_onedim.pyx":283
 *             self.domain.setID(stringify(name))
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError('Domain1D object is not picklable')
 * 
 */
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_reduce, 283, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(0, 283, __pyx_L1_error)

  /* "cantera/_onedim.pyx":286
 *         raise NotImplementedError('Domain1D object is not picklable')
 * 
 *     def __copy__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError('Domain1D object is not copyable')
 * 
 */
  __pyx_codeobj__70 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_copy, 286, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__70)) __PYX_ERR(0, 286, __pyx_L1_error)

  /* "cantera/_onedim.pyx":472
 *             return self.surface
 * 
 *     def set_kinetics(self, Kinetics kin):             # <<<<<<<<<<<<<<
 *         """Set the kinetics manager (surface reaction mechanism object).
 * 
 */
  __pyx_tuple__71 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_kin); if (unlikely(!__pyx_tuple__71)) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__71);
  __Pyx_GIVEREF(__pyx_tuple__71);
  __pyx_codeobj__72 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__71, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_kinetics, 472, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__72)) __PYX_ERR(0, 472, __pyx_L1_error)

  /* "cantera/_onedim.pyx":531
 *             self.gas.transport = self.gas.base.transport().get()
 * 
 *     def set_transport(self, _SolutionBase phase):             # <<<<<<<<<<<<<<
 *         """
 *         Set the `Solution` object used for calculating transport properties.
 */
  __pyx_tuple__73 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_phase); if (unlikely(!__pyx_tuple__73)) __PYX_ERR(0, 531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__73);
  __Pyx_GIVEREF(__pyx_tuple__73);
  __pyx_codeobj__74 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__73, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_transport, 531, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__74)) __PYX_ERR(0, 531, __pyx_L1_error)

  /* "cantera/_onedim.pyx":546
 *         self.flow.setTransport(deref(self.gas.transport))
 * 
 *     def set_default_tolerances(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set all tolerances to their default values
 */
  __pyx_tuple__75 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_chargetol, __pyx_n_s_S); if (unlikely(!__pyx_tuple__75)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__75);
  __Pyx_GIVEREF(__pyx_tuple__75);
  __pyx_codeobj__76 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__75, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_default_tolerances, 546, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__76)) __PYX_ERR(0, 546, __pyx_L1_error)

  /* "cantera/_onedim.pyx":585
 *                 self.flow.fixTemperature()
 * 
 *     def set_fixed_temp_profile(self, pos, T):             # <<<<<<<<<<<<<<
 *         """Set the fixed temperature profile. This profile is used
 *         whenever the energy equation is disabled.
 */
  __pyx_tuple__77 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_pos, __pyx_n_s_T, __pyx_n_s_x, __pyx_n_s_y, __pyx_n_s_p, __pyx_n_s_t); if (unlikely(!__pyx_tuple__77)) __PYX_ERR(0, 585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__77);
  __Pyx_GIVEREF(__pyx_tuple__77);
  __pyx_codeobj__78 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__77, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_fixed_temp_profile, 585, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__78)) __PYX_ERR(0, 585, __pyx_L1_error)

  /* "cantera/_onedim.pyx":604
 *         self.flow.setFixedTempProfile(x, y)
 * 
 *     def get_settings3(self):             # <<<<<<<<<<<<<<
 *         """
 *         Temporary method returning new behavior of settings getter.
 */
  __pyx_codeobj__79 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_get_settings3, 604, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__79)) __PYX_ERR(0, 604, __pyx_L1_error)

  /* "cantera/_onedim.pyx":713
 *             return data
 * 
 *     def set_free_flow(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set flow configuration for freely-propagating flames, using an internal
 */
  __pyx_codeobj__80 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_free_flow, 713, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__80)) __PYX_ERR(0, 713, __pyx_L1_error)

  /* "cantera/_onedim.pyx":721
 *         self.flow.setFreeFlow()
 * 
 *     def set_axisymmetric_flow(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set flow configuration for axisymmetric counterflow or burner-stabilized
 */
  __pyx_codeobj__81 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_axisymmetric_flow, 721, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__81)) __PYX_ERR(0, 721, __pyx_L1_error)

  /* "cantera/_onedim.pyx":904
 *         super().__init__(*args, **kwargs)
 * 
 *     def set_solving_stage(self, stage):             # <<<<<<<<<<<<<<
 *         """
 *         Set the mode for handling ionized species:
 */
  __pyx_tuple__82 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_stage); if (unlikely(!__pyx_tuple__82)) __PYX_ERR(0, 904, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__82);
  __Pyx_GIVEREF(__pyx_tuple__82);
  __pyx_codeobj__83 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__82, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_solving_stage, 904, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__83)) __PYX_ERR(0, 904, __pyx_L1_error)

  /* "cantera/_onedim.pyx":942
 *         self._initial_guess_kwargs = {}
 * 
 *     def phase(self, domain=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return phase describing a domain (that is, a gas phase or surface phase).
 */
  __pyx_tuple__84 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_dom); if (unlikely(!__pyx_tuple__84)) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__84);
  __Pyx_GIVEREF(__pyx_tuple__84);
  __pyx_codeobj__85 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__84, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_phase, 942, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__85)) __PYX_ERR(0, 942, __pyx_L1_error)

  /* "cantera/_onedim.pyx":955
 *         return dom.phase
 * 
 *     def set_interrupt(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set an interrupt function to be called each time that :ct:`OneDim::eval` is
 */
  __pyx_tuple__86 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_f); if (unlikely(!__pyx_tuple__86)) __PYX_ERR(0, 955, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__86);
  __Pyx_GIVEREF(__pyx_tuple__86);
  __pyx_codeobj__87 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__86, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_interrupt, 955, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__87)) __PYX_ERR(0, 955, __pyx_L1_error)

  /* "cantera/_onedim.pyx":972
 *         self.sim.setInterrupt(self._interrupt.func)
 * 
 *     def set_time_step_callback(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set a callback function to be called after each successful timestep.
 */
  __pyx_codeobj__88 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__86, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_time_step_callback, 972, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__88)) __PYX_ERR(0, 972, __pyx_L1_error)

  /* "cantera/_onedim.pyx":988
 *         self.sim.setTimeStepCallback(self._time_step_callback.func)
 * 
 *     def set_steady_callback(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set a callback function to be called after each successful steady-state
 */
  __pyx_codeobj__89 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__86, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_steady_callback, 988, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__89)) __PYX_ERR(0, 988, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1004
 *         self.sim.setSteadyCallback(self._steady_callback.func)
 * 
 *     def domain_index(self, dom):             # <<<<<<<<<<<<<<
 *         """
 *         Get the index of a domain, specified either by name or as a Domain1D
 */
  __pyx_tuple__90 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_dom, __pyx_n_s_idom, __pyx_n_s_i, __pyx_n_s_d); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(0, 1004, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);
  __pyx_codeobj__91 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__90, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_domain_index, 1004, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__91)) __PYX_ERR(0, 1004, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1025
 *         return idom
 * 
 *     def _get_indices(self, dom, comp):             # <<<<<<<<<<<<<<
 *         idom = self.domain_index(dom)
 *         dom = self.domains[idom]
 */
  __pyx_tuple__92 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_dom, __pyx_n_s_comp, __pyx_n_s_idom, __pyx_n_s_kcomp); if (unlikely(!__pyx_tuple__92)) __PYX_ERR(0, 1025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__92);
  __Pyx_GIVEREF(__pyx_tuple__92);
  __pyx_codeobj__93 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__92, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_get_indices, 1025, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__93)) __PYX_ERR(0, 1025, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1037
 *         return idom, kcomp
 * 
 *     def value(self, domain, component, point):             # <<<<<<<<<<<<<<
 *         """
 *         Solution value at one point
 */
  __pyx_tuple__94 = PyTuple_Pack(6, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_component, __pyx_n_s_point, __pyx_n_s_dom, __pyx_n_s_comp); if (unlikely(!__pyx_tuple__94)) __PYX_ERR(0, 1037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__94);
  __Pyx_GIVEREF(__pyx_tuple__94);
  __pyx_codeobj__95 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__94, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_value, 1037, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__95)) __PYX_ERR(0, 1037, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1053
 *         return self.sim.value(dom, comp, point)
 * 
 *     def set_value(self, domain, component, point, value):             # <<<<<<<<<<<<<<
 *         """
 *         Set the value of one component in one domain at one point to 'value'.
 */
  __pyx_tuple__96 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_component, __pyx_n_s_point, __pyx_n_s_value, __pyx_n_s_dom, __pyx_n_s_comp); if (unlikely(!__pyx_tuple__96)) __PYX_ERR(0, 1053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__96);
  __Pyx_GIVEREF(__pyx_tuple__96);
  __pyx_codeobj__97 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__96, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_value, 1053, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__97)) __PYX_ERR(0, 1053, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1073
 *         self.sim.setValue(dom, comp, point, value)
 * 
 *     def eval(self, rdt=0.0):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate the governing equations using the current solution estimate,
 */
  __pyx_tuple__98 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_rdt); if (unlikely(!__pyx_tuple__98)) __PYX_ERR(0, 1073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__98);
  __Pyx_GIVEREF(__pyx_tuple__98);
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__98, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_eval, 1073, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(0, 1073, __pyx_L1_error)
  __pyx_tuple__100 = PyTuple_Pack(1, __pyx_float_0_0); if (unlikely(!__pyx_tuple__100)) __PYX_ERR(0, 1073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__100);
  __Pyx_GIVEREF(__pyx_tuple__100);

  /* "cantera/_onedim.pyx":1084
 *         self.sim.eval(rdt)
 * 
 *     def work_value(self, domain, component, point):             # <<<<<<<<<<<<<<
 *         """
 *         Internal work array value at one point. After calling `eval`, this array
 */
  __pyx_codeobj__101 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__94, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_work_value, 1084, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__101)) __PYX_ERR(0, 1084, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1101
 *         return self.sim.workValue(dom, comp, point)
 * 
 *     def profile(self, domain, component):             # <<<<<<<<<<<<<<
 *         """
 *         Spatial profile of one component in one domain.
 */
  __pyx_tuple__102 = PyTuple_Pack(8, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_component, __pyx_n_s_idom, __pyx_n_s_kcomp, __pyx_n_s_dom, __pyx_n_s_j, __pyx_n_s_data); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__102, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_profile, 1101, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) __PYX_ERR(0, 1101, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1120
 *         return data
 * 
 *     def set_profile(self, domain, component, positions, values):             # <<<<<<<<<<<<<<
 *         """
 *         Set an initial estimate for a profile of one component in one domain.
 */
  __pyx_tuple__104 = PyTuple_Pack(11, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_component, __pyx_n_s_positions, __pyx_n_s_values, __pyx_n_s_dom, __pyx_n_s_comp, __pyx_n_s_pos_vec, __pyx_n_s_val_vec, __pyx_n_s_p, __pyx_n_s_v); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 11, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__104, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_profile, 1120, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) __PYX_ERR(0, 1120, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1145
 *         self.sim.setProfile(dom, comp, pos_vec, val_vec)
 * 
 *     def set_flat_profile(self, domain, component, value):             # <<<<<<<<<<<<<<
 *         """Set a flat profile for one component in one domain.
 * 
 */
  __pyx_tuple__106 = PyTuple_Pack(6, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_component, __pyx_n_s_value, __pyx_n_s_dom, __pyx_n_s_comp); if (unlikely(!__pyx_tuple__106)) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__106);
  __Pyx_GIVEREF(__pyx_tuple__106);
  __pyx_codeobj__107 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__106, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_flat_profile, 1145, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__107)) __PYX_ERR(0, 1145, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1160
 *         self.sim.setFlatProfile(dom, comp, value)
 * 
 *     def restore_data(self, domain, states, other_cols, meta):             # <<<<<<<<<<<<<<
 *         """
 *         Restore a ``domain`` from underlying data. This method is used as
 */
  __pyx_tuple__108 = PyTuple_Pack(17, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_states, __pyx_n_s_other_cols, __pyx_n_s_meta, __pyx_n_s_idom, __pyx_n_s_dom, __pyx_n_s_T, __pyx_n_s_P, __pyx_n_s_Y, __pyx_n_s_grid, __pyx_n_s_xi, __pyx_n_s_key, __pyx_n_s_val, __pyx_n_s_i, __pyx_n_s_spc, __pyx_n_s_msg); if (unlikely(!__pyx_tuple__108)) __PYX_ERR(0, 1160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__108);
  __Pyx_GIVEREF(__pyx_tuple__108);
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 17, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__108, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_restore_data, 1160, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) __PYX_ERR(0, 1160, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1227
 *             raise NotImplementedError(msg.format(type(self).__name__))
 * 
 *     def show(self):             # <<<<<<<<<<<<<<
 *         """ print the current solution. """
 *         if not self._initialized:
 */
  __pyx_codeobj__110 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_show, 1227, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__110)) __PYX_ERR(0, 1227, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1233
 *         self.sim.show()
 * 
 *     def show_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         print the current solution.
 */
  __pyx_codeobj__111 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_show_solution, 1233, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__111)) __PYX_ERR(0, 1233, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1243
 *         self.show()
 * 
 *     def set_time_step(self, stepsize, n_steps):             # <<<<<<<<<<<<<<
 *         """Set the sequence of time steps to try when Newton fails.
 * 
 */
  __pyx_tuple__112 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_stepsize, __pyx_n_s_n_steps, __pyx_n_s_data, __pyx_n_s_n); if (unlikely(!__pyx_tuple__112)) __PYX_ERR(0, 1243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__112);
  __Pyx_GIVEREF(__pyx_tuple__112);
  __pyx_codeobj__113 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__112, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_time_step, 1243, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__113)) __PYX_ERR(0, 1243, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1268
 *             self.sim.setMaxTimeStepCount(nmax)
 * 
 *     def set_initial_guess(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Store arguments for initial guess and prepare storage for solution.
 */
  __pyx_tuple__114 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_args, __pyx_n_s_kwargs); if (unlikely(!__pyx_tuple__114)) __PYX_ERR(0, 1268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__114);
  __Pyx_GIVEREF(__pyx_tuple__114);
  __pyx_codeobj__115 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARARGS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__114, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_initial_guess, 1268, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__115)) __PYX_ERR(0, 1268, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1277
 *         self._initialized = True
 * 
 *     def _get_initial_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Load the initial solution from each domain into the global solution
 */
  __pyx_codeobj__116 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_get_initial_solution, 1277, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__116)) __PYX_ERR(0, 1277, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1285
 *         self.sim.getInitialSoln()
 * 
 *     def extinct(self):             # <<<<<<<<<<<<<<
 *         """
 *         Method overloaded for some flame types to indicate if the flame has been
 */
  __pyx_codeobj__117 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_extinct, 1285, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__117)) __PYX_ERR(0, 1285, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1292
 *         return False
 * 
 *     def solve(self, loglevel=1, refine_grid=True, auto=False):             # <<<<<<<<<<<<<<
 *         """
 *         Solve the problem.
 */
  __pyx_tuple__118 = PyTuple_Pack(41, __pyx_n_s_self, __pyx_n_s_loglevel, __pyx_n_s_refine_grid, __pyx_n_s_auto, __pyx_n_s_set_transport, __pyx_n_s_set_transport, __pyx_n_s_have_user_tolerances, __pyx_n_s_atol_ss_final, __pyx_n_s_rtol_ss_final, __pyx_n_s_atol_ts_final, __pyx_n_s_rtol_ts_final, __pyx_n_s_restore_tolerances, __pyx_n_s_restore_tolerances, __pyx_n_s_dom, __pyx_n_s_soret_doms, __pyx_n_s_set_soret, __pyx_n_s_set_soret, __pyx_n_s_transport, __pyx_n_s_solve_multi, __pyx_n_s_log, __pyx_n_s_log, __pyx_n_s_flow_domains, __pyx_n_s_zmin, __pyx_n_s_zmax, __pyx_n_s_data, __pyx_n_s_nPoints, __pyx_n_s_N, __pyx_n_s_i, __pyx_n_s_D, __pyx_n_s_solved, __pyx_n_s_e, __pyx_n_s_genexpr, __pyx_n_s_genexpr, __pyx_n_s_dom, __pyx_n_s_dom, __pyx_n_s_dom, __pyx_n_s_dom, __pyx_n_s_dom, __pyx_n_s_D, __pyx_n_s_D, __pyx_n_s_D); if (unlikely(!__pyx_tuple__118)) __PYX_ERR(0, 1292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__118);
  __Pyx_GIVEREF(__pyx_tuple__118);
  __pyx_codeobj__119 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 41, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__118, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_solve, 1292, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__119)) __PYX_ERR(0, 1292, __pyx_L1_error)
  __pyx_tuple__120 = PyTuple_Pack(3, __pyx_int_1, Py_True, Py_False); if (unlikely(!__pyx_tuple__120)) __PYX_ERR(0, 1292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__120);
  __Pyx_GIVEREF(__pyx_tuple__120);

  /* "cantera/_onedim.pyx":1483
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 * 
 *     def refine(self, loglevel=1):             # <<<<<<<<<<<<<<
 *         """
 *         Refine the grid, adding points where solution is not adequately
 */
  __pyx_tuple__121 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_loglevel); if (unlikely(!__pyx_tuple__121)) __PYX_ERR(0, 1483, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__121);
  __Pyx_GIVEREF(__pyx_tuple__121);
  __pyx_codeobj__122 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__121, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_refine, 1483, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__122)) __PYX_ERR(0, 1483, __pyx_L1_error)
  __pyx_tuple__123 = PyTuple_Pack(1, __pyx_int_1); if (unlikely(!__pyx_tuple__123)) __PYX_ERR(0, 1483, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__123);
  __Pyx_GIVEREF(__pyx_tuple__123);

  /* "cantera/_onedim.pyx":1490
 *         self.sim.refine(loglevel)
 * 
 *     def set_refine_criteria(self, domain, ratio=10.0, slope=0.8, curve=0.8,             # <<<<<<<<<<<<<<
 *                           prune=0.05):
 *         """
 */
  __pyx_tuple__124 = PyTuple_Pack(7, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_ratio, __pyx_n_s_slope, __pyx_n_s_curve, __pyx_n_s_prune, __pyx_n_s_idom); if (unlikely(!__pyx_tuple__124)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__124);
  __Pyx_GIVEREF(__pyx_tuple__124);
  __pyx_codeobj__125 = (PyObject*)__Pyx_PyCode_New(6, 0, 0, 7, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__124, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_refine_criteria, 1490, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__125)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __pyx_tuple__126 = PyTuple_Pack(4, __pyx_float_10_0, __pyx_float_0_8, __pyx_float_0_8, __pyx_float_0_05); if (unlikely(!__pyx_tuple__126)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__126);
  __Pyx_GIVEREF(__pyx_tuple__126);

  /* "cantera/_onedim.pyx":1519
 *         self.sim.setRefineCriteria(idom, ratio, slope, curve, prune)
 * 
 *     def get_refine_criteria(self, domain):             # <<<<<<<<<<<<<<
 *         """
 *         Get a dictionary of the criteria used to refine one domain. The items in
 */
  __pyx_tuple__127 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_idom, __pyx_n_s_c); if (unlikely(!__pyx_tuple__127)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__127);
  __Pyx_GIVEREF(__pyx_tuple__127);
  __pyx_codeobj__128 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__127, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_get_refine_criteria, 1519, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__128)) __PYX_ERR(0, 1519, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1536
 *         return {'ratio': c[0], 'slope': c[1], 'curve': c[2], 'prune': c[3]}
 * 
 *     def set_grid_min(self, dz, domain=None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the minimum grid spacing on ``domain``. If ``domain`` is `None`, then
 */
  __pyx_tuple__129 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_dz, __pyx_n_s_domain, __pyx_n_s_idom); if (unlikely(!__pyx_tuple__129)) __PYX_ERR(0, 1536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__129);
  __Pyx_GIVEREF(__pyx_tuple__129);
  __pyx_codeobj__130 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__129, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_grid_min, 1536, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__130)) __PYX_ERR(0, 1536, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1547
 *         self.sim.setGridMin(idom, dz)
 * 
 *     def set_max_jac_age(self, ss_age, ts_age):             # <<<<<<<<<<<<<<
 *         """
 *         Set the maximum number of times the Jacobian will be used before it
 */
  __pyx_tuple__131 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_ss_age, __pyx_n_s_ts_age); if (unlikely(!__pyx_tuple__131)) __PYX_ERR(0, 1547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__131);
  __Pyx_GIVEREF(__pyx_tuple__131);
  __pyx_codeobj__132 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__131, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_max_jac_age, 1547, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__132)) __PYX_ERR(0, 1547, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1559
 *         self.sim.setJacAge(ss_age, ts_age)
 * 
 *     def set_time_step_factor(self, tfactor):             # <<<<<<<<<<<<<<
 *         """
 *         Set the factor by which the time step will be increased after a
 */
  __pyx_tuple__133 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_tfactor); if (unlikely(!__pyx_tuple__133)) __PYX_ERR(0, 1559, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__133);
  __Pyx_GIVEREF(__pyx_tuple__133);
  __pyx_codeobj__134 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__133, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_time_step_factor, 1559, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__134)) __PYX_ERR(0, 1559, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1566
 *         self.sim.setTimeStepFactor(tfactor)
 * 
 *     def set_min_time_step(self, tsmin):             # <<<<<<<<<<<<<<
 *         """ Set the minimum time step. """
 *         self.sim.setMinTimeStep(tsmin)
 */
  __pyx_tuple__135 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_tsmin); if (unlikely(!__pyx_tuple__135)) __PYX_ERR(0, 1566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__135);
  __Pyx_GIVEREF(__pyx_tuple__135);
  __pyx_codeobj__136 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__135, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_min_time_step, 1566, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__136)) __PYX_ERR(0, 1566, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1570
 *         self.sim.setMinTimeStep(tsmin)
 * 
 *     def set_max_time_step(self, tsmax):             # <<<<<<<<<<<<<<
 *         """ Set the maximum time step. """
 *         self.sim.setMaxTimeStep(tsmax)
 */
  __pyx_tuple__137 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_tsmax); if (unlikely(!__pyx_tuple__137)) __PYX_ERR(0, 1570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__137);
  __Pyx_GIVEREF(__pyx_tuple__137);
  __pyx_codeobj__138 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__137, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_max_time_step, 1570, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__138)) __PYX_ERR(0, 1570, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1592
 *             return self.sim.fixedTemperatureLocation()
 * 
 *     def save(self, filename='soln.yaml', name='solution', description=None,             # <<<<<<<<<<<<<<
 *              loglevel=None, *, overwrite=False, compression=0, basis=None):
 *         """
 */
  __pyx_tuple__139 = PyTuple_Pack(8, __pyx_n_s_self, __pyx_n_s_filename, __pyx_n_s_name, __pyx_n_s_description, __pyx_n_s_loglevel, __pyx_n_s_overwrite, __pyx_n_s_compression, __pyx_n_s_basis); if (unlikely(!__pyx_tuple__139)) __PYX_ERR(0, 1592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__139);
  __Pyx_GIVEREF(__pyx_tuple__139);
  __pyx_codeobj__140 = (PyObject*)__Pyx_PyCode_New(5, 0, 3, 8, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__139, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_save, 1592, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__140)) __PYX_ERR(0, 1592, __pyx_L1_error)
  __pyx_tuple__141 = PyTuple_Pack(4, __pyx_kp_u_soln_yaml, __pyx_n_u_solution, Py_None, Py_None); if (unlikely(!__pyx_tuple__141)) __PYX_ERR(0, 1592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__141);
  __Pyx_GIVEREF(__pyx_tuple__141);

  /* "cantera/_onedim.pyx":1639
 *                       stringify(description), overwrite, compression, stringify(basis))
 * 
 *     def restore(self, filename='soln.yaml', name='solution', loglevel=None):             # <<<<<<<<<<<<<<
 *         """Retrieve data and settings from a previously saved simulation.
 * 
 */
  __pyx_tuple__142 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_filename, __pyx_n_s_name, __pyx_n_s_loglevel, __pyx_n_s_header); if (unlikely(!__pyx_tuple__142)) __PYX_ERR(0, 1639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__142);
  __Pyx_GIVEREF(__pyx_tuple__142);
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__142, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_restore, 1639, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) __PYX_ERR(0, 1639, __pyx_L1_error)
  __pyx_tuple__144 = PyTuple_Pack(3, __pyx_kp_u_soln_yaml, __pyx_n_u_solution, Py_None); if (unlikely(!__pyx_tuple__144)) __PYX_ERR(0, 1639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__144);
  __Pyx_GIVEREF(__pyx_tuple__144);

  /* "cantera/_onedim.pyx":1669
 *         return anymap_to_py(header)
 * 
 *     def restore_time_stepping_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the current solution vector to the last successful time-stepping
 */
  __pyx_codeobj__145 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_restore_time_stepping_solution, 1669, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__145)) __PYX_ERR(0, 1669, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1677
 *         self.sim.restoreTimeSteppingSolution()
 * 
 *     def restore_steady_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the current solution vector to the last successful steady-state
 */
  __pyx_codeobj__146 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_restore_steady_solution, 1677, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__146)) __PYX_ERR(0, 1677, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1685
 *         self.sim.restoreSteadySolution()
 * 
 *     def show_stats(self, print_time=True):             # <<<<<<<<<<<<<<
 *         """
 *         Show the statistics for the last solution.
 */
  __pyx_tuple__147 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_print_time); if (unlikely(!__pyx_tuple__147)) __PYX_ERR(0, 1685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__147);
  __Pyx_GIVEREF(__pyx_tuple__147);
  __pyx_codeobj__148 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__147, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_show_stats, 1685, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__148)) __PYX_ERR(0, 1685, __pyx_L1_error)
  __pyx_tuple__149 = PyTuple_Pack(1, Py_True); if (unlikely(!__pyx_tuple__149)) __PYX_ERR(0, 1685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__149);
  __Pyx_GIVEREF(__pyx_tuple__149);

  /* "cantera/_onedim.pyx":1694
 *         self.sim.writeStats(print_time)
 * 
 *     def clear_stats(self):             # <<<<<<<<<<<<<<
 *         """
 *         Clear solver statistics.
 */
  __pyx_codeobj__150 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_clear_stats, 1694, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__150)) __PYX_ERR(0, 1694, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1700
 *         self.sim.clearStats()
 * 
 *     def solve_adjoint(self, perturb, n_params, dgdx, g=None, dp=1e-5):             # <<<<<<<<<<<<<<
 *         """
 *         Find the sensitivities of an objective function using an adjoint method.
 */
  __pyx_tuple__151 = PyTuple_Pack(16, __pyx_n_s_self, __pyx_n_s_perturb, __pyx_n_s_n_params, __pyx_n_s_dgdx, __pyx_n_s_g, __pyx_n_s_dp, __pyx_n_s_n_vars, __pyx_n_s_L, __pyx_n_s_gg, __pyx_n_s_dgdp, __pyx_n_s_dfdp, __pyx_n_s_fplus, __pyx_n_s_fminus, __pyx_n_s_gplus, __pyx_n_s_gminus, __pyx_n_s_i); if (unlikely(!__pyx_tuple__151)) __PYX_ERR(0, 1700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__151);
  __Pyx_GIVEREF(__pyx_tuple__151);
  __pyx_codeobj__152 = (PyObject*)__Pyx_PyCode_New(6, 0, 0, 16, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__151, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_solve_adjoint, 1700, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__152)) __PYX_ERR(0, 1700, __pyx_L1_error)
  __pyx_tuple__153 = PyTuple_Pack(2, Py_None, __pyx_float_1eneg_5); if (unlikely(!__pyx_tuple__153)) __PYX_ERR(0, 1700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__153);
  __Pyx_GIVEREF(__pyx_tuple__153);

  /* "cantera/_onedim.pyx":1800
 *             return self.sim.timeStepStats()
 * 
 *     def set_max_grid_points(self, domain, npmax):             # <<<<<<<<<<<<<<
 *         """ Set the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 */
  __pyx_tuple__154 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_npmax, __pyx_n_s_idom); if (unlikely(!__pyx_tuple__154)) __PYX_ERR(0, 1800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__154);
  __Pyx_GIVEREF(__pyx_tuple__154);
  __pyx_codeobj__155 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__154, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_set_max_grid_points, 1800, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__155)) __PYX_ERR(0, 1800, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1805
 *         self.sim.setMaxGridPoints(idom, npmax)
 * 
 *     def get_max_grid_points(self, domain):             # <<<<<<<<<<<<<<
 *         """ Get the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 */
  __pyx_tuple__156 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_domain, __pyx_n_s_idom); if (unlikely(!__pyx_tuple__156)) __PYX_ERR(0, 1805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__156);
  __Pyx_GIVEREF(__pyx_tuple__156);
  __pyx_codeobj__157 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__156, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera__onedim_pyx, __pyx_n_s_get_max_grid_points, 1805, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__157)) __PYX_ERR(0, 1805, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__158 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__58, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__158)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_tuple__159 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__159)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__159);
  __Pyx_GIVEREF(__pyx_tuple__159);
  __pyx_codeobj__160 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__159, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__160)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitConstants(void) {
  __pyx_umethod_PyDict_Type_update.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_update.method_name = &__pyx_n_s_update;
  __pyx_umethod_PyUnicode_Type_format.type = (PyObject*)&PyUnicode_Type;
  __pyx_umethod_PyUnicode_Type_format.method_name = &__pyx_n_s_format;
  if (__Pyx_CreateStringTabAndInitStrings() < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_8 = PyFloat_FromDouble(0.8); if (unlikely(!__pyx_float_0_8)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1_0 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_float_1_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_0_05 = PyFloat_FromDouble(0.05); if (unlikely(!__pyx_float_0_05)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_10_0 = PyFloat_FromDouble(10.0); if (unlikely(!__pyx_float_10_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1eneg_4 = PyFloat_FromDouble(1e-4); if (unlikely(!__pyx_float_1eneg_4)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1eneg_5 = PyFloat_FromDouble(1e-5); if (unlikely(!__pyx_float_1eneg_5)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1eneg_9 = PyFloat_FromDouble(1e-9); if (unlikely(!__pyx_float_1eneg_9)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1eneg_11 = PyFloat_FromDouble(1e-11); if (unlikely(!__pyx_float_1eneg_11)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1eneg_16 = PyFloat_FromDouble(1e-16); if (unlikely(!__pyx_float_1eneg_16)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_float_1eneg_20 = PyFloat_FromDouble(1e-20); if (unlikely(!__pyx_float_1eneg_20)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_12 = PyInt_FromLong(12); if (unlikely(!__pyx_int_12)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_24 = PyInt_FromLong(24); if (unlikely(!__pyx_int_24)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_48 = PyInt_FromLong(48); if (unlikely(!__pyx_int_48)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  /* AssertionsEnabled.init */
  __Pyx_init_assertions_enabled();

if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1, __pyx_L1_error)

  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_7_onedim_Domain1D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_Domain1D_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_7_onedim_Domain1D)) __PYX_ERR(0, 16, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_Domain1D_spec, __pyx_ptype_7cantera_7_onedim_Domain1D) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_Domain1D = &__pyx_type_7cantera_7_onedim_Domain1D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_Domain1D) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_Domain1D->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_Domain1D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_Domain1D->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Domain1D, (PyObject *) __pyx_ptype_7cantera_7_onedim_Domain1D) < 0) __PYX_ERR(0, 16, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 304, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_Boundary1D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_Boundary1D_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_Boundary1D)) __PYX_ERR(0, 304, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_Boundary1D_spec, __pyx_ptype_7cantera_7_onedim_Boundary1D) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_Boundary1D = &__pyx_type_7cantera_7_onedim_Boundary1D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_Boundary1D->tp_base = __pyx_ptype_7cantera_7_onedim_Domain1D;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_Boundary1D) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_Boundary1D->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_Boundary1D->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_Boundary1D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_Boundary1D->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Boundary1D, (PyObject *) __pyx_ptype_7cantera_7_onedim_Boundary1D) < 0) __PYX_ERR(0, 304, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim_Boundary1D); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_ReactingSurface1D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_ReactingSurface1D_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_ReactingSurface1D)) __PYX_ERR(0, 413, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_ReactingSurface1D_spec, __pyx_ptype_7cantera_7_onedim_ReactingSurface1D) < 0) __PYX_ERR(0, 413, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_ReactingSurface1D = &__pyx_type_7cantera_7_onedim_ReactingSurface1D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_ReactingSurface1D->tp_base = __pyx_ptype_7cantera_7_onedim_Boundary1D;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_ReactingSurface1D) < 0) __PYX_ERR(0, 413, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_ReactingSurface1D->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_ReactingSurface1D->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_ReactingSurface1D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_ReactingSurface1D->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ReactingSurface1D, (PyObject *) __pyx_ptype_7cantera_7_onedim_ReactingSurface1D) < 0) __PYX_ERR(0, 413, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 498, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim__FlowBase = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim__FlowBase_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim__FlowBase)) __PYX_ERR(0, 498, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim__FlowBase_spec, __pyx_ptype_7cantera_7_onedim__FlowBase) < 0) __PYX_ERR(0, 498, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim__FlowBase = &__pyx_type_7cantera_7_onedim__FlowBase;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim__FlowBase->tp_base = __pyx_ptype_7cantera_7_onedim_Domain1D;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim__FlowBase) < 0) __PYX_ERR(0, 498, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim__FlowBase->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim__FlowBase->tp_dictoffset && __pyx_ptype_7cantera_7_onedim__FlowBase->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim__FlowBase->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_FlowBase, (PyObject *) __pyx_ptype_7cantera_7_onedim__FlowBase) < 0) __PYX_ERR(0, 498, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_7_onedim_Sim1D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_Sim1D_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_7_onedim_Sim1D)) __PYX_ERR(0, 917, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_Sim1D_spec, __pyx_ptype_7cantera_7_onedim_Sim1D) < 0) __PYX_ERR(0, 917, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_Sim1D = &__pyx_type_7cantera_7_onedim_Sim1D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_Sim1D) < 0) __PYX_ERR(0, 917, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_Sim1D->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_Sim1D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_Sim1D->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Sim1D, (PyObject *) __pyx_ptype_7cantera_7_onedim_Sim1D) < 0) __PYX_ERR(0, 917, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_7_onedim_Sim1D) < 0) __PYX_ERR(0, 917, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim_Boundary1D); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 380, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_Inlet1D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_Inlet1D_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_Inlet1D)) __PYX_ERR(0, 380, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_Inlet1D_spec, __pyx_ptype_7cantera_7_onedim_Inlet1D) < 0) __PYX_ERR(0, 380, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_Inlet1D = &__pyx_type_7cantera_7_onedim_Inlet1D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_Inlet1D->tp_base = __pyx_ptype_7cantera_7_onedim_Boundary1D;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_Inlet1D) < 0) __PYX_ERR(0, 380, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_Inlet1D->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_Inlet1D->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_Inlet1D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_Inlet1D->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Inlet1D, (PyObject *) __pyx_ptype_7cantera_7_onedim_Inlet1D) < 0) __PYX_ERR(0, 380, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim_Boundary1D); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 388, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_Outlet1D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_Outlet1D_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_Outlet1D)) __PYX_ERR(0, 388, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_Outlet1D_spec, __pyx_ptype_7cantera_7_onedim_Outlet1D) < 0) __PYX_ERR(0, 388, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_Outlet1D = &__pyx_type_7cantera_7_onedim_Outlet1D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_Outlet1D->tp_base = __pyx_ptype_7cantera_7_onedim_Boundary1D;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_Outlet1D) < 0) __PYX_ERR(0, 388, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_Outlet1D->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_Outlet1D->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_Outlet1D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_Outlet1D->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Outlet1D, (PyObject *) __pyx_ptype_7cantera_7_onedim_Outlet1D) < 0) __PYX_ERR(0, 388, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim_Boundary1D); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_OutletReservoir1D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_OutletReservoir1D_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_OutletReservoir1D)) __PYX_ERR(0, 396, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_OutletReservoir1D_spec, __pyx_ptype_7cantera_7_onedim_OutletReservoir1D) < 0) __PYX_ERR(0, 396, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_OutletReservoir1D = &__pyx_type_7cantera_7_onedim_OutletReservoir1D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_OutletReservoir1D->tp_base = __pyx_ptype_7cantera_7_onedim_Boundary1D;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_OutletReservoir1D) < 0) __PYX_ERR(0, 396, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_OutletReservoir1D->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_OutletReservoir1D->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_OutletReservoir1D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_OutletReservoir1D->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_OutletReservoir1D, (PyObject *) __pyx_ptype_7cantera_7_onedim_OutletReservoir1D) < 0) __PYX_ERR(0, 396, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim_Boundary1D); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 403, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_SymmetryPlane1D_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_SymmetryPlane1D)) __PYX_ERR(0, 403, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_SymmetryPlane1D_spec, __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D) < 0) __PYX_ERR(0, 403, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D = &__pyx_type_7cantera_7_onedim_SymmetryPlane1D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D->tp_base = __pyx_ptype_7cantera_7_onedim_Boundary1D;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_SymmetryPlane1D) < 0) __PYX_ERR(0, 403, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_SymmetryPlane1D->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_SymmetryPlane1D, (PyObject *) __pyx_ptype_7cantera_7_onedim_SymmetryPlane1D) < 0) __PYX_ERR(0, 403, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim_Boundary1D); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 408, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_Surface1D = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_Surface1D_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_Surface1D)) __PYX_ERR(0, 408, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_Surface1D_spec, __pyx_ptype_7cantera_7_onedim_Surface1D) < 0) __PYX_ERR(0, 408, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_Surface1D = &__pyx_type_7cantera_7_onedim_Surface1D;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_Surface1D->tp_base = __pyx_ptype_7cantera_7_onedim_Boundary1D;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_Surface1D) < 0) __PYX_ERR(0, 408, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_Surface1D->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_Surface1D->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_Surface1D->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_Surface1D->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Surface1D, (PyObject *) __pyx_ptype_7cantera_7_onedim_Surface1D) < 0) __PYX_ERR(0, 408, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_FreeFlow = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_FreeFlow_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_FreeFlow)) __PYX_ERR(0, 784, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_FreeFlow_spec, __pyx_ptype_7cantera_7_onedim_FreeFlow) < 0) __PYX_ERR(0, 784, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_FreeFlow = &__pyx_type_7cantera_7_onedim_FreeFlow;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_FreeFlow->tp_base = __pyx_ptype_7cantera_7_onedim__FlowBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_FreeFlow) < 0) __PYX_ERR(0, 784, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_FreeFlow->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_FreeFlow->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_FreeFlow->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_FreeFlow->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_FreeFlow, (PyObject *) __pyx_ptype_7cantera_7_onedim_FreeFlow) < 0) __PYX_ERR(0, 784, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 798, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_UnstrainedFlow = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_UnstrainedFlow_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_UnstrainedFlow)) __PYX_ERR(0, 798, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_UnstrainedFlow_spec, __pyx_ptype_7cantera_7_onedim_UnstrainedFlow) < 0) __PYX_ERR(0, 798, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_UnstrainedFlow = &__pyx_type_7cantera_7_onedim_UnstrainedFlow;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_UnstrainedFlow->tp_base = __pyx_ptype_7cantera_7_onedim__FlowBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_UnstrainedFlow) < 0) __PYX_ERR(0, 798, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_UnstrainedFlow->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_UnstrainedFlow->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_UnstrainedFlow->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_UnstrainedFlow->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_UnstrainedFlow, (PyObject *) __pyx_ptype_7cantera_7_onedim_UnstrainedFlow) < 0) __PYX_ERR(0, 798, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 812, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_AxisymmetricFlow = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_AxisymmetricFlow_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_AxisymmetricFlow)) __PYX_ERR(0, 812, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_AxisymmetricFlow_spec, __pyx_ptype_7cantera_7_onedim_AxisymmetricFlow) < 0) __PYX_ERR(0, 812, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_AxisymmetricFlow = &__pyx_type_7cantera_7_onedim_AxisymmetricFlow;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_AxisymmetricFlow->tp_base = __pyx_ptype_7cantera_7_onedim__FlowBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_AxisymmetricFlow) < 0) __PYX_ERR(0, 812, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_AxisymmetricFlow->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_AxisymmetricFlow->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_AxisymmetricFlow->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_AxisymmetricFlow->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_AxisymmetricFlow, (PyObject *) __pyx_ptype_7cantera_7_onedim_AxisymmetricFlow) < 0) __PYX_ERR(0, 812, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 841, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_IdealGasFlow = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_IdealGasFlow_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_IdealGasFlow)) __PYX_ERR(0, 841, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_IdealGasFlow_spec, __pyx_ptype_7cantera_7_onedim_IdealGasFlow) < 0) __PYX_ERR(0, 841, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_IdealGasFlow = &__pyx_type_7cantera_7_onedim_IdealGasFlow;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_IdealGasFlow->tp_base = __pyx_ptype_7cantera_7_onedim__FlowBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_IdealGasFlow) < 0) __PYX_ERR(0, 841, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_IdealGasFlow->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_IdealGasFlow->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_IdealGasFlow->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_IdealGasFlow->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_IdealGasFlow, (PyObject *) __pyx_ptype_7cantera_7_onedim_IdealGasFlow) < 0) __PYX_ERR(0, 841, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 885, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_7_onedim_IonFlow = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim_IonFlow_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_7_onedim_IonFlow)) __PYX_ERR(0, 885, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim_IonFlow_spec, __pyx_ptype_7cantera_7_onedim_IonFlow) < 0) __PYX_ERR(0, 885, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim_IonFlow = &__pyx_type_7cantera_7_onedim_IonFlow;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_7_onedim_IonFlow->tp_base = __pyx_ptype_7cantera_7_onedim__FlowBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim_IonFlow) < 0) __PYX_ERR(0, 885, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim_IonFlow->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim_IonFlow->tp_dictoffset && __pyx_ptype_7cantera_7_onedim_IonFlow->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim_IonFlow->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_IonFlow, (PyObject *) __pyx_ptype_7cantera_7_onedim_IonFlow) < 0) __PYX_ERR(0, 885, __pyx_L1_error)
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim___pyx_scope_struct__solve_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve)) __PYX_ERR(0, 1292, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim___pyx_scope_struct__solve_spec, __pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve) < 0) __PYX_ERR(0, 1292, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve = &__pyx_type_7cantera_7_onedim___pyx_scope_struct__solve;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve) < 0) __PYX_ERR(0, 1292, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve->tp_dictoffset && __pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim___pyx_scope_struct__solve->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr)) __PYX_ERR(0, 1323, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr_spec, __pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr) < 0) __PYX_ERR(0, 1323, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr = &__pyx_type_7cantera_7_onedim___pyx_scope_struct_1_genexpr;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr) < 0) __PYX_ERR(0, 1323, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr->tp_dictoffset && __pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_7_onedim___pyx_scope_struct_1_genexpr->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType_3_0_0(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyTypeObject),
  #elif CYTHON_COMPILING_IN_LIMITED_API
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(5, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType_3_0_0(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyBoolObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cpython_4bool_bool) __PYX_ERR(6, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType_3_0_0(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyComplexObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cpython_7complex_complex) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyArray_Descr),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(3, 203, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyArrayIterObject),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(3, 226, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyArrayMultiIterObject),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(3, 230, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyArrayObject),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(3, 239, __pyx_L1_error)
  __pyx_ptype_5numpy_generic = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "generic", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_generic) __PYX_ERR(3, 813, __pyx_L1_error)
  __pyx_ptype_5numpy_number = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "number", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_number) __PYX_ERR(3, 815, __pyx_L1_error)
  __pyx_ptype_5numpy_integer = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "integer", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_integer) __PYX_ERR(3, 817, __pyx_L1_error)
  __pyx_ptype_5numpy_signedinteger = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "signedinteger", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_signedinteger) __PYX_ERR(3, 819, __pyx_L1_error)
  __pyx_ptype_5numpy_unsignedinteger = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "unsignedinteger", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_unsignedinteger) __PYX_ERR(3, 821, __pyx_L1_error)
  __pyx_ptype_5numpy_inexact = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "inexact", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_inexact) __PYX_ERR(3, 823, __pyx_L1_error)
  __pyx_ptype_5numpy_floating = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "floating", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_floating) __PYX_ERR(3, 825, __pyx_L1_error)
  __pyx_ptype_5numpy_complexfloating = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "complexfloating", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_complexfloating) __PYX_ERR(3, 827, __pyx_L1_error)
  __pyx_ptype_5numpy_flexible = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "flexible", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_flexible) __PYX_ERR(3, 829, __pyx_L1_error)
  __pyx_ptype_5numpy_character = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "character", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_character) __PYX_ERR(3, 831, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyUFuncObject),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(3, 869, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera.func1"); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_5func1_Func1 = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.func1", "Func1", sizeof(struct __pyx_obj_7cantera_5func1_Func1), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_5func1_Func1),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_5func1_Func1) __PYX_ERR(8, 46, __pyx_L1_error)
  __pyx_vtabptr_7cantera_5func1_Func1 = (struct __pyx_vtabstruct_7cantera_5func1_Func1*)__Pyx_GetVtable(__pyx_ptype_7cantera_5func1_Func1); if (unlikely(!__pyx_vtabptr_7cantera_5func1_Func1)) __PYX_ERR(8, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera.units"); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_5units_Units = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.units", "Units", sizeof(struct __pyx_obj_7cantera_5units_Units), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_5units_Units),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_5units_Units) __PYX_ERR(9, 42, __pyx_L1_error)
  __pyx_vtabptr_7cantera_5units_Units = (struct __pyx_vtabstruct_7cantera_5units_Units*)__Pyx_GetVtable(__pyx_ptype_7cantera_5units_Units); if (unlikely(!__pyx_vtabptr_7cantera_5units_Units)) __PYX_ERR(9, 42, __pyx_L1_error)
  __pyx_ptype_7cantera_5units_UnitStack = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.units", "UnitStack", sizeof(struct __pyx_obj_7cantera_5units_UnitStack), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_5units_UnitStack),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_5units_UnitStack) __PYX_ERR(9, 47, __pyx_L1_error)
  __pyx_vtabptr_7cantera_5units_UnitStack = (struct __pyx_vtabstruct_7cantera_5units_UnitStack*)__Pyx_GetVtable(__pyx_ptype_7cantera_5units_UnitStack); if (unlikely(!__pyx_vtabptr_7cantera_5units_UnitStack)) __PYX_ERR(9, 47, __pyx_L1_error)
  __pyx_ptype_7cantera_5units_UnitSystem = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.units", "UnitSystem", sizeof(struct __pyx_obj_7cantera_5units_UnitSystem), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_5units_UnitSystem),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_5units_UnitSystem) __PYX_ERR(9, 53, __pyx_L1_error)
  __pyx_vtabptr_7cantera_5units_UnitSystem = (struct __pyx_vtabstruct_7cantera_5units_UnitSystem*)__Pyx_GetVtable(__pyx_ptype_7cantera_5units_UnitSystem); if (unlikely(!__pyx_vtabptr_7cantera_5units_UnitSystem)) __PYX_ERR(9, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera.solutionbase"); if (unlikely(!__pyx_t_1)) __PYX_ERR(10, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_12solutionbase__SolutionBase = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.solutionbase", "_SolutionBase", sizeof(struct __pyx_obj_7cantera_12solutionbase__SolutionBase), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_12solutionbase__SolutionBase),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_12solutionbase__SolutionBase) __PYX_ERR(10, 108, __pyx_L1_error)
  __pyx_ptype_7cantera_12solutionbase_SolutionArrayBase = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.solutionbase", "SolutionArrayBase", sizeof(struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase) __PYX_ERR(10, 122, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera.kinetics"); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8kinetics_Kinetics = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.kinetics", "Kinetics", sizeof(struct __pyx_obj_7cantera_8kinetics_Kinetics), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_8kinetics_Kinetics),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_8kinetics_Kinetics) __PYX_ERR(11, 143, __pyx_L1_error)
  __pyx_ptype_7cantera_8kinetics_InterfaceKinetics = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.kinetics", "InterfaceKinetics", sizeof(struct __pyx_obj_7cantera_8kinetics_InterfaceKinetics), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_8kinetics_InterfaceKinetics),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_8kinetics_InterfaceKinetics) __PYX_ERR(11, 146, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera.thermo"); if (unlikely(!__pyx_t_1)) __PYX_ERR(12, 259, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_6thermo_Species = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.thermo", "Species", sizeof(struct __pyx_obj_7cantera_6thermo_Species), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_6thermo_Species),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_6thermo_Species) __PYX_ERR(12, 259, __pyx_L1_error)
  __pyx_vtabptr_7cantera_6thermo_Species = (struct __pyx_vtabstruct_7cantera_6thermo_Species*)__Pyx_GetVtable(__pyx_ptype_7cantera_6thermo_Species); if (unlikely(!__pyx_vtabptr_7cantera_6thermo_Species)) __PYX_ERR(12, 259, __pyx_L1_error)
  __pyx_ptype_7cantera_6thermo_ThermoPhase = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.thermo", "ThermoPhase", sizeof(struct __pyx_obj_7cantera_6thermo_ThermoPhase), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_6thermo_ThermoPhase),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_6thermo_ThermoPhase) __PYX_ERR(12, 266, __pyx_L1_error)
  __pyx_vtabptr_7cantera_6thermo_ThermoPhase = (struct __pyx_vtabstruct_7cantera_6thermo_ThermoPhase*)__Pyx_GetVtable(__pyx_ptype_7cantera_6thermo_ThermoPhase); if (unlikely(!__pyx_vtabptr_7cantera_6thermo_ThermoPhase)) __PYX_ERR(12, 266, __pyx_L1_error)
  __pyx_ptype_7cantera_6thermo_InterfacePhase = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.thermo", "InterfacePhase", sizeof(struct __pyx_obj_7cantera_6thermo_InterfacePhase), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_6thermo_InterfacePhase),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_6thermo_InterfacePhase) __PYX_ERR(12, 276, __pyx_L1_error)
  __pyx_vtabptr_7cantera_6thermo_InterfacePhase = (struct __pyx_vtabstruct_7cantera_6thermo_InterfacePhase*)__Pyx_GetVtable(__pyx_ptype_7cantera_6thermo_InterfacePhase); if (unlikely(!__pyx_vtabptr_7cantera_6thermo_InterfacePhase)) __PYX_ERR(12, 276, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera._utils"); if (unlikely(!__pyx_t_1)) __PYX_ERR(13, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_6_utils_AnyMap = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera._utils", "AnyMap", sizeof(struct __pyx_obj_7cantera_6_utils_AnyMap), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_6_utils_AnyMap),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_6_utils_AnyMap) __PYX_ERR(13, 96, __pyx_L1_error)
  __pyx_vtabptr_7cantera_6_utils_AnyMap = (struct __pyx_vtabstruct_7cantera_6_utils_AnyMap*)__Pyx_GetVtable(__pyx_ptype_7cantera_6_utils_AnyMap); if (unlikely(!__pyx_vtabptr_7cantera_6_utils_AnyMap)) __PYX_ERR(13, 96, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __pyx_t_1 = PyImport_ImportModule("cantera._utils"); if (!__pyx_t_1) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "stringify", (void (**)(void))&__pyx_f_7cantera_6_utils_stringify, "std::string (PyObject *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "pystr", (void (**)(void))&__pyx_f_7cantera_6_utils_pystr, "PyObject *(std::string)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "anymap_to_py", (void (**)(void))&__pyx_f_7cantera_6_utils_anymap_to_py, "PyObject *(Cantera::AnyMap &)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec__onedim(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec__onedim},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "_onedim",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC init_onedim(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC init_onedim(void)
#else
__Pyx_PyMODINIT_FUNC PyInit__onedim(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit__onedim(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none)
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
#endif
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec__onedim(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module '_onedim' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("_onedim", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #elif CYTHON_USE_MODULE_STATE
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  {
    int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to _onedim pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #endif
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit__onedim(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_cantera___onedim) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name_2, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "cantera._onedim")) {
      if (unlikely((PyDict_SetItemString(modules, "cantera._onedim", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely((__Pyx_modinit_type_init_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely((__Pyx_modinit_type_import_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  if (unlikely((__Pyx_modinit_function_import_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "cantera/_onedim.pyx":4
 * # at https://cantera.org/license.txt for license and copyright information.
 * 
 * from .interrupts import no_op             # <<<<<<<<<<<<<<
 * import warnings
 * import numpy as np
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_no_op);
  __Pyx_GIVEREF(__pyx_n_s_no_op);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_no_op);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_interrupts, __pyx_t_2, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_no_op); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_no_op, __pyx_t_2) < 0) __PYX_ERR(0, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":5
 * 
 * from .interrupts import no_op
 * import warnings             # <<<<<<<<<<<<<<
 * import numpy as np
 * 
 */
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_warnings, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_warnings, __pyx_t_3) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":6
 * from .interrupts import no_op
 * import warnings
 * import numpy as np             # <<<<<<<<<<<<<<
 * 
 * from ._utils cimport stringify, pystr, anymap_to_py
 */
  __pyx_t_3 = __Pyx_ImportDottedModule(__pyx_n_s_numpy, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_3) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/_onedim.pyx":9
 * 
 * from ._utils cimport stringify, pystr, anymap_to_py
 * from ._utils import CanteraError             # <<<<<<<<<<<<<<
 * from cython.operator import dereference as deref
 * 
 */
  __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_INCREF(__pyx_n_s_CanteraError);
  __Pyx_GIVEREF(__pyx_n_s_CanteraError);
  PyList_SET_ITEM(__pyx_t_3, 0, __pyx_n_s_CanteraError);
  __pyx_t_2 = __Pyx_Import(__pyx_n_s_utils, __pyx_t_3, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_ImportFrom(__pyx_t_2, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CanteraError, __pyx_t_3) < 0) __PYX_ERR(0, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":13
 * 
 * # Need a pure-python class to store weakrefs to
 * class _WeakrefProxy:             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
  __pyx_t_2 = __Pyx_Py3MetaclassPrepare((PyObject *) NULL, __pyx_empty_tuple, __pyx_n_s_WeakrefProxy, __pyx_n_s_WeakrefProxy, (PyObject *) NULL, __pyx_n_s_cantera__onedim, (PyObject *) NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Py3ClassCreate(((PyObject*)&PyType_Type), __pyx_n_s_WeakrefProxy, __pyx_empty_tuple, __pyx_t_2, NULL, 0, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_WeakrefProxy, __pyx_t_3) < 0) __PYX_ERR(0, 13, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":17
 * 
 * cdef class Domain1D:
 *     _domain_type = "none"             # <<<<<<<<<<<<<<
 *     def __cinit__(self, _SolutionBase phase not None, *args, **kwargs):
 *         self.domain = NULL
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_domain_type, __pyx_n_u_none) < 0) __PYX_ERR(0, 17, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":63
 *             return self.domain.nPoints()
 * 
 *     def _to_array(self, SolutionArrayBase dest, cbool normalize):             # <<<<<<<<<<<<<<
 *         """
 *         Retrieve domain data as a `SolutionArray` object. Service method used by
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_5_to_array, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D__to_array, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__46)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_to_array, __pyx_t_2) < 0) __PYX_ERR(0, 63, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":74
 *         return dest
 * 
 *     def _from_array(self, SolutionArrayBase arr):             # <<<<<<<<<<<<<<
 *         """
 *         Restore domain data from a `SolutionArray` object. Service method used by
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_7_from_array, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D__from_array, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__48)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_from_array, __pyx_t_2) < 0) __PYX_ERR(0, 74, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":83
 *         self.domain.fromArray(arr._base)
 * 
 *     def component_name(self, int n):             # <<<<<<<<<<<<<<
 *         """Name of the nth component."""
 *         return pystr(self.domain.componentName(n))
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_9component_name, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_component_name, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__50)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_component_name, __pyx_t_2) < 0) __PYX_ERR(0, 83, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":92
 *             return [self.component_name(n) for n in range(self.n_components)]
 * 
 *     def component_index(self, str name):             # <<<<<<<<<<<<<<
 *         """Index of the component with name 'name'"""
 *         return self.domain.componentIndex(stringify(name))
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_11component_index, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_component_index, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__52)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_component_index, __pyx_t_2) < 0) __PYX_ERR(0, 92, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":96
 *         return self.domain.componentIndex(stringify(name))
 * 
 *     def set_bounds(self, *, default=None, Y=None, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Set the lower and upper bounds on the solution.
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_default, Py_None) < 0) __PYX_ERR(0, 96, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_Y, Py_None) < 0) __PYX_ERR(0, 96, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_13set_bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_set_bounds, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__54)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsKwDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_set_bounds, __pyx_t_3) < 0) __PYX_ERR(0, 96, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":120
 *             self.domain.setBounds(self.component_index(name), lower, upper)
 * 
 *     def set_steady_tolerances(self, *, default=None, Y=None, abs=None, rel=None,             # <<<<<<<<<<<<<<
 *                               **kwargs):
 *         """
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_default, Py_None) < 0) __PYX_ERR(0, 120, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_Y, Py_None) < 0) __PYX_ERR(0, 120, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_abs, Py_None) < 0) __PYX_ERR(0, 120, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_rel, Py_None) < 0) __PYX_ERR(0, 120, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_15set_steady_tolerances, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_set_steady_tolerances, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__56)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsKwDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_set_steady_tolerances, __pyx_t_2) < 0) __PYX_ERR(0, 120, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":155
 *                                             self.component_index(name))
 * 
 *     def set_transient_tolerances(self, *, default=None, Y=None, abs=None,             # <<<<<<<<<<<<<<
 *                                  rel=None, **kwargs):
 *         """
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_default, Py_None) < 0) __PYX_ERR(0, 155, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_Y, Py_None) < 0) __PYX_ERR(0, 155, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_abs, Py_None) < 0) __PYX_ERR(0, 155, __pyx_L1_error)

  /* "cantera/_onedim.pyx":156
 * 
 *     def set_transient_tolerances(self, *, default=None, Y=None, abs=None,
 *                                  rel=None, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Set the error tolerances for the steady-state problem.
 */
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_rel, Py_None) < 0) __PYX_ERR(0, 155, __pyx_L1_error)

  /* "cantera/_onedim.pyx":155
 *                                             self.component_index(name))
 * 
 *     def set_transient_tolerances(self, *, default=None, Y=None, abs=None,             # <<<<<<<<<<<<<<
 *                                  rel=None, **kwargs):
 *         """
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_17set_transient_tolerances, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_set_transient_tolerance, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__57)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsKwDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_set_transient_tolerances, __pyx_t_3) < 0) __PYX_ERR(0, 155, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":190
 *                                                self.component_index(name))
 * 
 *     def set_default_tolerances(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set all tolerances to their default values
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_19set_default_tolerances, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_set_default_tolerances, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__59)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 190, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_set_default_tolerances, __pyx_t_3) < 0) __PYX_ERR(0, 190, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":198
 *         self.have_user_tolerances = False
 * 
 *     def bounds(self, component):             # <<<<<<<<<<<<<<
 *         """
 *         Return the (lower, upper) bounds for a solution component.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_21bounds, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_bounds, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__61)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_bounds, __pyx_t_3) < 0) __PYX_ERR(0, 198, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":208
 *         return self.domain.lowerBound(n), self.domain.upperBound(n)
 * 
 *     def tolerances(self, component):             # <<<<<<<<<<<<<<
 *         """
 *         Return the (relative, absolute) error tolerances for a solution
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_23tolerances, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_tolerances, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__63)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 208, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_tolerances, __pyx_t_3) < 0) __PYX_ERR(0, 208, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":218
 *         return self.domain.rtol(k), self.domain.atol(k)
 * 
 *     def steady_reltol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the relative error tolerance for the steady state problem for a
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_25steady_reltol, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_steady_reltol, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__64)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__65);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_steady_reltol, __pyx_t_3) < 0) __PYX_ERR(0, 218, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":229
 *             return self.domain.steady_rtol(self.component_index(component))
 * 
 *     def steady_abstol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the absolute error tolerance for the steady state problem for a
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_27steady_abstol, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_steady_abstol, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__66)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__65);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_steady_abstol, __pyx_t_3) < 0) __PYX_ERR(0, 229, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":240
 *             return self.domain.steady_atol(self.component_index(component))
 * 
 *     def transient_reltol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the relative error tolerance for the transient problem for a
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_29transient_reltol, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_transient_reltol, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__67)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__65);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_transient_reltol, __pyx_t_3) < 0) __PYX_ERR(0, 240, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":251
 *             return self.domain.transient_rtol(self.component_index(component))
 * 
 *     def transient_abstol(self, component=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return the absolute error tolerance for the transient problem for a
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_31transient_abstol, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D_transient_abstol, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__68)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__65);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_transient_abstol, __pyx_t_3) < 0) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":283
 *             self.domain.setID(stringify(name))
 * 
 *     def __reduce__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError('Domain1D object is not picklable')
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_33__reduce__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D___reduce, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__69)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_reduce, __pyx_t_3) < 0) __PYX_ERR(0, 283, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":286
 *         raise NotImplementedError('Domain1D object is not picklable')
 * 
 *     def __copy__(self):             # <<<<<<<<<<<<<<
 *         raise NotImplementedError('Domain1D object is not copyable')
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_8Domain1D_35__copy__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Domain1D___copy, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__70)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 286, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Domain1D->tp_dict, __pyx_n_s_copy, __pyx_t_3) < 0) __PYX_ERR(0, 286, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Domain1D);

  /* "cantera/_onedim.pyx":385
 *     domain - it must be either the leftmost or rightmost domain in a stack.
 *     """
 *     _domain_type = "inlet"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Inlet1D->tp_dict, __pyx_n_s_domain_type, __pyx_n_u_inlet) < 0) __PYX_ERR(0, 385, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Inlet1D);

  /* "cantera/_onedim.pyx":393
 *     condition on the flow.
 *     """
 *     _domain_type = "outlet"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Outlet1D->tp_dict, __pyx_n_s_domain_type, __pyx_n_u_outlet) < 0) __PYX_ERR(0, 393, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Outlet1D);

  /* "cantera/_onedim.pyx":400
 *     A one-dimensional outlet into a reservoir.
 *     """
 *     _domain_type = "outlet-reservoir"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_OutletReservoir1D->tp_dict, __pyx_n_s_domain_type, __pyx_kp_u_outlet_reservoir) < 0) __PYX_ERR(0, 400, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_OutletReservoir1D);

  /* "cantera/_onedim.pyx":405
 * cdef class SymmetryPlane1D(Boundary1D):
 *     """A symmetry plane."""
 *     _domain_type = "symmetry-plane"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_SymmetryPlane1D->tp_dict, __pyx_n_s_domain_type, __pyx_kp_u_symmetry_plane) < 0) __PYX_ERR(0, 405, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_SymmetryPlane1D);

  /* "cantera/_onedim.pyx":410
 * cdef class Surface1D(Boundary1D):
 *     """A solid surface."""
 *     _domain_type = "surface"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Surface1D->tp_dict, __pyx_n_s_domain_type, __pyx_n_u_surface) < 0) __PYX_ERR(0, 410, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Surface1D);

  /* "cantera/_onedim.pyx":424
 *         gas phase.
 *     """
 *     _domain_type = "reacting-surface"             # <<<<<<<<<<<<<<
 *     def __cinit__(self, _SolutionBase phase, *args, name="", **kwargs):
 *         # once legacy path is removed, the parent __cinit__ is sufficient
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_ReactingSurface1D->tp_dict, __pyx_n_s_domain_type, __pyx_kp_u_reacting_surface) < 0) __PYX_ERR(0, 424, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_ReactingSurface1D);

  /* "cantera/_onedim.pyx":472
 *             return self.surface
 * 
 *     def set_kinetics(self, Kinetics kin):             # <<<<<<<<<<<<<<
 *         """Set the kinetics manager (surface reaction mechanism object).
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_17ReactingSurface1D_7set_kinetics, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ReactingSurface1D_set_kinetics, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__72)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_ReactingSurface1D->tp_dict, __pyx_n_s_set_kinetics, __pyx_t_3) < 0) __PYX_ERR(0, 472, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_ReactingSurface1D);

  /* "cantera/_onedim.pyx":531
 *             self.gas.transport = self.gas.base.transport().get()
 * 
 *     def set_transport(self, _SolutionBase phase):             # <<<<<<<<<<<<<<
 *         """
 *         Set the `Solution` object used for calculating transport properties.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_9_FlowBase_5set_transport, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FlowBase_set_transport, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__74)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 531, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase->tp_dict, __pyx_n_s_set_transport, __pyx_t_3) < 0) __PYX_ERR(0, 531, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim__FlowBase);

  /* "cantera/_onedim.pyx":546
 *         self.flow.setTransport(deref(self.gas.transport))
 * 
 *     def set_default_tolerances(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set all tolerances to their default values
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_9_FlowBase_7set_default_tolerances, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FlowBase_set_default_tolerances, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__76)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase->tp_dict, __pyx_n_s_set_default_tolerances, __pyx_t_3) < 0) __PYX_ERR(0, 546, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim__FlowBase);

  /* "cantera/_onedim.pyx":585
 *                 self.flow.fixTemperature()
 * 
 *     def set_fixed_temp_profile(self, pos, T):             # <<<<<<<<<<<<<<
 *         """Set the fixed temperature profile. This profile is used
 *         whenever the energy equation is disabled.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_9_FlowBase_9set_fixed_temp_profile, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FlowBase_set_fixed_temp_profile, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__78)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 585, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase->tp_dict, __pyx_n_s_set_fixed_temp_profile, __pyx_t_3) < 0) __PYX_ERR(0, 585, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim__FlowBase);

  /* "cantera/_onedim.pyx":604
 *         self.flow.setFixedTempProfile(x, y)
 * 
 *     def get_settings3(self):             # <<<<<<<<<<<<<<
 *         """
 *         Temporary method returning new behavior of settings getter.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_9_FlowBase_11get_settings3, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FlowBase_get_settings3, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__79)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 604, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase->tp_dict, __pyx_n_s_get_settings3, __pyx_t_3) < 0) __PYX_ERR(0, 604, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim__FlowBase);

  /* "cantera/_onedim.pyx":713
 *             return data
 * 
 *     def set_free_flow(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set flow configuration for freely-propagating flames, using an internal
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_9_FlowBase_13set_free_flow, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FlowBase_set_free_flow, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__80)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 713, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase->tp_dict, __pyx_n_s_set_free_flow, __pyx_t_3) < 0) __PYX_ERR(0, 713, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim__FlowBase);

  /* "cantera/_onedim.pyx":721
 *         self.flow.setFreeFlow()
 * 
 *     def set_axisymmetric_flow(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set flow configuration for axisymmetric counterflow or burner-stabilized
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_9_FlowBase_15set_axisymmetric_flow, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FlowBase_set_axisymmetric_flow, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__81)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 721, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim__FlowBase->tp_dict, __pyx_n_s_set_axisymmetric_flow, __pyx_t_3) < 0) __PYX_ERR(0, 721, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim__FlowBase);

  /* "cantera/_onedim.pyx":795
 *         species mass fractions
 *     """
 *     _domain_type = "free-flow"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_FreeFlow->tp_dict, __pyx_n_s_domain_type, __pyx_kp_u_free_flow) < 0) __PYX_ERR(0, 795, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_FreeFlow);

  /* "cantera/_onedim.pyx":809
 *         species mass fractions
 *     """
 *     _domain_type = "unstrained-flow"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_UnstrainedFlow->tp_dict, __pyx_n_s_domain_type, __pyx_kp_u_unstrained_flow) < 0) __PYX_ERR(0, 809, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_UnstrainedFlow);

  /* "cantera/_onedim.pyx":838
 *     chemistry is allowed, as well as arbitrary variation of the transport properties.
 *     """
 *     _domain_type = "axisymmetric-flow"             # <<<<<<<<<<<<<<
 * 
 * 
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_AxisymmetricFlow->tp_dict, __pyx_n_s_domain_type, __pyx_kp_u_axisymmetric_flow) < 0) __PYX_ERR(0, 838, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_AxisymmetricFlow);

  /* "cantera/_onedim.pyx":876
 *         `AxisymmetricFlow` and `UnstrainedFlow`.
 *     """
 *     _domain_type = "gas-flow"             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, **kwargs):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_IdealGasFlow->tp_dict, __pyx_n_s_domain_type, __pyx_kp_u_gas_flow) < 0) __PYX_ERR(0, 876, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_IdealGasFlow);

  /* "cantera/_onedim.pyx":896
 *         `AxisymmetricFlow` and `UnstrainedFlow`.
 *     """
 *     _domain_type = "ion-flow"             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, **kwargs):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_IonFlow->tp_dict, __pyx_n_s_domain_type, __pyx_kp_u_ion_flow) < 0) __PYX_ERR(0, 896, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_IonFlow);

  /* "cantera/_onedim.pyx":904
 *         super().__init__(*args, **kwargs)
 * 
 *     def set_solving_stage(self, stage):             # <<<<<<<<<<<<<<
 *         """
 *         Set the mode for handling ionized species:
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_7IonFlow_3set_solving_stage, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_IonFlow_set_solving_stage, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__83)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 904, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_IonFlow->tp_dict, __pyx_n_s_set_solving_stage, __pyx_t_3) < 0) __PYX_ERR(0, 904, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_IonFlow);

  /* "cantera/_onedim.pyx":942
 *         self._initial_guess_kwargs = {}
 * 
 *     def phase(self, domain=None):             # <<<<<<<<<<<<<<
 *         """
 *         Return phase describing a domain (that is, a gas phase or surface phase).
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_5phase, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_phase, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__85)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__65);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_phase, __pyx_t_3) < 0) __PYX_ERR(0, 942, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":955
 *         return dom.phase
 * 
 *     def set_interrupt(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set an interrupt function to be called each time that :ct:`OneDim::eval` is
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_7set_interrupt, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_interrupt, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__87)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 955, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_interrupt, __pyx_t_3) < 0) __PYX_ERR(0, 955, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":972
 *         self.sim.setInterrupt(self._interrupt.func)
 * 
 *     def set_time_step_callback(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set a callback function to be called after each successful timestep.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_9set_time_step_callback, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_time_step_callback, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__88)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 972, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_time_step_callback, __pyx_t_3) < 0) __PYX_ERR(0, 972, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":988
 *         self.sim.setTimeStepCallback(self._time_step_callback.func)
 * 
 *     def set_steady_callback(self, f):             # <<<<<<<<<<<<<<
 *         """
 *         Set a callback function to be called after each successful steady-state
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_11set_steady_callback, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_steady_callback, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__89)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 988, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_steady_callback, __pyx_t_3) < 0) __PYX_ERR(0, 988, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1004
 *         self.sim.setSteadyCallback(self._steady_callback.func)
 * 
 *     def domain_index(self, dom):             # <<<<<<<<<<<<<<
 *         """
 *         Get the index of a domain, specified either by name or as a Domain1D
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_13domain_index, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_domain_index, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__91)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1004, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_domain_index, __pyx_t_3) < 0) __PYX_ERR(0, 1004, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1025
 *         return idom
 * 
 *     def _get_indices(self, dom, comp):             # <<<<<<<<<<<<<<
 *         idom = self.domain_index(dom)
 *         dom = self.domains[idom]
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_15_get_indices, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D__get_indices, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__93)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1025, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_get_indices, __pyx_t_3) < 0) __PYX_ERR(0, 1025, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1037
 *         return idom, kcomp
 * 
 *     def value(self, domain, component, point):             # <<<<<<<<<<<<<<
 *         """
 *         Solution value at one point
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_17value, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_value, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__95)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1037, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_value, __pyx_t_3) < 0) __PYX_ERR(0, 1037, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1053
 *         return self.sim.value(dom, comp, point)
 * 
 *     def set_value(self, domain, component, point, value):             # <<<<<<<<<<<<<<
 *         """
 *         Set the value of one component in one domain at one point to 'value'.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_19set_value, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_value, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__97)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1053, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_value, __pyx_t_3) < 0) __PYX_ERR(0, 1053, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1073
 *         self.sim.setValue(dom, comp, point, value)
 * 
 *     def eval(self, rdt=0.0):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate the governing equations using the current solution estimate,
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_21eval, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_eval, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__99)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1073, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__100);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_eval, __pyx_t_3) < 0) __PYX_ERR(0, 1073, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1084
 *         self.sim.eval(rdt)
 * 
 *     def work_value(self, domain, component, point):             # <<<<<<<<<<<<<<
 *         """
 *         Internal work array value at one point. After calling `eval`, this array
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_23work_value, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_work_value, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__101)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1084, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_work_value, __pyx_t_3) < 0) __PYX_ERR(0, 1084, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1101
 *         return self.sim.workValue(dom, comp, point)
 * 
 *     def profile(self, domain, component):             # <<<<<<<<<<<<<<
 *         """
 *         Spatial profile of one component in one domain.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_25profile, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_profile, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__103)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_profile, __pyx_t_3) < 0) __PYX_ERR(0, 1101, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1120
 *         return data
 * 
 *     def set_profile(self, domain, component, positions, values):             # <<<<<<<<<<<<<<
 *         """
 *         Set an initial estimate for a profile of one component in one domain.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_27set_profile, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_profile, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__105)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_profile, __pyx_t_3) < 0) __PYX_ERR(0, 1120, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1145
 *         self.sim.setProfile(dom, comp, pos_vec, val_vec)
 * 
 *     def set_flat_profile(self, domain, component, value):             # <<<<<<<<<<<<<<
 *         """Set a flat profile for one component in one domain.
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_29set_flat_profile, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_flat_profile, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__107)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_flat_profile, __pyx_t_3) < 0) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1160
 *         self.sim.setFlatProfile(dom, comp, value)
 * 
 *     def restore_data(self, domain, states, other_cols, meta):             # <<<<<<<<<<<<<<
 *         """
 *         Restore a ``domain`` from underlying data. This method is used as
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_31restore_data, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_restore_data, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__109)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1160, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_restore_data, __pyx_t_3) < 0) __PYX_ERR(0, 1160, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1227
 *             raise NotImplementedError(msg.format(type(self).__name__))
 * 
 *     def show(self):             # <<<<<<<<<<<<<<
 *         """ print the current solution. """
 *         if not self._initialized:
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_33show, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_show, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__110)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_show, __pyx_t_3) < 0) __PYX_ERR(0, 1227, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1233
 *         self.sim.show()
 * 
 *     def show_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         print the current solution.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_35show_solution, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_show_solution, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__111)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1233, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_show_solution, __pyx_t_3) < 0) __PYX_ERR(0, 1233, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1243
 *         self.show()
 * 
 *     def set_time_step(self, stepsize, n_steps):             # <<<<<<<<<<<<<<
 *         """Set the sequence of time steps to try when Newton fails.
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_37set_time_step, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_time_step, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__113)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1243, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_time_step, __pyx_t_3) < 0) __PYX_ERR(0, 1243, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1268
 *             self.sim.setMaxTimeStepCount(nmax)
 * 
 *     def set_initial_guess(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Store arguments for initial guess and prepare storage for solution.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_39set_initial_guess, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_initial_guess, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__115)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1268, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_initial_guess, __pyx_t_3) < 0) __PYX_ERR(0, 1268, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1277
 *         self._initialized = True
 * 
 *     def _get_initial_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Load the initial solution from each domain into the global solution
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_41_get_initial_solution, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D__get_initial_solution, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__116)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_get_initial_solution, __pyx_t_3) < 0) __PYX_ERR(0, 1277, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1285
 *         self.sim.getInitialSoln()
 * 
 *     def extinct(self):             # <<<<<<<<<<<<<<
 *         """
 *         Method overloaded for some flame types to indicate if the flame has been
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_43extinct, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_extinct, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__117)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_extinct, __pyx_t_3) < 0) __PYX_ERR(0, 1285, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1292
 *         return False
 * 
 *     def solve(self, loglevel=1, refine_grid=True, auto=False):             # <<<<<<<<<<<<<<
 *         """
 *         Solve the problem.
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_45solve, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_solve, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__119)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1292, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__120);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_solve, __pyx_t_3) < 0) __PYX_ERR(0, 1292, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1483
 *             self.sim.solve(loglevel, <cbool>refine_grid)
 * 
 *     def refine(self, loglevel=1):             # <<<<<<<<<<<<<<
 *         """
 *         Refine the grid, adding points where solution is not adequately
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_47refine, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_refine, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__122)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1483, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__123);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_refine, __pyx_t_3) < 0) __PYX_ERR(0, 1483, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1490
 *         self.sim.refine(loglevel)
 * 
 *     def set_refine_criteria(self, domain, ratio=10.0, slope=0.8, curve=0.8,             # <<<<<<<<<<<<<<
 *                           prune=0.05):
 *         """
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_49set_refine_criteria, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_refine_criteria, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__125)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__126);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_refine_criteria, __pyx_t_3) < 0) __PYX_ERR(0, 1490, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1519
 *         self.sim.setRefineCriteria(idom, ratio, slope, curve, prune)
 * 
 *     def get_refine_criteria(self, domain):             # <<<<<<<<<<<<<<
 *         """
 *         Get a dictionary of the criteria used to refine one domain. The items in
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_51get_refine_criteria, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_get_refine_criteria, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__128)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_get_refine_criteria, __pyx_t_3) < 0) __PYX_ERR(0, 1519, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1536
 *         return {'ratio': c[0], 'slope': c[1], 'curve': c[2], 'prune': c[3]}
 * 
 *     def set_grid_min(self, dz, domain=None):             # <<<<<<<<<<<<<<
 *         """
 *         Set the minimum grid spacing on ``domain``. If ``domain`` is `None`, then
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_53set_grid_min, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_grid_min, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__130)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1536, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__65);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_grid_min, __pyx_t_3) < 0) __PYX_ERR(0, 1536, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1547
 *         self.sim.setGridMin(idom, dz)
 * 
 *     def set_max_jac_age(self, ss_age, ts_age):             # <<<<<<<<<<<<<<
 *         """
 *         Set the maximum number of times the Jacobian will be used before it
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_55set_max_jac_age, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_max_jac_age, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__132)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1547, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_max_jac_age, __pyx_t_3) < 0) __PYX_ERR(0, 1547, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1559
 *         self.sim.setJacAge(ss_age, ts_age)
 * 
 *     def set_time_step_factor(self, tfactor):             # <<<<<<<<<<<<<<
 *         """
 *         Set the factor by which the time step will be increased after a
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_57set_time_step_factor, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_time_step_factor, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__134)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1559, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_time_step_factor, __pyx_t_3) < 0) __PYX_ERR(0, 1559, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1566
 *         self.sim.setTimeStepFactor(tfactor)
 * 
 *     def set_min_time_step(self, tsmin):             # <<<<<<<<<<<<<<
 *         """ Set the minimum time step. """
 *         self.sim.setMinTimeStep(tsmin)
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_59set_min_time_step, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_min_time_step, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__136)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1566, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_min_time_step, __pyx_t_3) < 0) __PYX_ERR(0, 1566, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1570
 *         self.sim.setMinTimeStep(tsmin)
 * 
 *     def set_max_time_step(self, tsmax):             # <<<<<<<<<<<<<<
 *         """ Set the maximum time step. """
 *         self.sim.setMaxTimeStep(tsmax)
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_61set_max_time_step, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_max_time_step, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__138)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_max_time_step, __pyx_t_3) < 0) __PYX_ERR(0, 1570, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1592
 *             return self.sim.fixedTemperatureLocation()
 * 
 *     def save(self, filename='soln.yaml', name='solution', description=None,             # <<<<<<<<<<<<<<
 *              loglevel=None, *, overwrite=False, compression=0, basis=None):
 *         """
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "cantera/_onedim.pyx":1593
 * 
 *     def save(self, filename='soln.yaml', name='solution', description=None,
 *              loglevel=None, *, overwrite=False, compression=0, basis=None):             # <<<<<<<<<<<<<<
 *         """
 *         Save current simulation data to a data file (CSV, YAML or HDF).
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_overwrite, Py_False) < 0) __PYX_ERR(0, 1592, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_compression, __pyx_int_0) < 0) __PYX_ERR(0, 1592, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_basis, Py_None) < 0) __PYX_ERR(0, 1592, __pyx_L1_error)

  /* "cantera/_onedim.pyx":1592
 *             return self.sim.fixedTemperatureLocation()
 * 
 *     def save(self, filename='soln.yaml', name='solution', description=None,             # <<<<<<<<<<<<<<
 *              loglevel=None, *, overwrite=False, compression=0, basis=None):
 *         """
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_63save, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_save, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__140)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1592, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__141);
  __Pyx_CyFunction_SetDefaultsKwDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_save, __pyx_t_2) < 0) __PYX_ERR(0, 1592, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1639
 *                       stringify(description), overwrite, compression, stringify(basis))
 * 
 *     def restore(self, filename='soln.yaml', name='solution', loglevel=None):             # <<<<<<<<<<<<<<
 *         """Retrieve data and settings from a previously saved simulation.
 * 
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_65restore, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_restore, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__143)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1639, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__144);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_restore, __pyx_t_2) < 0) __PYX_ERR(0, 1639, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1669
 *         return anymap_to_py(header)
 * 
 *     def restore_time_stepping_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the current solution vector to the last successful time-stepping
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_67restore_time_stepping_solution, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_restore_time_stepping_solu, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__145)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_restore_time_stepping_solution, __pyx_t_2) < 0) __PYX_ERR(0, 1669, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1677
 *         self.sim.restoreTimeSteppingSolution()
 * 
 *     def restore_steady_solution(self):             # <<<<<<<<<<<<<<
 *         """
 *         Set the current solution vector to the last successful steady-state
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_69restore_steady_solution, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_restore_steady_solution, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__146)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1677, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_restore_steady_solution, __pyx_t_2) < 0) __PYX_ERR(0, 1677, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1685
 *         self.sim.restoreSteadySolution()
 * 
 *     def show_stats(self, print_time=True):             # <<<<<<<<<<<<<<
 *         """
 *         Show the statistics for the last solution.
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_71show_stats, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_show_stats, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__148)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1685, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__149);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_show_stats, __pyx_t_2) < 0) __PYX_ERR(0, 1685, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1694
 *         self.sim.writeStats(print_time)
 * 
 *     def clear_stats(self):             # <<<<<<<<<<<<<<
 *         """
 *         Clear solver statistics.
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_73clear_stats, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_clear_stats, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__150)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1694, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_clear_stats, __pyx_t_2) < 0) __PYX_ERR(0, 1694, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1700
 *         self.sim.clearStats()
 * 
 *     def solve_adjoint(self, perturb, n_params, dgdx, g=None, dp=1e-5):             # <<<<<<<<<<<<<<
 *         """
 *         Find the sensitivities of an objective function using an adjoint method.
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_75solve_adjoint, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_solve_adjoint, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__152)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1700, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_2, __pyx_tuple__153);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_solve_adjoint, __pyx_t_2) < 0) __PYX_ERR(0, 1700, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1800
 *             return self.sim.timeStepStats()
 * 
 *     def set_max_grid_points(self, domain, npmax):             # <<<<<<<<<<<<<<
 *         """ Set the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_77set_max_grid_points, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_set_max_grid_points, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__155)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_set_max_grid_points, __pyx_t_2) < 0) __PYX_ERR(0, 1800, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "cantera/_onedim.pyx":1805
 *         self.sim.setMaxGridPoints(idom, npmax)
 * 
 *     def get_max_grid_points(self, domain):             # <<<<<<<<<<<<<<
 *         """ Get the maximum number of grid points in the specified domain. """
 *         idom = self.domain_index(domain)
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_79get_max_grid_points, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D_get_max_grid_points, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__157)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_7_onedim_Sim1D->tp_dict, __pyx_n_s_get_max_grid_points, __pyx_t_2) < 0) __PYX_ERR(0, 1805, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_7_onedim_Sim1D);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_83__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D___reduce_cython, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__158)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_2) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_7_onedim_5Sim1D_85__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Sim1D___setstate_cython, NULL, __pyx_n_s_cantera__onedim, __pyx_d, ((PyObject *)__pyx_codeobj__160)); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_2) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/_onedim.pyx":1
 * # This file is part of Cantera. See License.txt in the top-level directory or             # <<<<<<<<<<<<<<
 * # at https://cantera.org/license.txt for license and copyright information.
 * 
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(15); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Domain1D_set_bounds_line_96, __pyx_kp_u_Set_the_lower_and_upper_bounds) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Domain1D_bounds_line_198, __pyx_kp_u_Return_the_lower_upper_bounds_f) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Domain1D_tolerances_line_208, __pyx_kp_u_Return_the_relative_absolute_er) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_FlowBase_set_fixed_temp_profile_2, __pyx_kp_u_Set_the_fixed_temperature_profil) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_value_line_1037, __pyx_kp_u_Solution_value_at_one_point_par) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_set_value_line_1053, __pyx_kp_u_Set_the_value_of_one_component) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_work_value_line_1084, __pyx_kp_u_Internal_work_array_value_at_on) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_profile_line_1101, __pyx_kp_u_Spatial_profile_of_one_componen) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_set_profile_line_1120, __pyx_kp_u_Set_an_initial_estimate_for_a_p) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_set_flat_profile_line_1145, __pyx_kp_u_Set_a_flat_profile_for_one_compo) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_set_time_step_line_1243, __pyx_kp_u_Set_the_sequence_of_time_steps_t) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_set_refine_criteria_line_1, __pyx_kp_u_Set_the_criteria_used_to_refine) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_get_refine_criteria_line_1, __pyx_kp_u_Get_a_dictionary_of_the_criteri) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_save_line_1592, __pyx_kp_u_Save_current_simulation_data_to) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_Sim1D_restore_line_1639, __pyx_kp_u_Retrieve_data_and_settings_from) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_2) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    if (__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init cantera._onedim", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init cantera._onedim");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_value == NULL || exc_info->exc_value == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    PyObject *exc_value = exc_info->exc_value;
    if (exc_value == NULL || exc_value == Py_None) {
        *value = NULL;
        *type = NULL;
        *tb = NULL;
    } else {
        *value = exc_value;
        Py_INCREF(*value);
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        *tb = PyException_GetTraceback(exc_value);
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #endif
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    PyObject *tmp_value = exc_info->exc_value;
    exc_info->exc_value = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
  #else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
  #endif
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type = NULL, *local_value, *local_tb = NULL;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if PY_VERSION_HEX >= 0x030C00A6
    local_value = tstate->current_exception;
    tstate->current_exception = 0;
    if (likely(local_value)) {
        local_type = (PyObject*) Py_TYPE(local_value);
        Py_INCREF(local_type);
        local_tb = PyException_GetTraceback(local_value);
    }
  #else
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
  #endif
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE && PY_VERSION_HEX >= 0x030C00A6
    if (unlikely(tstate->current_exception))
#elif CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
      #if PY_VERSION_HEX >= 0x030B00a4
        tmp_value = exc_info->exc_value;
        exc_info->exc_value = local_value;
        tmp_type = NULL;
        tmp_tb = NULL;
        Py_XDECREF(local_type);
        Py_XDECREF(local_tb);
      #else
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
      #endif
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    __Pyx_PyThreadState_declare
    CYTHON_UNUSED_VAR(cause);
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
      #if PY_VERSION_HEX >= 0x030C00A6
        PyException_SetTraceback(value, tb);
      #elif CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* TupleAndListFromArray */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        Py_INCREF(__pyx_empty_tuple);
        return __pyx_empty_tuple;
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = PyTuple_GET_SIZE(kwnames);
    for (i = 0; i < n; i++)
    {
        if (s == PyTuple_GET_ITEM(kwnames, i)) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;  // error
            return kwvalues[i];
        }
    }
    return NULL;  // not found (no exception set)
}
#endif

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    int kwds_is_tuple = CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds));
    while (1) {
        if (kwds_is_tuple) {
            if (pos >= PyTuple_GET_SIZE(kwds)) break;
            key = PyTuple_GET_ITEM(kwds, pos);
            value = kwvalues[pos];
            pos++;
        }
        else
        {
            if (!PyDict_Next(kwds, &pos, &key, &value)) break;
        }
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key)
                );
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    __Pyx_TypeName type_name;
    __Pyx_TypeName obj_type_name;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    type_name = __Pyx_PyType_GetName(type);
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected " __Pyx_FMT_TYPENAME
        ", got " __Pyx_FMT_TYPENAME ")", name, type_name, obj_type_name);
    __Pyx_DECREF_TypeName(type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#elif CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object"))) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]);
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
    Py_DECREF(argstuple);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
#if defined(__Pyx_CyFunction_USED) && defined(NDEBUG)
        if (__Pyx_IsCyOrPyCFunction(func))
#else
        if (PyCFunction_Check(func))
#endif
        {
            if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
                return __Pyx_PyObject_CallMethO(func, NULL);
            }
        }
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (PyCFunction_Check(func))
        {
            if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
                return __Pyx_PyObject_CallMethO(func, args[0]);
            }
        }
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    #if PY_VERSION_HEX >= 0x030700A1
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    #if CYTHON_VECTORCALL
    vectorcallfunc f = _PyVectorcall_Function(func);
    if (f) {
        return f(func, args, (size_t)nargs, kwargs);
    }
    #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
    if (__Pyx_CyFunction_CheckExact(func)) {
        __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
        if (f) return f(func, args, (size_t)nargs, kwargs);
    }
    #endif
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_empty_tuple, kwargs);
    }
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
}

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    __Pyx_TypeName obj_type_name;
    __Pyx_TypeName type_name;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    type_name = __Pyx_PyType_GetName(type);
    PyErr_Format(PyExc_TypeError,
                 "Cannot convert " __Pyx_FMT_TYPENAME " to " __Pyx_FMT_TYPENAME,
                 obj_type_name, type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    __Pyx_DECREF_TypeName(type_name);
    return 0;
}

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    PyObject* exc_type = __Pyx_PyErr_CurrentExceptionType();
    if (unlikely(exc_type)) {
        if (unlikely(!__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))
            return -1;
        __Pyx_PyErr_Clear();
        return 0;
    }
    return 0;
}

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg = NULL;
    return __Pyx_PyObject_FastCall(func, (&arg)+1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    __Pyx_TypeName type_name;
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (__Pyx_PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#elif PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    }
    return __Pyx_IterFinish();
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = __Pyx_PyObject_GetIterNextFunc(iter);
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* PyIntBinop */
#if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_AddObjC(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_MAYBE_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long x;
        long a = PyInt_AS_LONG(op1);
        
            x = (long)((unsigned long)a + (unsigned long)b);
            if (likely((x^a) >= 0 || (x^b) >= 0))
                return PyInt_FromLong(x);
            return PyLong_Type.tp_as_number->nb_add(op1, op2);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        const long b = intval;
        long a, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG llb = intval;
        PY_LONG_LONG lla, llx;
#endif
        if (unlikely(__Pyx_PyLong_IsZero(op1))) {
            return __Pyx_NewRef(op2);
        }
        if (likely(__Pyx_PyLong_IsCompact(op1))) {
            a = __Pyx_PyLong_CompactValue(op1);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op1);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op1);
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT) {
                        a = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT) {
                        a = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT) {
                        a = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT) {
                        lla = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_add(op1, op2);
            }
        }
                x = a + b;
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla + llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
            double result;
            
            PyFPE_START_PROTECT("add", return NULL)
            result = ((double)a) + (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceAdd : PyNumber_Add)(op1, op2);
}
#endif

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kw,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kw, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    if (CYTHON_METH_FASTCALL && likely(PyTuple_Check(kw))) {
        if (unlikely(PyTuple_GET_SIZE(kw) == 0))
            return 1;
        if (!kw_allowed) {
            key = PyTuple_GET_ITEM(kw, 0);
            goto invalid_keyword;
        }
#if PY_VERSION_HEX < 0x03090000
        for (pos = 0; pos < PyTuple_GET_SIZE(kw); pos++) {
            key = PyTuple_GET_ITEM(kw, pos);
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
        }
#endif
        return 1;
    }
    while (PyDict_Next(kw, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if (!kw_allowed && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* IsLittleEndian */
static CYTHON_INLINE int __Pyx_Is_Little_Endian(void)
{
  union {
    uint32_t u32;
    uint8_t u8[4];
  } S;
  S.u32 = 0x01020304;
  return S.u8[0] == 4;
}

/* BufferFormatCheck */
static void __Pyx_BufFmt_Init(__Pyx_BufFmt_Context* ctx,
                              __Pyx_BufFmt_StackElem* stack,
                              __Pyx_TypeInfo* type) {
  stack[0].field = &ctx->root;
  stack[0].parent_offset = 0;
  ctx->root.type = type;
  ctx->root.name = "buffer dtype";
  ctx->root.offset = 0;
  ctx->head = stack;
  ctx->head->field = &ctx->root;
  ctx->fmt_offset = 0;
  ctx->head->parent_offset = 0;
  ctx->new_packmode = '@';
  ctx->enc_packmode = '@';
  ctx->new_count = 1;
  ctx->enc_count = 0;
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  ctx->is_valid_array = 0;
  ctx->struct_alignment = 0;
  while (type->typegroup == 'S') {
    ++ctx->head;
    ctx->head->field = type->fields;
    ctx->head->parent_offset = 0;
    type = type->fields->type;
  }
}
static int __Pyx_BufFmt_ParseNumber(const char** ts) {
    int count;
    const char* t = *ts;
    if (*t < '0' || *t > '9') {
      return -1;
    } else {
        count = *t++ - '0';
        while (*t >= '0' && *t <= '9') {
            count *= 10;
            count += *t++ - '0';
        }
    }
    *ts = t;
    return count;
}
static int __Pyx_BufFmt_ExpectNumber(const char **ts) {
    int number = __Pyx_BufFmt_ParseNumber(ts);
    if (number == -1)
        PyErr_Format(PyExc_ValueError,\
                     "Does not understand character buffer dtype format string ('%c')", **ts);
    return number;
}
static void __Pyx_BufFmt_RaiseUnexpectedChar(char ch) {
  PyErr_Format(PyExc_ValueError,
               "Unexpected format string character: '%c'", ch);
}
static const char* __Pyx_BufFmt_DescribeTypeChar(char ch, int is_complex) {
  switch (ch) {
    case '?': return "'bool'";
    case 'c': return "'char'";
    case 'b': return "'signed char'";
    case 'B': return "'unsigned char'";
    case 'h': return "'short'";
    case 'H': return "'unsigned short'";
    case 'i': return "'int'";
    case 'I': return "'unsigned int'";
    case 'l': return "'long'";
    case 'L': return "'unsigned long'";
    case 'q': return "'long long'";
    case 'Q': return "'unsigned long long'";
    case 'f': return (is_complex ? "'complex float'" : "'float'");
    case 'd': return (is_complex ? "'complex double'" : "'double'");
    case 'g': return (is_complex ? "'complex long double'" : "'long double'");
    case 'T': return "a struct";
    case 'O': return "Python object";
    case 'P': return "a pointer";
    case 's': case 'p': return "a string";
    case 0: return "end";
    default: return "unparsable format string";
  }
}
static size_t __Pyx_BufFmt_TypeCharToStandardSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return 2;
    case 'i': case 'I': case 'l': case 'L': return 4;
    case 'q': case 'Q': return 8;
    case 'f': return (is_complex ? 8 : 4);
    case 'd': return (is_complex ? 16 : 8);
    case 'g': {
      PyErr_SetString(PyExc_ValueError, "Python does not define a standard format string size for long double ('g')..");
      return 0;
    }
    case 'O': case 'P': return sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static size_t __Pyx_BufFmt_TypeCharToNativeSize(char ch, int is_complex) {
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(short);
    case 'i': case 'I': return sizeof(int);
    case 'l': case 'L': return sizeof(long);
    #ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(PY_LONG_LONG);
    #endif
    case 'f': return sizeof(float) * (is_complex ? 2 : 1);
    case 'd': return sizeof(double) * (is_complex ? 2 : 1);
    case 'g': return sizeof(long double) * (is_complex ? 2 : 1);
    case 'O': case 'P': return sizeof(void*);
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
typedef struct { char c; short x; } __Pyx_st_short;
typedef struct { char c; int x; } __Pyx_st_int;
typedef struct { char c; long x; } __Pyx_st_long;
typedef struct { char c; float x; } __Pyx_st_float;
typedef struct { char c; double x; } __Pyx_st_double;
typedef struct { char c; long double x; } __Pyx_st_longdouble;
typedef struct { char c; void *x; } __Pyx_st_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { char c; PY_LONG_LONG x; } __Pyx_st_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToAlignment(char ch, int is_complex) {
  CYTHON_UNUSED_VAR(is_complex);
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_st_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_st_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_st_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_st_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_st_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_st_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_st_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_st_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
/* These are for computing the padding at the end of the struct to align
   on the first member of the struct. This will probably the same as above,
   but we don't have any guarantees.
 */
typedef struct { short x; char c; } __Pyx_pad_short;
typedef struct { int x; char c; } __Pyx_pad_int;
typedef struct { long x; char c; } __Pyx_pad_long;
typedef struct { float x; char c; } __Pyx_pad_float;
typedef struct { double x; char c; } __Pyx_pad_double;
typedef struct { long double x; char c; } __Pyx_pad_longdouble;
typedef struct { void *x; char c; } __Pyx_pad_void_p;
#ifdef HAVE_LONG_LONG
typedef struct { PY_LONG_LONG x; char c; } __Pyx_pad_longlong;
#endif
static size_t __Pyx_BufFmt_TypeCharToPadding(char ch, int is_complex) {
  CYTHON_UNUSED_VAR(is_complex);
  switch (ch) {
    case '?': case 'c': case 'b': case 'B': case 's': case 'p': return 1;
    case 'h': case 'H': return sizeof(__Pyx_pad_short) - sizeof(short);
    case 'i': case 'I': return sizeof(__Pyx_pad_int) - sizeof(int);
    case 'l': case 'L': return sizeof(__Pyx_pad_long) - sizeof(long);
#ifdef HAVE_LONG_LONG
    case 'q': case 'Q': return sizeof(__Pyx_pad_longlong) - sizeof(PY_LONG_LONG);
#endif
    case 'f': return sizeof(__Pyx_pad_float) - sizeof(float);
    case 'd': return sizeof(__Pyx_pad_double) - sizeof(double);
    case 'g': return sizeof(__Pyx_pad_longdouble) - sizeof(long double);
    case 'P': case 'O': return sizeof(__Pyx_pad_void_p) - sizeof(void*);
    default:
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
}
static char __Pyx_BufFmt_TypeCharToGroup(char ch, int is_complex) {
  switch (ch) {
    case 'c':
        return 'H';
    case 'b': case 'h': case 'i':
    case 'l': case 'q': case 's': case 'p':
        return 'I';
    case '?': case 'B': case 'H': case 'I': case 'L': case 'Q':
        return 'U';
    case 'f': case 'd': case 'g':
        return (is_complex ? 'C' : 'R');
    case 'O':
        return 'O';
    case 'P':
        return 'P';
    default: {
      __Pyx_BufFmt_RaiseUnexpectedChar(ch);
      return 0;
    }
  }
}
static void __Pyx_BufFmt_RaiseExpected(__Pyx_BufFmt_Context* ctx) {
  if (ctx->head == NULL || ctx->head->field == &ctx->root) {
    const char* expected;
    const char* quote;
    if (ctx->head == NULL) {
      expected = "end";
      quote = "";
    } else {
      expected = ctx->head->field->type->name;
      quote = "'";
    }
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected %s%s%s but got %s",
                 quote, expected, quote,
                 __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex));
  } else {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_StructField* parent = (ctx->head - 1)->field;
    PyErr_Format(PyExc_ValueError,
                 "Buffer dtype mismatch, expected '%s' but got %s in '%s.%s'",
                 field->type->name, __Pyx_BufFmt_DescribeTypeChar(ctx->enc_type, ctx->is_complex),
                 parent->type->name, field->name);
  }
}
static int __Pyx_BufFmt_ProcessTypeChunk(__Pyx_BufFmt_Context* ctx) {
  char group;
  size_t size, offset, arraysize = 1;
  if (ctx->enc_type == 0) return 0;
  if (ctx->head->field->type->arraysize[0]) {
    int i, ndim = 0;
    if (ctx->enc_type == 's' || ctx->enc_type == 'p') {
        ctx->is_valid_array = ctx->head->field->type->ndim == 1;
        ndim = 1;
        if (ctx->enc_count != ctx->head->field->type->arraysize[0]) {
            PyErr_Format(PyExc_ValueError,
                         "Expected a dimension of size %zu, got %zu",
                         ctx->head->field->type->arraysize[0], ctx->enc_count);
            return -1;
        }
    }
    if (!ctx->is_valid_array) {
      PyErr_Format(PyExc_ValueError, "Expected %d dimensions, got %d",
                   ctx->head->field->type->ndim, ndim);
      return -1;
    }
    for (i = 0; i < ctx->head->field->type->ndim; i++) {
      arraysize *= ctx->head->field->type->arraysize[i];
    }
    ctx->is_valid_array = 0;
    ctx->enc_count = 1;
  }
  group = __Pyx_BufFmt_TypeCharToGroup(ctx->enc_type, ctx->is_complex);
  do {
    __Pyx_StructField* field = ctx->head->field;
    __Pyx_TypeInfo* type = field->type;
    if (ctx->enc_packmode == '@' || ctx->enc_packmode == '^') {
      size = __Pyx_BufFmt_TypeCharToNativeSize(ctx->enc_type, ctx->is_complex);
    } else {
      size = __Pyx_BufFmt_TypeCharToStandardSize(ctx->enc_type, ctx->is_complex);
    }
    if (ctx->enc_packmode == '@') {
      size_t align_at = __Pyx_BufFmt_TypeCharToAlignment(ctx->enc_type, ctx->is_complex);
      size_t align_mod_offset;
      if (align_at == 0) return -1;
      align_mod_offset = ctx->fmt_offset % align_at;
      if (align_mod_offset > 0) ctx->fmt_offset += align_at - align_mod_offset;
      if (ctx->struct_alignment == 0)
          ctx->struct_alignment = __Pyx_BufFmt_TypeCharToPadding(ctx->enc_type,
                                                                 ctx->is_complex);
    }
    if (type->size != size || type->typegroup != group) {
      if (type->typegroup == 'C' && type->fields != NULL) {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        ++ctx->head;
        ctx->head->field = type->fields;
        ctx->head->parent_offset = parent_offset;
        continue;
      }
      if ((type->typegroup == 'H' || group == 'H') && type->size == size) {
      } else {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
      }
    }
    offset = ctx->head->parent_offset + field->offset;
    if (ctx->fmt_offset != offset) {
      PyErr_Format(PyExc_ValueError,
                   "Buffer dtype mismatch; next field is at offset %" CYTHON_FORMAT_SSIZE_T "d but %" CYTHON_FORMAT_SSIZE_T "d expected",
                   (Py_ssize_t)ctx->fmt_offset, (Py_ssize_t)offset);
      return -1;
    }
    ctx->fmt_offset += size;
    if (arraysize)
      ctx->fmt_offset += (arraysize - 1) * size;
    --ctx->enc_count;
    while (1) {
      if (field == &ctx->root) {
        ctx->head = NULL;
        if (ctx->enc_count != 0) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return -1;
        }
        break;
      }
      ctx->head->field = ++field;
      if (field->type == NULL) {
        --ctx->head;
        field = ctx->head->field;
        continue;
      } else if (field->type->typegroup == 'S') {
        size_t parent_offset = ctx->head->parent_offset + field->offset;
        if (field->type->fields->type == NULL) continue;
        field = field->type->fields;
        ++ctx->head;
        ctx->head->field = field;
        ctx->head->parent_offset = parent_offset;
        break;
      } else {
        break;
      }
    }
  } while (ctx->enc_count);
  ctx->enc_type = 0;
  ctx->is_complex = 0;
  return 0;
}
static PyObject *
__pyx_buffmt_parse_array(__Pyx_BufFmt_Context* ctx, const char** tsp)
{
    const char *ts = *tsp;
    int i = 0, number, ndim;
    ++ts;
    if (ctx->new_count != 1) {
        PyErr_SetString(PyExc_ValueError,
                        "Cannot handle repeated arrays in format string");
        return NULL;
    }
    if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
    ndim = ctx->head->field->type->ndim;
    while (*ts && *ts != ')') {
        switch (*ts) {
            case ' ': case '\f': case '\r': case '\n': case '\t': case '\v':  continue;
            default:  break;
        }
        number = __Pyx_BufFmt_ExpectNumber(&ts);
        if (number == -1) return NULL;
        if (i < ndim && (size_t) number != ctx->head->field->type->arraysize[i])
            return PyErr_Format(PyExc_ValueError,
                        "Expected a dimension of size %zu, got %d",
                        ctx->head->field->type->arraysize[i], number);
        if (*ts != ',' && *ts != ')')
            return PyErr_Format(PyExc_ValueError,
                                "Expected a comma in format string, got '%c'", *ts);
        if (*ts == ',') ts++;
        i++;
    }
    if (i != ndim)
        return PyErr_Format(PyExc_ValueError, "Expected %d dimension(s), got %d",
                            ctx->head->field->type->ndim, i);
    if (!*ts) {
        PyErr_SetString(PyExc_ValueError,
                        "Unexpected end of format string, expected ')'");
        return NULL;
    }
    ctx->is_valid_array = 1;
    ctx->new_count = 1;
    *tsp = ++ts;
    return Py_None;
}
static const char* __Pyx_BufFmt_CheckString(__Pyx_BufFmt_Context* ctx, const char* ts) {
  int got_Z = 0;
  while (1) {
    switch(*ts) {
      case 0:
        if (ctx->enc_type != 0 && ctx->head == NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        if (ctx->head != NULL) {
          __Pyx_BufFmt_RaiseExpected(ctx);
          return NULL;
        }
        return ts;
      case ' ':
      case '\r':
      case '\n':
        ++ts;
        break;
      case '<':
        if (!__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Little-endian buffer not supported on big-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '>':
      case '!':
        if (__Pyx_Is_Little_Endian()) {
          PyErr_SetString(PyExc_ValueError, "Big-endian buffer not supported on little-endian compiler");
          return NULL;
        }
        ctx->new_packmode = '=';
        ++ts;
        break;
      case '=':
      case '@':
      case '^':
        ctx->new_packmode = *ts++;
        break;
      case 'T':
        {
          const char* ts_after_sub;
          size_t i, struct_count = ctx->new_count;
          size_t struct_alignment = ctx->struct_alignment;
          ctx->new_count = 1;
          ++ts;
          if (*ts != '{') {
            PyErr_SetString(PyExc_ValueError, "Buffer acquisition: Expected '{' after 'T'");
            return NULL;
          }
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          ctx->enc_count = 0;
          ctx->struct_alignment = 0;
          ++ts;
          ts_after_sub = ts;
          for (i = 0; i != struct_count; ++i) {
            ts_after_sub = __Pyx_BufFmt_CheckString(ctx, ts);
            if (!ts_after_sub) return NULL;
          }
          ts = ts_after_sub;
          if (struct_alignment) ctx->struct_alignment = struct_alignment;
        }
        break;
      case '}':
        {
          size_t alignment = ctx->struct_alignment;
          ++ts;
          if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
          ctx->enc_type = 0;
          if (alignment && ctx->fmt_offset % alignment) {
            ctx->fmt_offset += alignment - (ctx->fmt_offset % alignment);
          }
        }
        return ts;
      case 'x':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->fmt_offset += ctx->new_count;
        ctx->new_count = 1;
        ctx->enc_count = 0;
        ctx->enc_type = 0;
        ctx->enc_packmode = ctx->new_packmode;
        ++ts;
        break;
      case 'Z':
        got_Z = 1;
        ++ts;
        if (*ts != 'f' && *ts != 'd' && *ts != 'g') {
          __Pyx_BufFmt_RaiseUnexpectedChar('Z');
          return NULL;
        }
        CYTHON_FALLTHROUGH;
      case '?': case 'c': case 'b': case 'B': case 'h': case 'H': case 'i': case 'I':
      case 'l': case 'L': case 'q': case 'Q':
      case 'f': case 'd': case 'g':
      case 'O': case 'p':
        if ((ctx->enc_type == *ts) && (got_Z == ctx->is_complex) &&
            (ctx->enc_packmode == ctx->new_packmode) && (!ctx->is_valid_array)) {
          ctx->enc_count += ctx->new_count;
          ctx->new_count = 1;
          got_Z = 0;
          ++ts;
          break;
        }
        CYTHON_FALLTHROUGH;
      case 's':
        if (__Pyx_BufFmt_ProcessTypeChunk(ctx) == -1) return NULL;
        ctx->enc_count = ctx->new_count;
        ctx->enc_packmode = ctx->new_packmode;
        ctx->enc_type = *ts;
        ctx->is_complex = got_Z;
        ++ts;
        ctx->new_count = 1;
        got_Z = 0;
        break;
      case ':':
        ++ts;
        while(*ts != ':') ++ts;
        ++ts;
        break;
      case '(':
        if (!__pyx_buffmt_parse_array(ctx, &ts)) return NULL;
        break;
      default:
        {
          int number = __Pyx_BufFmt_ExpectNumber(&ts);
          if (number == -1) return NULL;
          ctx->new_count = (size_t)number;
        }
    }
  }
}

/* BufferGetAndValidate */
  static CYTHON_INLINE void __Pyx_SafeReleaseBuffer(Py_buffer* info) {
  if (unlikely(info->buf == NULL)) return;
  if (info->suboffsets == __Pyx_minusones) info->suboffsets = NULL;
  __Pyx_ReleaseBuffer(info);
}
static void __Pyx_ZeroBuffer(Py_buffer* buf) {
  buf->buf = NULL;
  buf->obj = NULL;
  buf->strides = __Pyx_zeros;
  buf->shape = __Pyx_zeros;
  buf->suboffsets = __Pyx_minusones;
}
static int __Pyx__GetBufferAndValidate(
        Py_buffer* buf, PyObject* obj,  __Pyx_TypeInfo* dtype, int flags,
        int nd, int cast, __Pyx_BufFmt_StackElem* stack)
{
  buf->buf = NULL;
  if (unlikely(__Pyx_GetBuffer(obj, buf, flags) == -1)) {
    __Pyx_ZeroBuffer(buf);
    return -1;
  }
  if (unlikely(buf->ndim != nd)) {
    PyErr_Format(PyExc_ValueError,
                 "Buffer has wrong number of dimensions (expected %d, got %d)",
                 nd, buf->ndim);
    goto fail;
  }
  if (!cast) {
    __Pyx_BufFmt_Context ctx;
    __Pyx_BufFmt_Init(&ctx, stack, dtype);
    if (!__Pyx_BufFmt_CheckString(&ctx, buf->format)) goto fail;
  }
  if (unlikely((size_t)buf->itemsize != dtype->size)) {
    PyErr_Format(PyExc_ValueError,
      "Item size of buffer (%" CYTHON_FORMAT_SSIZE_T "d byte%s) does not match size of '%s' (%" CYTHON_FORMAT_SSIZE_T "d byte%s)",
      buf->itemsize, (buf->itemsize > 1) ? "s" : "",
      dtype->name, (Py_ssize_t)dtype->size, (dtype->size > 1) ? "s" : "");
    goto fail;
  }
  if (buf->suboffsets == NULL) buf->suboffsets = __Pyx_minusones;
  return 0;
fail:;
  __Pyx_SafeReleaseBuffer(buf);
  return -1;
}

/* BufferIndexError */
  static void __Pyx_RaiseBufferIndexError(int axis) {
  PyErr_Format(PyExc_IndexError,
     "Out of bounds on buffer access (axis %d)", axis);
}

/* PyObjectSetAttrStr */
  #if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* PyIntCompare */
  static CYTHON_INLINE int __Pyx_PyInt_BoolNeObjC(PyObject *op1, PyObject *op2, long intval, long inplace) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_UNUSED_VAR(inplace);
    if (op1 == op2) {
        return 0;
    }
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op1))) {
        const long b = intval;
        long a = PyInt_AS_LONG(op1);
        return (a != b);
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op1))) {
        int unequal;
        unsigned long uintval;
        Py_ssize_t size = __Pyx_PyLong_DigitCount(op1);
        const digit* digits = __Pyx_PyLong_Digits(op1);
        if (intval == 0) {
            return (__Pyx_PyLong_IsZero(op1) != 1);
        } else if (intval < 0) {
            if (__Pyx_PyLong_IsNonNeg(op1))
                return 1;
            intval = -intval;
        } else {
            if (__Pyx_PyLong_IsNeg(op1))
                return 1;
        }
        uintval = (unsigned long) intval;
#if PyLong_SHIFT * 4 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 4)) {
            unequal = (size != 5) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[4] != ((uintval >> (4 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 3 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 3)) {
            unequal = (size != 4) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[3] != ((uintval >> (3 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 2 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 2)) {
            unequal = (size != 3) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK)) | (digits[2] != ((uintval >> (2 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
#if PyLong_SHIFT * 1 < SIZEOF_LONG*8
        if (uintval >> (PyLong_SHIFT * 1)) {
            unequal = (size != 2) || (digits[0] != (uintval & (unsigned long) PyLong_MASK))
                 | (digits[1] != ((uintval >> (1 * PyLong_SHIFT)) & (unsigned long) PyLong_MASK));
        } else
#endif
            unequal = (size != 1) || (((unsigned long) digits[0]) != (uintval & (unsigned long) PyLong_MASK));
        return (unequal != 0);
    }
    #endif
    if (PyFloat_CheckExact(op1)) {
        const long b = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double a = __pyx_PyFloat_AsDouble(op1);
#else
        double a = PyFloat_AS_DOUBLE(op1);
#endif
        return ((double)a != (double)b);
    }
    return __Pyx_PyObject_IsTrueAndDecref(
        PyObject_RichCompare(op1, op2, Py_NE));
}

/* UnpackUnboundCMethod */
  static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {
    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
    if (unlikely(!selfless_args)) return NULL;
    PyObject *result = PyObject_Call(method, selfless_args, kwargs);
    Py_DECREF(selfless_args);
    return result;
}
static PyMethodDef __Pyx_UnboundCMethod_Def = {
     "CythonUnboundCMethod",
     __PYX_REINTERPRET_FUNCION(PyCFunction, __Pyx_SelflessCall),
     METH_VARARGS | METH_KEYWORDS,
     NULL
};
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #else
    if (likely(!PyCFunction_Check(method)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    } else
#endif
#if defined(CYTHON_COMPILING_IN_PYPY)
#elif PY_VERSION_HEX >= 0x03090000
    if (PyCFunction_CheckExact(method))
#else
    if (PyCFunction_Check(method))
#endif
    {
        PyObject *self;
        int self_found;
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        self = PyObject_GetAttrString(method, "__self__");
        if (!self) {
            PyErr_Clear();
        }
#else
        self = PyCFunction_GET_SELF(method);
#endif
        self_found = (self && self != Py_None);
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        Py_XDECREF(self);
#endif
        if (self_found) {
            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);
            if (unlikely(!unbound_method)) return -1;
            Py_DECREF(method);
            target->method = unbound_method;
        }
    }
    return 0;
}

/* CallUnboundCMethod1 */
  #if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if ((PY_VERSION_HEX >= 0x030600B1) && flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            #else
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            #endif
        } else if ((PY_VERSION_HEX >= 0x030700A0) && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* ObjectGetItem */
  #if CYTHON_USE_TYPE_SLOTS
static PyObject *__Pyx_PyObject_GetIndex(PyObject *obj, PyObject *index) {
    PyObject *runerr = NULL;
    Py_ssize_t key_value;
    key_value = __Pyx_PyIndex_AsSsize_t(index);
    if (likely(key_value != -1 || !(runerr = PyErr_Occurred()))) {
        return __Pyx_GetItemInt_Fast(obj, key_value, 0, 1, 1);
    }
    if (PyErr_GivenExceptionMatches(runerr, PyExc_OverflowError)) {
        __Pyx_TypeName index_type_name = __Pyx_PyType_GetName(Py_TYPE(index));
        PyErr_Clear();
        PyErr_Format(PyExc_IndexError,
            "cannot fit '" __Pyx_FMT_TYPENAME "' into an index-sized integer", index_type_name);
        __Pyx_DECREF_TypeName(index_type_name);
    }
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem_Slow(PyObject *obj, PyObject *key) {
    __Pyx_TypeName obj_type_name;
    if (likely(PyType_Check(obj))) {
        PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(obj, __pyx_n_s_class_getitem);
        if (meth) {
            PyObject *result = __Pyx_PyObject_CallOneArg(meth, key);
            Py_DECREF(meth);
            return result;
        }
    }
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "'" __Pyx_FMT_TYPENAME "' object is not subscriptable", obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return NULL;
}
static PyObject *__Pyx_PyObject_GetItem(PyObject *obj, PyObject *key) {
    PyTypeObject *tp = Py_TYPE(obj);
    PyMappingMethods *mm = tp->tp_as_mapping;
    PySequenceMethods *sm = tp->tp_as_sequence;
    if (likely(mm && mm->mp_subscript)) {
        return mm->mp_subscript(obj, key);
    }
    if (likely(sm && sm->sq_item)) {
        return __Pyx_PyObject_GetIndex(obj, key);
    }
    return __Pyx_PyObject_GetItem_Slow(obj, key);
}
#endif

/* SliceObject */
  static CYTHON_INLINE PyObject* __Pyx_PyObject_GetSlice(PyObject* obj,
        Py_ssize_t cstart, Py_ssize_t cstop,
        PyObject** _py_start, PyObject** _py_stop, PyObject** _py_slice,
        int has_cstart, int has_cstop, int wraparound) {
    __Pyx_TypeName obj_type_name;
#if CYTHON_USE_TYPE_SLOTS
    PyMappingMethods* mp;
#if PY_MAJOR_VERSION < 3
    PySequenceMethods* ms = Py_TYPE(obj)->tp_as_sequence;
    if (likely(ms && ms->sq_slice)) {
        if (!has_cstart) {
            if (_py_start && (*_py_start != Py_None)) {
                cstart = __Pyx_PyIndex_AsSsize_t(*_py_start);
                if ((cstart == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstart = 0;
        }
        if (!has_cstop) {
            if (_py_stop && (*_py_stop != Py_None)) {
                cstop = __Pyx_PyIndex_AsSsize_t(*_py_stop);
                if ((cstop == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
            } else
                cstop = PY_SSIZE_T_MAX;
        }
        if (wraparound && unlikely((cstart < 0) | (cstop < 0)) && likely(ms->sq_length)) {
            Py_ssize_t l = ms->sq_length(obj);
            if (likely(l >= 0)) {
                if (cstop < 0) {
                    cstop += l;
                    if (cstop < 0) cstop = 0;
                }
                if (cstart < 0) {
                    cstart += l;
                    if (cstart < 0) cstart = 0;
                }
            } else {
                if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                    goto bad;
                PyErr_Clear();
            }
        }
        return ms->sq_slice(obj, cstart, cstop);
    }
#else
    CYTHON_UNUSED_VAR(wraparound);
#endif
    mp = Py_TYPE(obj)->tp_as_mapping;
    if (likely(mp && mp->mp_subscript))
#else
    CYTHON_UNUSED_VAR(wraparound);
#endif
    {
        PyObject* result;
        PyObject *py_slice, *py_start, *py_stop;
        if (_py_slice) {
            py_slice = *_py_slice;
        } else {
            PyObject* owned_start = NULL;
            PyObject* owned_stop = NULL;
            if (_py_start) {
                py_start = *_py_start;
            } else {
                if (has_cstart) {
                    owned_start = py_start = PyInt_FromSsize_t(cstart);
                    if (unlikely(!py_start)) goto bad;
                } else
                    py_start = Py_None;
            }
            if (_py_stop) {
                py_stop = *_py_stop;
            } else {
                if (has_cstop) {
                    owned_stop = py_stop = PyInt_FromSsize_t(cstop);
                    if (unlikely(!py_stop)) {
                        Py_XDECREF(owned_start);
                        goto bad;
                    }
                } else
                    py_stop = Py_None;
            }
            py_slice = PySlice_New(py_start, py_stop, Py_None);
            Py_XDECREF(owned_start);
            Py_XDECREF(owned_stop);
            if (unlikely(!py_slice)) goto bad;
        }
#if CYTHON_USE_TYPE_SLOTS
        result = mp->mp_subscript(obj, py_slice);
#else
        result = PyObject_GetItem(obj, py_slice);
#endif
        if (!_py_slice) {
            Py_DECREF(py_slice);
        }
        return result;
    }
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "'" __Pyx_FMT_TYPENAME "' object is unsliceable", obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
bad:
    return NULL;
}

/* DictGetItem */
  #if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* RaiseClosureNameError */
  static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* RaiseUnboundLocalError */
  static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* pep479 */
  static void __Pyx_Generator_Replace_StopIteration(int in_async_gen) {
    PyObject *exc, *val, *tb, *cur_exc;
    __Pyx_PyThreadState_declare
    #ifdef __Pyx_StopAsyncIteration_USED
    int is_async_stopiteration = 0;
    #endif
    CYTHON_MAYBE_UNUSED_VAR(in_async_gen);
    cur_exc = PyErr_Occurred();
    if (likely(!__Pyx_PyErr_GivenExceptionMatches(cur_exc, PyExc_StopIteration))) {
        #ifdef __Pyx_StopAsyncIteration_USED
        if (in_async_gen && unlikely(__Pyx_PyErr_GivenExceptionMatches(cur_exc, __Pyx_PyExc_StopAsyncIteration))) {
            is_async_stopiteration = 1;
        } else
        #endif
            return;
    }
    __Pyx_PyThreadState_assign
    __Pyx_GetException(&exc, &val, &tb);
    Py_XDECREF(exc);
    Py_XDECREF(val);
    Py_XDECREF(tb);
    PyErr_SetString(PyExc_RuntimeError,
        #ifdef __Pyx_StopAsyncIteration_USED
        is_async_stopiteration ? "async generator raised StopAsyncIteration" :
        in_async_gen ? "async generator raised StopIteration" :
        #endif
        "generator raised StopIteration");
}

/* FixUpExtensionType */
  #if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}
#endif

/* FetchSharedCythonModule */
  static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    PyObject *abi_module = PyImport_AddModule((char*) __PYX_ABI_MODULE_NAME);
    if (unlikely(!abi_module)) return NULL;
    Py_INCREF(abi_module);
    return abi_module;
}

/* FetchCommonType */
  static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t basicsize,
                               Py_ssize_t expected_basicsize) {
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* abi_module;
    const char* object_name;
    PyTypeObject *cached_type = NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    object_name = strrchr(type->tp_name, '.');
    object_name = object_name ? object_name+1 : type->tp_name;
    cached_type = (PyTypeObject*) PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        if (__Pyx_VerifyCachedType(
              (PyObject *)cached_type,
              object_name,
              cached_type->tp_basicsize,
              type->tp_basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    if (PyType_Ready(type) < 0) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, (PyObject *)type) < 0)
        goto bad;
    Py_INCREF(type);
    cached_type = type;
done:
    Py_DECREF(abi_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#else
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module, *cached_type = NULL;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        Py_ssize_t basicsize;
#if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *py_basicsize;
        py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
        if (unlikely(!py_basicsize)) goto bad;
        basicsize = PyLong_AsSsize_t(py_basicsize);
        Py_DECREF(py_basicsize);
        py_basicsize = 0;
        if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
#else
        basicsize = likely(PyType_Check(cached_type)) ? ((PyTypeObject*) cached_type)->tp_basicsize : -1;
#endif
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              basicsize,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, cached_type) < 0) goto bad;
done:
    Py_DECREF(abi_module);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#endif

/* PyVectorcallFastCallDict */
  #if CYTHON_METH_FASTCALL
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &= Py_TYPE(key)->tp_flags;
        Py_INCREF(key);
        Py_INCREF(value);
        PyTuple_SET_ITEM(kwnames, i, key);
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    if (likely(kw == NULL) || PyDict_GET_SIZE(kw) == 0) {
        return vc(func, args, nargs, NULL);
    }
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
  static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure)
{
    CYTHON_UNUSED_VAR(closure);
    if (unlikely(op->func_doc == NULL)) {
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_tuple;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_kwdict;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->func_annotations;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    int is_coroutine;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
#if PY_VERSION_HEX >= 0x03050000
    if (is_coroutine) {
        PyObject *module, *fromlist, *marker = __pyx_n_s_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
        PyList_SET_ITEM(fromlist, 0, marker);
        module = PyImport_ImportModuleLevelObject(__pyx_n_s_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(op->func_is_coroutine)) {
            return __Pyx_NewRef(op->func_is_coroutine);
        }
ignore:
        PyErr_Clear();
    }
#endif
    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);
    return __Pyx_NewRef(op->func_is_coroutine);
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {(char *) "_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#endif
#if PY_VERSION_HEX < 0x030500A0
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    CYTHON_UNUSED_VAR(args);
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(((PyCFunctionObject*)m)->m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
    if (unlikely(op == NULL))
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    cf->m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
#if PY_MAJOR_VERSION > 2
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
#else
            PyErr_SetString(PyExc_TypeError,
                            "unbound method needs an argument");
#endif
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            PyErr_Format(PyExc_TypeError, "%.200s() needs an argument",
                         ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(PyTuple_GET_SIZE(kwnames))) {
        PyErr_Format(PyExc_TypeError,
                     "%.200s() takes no keyword arguments", ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))def->ml_meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if (defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
#else
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
#if !CYTHON_METH_FASTCALL
    0,
#elif CYTHON_BACKPORT_VECTORCALL
    (printfunc)offsetof(__pyx_CyFunctionObject, func_vectorcall),
#else
    offsetof(PyCFunctionObject, vectorcall),
#endif
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#ifdef _Py_TPFLAGS_HAVE_VECTORCALL
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_PyMethod_New,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_CyFunction_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
#endif
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
  static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* GetAttr3 */
  static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r;
#if CYTHON_USE_TYPE_SLOTS
    if (likely(PyString_Check(n))) {
        r = __Pyx_PyObject_GetAttrStrNoError(o, n);
        if (unlikely(!r) && likely(!PyErr_Occurred())) {
            r = __Pyx_NewRef(d);
        }
        return r;
    }
#endif
    r = PyObject_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
}

/* FastTypeChecks */
  #if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* SwapException */
  #if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSwap(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_value = exc_info->exc_value;
    exc_info->exc_value = *value;
    if (tmp_value == NULL || tmp_value == Py_None) {
        Py_XDECREF(tmp_value);
        tmp_value = NULL;
        tmp_type = NULL;
        tmp_tb = NULL;
    } else {
        tmp_type = (PyObject*) Py_TYPE(tmp_value);
        Py_INCREF(tmp_type);
        #if CYTHON_COMPILING_IN_CPYTHON
        tmp_tb = ((PyBaseExceptionObject*) tmp_value)->traceback;
        Py_XINCREF(tmp_tb);
        #else
        tmp_tb = PyException_GetTraceback(tmp_value);
        #endif
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = *type;
    exc_info->exc_value = *value;
    exc_info->exc_traceback = *tb;
  #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = *type;
    tstate->exc_value = *value;
    tstate->exc_traceback = *tb;
  #endif
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#else
static CYTHON_INLINE void __Pyx_ExceptionSwap(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyErr_GetExcInfo(&tmp_type, &tmp_value, &tmp_tb);
    PyErr_SetExcInfo(*type, *value, *tb);
    *type = tmp_type;
    *value = tmp_value;
    *tb = tmp_tb;
}
#endif

/* PyIntBinop */
  #if !CYTHON_COMPILING_IN_PYPY
static PyObject* __Pyx_PyInt_MultiplyCObj(PyObject *op1, PyObject *op2, long intval, int inplace, int zerodivision_check) {
    CYTHON_MAYBE_UNUSED_VAR(intval);
    CYTHON_MAYBE_UNUSED_VAR(inplace);
    CYTHON_UNUSED_VAR(zerodivision_check);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyInt_CheckExact(op2))) {
        const long a = intval;
        long b = PyInt_AS_LONG(op2);
        
#ifdef HAVE_LONG_LONG
            if (sizeof(PY_LONG_LONG) > sizeof(long)) {
                PY_LONG_LONG result = (PY_LONG_LONG)a * (PY_LONG_LONG)b;
                return (result >= LONG_MIN && result <= LONG_MAX) ?
                    PyInt_FromLong((long)result) : PyLong_FromLongLong(result);
            }
#endif
#if CYTHON_USE_TYPE_SLOTS
            return PyInt_Type.tp_as_number->nb_multiply(op1, op2);
#else
            return PyNumber_Multiply(op1, op2);
#endif
    }
    #endif
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(PyLong_CheckExact(op2))) {
        const long a = intval;
        long b, x;
#ifdef HAVE_LONG_LONG
        const PY_LONG_LONG lla = intval;
        PY_LONG_LONG llb, llx;
#endif
        if (unlikely(__Pyx_PyLong_IsZero(op2))) {
            return __Pyx_NewRef(op2);
        }
        if (likely(__Pyx_PyLong_IsCompact(op2))) {
            b = __Pyx_PyLong_CompactValue(op2);
        } else {
            const digit* digits = __Pyx_PyLong_Digits(op2);
            const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(op2);
            switch (size) {
                case -2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT+30) {
                        b = -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT+30) {
                        llb = -(PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 2:
                    if (8 * sizeof(long) - 1 > 2 * PyLong_SHIFT+30) {
                        b = (long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 2 * PyLong_SHIFT+30) {
                        llb = (PY_LONG_LONG) (((((unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT+30) {
                        b = -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT+30) {
                        llb = -(PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 3:
                    if (8 * sizeof(long) - 1 > 3 * PyLong_SHIFT+30) {
                        b = (long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 3 * PyLong_SHIFT+30) {
                        llb = (PY_LONG_LONG) (((((((unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case -4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT+30) {
                        b = -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT+30) {
                        llb = -(PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                case 4:
                    if (8 * sizeof(long) - 1 > 4 * PyLong_SHIFT+30) {
                        b = (long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0]));
                        break;
                    #ifdef HAVE_LONG_LONG
                    } else if (8 * sizeof(PY_LONG_LONG) - 1 > 4 * PyLong_SHIFT+30) {
                        llb = (PY_LONG_LONG) (((((((((unsigned PY_LONG_LONG)digits[3]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[2]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[1]) << PyLong_SHIFT) | (unsigned PY_LONG_LONG)digits[0]));
                        goto long_long;
                    #endif
                    }
                    CYTHON_FALLTHROUGH;
                default: return PyLong_Type.tp_as_number->nb_multiply(op1, op2);
            }
        }
                CYTHON_UNUSED_VAR(a);
                CYTHON_UNUSED_VAR(b);
                #ifdef HAVE_LONG_LONG
                llb = b;
                goto long_long;
                #else
                return PyLong_Type.tp_as_number->nb_multiply(op1, op2);
                #endif
            return PyLong_FromLong(x);
#ifdef HAVE_LONG_LONG
        long_long:
                llx = lla * llb;
            return PyLong_FromLongLong(llx);
#endif
        
        
    }
    #endif
    if (PyFloat_CheckExact(op2)) {
        const long a = intval;
#if CYTHON_COMPILING_IN_LIMITED_API
        double b = __pyx_PyFloat_AsDouble(op2);
#else
        double b = PyFloat_AS_DOUBLE(op2);
#endif
            double result;
            
            PyFPE_START_PROTECT("multiply", return NULL)
            result = ((double)a) * (double)b;
            PyFPE_END_PROTECT(result)
            return PyFloat_FromDouble(result);
    }
    return (inplace ? PyNumber_InPlaceMultiply : PyNumber_Multiply)(op1, op2);
}
#endif

/* ValidateBasesTuple */
  #if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases) {
    Py_ssize_t i, n = PyTuple_GET_SIZE(bases);
    for (i = 1; i < n; i++)
    {
        PyObject *b0 = PyTuple_GET_ITEM(bases, i);
        PyTypeObject *b;
#if PY_MAJOR_VERSION < 3
        if (PyClass_Check(b0))
        {
            PyErr_Format(PyExc_TypeError, "base class '%.200s' is an old-style class",
                         PyString_AS_STRING(((PyClassObject*)b0)->cl_name));
            return -1;
        }
#endif
        b = (PyTypeObject*) b0;
        if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "base class '" __Pyx_FMT_TYPENAME "' is not a heap type", b_name);
            __Pyx_DECREF_TypeName(b_name);
            return -1;
        }
        if (dictoffset == 0 && b->tp_dictoffset)
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "extension type '%.200s' has no __dict__ slot, "
                "but base type '" __Pyx_FMT_TYPENAME "' has: "
                "either add 'cdef dict __dict__' to the extension type "
                "or add '__slots__ = [...]' to the base type",
                type_name, b_name);
            __Pyx_DECREF_TypeName(b_name);
            return -1;
        }
    }
    return 0;
}
#endif

/* PyType_Ready */
  static int __Pyx_PyType_Ready(PyTypeObject *t) {
#if CYTHON_USE_TYPE_SPECS || !(CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API) || defined(PYSTON_MAJOR_VERSION)
    (void)__Pyx_PyObject_CallMethod0;
#if CYTHON_USE_TYPE_SPECS
    (void)__Pyx_validate_bases_tuple;
#endif
    return PyType_Ready(t);
#else
    int r;
    PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
    if (bases && unlikely(__Pyx_validate_bases_tuple(t->tp_name, t->tp_dictoffset, bases) == -1))
        return -1;
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
    {
        int gc_was_enabled;
    #if PY_VERSION_HEX >= 0x030A00b1
        gc_was_enabled = PyGC_Disable();
        (void)__Pyx_PyObject_CallMethod0;
    #else
        PyObject *ret, *py_status;
        PyObject *gc = NULL;
        #if PY_VERSION_HEX >= 0x030700a1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM+0 >= 0x07030400)
        gc = PyImport_GetModule(__pyx_kp_u_gc);
        #endif
        if (unlikely(!gc)) gc = PyImport_Import(__pyx_kp_u_gc);
        if (unlikely(!gc)) return -1;
        py_status = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_isenabled);
        if (unlikely(!py_status)) {
            Py_DECREF(gc);
            return -1;
        }
        gc_was_enabled = __Pyx_PyObject_IsTrue(py_status);
        Py_DECREF(py_status);
        if (gc_was_enabled > 0) {
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_disable);
            if (unlikely(!ret)) {
                Py_DECREF(gc);
                return -1;
            }
            Py_DECREF(ret);
        } else if (unlikely(gc_was_enabled == -1)) {
            Py_DECREF(gc);
            return -1;
        }
    #endif
        t->tp_flags |= Py_TPFLAGS_HEAPTYPE;
#if PY_VERSION_HEX >= 0x030A0000
        t->tp_flags |= Py_TPFLAGS_IMMUTABLETYPE;
#endif
#else
        (void)__Pyx_PyObject_CallMethod0;
#endif
    r = PyType_Ready(t);
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
        t->tp_flags &= ~Py_TPFLAGS_HEAPTYPE;
    #if PY_VERSION_HEX >= 0x030A00b1
        if (gc_was_enabled)
            PyGC_Enable();
    #else
        if (gc_was_enabled) {
            PyObject *tp, *v, *tb;
            PyErr_Fetch(&tp, &v, &tb);
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_enable);
            if (likely(ret || r == -1)) {
                Py_XDECREF(ret);
                PyErr_Restore(tp, v, tb);
            } else {
                Py_XDECREF(tp);
                Py_XDECREF(v);
                Py_XDECREF(tb);
                r = -1;
            }
        }
        Py_DECREF(gc);
    #endif
    }
#endif
    return r;
#endif
}

/* PyObject_GenericGetAttrNoDict */
  #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    __Pyx_TypeName type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, attr_name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(attr_name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
  #if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetupReduce */
  #if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStrNoError(meth, __pyx_n_s_name_2);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_getstate = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
    PyObject *getstate = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    getstate = _PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate);
#else
    getstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_getstate);
    if (!getstate && PyErr_Occurred()) {
        goto __PYX_BAD;
    }
#endif
    if (getstate) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_getstate = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_getstate);
#else
        object_getstate = __Pyx_PyObject_GetAttrStrNoError((PyObject*)&PyBaseObject_Type, __pyx_n_s_getstate);
        if (!object_getstate && PyErr_Occurred()) {
            goto __PYX_BAD;
        }
#endif
        if (object_getstate != getstate) {
            goto __PYX_GOOD;
        }
    }
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred()) {
        __Pyx_TypeName type_obj_name =
            __Pyx_PyType_GetName((PyTypeObject*)type_obj);
        PyErr_Format(PyExc_RuntimeError,
            "Unable to initialize pickling for " __Pyx_FMT_TYPENAME, type_obj_name);
        __Pyx_DECREF_TypeName(type_obj_name);
    }
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
    Py_XDECREF(object_getstate);
    Py_XDECREF(getstate);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}
#endif

/* TypeImport */
  #ifndef __PYX_HAVE_RT_ImportType_3_0_0
#define __PYX_HAVE_RT_ImportType_3_0_0
static PyTypeObject *__Pyx_ImportType_3_0_0(PyObject *module, const char *module_name, const char *class_name,
    size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_0 check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
    Py_ssize_t itemsize;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
    PyObject *py_itemsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
    itemsize = ((PyTypeObject *)result)->tp_itemsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
    py_itemsize = PyObject_GetAttrString(result, "__itemsize__");
    if (!py_itemsize)
        goto bad;
    itemsize = PyLong_AsSsize_t(py_itemsize);
    Py_DECREF(py_itemsize);
    py_itemsize = 0;
    if (itemsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (itemsize) {
        if (size % alignment) {
            alignment = size % alignment;
        }
        if (itemsize < (Py_ssize_t)alignment)
            itemsize = (Py_ssize_t)alignment;
    }
    if ((size_t)(basicsize + itemsize) < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize+itemsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error_3_0_0 &&
            ((size_t)basicsize > size || (size_t)(basicsize + itemsize) < size)) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd-%zd from PyObject",
            module_name, class_name, size, basicsize, basicsize+itemsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn_3_0_0 && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* GetVTable */
  static void* __Pyx_GetVtable(PyTypeObject *type) {
    void* ptr;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *ob = PyObject_GetAttr((PyObject *)type, __pyx_n_s_pyx_vtable);
#else
    PyObject *ob = PyObject_GetItem(type->tp_dict, __pyx_n_s_pyx_vtable);
#endif
    if (!ob)
        goto bad;
    ptr = PyCapsule_GetPointer(ob, 0);
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* Import */
  static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (unlikely(!py_import))
        goto bad;
    if (!from_list) {
        empty_list = PyList_New(0);
        if (unlikely(!empty_list))
            goto bad;
        from_list = empty_list;
    }
    #endif
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                #if CYTHON_COMPILING_IN_LIMITED_API
                module = PyImport_ImportModuleLevelObject(
                    name, empty_dict, empty_dict, from_list, 1);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, __pyx_d, empty_dict, from_list, 1);
                #endif
                if (unlikely(!module)) {
                    if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (unlikely(!py_level))
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, __pyx_d, empty_dict, from_list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            #if CYTHON_COMPILING_IN_LIMITED_API
            module = PyImport_ImportModuleLevelObject(
                name, empty_dict, empty_dict, from_list, level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_d, empty_dict, from_list, level);
            #endif
            #endif
        }
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    return module;
}

/* ImportFrom */
  static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        const char* module_name_str = 0;
        PyObject* module_name = 0;
        PyObject* module_dot = 0;
        PyObject* full_name = 0;
        PyErr_Clear();
        module_name_str = PyModule_GetName(module);
        if (unlikely(!module_name_str)) { goto modbad; }
        module_name = PyUnicode_FromString(module_name_str);
        if (unlikely(!module_name)) { goto modbad; }
        module_dot = PyUnicode_Concat(module_name, __pyx_kp_u__43);
        if (unlikely(!module_dot)) { goto modbad; }
        full_name = PyUnicode_Concat(module_dot, name);
        if (unlikely(!full_name)) { goto modbad; }
        #if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
        {
            PyObject *modules = PyImport_GetModuleDict();
            if (unlikely(!modules))
                goto modbad;
            value = PyObject_GetItem(modules, full_name);
        }
        #else
        value = PyImport_GetModule(full_name);
        #endif
      modbad:
        Py_XDECREF(full_name);
        Py_XDECREF(module_dot);
        Py_XDECREF(module_name);
    }
    if (unlikely(!value)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* ImportDottedModule */
  #if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Error(PyObject *name, PyObject *parts_tuple, Py_ssize_t count) {
    PyObject *partial_name = NULL, *slice = NULL, *sep = NULL;
    if (unlikely(PyErr_Occurred())) {
        PyErr_Clear();
    }
    if (likely(PyTuple_GET_SIZE(parts_tuple) == count)) {
        partial_name = name;
    } else {
        slice = PySequence_GetSlice(parts_tuple, 0, count);
        if (unlikely(!slice))
            goto bad;
        sep = PyUnicode_FromStringAndSize(".", 1);
        if (unlikely(!sep))
            goto bad;
        partial_name = PyUnicode_Join(sep, slice);
    }
    PyErr_Format(
#if PY_MAJOR_VERSION < 3
        PyExc_ImportError,
        "No module named '%s'", PyString_AS_STRING(partial_name));
#else
#if PY_VERSION_HEX >= 0x030600B1
        PyExc_ModuleNotFoundError,
#else
        PyExc_ImportError,
#endif
        "No module named '%U'", partial_name);
#endif
bad:
    Py_XDECREF(sep);
    Py_XDECREF(slice);
    Py_XDECREF(partial_name);
    return NULL;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Lookup(PyObject *name) {
    PyObject *imported_module;
#if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
    PyObject *modules = PyImport_GetModuleDict();
    if (unlikely(!modules))
        return NULL;
    imported_module = __Pyx_PyDict_GetItemStr(modules, name);
    Py_XINCREF(imported_module);
#else
    imported_module = PyImport_GetModule(name);
#endif
    return imported_module;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple) {
    Py_ssize_t i, nparts;
    nparts = PyTuple_GET_SIZE(parts_tuple);
    for (i=1; i < nparts && module; i++) {
        PyObject *part, *submodule;
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        part = PyTuple_GET_ITEM(parts_tuple, i);
#else
        part = PySequence_ITEM(parts_tuple, i);
#endif
        submodule = __Pyx_PyObject_GetAttrStrNoError(module, part);
#if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
        Py_DECREF(part);
#endif
        Py_DECREF(module);
        module = submodule;
    }
    if (unlikely(!module)) {
        return __Pyx__ImportDottedModule_Error(name, parts_tuple, i);
    }
    return module;
}
#endif
static PyObject *__Pyx__ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if PY_MAJOR_VERSION < 3
    PyObject *module, *from_list, *star = __pyx_n_s__44;
    CYTHON_UNUSED_VAR(parts_tuple);
    from_list = PyList_New(1);
    if (unlikely(!from_list))
        return NULL;
    Py_INCREF(star);
    PyList_SET_ITEM(from_list, 0, star);
    module = __Pyx_Import(name, from_list, 0);
    Py_DECREF(from_list);
    return module;
#else
    PyObject *imported_module;
    PyObject *module = __Pyx_Import(name, NULL, 0);
    if (!parts_tuple || unlikely(!module))
        return module;
    imported_module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(imported_module)) {
        Py_DECREF(module);
        return imported_module;
    }
    PyErr_Clear();
    return __Pyx_ImportDottedModule_WalkParts(module, name, parts_tuple);
#endif
}
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030400B1
    PyObject *module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(module)) {
        PyObject *spec = __Pyx_PyObject_GetAttrStrNoError(module, __pyx_n_s_spec);
        if (likely(spec)) {
            PyObject *unsafe = __Pyx_PyObject_GetAttrStrNoError(spec, __pyx_n_s_initializing);
            if (likely(!unsafe || !__Pyx_PyObject_IsTrue(unsafe))) {
                Py_DECREF(spec);
                spec = NULL;
            }
            Py_XDECREF(unsafe);
        }
        if (likely(!spec)) {
            PyErr_Clear();
            return module;
        }
        Py_DECREF(spec);
        Py_DECREF(module);
    } else if (PyErr_Occurred()) {
        PyErr_Clear();
    }
#endif
    return __Pyx__ImportDottedModule(name, parts_tuple);
}

/* CalculateMetaclass */
  static PyObject *__Pyx_CalculateMetaclass(PyTypeObject *metaclass, PyObject *bases) {
    Py_ssize_t i, nbases = PyTuple_GET_SIZE(bases);
    for (i=0; i < nbases; i++) {
        PyTypeObject *tmptype;
        PyObject *tmp = PyTuple_GET_ITEM(bases, i);
        tmptype = Py_TYPE(tmp);
#if PY_MAJOR_VERSION < 3
        if (tmptype == &PyClass_Type)
            continue;
#endif
        if (!metaclass) {
            metaclass = tmptype;
            continue;
        }
        if (PyType_IsSubtype(metaclass, tmptype))
            continue;
        if (PyType_IsSubtype(tmptype, metaclass)) {
            metaclass = tmptype;
            continue;
        }
        PyErr_SetString(PyExc_TypeError,
                        "metaclass conflict: "
                        "the metaclass of a derived class "
                        "must be a (non-strict) subclass "
                        "of the metaclasses of all its bases");
        return NULL;
    }
    if (!metaclass) {
#if PY_MAJOR_VERSION < 3
        metaclass = &PyClass_Type;
#else
        metaclass = &PyType_Type;
#endif
    }
    Py_INCREF((PyObject*) metaclass);
    return (PyObject*) metaclass;
}

/* PyObjectCall2Args */
  static CYTHON_INLINE PyObject* __Pyx_PyObject_Call2Args(PyObject* function, PyObject* arg1, PyObject* arg2) {
    PyObject *args[3] = {NULL, arg1, arg2};
    return __Pyx_PyObject_FastCall(function, args+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectLookupSpecial */
  #if CYTHON_USE_PYTYPE_LOOKUP && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx__PyObject_LookupSpecial(PyObject* obj, PyObject* attr_name, int with_error) {
    PyObject *res;
    PyTypeObject *tp = Py_TYPE(obj);
#if PY_MAJOR_VERSION < 3
    if (unlikely(PyInstance_Check(obj)))
        return with_error ? __Pyx_PyObject_GetAttrStr(obj, attr_name) : __Pyx_PyObject_GetAttrStrNoError(obj, attr_name);
#endif
    res = _PyType_Lookup(tp, attr_name);
    if (likely(res)) {
        descrgetfunc f = Py_TYPE(res)->tp_descr_get;
        if (!f) {
            Py_INCREF(res);
        } else {
            res = f(res, obj, (PyObject *)tp);
        }
    } else if (with_error) {
        PyErr_SetObject(PyExc_AttributeError, attr_name);
    }
    return res;
}
#endif

/* Py3ClassCreate */
  static PyObject *__Pyx_Py3MetaclassPrepare(PyObject *metaclass, PyObject *bases, PyObject *name,
                                           PyObject *qualname, PyObject *mkw, PyObject *modname, PyObject *doc) {
    PyObject *ns;
    if (metaclass) {
        PyObject *prep = __Pyx_PyObject_GetAttrStrNoError(metaclass, __pyx_n_s_prepare);
        if (prep) {
            PyObject *pargs[3] = {NULL, name, bases};
            ns = __Pyx_PyObject_FastCallDict(prep, pargs+1, 2 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET, mkw);
            Py_DECREF(prep);
        } else {
            if (unlikely(PyErr_Occurred()))
                return NULL;
            ns = PyDict_New();
        }
    } else {
        ns = PyDict_New();
    }
    if (unlikely(!ns))
        return NULL;
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_module, modname) < 0)) goto bad;
#if PY_VERSION_HEX >= 0x03030000
    if (unlikely(PyObject_SetItem(ns, __pyx_n_s_qualname, qualname) < 0)) goto bad;
#else
    CYTHON_MAYBE_UNUSED_VAR(qualname);
#endif
    if (unlikely(doc && PyObject_SetItem(ns, __pyx_n_s_doc, doc) < 0)) goto bad;
    return ns;
bad:
    Py_DECREF(ns);
    return NULL;
}
#if PY_VERSION_HEX < 0x030600A4 && CYTHON_PEP487_INIT_SUBCLASS
static int __Pyx_SetNamesPEP487(PyObject *type_obj) {
    PyTypeObject *type = (PyTypeObject*) type_obj;
    PyObject *names_to_set, *key, *value, *set_name, *tmp;
    Py_ssize_t i = 0;
#if CYTHON_USE_TYPE_SLOTS
    names_to_set = PyDict_Copy(type->tp_dict);
#else
    {
        PyObject *d = PyObject_GetAttr(type_obj, __pyx_n_s_dict);
        names_to_set = NULL;
        if (likely(d)) {
            PyObject *names_to_set = PyDict_New();
            int ret = likely(names_to_set) ? PyDict_Update(names_to_set, d) : -1;
            Py_DECREF(d);
            if (unlikely(ret < 0))
                Py_CLEAR(names_to_set);
        }
    }
#endif
    if (unlikely(names_to_set == NULL))
        goto bad;
    while (PyDict_Next(names_to_set, &i, &key, &value)) {
        set_name = __Pyx_PyObject_LookupSpecialNoError(value, __pyx_n_s_set_name);
        if (unlikely(set_name != NULL)) {
            tmp = __Pyx_PyObject_Call2Args(set_name, type_obj, key);
            Py_DECREF(set_name);
            if (unlikely(tmp == NULL)) {
                __Pyx_TypeName value_type_name =
                    __Pyx_PyType_GetName(Py_TYPE(value));
                __Pyx_TypeName type_name = __Pyx_PyType_GetName(type);
                PyErr_Format(PyExc_RuntimeError,
#if PY_MAJOR_VERSION >= 3
                    "Error calling __set_name__ on '" __Pyx_FMT_TYPENAME "' instance %R " "in '" __Pyx_FMT_TYPENAME "'",
                    value_type_name, key, type_name);
#else
                    "Error calling __set_name__ on '" __Pyx_FMT_TYPENAME "' instance %.100s in '" __Pyx_FMT_TYPENAME "'",
                    value_type_name,
                    PyString_Check(key) ? PyString_AS_STRING(key) : "?",
                    type_name);
#endif
                goto bad;
            } else {
                Py_DECREF(tmp);
            }
        }
        else if (unlikely(PyErr_Occurred())) {
            goto bad;
        }
    }
    Py_DECREF(names_to_set);
    return 0;
bad:
    Py_XDECREF(names_to_set);
    return -1;
}
static PyObject *__Pyx_InitSubclassPEP487(PyObject *type_obj, PyObject *mkw) {
#if CYTHON_USE_TYPE_SLOTS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyTypeObject *type = (PyTypeObject*) type_obj;
    PyObject *mro = type->tp_mro;
    Py_ssize_t i, nbases;
    if (unlikely(!mro)) goto done;
    (void) &__Pyx_GetBuiltinName;
    Py_INCREF(mro);
    nbases = PyTuple_GET_SIZE(mro);
    assert(PyTuple_GET_ITEM(mro, 0) == type_obj);
    for (i = 1; i < nbases-1; i++) {
        PyObject *base, *dict, *meth;
        base = PyTuple_GET_ITEM(mro, i);
        dict = ((PyTypeObject *)base)->tp_dict;
        meth = __Pyx_PyDict_GetItemStrWithError(dict, __pyx_n_s_init_subclass);
        if (unlikely(meth)) {
            descrgetfunc f = Py_TYPE(meth)->tp_descr_get;
            PyObject *res;
            Py_INCREF(meth);
            if (likely(f)) {
                res = f(meth, NULL, type_obj);
                Py_DECREF(meth);
                if (unlikely(!res)) goto bad;
                meth = res;
            }
            res = __Pyx_PyObject_FastCallDict(meth, NULL, 0, mkw);
            Py_DECREF(meth);
            if (unlikely(!res)) goto bad;
            Py_DECREF(res);
            goto done;
        } else if (unlikely(PyErr_Occurred())) {
            goto bad;
        }
    }
done:
    Py_XDECREF(mro);
    return type_obj;
bad:
    Py_XDECREF(mro);
    Py_DECREF(type_obj);
    return NULL;
#else
    PyObject *super_type, *super, *func, *res;
#if CYTHON_COMPILING_IN_PYPY && !defined(PySuper_Type)
    super_type = __Pyx_GetBuiltinName(__pyx_n_s_super);
#else
    super_type = (PyObject*) &PySuper_Type;
    (void) &__Pyx_GetBuiltinName;
#endif
    super = likely(super_type) ? __Pyx_PyObject_Call2Args(super_type, type_obj, type_obj) : NULL;
#if CYTHON_COMPILING_IN_PYPY && !defined(PySuper_Type)
    Py_XDECREF(super_type);
#endif
    if (unlikely(!super)) {
        Py_CLEAR(type_obj);
        goto done;
    }
    func = __Pyx_PyObject_GetAttrStrNoError(super, __pyx_n_s_init_subclass);
    Py_DECREF(super);
    if (likely(!func)) {
        if (unlikely(PyErr_Occurred()))
            Py_CLEAR(type_obj);
        goto done;
    }
    res = __Pyx_PyObject_FastCallDict(func, NULL, 0, mkw);
    Py_DECREF(func);
    if (unlikely(!res))
        Py_CLEAR(type_obj);
    Py_XDECREF(res);
done:
    return type_obj;
#endif
}
#endif
static PyObject *__Pyx_Py3ClassCreate(PyObject *metaclass, PyObject *name, PyObject *bases,
                                      PyObject *dict, PyObject *mkw,
                                      int calculate_metaclass, int allow_py2_metaclass) {
    PyObject *result;
    PyObject *owned_metaclass = NULL;
    PyObject *margs[4] = {NULL, name, bases, dict};
    if (allow_py2_metaclass) {
        owned_metaclass = PyObject_GetItem(dict, __pyx_n_s_metaclass);
        if (owned_metaclass) {
            metaclass = owned_metaclass;
        } else if (likely(PyErr_ExceptionMatches(PyExc_KeyError))) {
            PyErr_Clear();
        } else {
            return NULL;
        }
    }
    if (calculate_metaclass && (!metaclass || PyType_Check(metaclass))) {
        metaclass = __Pyx_CalculateMetaclass((PyTypeObject*) metaclass, bases);
        Py_XDECREF(owned_metaclass);
        if (unlikely(!metaclass))
            return NULL;
        owned_metaclass = metaclass;
    }
    result = __Pyx_PyObject_FastCallDict(metaclass, margs+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET,
#if PY_VERSION_HEX < 0x030600A4
        (metaclass == (PyObject*)&PyType_Type) ? NULL : mkw
#else
        mkw
#endif
    );
    Py_XDECREF(owned_metaclass);
#if PY_VERSION_HEX < 0x030600A4 && CYTHON_PEP487_INIT_SUBCLASS
    if (likely(result) && likely(PyType_Check(result))) {
        if (unlikely(__Pyx_SetNamesPEP487(result) < 0)) {
            Py_CLEAR(result);
        } else {
            result = __Pyx_InitSubclassPEP487(result, mkw);
        }
    }
#else
    (void) &__Pyx_GetBuiltinName;
#endif
    return result;
}

/* CLineInTraceback */
  #ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
  #if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
  #include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    _PyTraceback_Add(funcname, filename, py_line);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);  // XDECREF since it's only set on Py3 if cline
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

#if PY_MAJOR_VERSION < 3
static int __Pyx_GetBuffer(PyObject *obj, Py_buffer *view, int flags) {
    __Pyx_TypeName obj_type_name;
    if (PyObject_CheckBuffer(obj)) return PyObject_GetBuffer(obj, view, flags);
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
                 "'" __Pyx_FMT_TYPENAME "' does not have the buffer interface",
                 obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return -1;
}
static void __Pyx_ReleaseBuffer(Py_buffer *view) {
    PyObject *obj = view->obj;
    if (!obj) return;
    if (PyObject_CheckBuffer(obj)) {
        PyBuffer_Release(view);
        return;
    }
    if ((0)) {}
    view->obj = NULL;
    Py_DECREF(obj);
}
#endif


  /* CIntFromPyVerify */
  #define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* Declarations */
  #if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
  #if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = (float)(1.0) / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = (float)(1.0) / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if ((b.imag == 0) && (a.real >= 0)) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
  #if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
  #if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if ((b.imag == 0) && (a.real >= 0)) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntFromPy */
  static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                                return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                                return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                                return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(int) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(int) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (int) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (int) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (int) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (int) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (int) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((int) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((int) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* CIntFromPy */
  static CYTHON_INLINE size_t __Pyx_PyInt_As_size_t(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const size_t neg_one = (size_t) -1, const_zero = (size_t) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(size_t) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(size_t, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (size_t) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(size_t, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(size_t) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) >= 2 * PyLong_SHIFT)) {
                                return (size_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(size_t) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) >= 3 * PyLong_SHIFT)) {
                                return (size_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(size_t) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) >= 4 * PyLong_SHIFT)) {
                                return (size_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (size_t) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(size_t) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(size_t) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(size_t, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(size_t) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT)) {
                                return (size_t) (((size_t)-1)*(((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(size_t) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT)) {
                                return (size_t) ((((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(size_t) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT)) {
                                return (size_t) (((size_t)-1)*(((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(size_t) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT)) {
                                return (size_t) ((((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(size_t) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT)) {
                                return (size_t) (((size_t)-1)*(((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(size_t) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(size_t, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(size_t) - 1 > 4 * PyLong_SHIFT)) {
                                return (size_t) ((((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(size_t) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(size_t) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(size_t, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            size_t val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (size_t) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (size_t) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (size_t) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (size_t) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (size_t) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(size_t) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((size_t) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(size_t) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((size_t) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((size_t) 1) << (sizeof(size_t) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (size_t) -1;
        }
    } else {
        size_t val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (size_t) -1;
        val = __Pyx_PyInt_As_size_t(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to size_t");
    return (size_t) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to size_t");
    return (size_t) -1;
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntToPy */
  static CYTHON_INLINE PyObject* __Pyx_PyInt_From_int(int value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(int) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(int) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(int) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(int) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(int),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
  static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(long) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                                return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                                return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                                return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(long) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(long) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (long) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (long) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (long) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (long) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (long) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((long) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((long) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* FormatTypeName */
  #if CYTHON_COMPILING_IN_LIMITED_API
static __Pyx_TypeName
__Pyx_PyType_GetName(PyTypeObject* tp)
{
    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_n_s_name_2);
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {
        PyErr_Clear();
        Py_XSETREF(name, __Pyx_NewRef(__pyx_n_s__161));
    }
    return name;
}
#endif

/* PyObjectCallMethod1 */
  static PyObject* __Pyx__PyObject_CallMethod1(PyObject* method, PyObject* arg) {
    PyObject *result = __Pyx_PyObject_CallOneArg(method, arg);
    Py_DECREF(method);
    return result;
}
static PyObject* __Pyx_PyObject_CallMethod1(PyObject* obj, PyObject* method_name, PyObject* arg) {
    PyObject *method = NULL, *result;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_Call2Args(method, obj, arg);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) return NULL;
    return __Pyx__PyObject_CallMethod1(method, arg);
}

/* CoroutineBase */
  #include <frameobject.h>
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#define __Pyx_Coroutine_Undelegate(gen) Py_CLEAR((gen)->yieldfrom)
static int __Pyx_PyGen__FetchStopIterationValue(PyThreadState *__pyx_tstate, PyObject **pvalue) {
    PyObject *et, *ev, *tb;
    PyObject *value = NULL;
    CYTHON_UNUSED_VAR(__pyx_tstate);
    __Pyx_ErrFetch(&et, &ev, &tb);
    if (!et) {
        Py_XDECREF(tb);
        Py_XDECREF(ev);
        Py_INCREF(Py_None);
        *pvalue = Py_None;
        return 0;
    }
    if (likely(et == PyExc_StopIteration)) {
        if (!ev) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#if PY_VERSION_HEX >= 0x030300A0
        else if (likely(__Pyx_IS_TYPE(ev, (PyTypeObject*)PyExc_StopIteration))) {
            value = ((PyStopIterationObject *)ev)->value;
            Py_INCREF(value);
            Py_DECREF(ev);
        }
#endif
        else if (unlikely(PyTuple_Check(ev))) {
            if (PyTuple_GET_SIZE(ev) >= 1) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                value = PyTuple_GET_ITEM(ev, 0);
                Py_INCREF(value);
#else
                value = PySequence_ITEM(ev, 0);
#endif
            } else {
                Py_INCREF(Py_None);
                value = Py_None;
            }
            Py_DECREF(ev);
        }
        else if (!__Pyx_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration)) {
            value = ev;
        }
        if (likely(value)) {
            Py_XDECREF(tb);
            Py_DECREF(et);
            *pvalue = value;
            return 0;
        }
    } else if (!__Pyx_PyErr_GivenExceptionMatches(et, PyExc_StopIteration)) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    PyErr_NormalizeException(&et, &ev, &tb);
    if (unlikely(!PyObject_TypeCheck(ev, (PyTypeObject*)PyExc_StopIteration))) {
        __Pyx_ErrRestore(et, ev, tb);
        return -1;
    }
    Py_XDECREF(tb);
    Py_DECREF(et);
#if PY_VERSION_HEX >= 0x030300A0
    value = ((PyStopIterationObject *)ev)->value;
    Py_INCREF(value);
    Py_DECREF(ev);
#else
    {
        PyObject* args = __Pyx_PyObject_GetAttrStr(ev, __pyx_n_s_args);
        Py_DECREF(ev);
        if (likely(args)) {
            value = PySequence_GetItem(args, 0);
            Py_DECREF(args);
        }
        if (unlikely(!value)) {
            __Pyx_ErrRestore(NULL, NULL, NULL);
            Py_INCREF(Py_None);
            value = Py_None;
        }
    }
#endif
    *pvalue = value;
    return 0;
}
static CYTHON_INLINE
void __Pyx_Coroutine_ExceptionClear(__Pyx_ExcInfoStruct *exc_state) {
#if PY_VERSION_HEX >= 0x030B00a4
    Py_CLEAR(exc_state->exc_value);
#else
    PyObject *t, *v, *tb;
    t = exc_state->exc_type;
    v = exc_state->exc_value;
    tb = exc_state->exc_traceback;
    exc_state->exc_type = NULL;
    exc_state->exc_value = NULL;
    exc_state->exc_traceback = NULL;
    Py_XDECREF(t);
    Py_XDECREF(v);
    Py_XDECREF(tb);
#endif
}
#define __Pyx_Coroutine_AlreadyRunningError(gen)  (__Pyx__Coroutine_AlreadyRunningError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyRunningError(__pyx_CoroutineObject *gen) {
    const char *msg;
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check((PyObject*)gen)) {
        msg = "coroutine already executing";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact((PyObject*)gen)) {
        msg = "async generator already executing";
    #endif
    } else {
        msg = "generator already executing";
    }
    PyErr_SetString(PyExc_ValueError, msg);
}
#define __Pyx_Coroutine_NotStartedError(gen)  (__Pyx__Coroutine_NotStartedError(gen), (PyObject*)NULL)
static void __Pyx__Coroutine_NotStartedError(PyObject *gen) {
    const char *msg;
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if ((0)) {
    #ifdef __Pyx_Coroutine_USED
    } else if (__Pyx_Coroutine_Check(gen)) {
        msg = "can't send non-None value to a just-started coroutine";
    #endif
    #ifdef __Pyx_AsyncGen_USED
    } else if (__Pyx_AsyncGen_CheckExact(gen)) {
        msg = "can't send non-None value to a just-started async generator";
    #endif
    } else {
        msg = "can't send non-None value to a just-started generator";
    }
    PyErr_SetString(PyExc_TypeError, msg);
}
#define __Pyx_Coroutine_AlreadyTerminatedError(gen, value, closing)  (__Pyx__Coroutine_AlreadyTerminatedError(gen, value, closing), (PyObject*)NULL)
static void __Pyx__Coroutine_AlreadyTerminatedError(PyObject *gen, PyObject *value, int closing) {
    CYTHON_MAYBE_UNUSED_VAR(gen);
    CYTHON_MAYBE_UNUSED_VAR(closing);
    #ifdef __Pyx_Coroutine_USED
    if (!closing && __Pyx_Coroutine_Check(gen)) {
        PyErr_SetString(PyExc_RuntimeError, "cannot reuse already awaited coroutine");
    } else
    #endif
    if (value) {
        #ifdef __Pyx_AsyncGen_USED
        if (__Pyx_AsyncGen_CheckExact(gen))
            PyErr_SetNone(__Pyx_PyExc_StopAsyncIteration);
        else
        #endif
        PyErr_SetNone(PyExc_StopIteration);
    }
}
static
PyObject *__Pyx_Coroutine_SendEx(__pyx_CoroutineObject *self, PyObject *value, int closing) {
    __Pyx_PyThreadState_declare
    PyThreadState *tstate;
    __Pyx_ExcInfoStruct *exc_state;
    PyObject *retval;
    assert(!self->is_running);
    if (unlikely(self->resume_label == 0)) {
        if (unlikely(value && value != Py_None)) {
            return __Pyx_Coroutine_NotStartedError((PyObject*)self);
        }
    }
    if (unlikely(self->resume_label == -1)) {
        return __Pyx_Coroutine_AlreadyTerminatedError((PyObject*)self, value, closing);
    }
#if CYTHON_FAST_THREAD_STATE
    __Pyx_PyThreadState_assign
    tstate = __pyx_tstate;
#else
    tstate = __Pyx_PyThreadState_Current;
#endif
    exc_state = &self->gi_exc_state;
    if (exc_state->exc_value) {
        #if CYTHON_COMPILING_IN_PYPY
        #else
        PyObject *exc_tb;
        #if PY_VERSION_HEX >= 0x030B00a4 && !CYTHON_COMPILING_IN_CPYTHON
        exc_tb = PyException_GetTraceback(exc_state->exc_value);
        #elif PY_VERSION_HEX >= 0x030B00a4
        exc_tb = ((PyBaseExceptionObject*) exc_state->exc_value)->traceback;
        #else
        exc_tb = exc_state->exc_traceback;
        #endif
        if (exc_tb) {
            PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
            PyFrameObject *f = tb->tb_frame;
            assert(f->f_back == NULL);
            #if PY_VERSION_HEX >= 0x030B00A1
            f->f_back = PyThreadState_GetFrame(tstate);
            #else
            Py_XINCREF(tstate->frame);
            f->f_back = tstate->frame;
            #endif
            #if PY_VERSION_HEX >= 0x030B00a4 && !CYTHON_COMPILING_IN_CPYTHON
            Py_DECREF(exc_tb);
            #endif
        }
        #endif
    }
#if CYTHON_USE_EXC_INFO_STACK
    exc_state->previous_item = tstate->exc_info;
    tstate->exc_info = exc_state;
#else
    if (exc_state->exc_type) {
        __Pyx_ExceptionSwap(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    } else {
        __Pyx_Coroutine_ExceptionClear(exc_state);
        __Pyx_ExceptionSave(&exc_state->exc_type, &exc_state->exc_value, &exc_state->exc_traceback);
    }
#endif
    self->is_running = 1;
    retval = self->body(self, tstate, value);
    self->is_running = 0;
#if CYTHON_USE_EXC_INFO_STACK
    exc_state = &self->gi_exc_state;
    tstate->exc_info = exc_state->previous_item;
    exc_state->previous_item = NULL;
    __Pyx_Coroutine_ResetFrameBackpointer(exc_state);
#endif
    return retval;
}
static CYTHON_INLINE void __Pyx_Coroutine_ResetFrameBackpointer(__Pyx_ExcInfoStruct *exc_state) {
#if CYTHON_COMPILING_IN_PYPY
    CYTHON_UNUSED_VAR(exc_state);
#else
    PyObject *exc_tb;
    #if PY_VERSION_HEX >= 0x030B00a4
    if (!exc_state->exc_value) return;
    exc_tb = PyException_GetTraceback(exc_state->exc_value);
    #else
    exc_tb = exc_state->exc_traceback;
    #endif
    if (likely(exc_tb)) {
        PyTracebackObject *tb = (PyTracebackObject *) exc_tb;
        PyFrameObject *f = tb->tb_frame;
        Py_CLEAR(f->f_back);
        #if PY_VERSION_HEX >= 0x030B00a4
        Py_DECREF(exc_tb);
        #endif
    }
#endif
}
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_MethodReturn(PyObject* gen, PyObject *retval) {
    CYTHON_MAYBE_UNUSED_VAR(gen);
    if (unlikely(!retval)) {
        __Pyx_PyThreadState_declare
        __Pyx_PyThreadState_assign
        if (!__Pyx_PyErr_Occurred()) {
            PyObject *exc = PyExc_StopIteration;
            #ifdef __Pyx_AsyncGen_USED
            if (__Pyx_AsyncGen_CheckExact(gen))
                exc = __Pyx_PyExc_StopAsyncIteration;
            #endif
            __Pyx_PyErr_SetNone(exc);
        }
    }
    return retval;
}
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
static CYTHON_INLINE
PyObject *__Pyx_PyGen_Send(PyGenObject *gen, PyObject *arg) {
#if PY_VERSION_HEX <= 0x030A00A1
    return _PyGen_Send(gen, arg);
#else
    PyObject *result;
    if (PyIter_Send((PyObject*)gen, arg ? arg : Py_None, &result) == PYGEN_RETURN) {
        if (PyAsyncGen_CheckExact(gen)) {
            assert(result == Py_None);
            PyErr_SetNone(PyExc_StopAsyncIteration);
        }
        else if (result == Py_None) {
            PyErr_SetNone(PyExc_StopIteration);
        }
        else {
            _PyGen_SetStopIterationValue(result);
        }
        Py_CLEAR(result);
    }
    return result;
#endif
}
#endif
static CYTHON_INLINE
PyObject *__Pyx_Coroutine_FinishDelegation(__pyx_CoroutineObject *gen) {
    PyObject *ret;
    PyObject *val = NULL;
    __Pyx_Coroutine_Undelegate(gen);
    __Pyx_PyGen__FetchStopIterationValue(__Pyx_PyThreadState_Current, &val);
    ret = __Pyx_Coroutine_SendEx(gen, val, 0);
    Py_XDECREF(val);
    return ret;
}
static PyObject *__Pyx_Coroutine_Send(PyObject *self, PyObject *value) {
    PyObject *retval;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, value);
        } else
        #endif
        #ifdef __Pyx_AsyncGen_USED
        if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
            ret = __Pyx_async_gen_asend_send(yf, value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03050000 && defined(PyCoro_CheckExact) && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyCoro_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, value == Py_None ? NULL : value);
        } else
        #endif
        {
            if (value == Py_None)
                ret = __Pyx_PyObject_GetIterNextFunc(yf)(yf);
            else
                ret = __Pyx_PyObject_CallMethod1(yf, __pyx_n_s_send, value);
        }
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        retval = __Pyx_Coroutine_FinishDelegation(gen);
    } else {
        retval = __Pyx_Coroutine_SendEx(gen, value, 0);
    }
    return __Pyx_Coroutine_MethodReturn(self, retval);
}
static int __Pyx_Coroutine_CloseIter(__pyx_CoroutineObject *gen, PyObject *yf) {
    PyObject *retval = NULL;
    int err = 0;
    #ifdef __Pyx_Generator_USED
    if (__Pyx_Generator_CheckExact(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_Coroutine_USED
    if (__Pyx_Coroutine_Check(yf)) {
        retval = __Pyx_Coroutine_Close(yf);
        if (!retval)
            return -1;
    } else
    if (__Pyx_CoroutineAwait_CheckExact(yf)) {
        retval = __Pyx_CoroutineAwait_Close((__pyx_CoroutineAwaitObject*)yf, NULL);
        if (!retval)
            return -1;
    } else
    #endif
    #ifdef __Pyx_AsyncGen_USED
    if (__pyx_PyAsyncGenASend_CheckExact(yf)) {
        retval = __Pyx_async_gen_asend_close(yf, NULL);
    } else
    if (__pyx_PyAsyncGenAThrow_CheckExact(yf)) {
        retval = __Pyx_async_gen_athrow_close(yf, NULL);
    } else
    #endif
    {
        PyObject *meth;
        gen->is_running = 1;
        meth = __Pyx_PyObject_GetAttrStrNoError(yf, __pyx_n_s_close);
        if (unlikely(!meth)) {
            if (unlikely(PyErr_Occurred())) {
                PyErr_WriteUnraisable(yf);
            }
        } else {
            retval = __Pyx_PyObject_CallNoArg(meth);
            Py_DECREF(meth);
            if (unlikely(!retval))
                err = -1;
        }
        gen->is_running = 0;
    }
    Py_XDECREF(retval);
    return err;
}
static PyObject *__Pyx_Generator_Next(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject*) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        gen->is_running = 1;
        #ifdef __Pyx_Generator_USED
        if (__Pyx_Generator_CheckExact(yf)) {
            ret = __Pyx_Generator_Next(yf);
        } else
        #endif
        #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03030000 && (defined(__linux__) || PY_VERSION_HEX >= 0x030600B3)
        if (PyGen_CheckExact(yf)) {
            ret = __Pyx_PyGen_Send((PyGenObject*)yf, NULL);
        } else
        #endif
        #ifdef __Pyx_Coroutine_USED
        if (__Pyx_Coroutine_Check(yf)) {
            ret = __Pyx_Coroutine_Send(yf, Py_None);
        } else
        #endif
            ret = __Pyx_PyObject_GetIterNextFunc(yf)(yf);
        gen->is_running = 0;
        if (likely(ret)) {
            return ret;
        }
        return __Pyx_Coroutine_FinishDelegation(gen);
    }
    return __Pyx_Coroutine_SendEx(gen, Py_None, 0);
}
static PyObject *__Pyx_Coroutine_Close_Method(PyObject *self, PyObject *arg) {
    CYTHON_UNUSED_VAR(arg);
    return __Pyx_Coroutine_Close(self);
}
static PyObject *__Pyx_Coroutine_Close(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *retval, *raised_exception;
    PyObject *yf = gen->yieldfrom;
    int err = 0;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        Py_INCREF(yf);
        err = __Pyx_Coroutine_CloseIter(gen, yf);
        __Pyx_Coroutine_Undelegate(gen);
        Py_DECREF(yf);
    }
    if (err == 0)
        PyErr_SetNone(PyExc_GeneratorExit);
    retval = __Pyx_Coroutine_SendEx(gen, NULL, 1);
    if (unlikely(retval)) {
        const char *msg;
        Py_DECREF(retval);
        if ((0)) {
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_Coroutine_Check(self)) {
            msg = "coroutine ignored GeneratorExit";
        #endif
        #ifdef __Pyx_AsyncGen_USED
        } else if (__Pyx_AsyncGen_CheckExact(self)) {
#if PY_VERSION_HEX < 0x03060000
            msg = "async generator ignored GeneratorExit - might require Python 3.6+ finalisation (PEP 525)";
#else
            msg = "async generator ignored GeneratorExit";
#endif
        #endif
        } else {
            msg = "generator ignored GeneratorExit";
        }
        PyErr_SetString(PyExc_RuntimeError, msg);
        return NULL;
    }
    raised_exception = PyErr_Occurred();
    if (likely(!raised_exception || __Pyx_PyErr_GivenExceptionMatches2(raised_exception, PyExc_GeneratorExit, PyExc_StopIteration))) {
        if (raised_exception) PyErr_Clear();
        Py_INCREF(Py_None);
        return Py_None;
    }
    return NULL;
}
static PyObject *__Pyx__Coroutine_Throw(PyObject *self, PyObject *typ, PyObject *val, PyObject *tb,
                                        PyObject *args, int close_on_genexit) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject *yf = gen->yieldfrom;
    if (unlikely(gen->is_running))
        return __Pyx_Coroutine_AlreadyRunningError(gen);
    if (yf) {
        PyObject *ret;
        Py_INCREF(yf);
        if (__Pyx_PyErr_GivenExceptionMatches(typ, PyExc_GeneratorExit) && close_on_genexit) {
            int err = __Pyx_Coroutine_CloseIter(gen, yf);
            Py_DECREF(yf);
            __Pyx_Coroutine_Undelegate(gen);
            if (err < 0)
                return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
            goto throw_here;
        }
        gen->is_running = 1;
        if (0
        #ifdef __Pyx_Generator_USED
            || __Pyx_Generator_CheckExact(yf)
        #endif
        #ifdef __Pyx_Coroutine_USED
            || __Pyx_Coroutine_Check(yf)
        #endif
            ) {
            ret = __Pyx__Coroutine_Throw(yf, typ, val, tb, args, close_on_genexit);
        #ifdef __Pyx_Coroutine_USED
        } else if (__Pyx_CoroutineAwait_CheckExact(yf)) {
            ret = __Pyx__Coroutine_Throw(((__pyx_CoroutineAwaitObject*)yf)->coroutine, typ, val, tb, args, close_on_genexit);
        #endif
        } else {
            PyObject *meth = __Pyx_PyObject_GetAttrStrNoError(yf, __pyx_n_s_throw);
            if (unlikely(!meth)) {
                Py_DECREF(yf);
                if (unlikely(PyErr_Occurred())) {
                    gen->is_running = 0;
                    return NULL;
                }
                __Pyx_Coroutine_Undelegate(gen);
                gen->is_running = 0;
                goto throw_here;
            }
            if (likely(args)) {
                ret = __Pyx_PyObject_Call(meth, args, NULL);
            } else {
                PyObject *cargs[4] = {NULL, typ, val, tb};
                ret = __Pyx_PyObject_FastCall(meth, cargs+1, 3 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
            }
            Py_DECREF(meth);
        }
        gen->is_running = 0;
        Py_DECREF(yf);
        if (!ret) {
            ret = __Pyx_Coroutine_FinishDelegation(gen);
        }
        return __Pyx_Coroutine_MethodReturn(self, ret);
    }
throw_here:
    __Pyx_Raise(typ, val, tb, NULL);
    return __Pyx_Coroutine_MethodReturn(self, __Pyx_Coroutine_SendEx(gen, NULL, 0));
}
static PyObject *__Pyx_Coroutine_Throw(PyObject *self, PyObject *args) {
    PyObject *typ;
    PyObject *val = NULL;
    PyObject *tb = NULL;
    if (unlikely(!PyArg_UnpackTuple(args, (char *)"throw", 1, 3, &typ, &val, &tb)))
        return NULL;
    return __Pyx__Coroutine_Throw(self, typ, val, tb, args, 1);
}
static CYTHON_INLINE int __Pyx_Coroutine_traverse_excstate(__Pyx_ExcInfoStruct *exc_state, visitproc visit, void *arg) {
#if PY_VERSION_HEX >= 0x030B00a4
    Py_VISIT(exc_state->exc_value);
#else
    Py_VISIT(exc_state->exc_type);
    Py_VISIT(exc_state->exc_value);
    Py_VISIT(exc_state->exc_traceback);
#endif
    return 0;
}
static int __Pyx_Coroutine_traverse(__pyx_CoroutineObject *gen, visitproc visit, void *arg) {
    Py_VISIT(gen->closure);
    Py_VISIT(gen->classobj);
    Py_VISIT(gen->yieldfrom);
    return __Pyx_Coroutine_traverse_excstate(&gen->gi_exc_state, visit, arg);
}
static int __Pyx_Coroutine_clear(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    Py_CLEAR(gen->closure);
    Py_CLEAR(gen->classobj);
    Py_CLEAR(gen->yieldfrom);
    __Pyx_Coroutine_ExceptionClear(&gen->gi_exc_state);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        Py_CLEAR(((__pyx_PyAsyncGenObject*)gen)->ag_finalizer);
    }
#endif
    Py_CLEAR(gen->gi_code);
    Py_CLEAR(gen->gi_frame);
    Py_CLEAR(gen->gi_name);
    Py_CLEAR(gen->gi_qualname);
    Py_CLEAR(gen->gi_modulename);
    return 0;
}
static void __Pyx_Coroutine_dealloc(PyObject *self) {
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    PyObject_GC_UnTrack(gen);
    if (gen->gi_weakreflist != NULL)
        PyObject_ClearWeakRefs(self);
    if (gen->resume_label >= 0) {
        PyObject_GC_Track(self);
#if PY_VERSION_HEX >= 0x030400a1 && CYTHON_USE_TP_FINALIZE
        if (unlikely(PyObject_CallFinalizerFromDealloc(self)))
#else
        Py_TYPE(gen)->tp_del(self);
        if (unlikely(Py_REFCNT(self) > 0))
#endif
        {
            return;
        }
        PyObject_GC_UnTrack(self);
    }
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        /* We have to handle this case for asynchronous generators
           right here, because this code has to be between UNTRACK
           and GC_Del. */
        Py_CLEAR(((__pyx_PyAsyncGenObject*)self)->ag_finalizer);
    }
#endif
    __Pyx_Coroutine_clear(self);
    __Pyx_PyHeapTypeObject_GC_Del(gen);
}
static void __Pyx_Coroutine_del(PyObject *self) {
    PyObject *error_type, *error_value, *error_traceback;
    __pyx_CoroutineObject *gen = (__pyx_CoroutineObject *) self;
    __Pyx_PyThreadState_declare
    if (gen->resume_label < 0) {
        return;
    }
#if !CYTHON_USE_TP_FINALIZE
    assert(self->ob_refcnt == 0);
    __Pyx_SET_REFCNT(self, 1);
#endif
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&error_type, &error_value, &error_traceback);
#ifdef __Pyx_AsyncGen_USED
    if (__Pyx_AsyncGen_CheckExact(self)) {
        __pyx_PyAsyncGenObject *agen = (__pyx_PyAsyncGenObject*)self;
        PyObject *finalizer = agen->ag_finalizer;
        if (finalizer && !agen->ag_closed) {
            PyObject *res = __Pyx_PyObject_CallOneArg(finalizer, self);
            if (unlikely(!res)) {
                PyErr_WriteUnraisable(self);
            } else {
                Py_DECREF(res);
            }
            __Pyx_ErrRestore(error_type, error_value, error_traceback);
            return;
        }
    }
#endif
    if (unlikely(gen->resume_label == 0 && !error_value)) {
#ifdef __Pyx_Coroutine_USED
#ifdef __Pyx_Generator_USED
    if (!__Pyx_Generator_CheckExact(self))
#endif
        {
        PyObject_GC_UnTrack(self);
#if PY_MAJOR_VERSION >= 3  || defined(PyErr_WarnFormat)
        if (unlikely(PyErr_WarnFormat(PyExc_RuntimeWarning, 1, "coroutine '%.50S' was never awaited", gen->gi_qualname) < 0))
            PyErr_WriteUnraisable(self);
#else
        {PyObject *msg;
        char *cmsg;
        #if CYTHON_COMPILING_IN_PYPY
        msg = NULL;
        cmsg = (char*) "coroutine was never awaited";
        #else
        char *cname;
        PyObject *qualname;
        qualname = gen->gi_qualname;
        cname = PyString_AS_STRING(qualname);
        msg = PyString_FromFormat("coroutine '%.50s' was never awaited", cname);
        if (unlikely(!msg)) {
            PyErr_Clear();
            cmsg = (char*) "coroutine was never awaited";
        } else {
            cmsg = PyString_AS_STRING(msg);
        }
        #endif
        if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, cmsg, 1) < 0))
            PyErr_WriteUnraisable(self);
        Py_XDECREF(msg);}
#endif
        PyObject_GC_Track(self);
        }
#endif
    } else {
        PyObject *res = __Pyx_Coroutine_Close(self);
        if (unlikely(!res)) {
            if (PyErr_Occurred())
                PyErr_WriteUnraisable(self);
        } else {
            Py_DECREF(res);
        }
    }
    __Pyx_ErrRestore(error_type, error_value, error_traceback);
#if !CYTHON_USE_TP_FINALIZE
    assert(Py_REFCNT(self) > 0);
    if (likely(--self->ob_refcnt == 0)) {
        return;
    }
    {
        Py_ssize_t refcnt = Py_REFCNT(self);
        _Py_NewReference(self);
        __Pyx_SET_REFCNT(self, refcnt);
    }
#if CYTHON_COMPILING_IN_CPYTHON
    assert(PyType_IS_GC(Py_TYPE(self)) &&
           _Py_AS_GC(self)->gc.gc_refs != _PyGC_REFS_UNTRACKED);
    _Py_DEC_REFTOTAL;
#endif
#ifdef COUNT_ALLOCS
    --Py_TYPE(self)->tp_frees;
    --Py_TYPE(self)->tp_allocs;
#endif
#endif
}
static PyObject *
__Pyx_Coroutine_get_name(__pyx_CoroutineObject *self, void *context)
{
    PyObject *name = self->gi_name;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_name(__pyx_CoroutineObject *self, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(self->gi_name, value);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_qualname(__pyx_CoroutineObject *self, void *context)
{
    PyObject *name = self->gi_qualname;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!name)) name = Py_None;
    Py_INCREF(name);
    return name;
}
static int
__Pyx_Coroutine_set_qualname(__pyx_CoroutineObject *self, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(self->gi_qualname, value);
    return 0;
}
static PyObject *
__Pyx_Coroutine_get_frame(__pyx_CoroutineObject *self, void *context)
{
    PyObject *frame = self->gi_frame;
    CYTHON_UNUSED_VAR(context);
    if (!frame) {
        if (unlikely(!self->gi_code)) {
            Py_RETURN_NONE;
        }
        frame = (PyObject *) PyFrame_New(
            PyThreadState_Get(),            /*PyThreadState *tstate,*/
            (PyCodeObject*) self->gi_code,  /*PyCodeObject *code,*/
            __pyx_d,                 /*PyObject *globals,*/
            0                               /*PyObject *locals*/
        );
        if (unlikely(!frame))
            return NULL;
        self->gi_frame = frame;
    }
    Py_INCREF(frame);
    return frame;
}
static __pyx_CoroutineObject *__Pyx__Coroutine_New(
            PyTypeObject* type, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    __pyx_CoroutineObject *gen = PyObject_GC_New(__pyx_CoroutineObject, type);
    if (unlikely(!gen))
        return NULL;
    return __Pyx__Coroutine_NewInit(gen, body, code, closure, name, qualname, module_name);
}
static __pyx_CoroutineObject *__Pyx__Coroutine_NewInit(
            __pyx_CoroutineObject *gen, __pyx_coroutine_body_t body, PyObject *code, PyObject *closure,
            PyObject *name, PyObject *qualname, PyObject *module_name) {
    gen->body = body;
    gen->closure = closure;
    Py_XINCREF(closure);
    gen->is_running = 0;
    gen->resume_label = 0;
    gen->classobj = NULL;
    gen->yieldfrom = NULL;
    #if PY_VERSION_HEX >= 0x030B00a4
    gen->gi_exc_state.exc_value = NULL;
    #else
    gen->gi_exc_state.exc_type = NULL;
    gen->gi_exc_state.exc_value = NULL;
    gen->gi_exc_state.exc_traceback = NULL;
    #endif
#if CYTHON_USE_EXC_INFO_STACK
    gen->gi_exc_state.previous_item = NULL;
#endif
    gen->gi_weakreflist = NULL;
    Py_XINCREF(qualname);
    gen->gi_qualname = qualname;
    Py_XINCREF(name);
    gen->gi_name = name;
    Py_XINCREF(module_name);
    gen->gi_modulename = module_name;
    Py_XINCREF(code);
    gen->gi_code = code;
    gen->gi_frame = NULL;
    PyObject_GC_Track(gen);
    return gen;
}

/* PatchModuleWithCoroutine */
  static PyObject* __Pyx_Coroutine_patch_module(PyObject* module, const char* py_code) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    int result;
    PyObject *globals, *result_obj;
    globals = PyDict_New();  if (unlikely(!globals)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_coroutine_type",
    #ifdef __Pyx_Coroutine_USED
        (PyObject*)__pyx_CoroutineType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    result = PyDict_SetItemString(globals, "_cython_generator_type",
    #ifdef __Pyx_Generator_USED
        (PyObject*)__pyx_GeneratorType);
    #else
        Py_None);
    #endif
    if (unlikely(result < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "_module", module) < 0)) goto ignore;
    if (unlikely(PyDict_SetItemString(globals, "__builtins__", __pyx_b) < 0)) goto ignore;
    result_obj = PyRun_String(py_code, Py_file_input, globals, globals);
    if (unlikely(!result_obj)) goto ignore;
    Py_DECREF(result_obj);
    Py_DECREF(globals);
    return module;
ignore:
    Py_XDECREF(globals);
    PyErr_WriteUnraisable(module);
    if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning, "Cython module failed to patch module with custom type", 1) < 0)) {
        Py_DECREF(module);
        module = NULL;
    }
#else
    py_code++;
#endif
    return module;
}

/* PatchGeneratorABC */
  #ifndef CYTHON_REGISTER_ABCS
#define CYTHON_REGISTER_ABCS 1
#endif
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
static PyObject* __Pyx_patch_abc_module(PyObject *module);
static PyObject* __Pyx_patch_abc_module(PyObject *module) {
    module = __Pyx_Coroutine_patch_module(
        module, ""
"if _cython_generator_type is not None:\n"
"    try: Generator = _module.Generator\n"
"    except AttributeError: pass\n"
"    else: Generator.register(_cython_generator_type)\n"
"if _cython_coroutine_type is not None:\n"
"    try: Coroutine = _module.Coroutine\n"
"    except AttributeError: pass\n"
"    else: Coroutine.register(_cython_coroutine_type)\n"
    );
    return module;
}
#endif
static int __Pyx_patch_abc(void) {
#if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
    static int abc_patched = 0;
    if (CYTHON_REGISTER_ABCS && !abc_patched) {
        PyObject *module;
        module = PyImport_ImportModule((PY_MAJOR_VERSION >= 3) ? "collections.abc" : "collections");
        if (unlikely(!module)) {
            PyErr_WriteUnraisable(NULL);
            if (unlikely(PyErr_WarnEx(PyExc_RuntimeWarning,
                    ((PY_MAJOR_VERSION >= 3) ?
                        "Cython module failed to register with collections.abc module" :
                        "Cython module failed to register with collections module"), 1) < 0)) {
                return -1;
            }
        } else {
            module = __Pyx_patch_abc_module(module);
            abc_patched = 1;
            if (unlikely(!module))
                return -1;
            Py_DECREF(module);
        }
        module = PyImport_ImportModule("backports_abc");
        if (module) {
            module = __Pyx_patch_abc_module(module);
            Py_XDECREF(module);
        }
        if (!module) {
            PyErr_Clear();
        }
    }
#else
    if ((0)) __Pyx_Coroutine_patch_module(NULL, NULL);
#endif
    return 0;
}

/* Generator */
  static PyMethodDef __pyx_Generator_methods[] = {
    {"send", (PyCFunction) __Pyx_Coroutine_Send, METH_O,
     (char*) PyDoc_STR("send(arg) -> send 'arg' into generator,\nreturn next yielded value or raise StopIteration.")},
    {"throw", (PyCFunction) __Pyx_Coroutine_Throw, METH_VARARGS,
     (char*) PyDoc_STR("throw(typ[,val[,tb]]) -> raise exception in generator,\nreturn next yielded value or raise StopIteration.")},
    {"close", (PyCFunction) __Pyx_Coroutine_Close_Method, METH_NOARGS,
     (char*) PyDoc_STR("close() -> raise GeneratorExit inside generator.")},
    {0, 0, 0, 0}
};
static PyMemberDef __pyx_Generator_memberlist[] = {
    {(char *) "gi_running", T_BOOL, offsetof(__pyx_CoroutineObject, is_running), READONLY, NULL},
    {(char*) "gi_yieldfrom", T_OBJECT, offsetof(__pyx_CoroutineObject, yieldfrom), READONLY,
     (char*) PyDoc_STR("object being iterated by 'yield from', or None")},
    {(char*) "gi_code", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_code), READONLY, NULL},
    {(char *) "__module__", T_OBJECT, offsetof(__pyx_CoroutineObject, gi_modulename), 0, 0},
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CoroutineObject, gi_weakreflist), READONLY, 0},
#endif
    {0, 0, 0, 0, 0}
};
static PyGetSetDef __pyx_Generator_getsets[] = {
    {(char *) "__name__", (getter)__Pyx_Coroutine_get_name, (setter)__Pyx_Coroutine_set_name,
     (char*) PyDoc_STR("name of the generator"), 0},
    {(char *) "__qualname__", (getter)__Pyx_Coroutine_get_qualname, (setter)__Pyx_Coroutine_set_qualname,
     (char*) PyDoc_STR("qualified name of the generator"), 0},
    {(char *) "gi_frame", (getter)__Pyx_Coroutine_get_frame, NULL,
     (char*) PyDoc_STR("Frame of the generator"), 0},
    {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_GeneratorType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_Coroutine_dealloc},
    {Py_tp_traverse, (void *)__Pyx_Coroutine_traverse},
    {Py_tp_iter, (void *)PyObject_SelfIter},
    {Py_tp_iternext, (void *)__Pyx_Generator_Next},
    {Py_tp_methods, (void *)__pyx_Generator_methods},
    {Py_tp_members, (void *)__pyx_Generator_memberlist},
    {Py_tp_getset, (void *)__pyx_Generator_getsets},
    {Py_tp_getattro, (void *) __Pyx_PyObject_GenericGetAttrNoDict},
#if CYTHON_USE_TP_FINALIZE
    {Py_tp_finalize, (void *)__Pyx_Coroutine_del},
#endif
    {0, 0},
};
static PyType_Spec __pyx_GeneratorType_spec = {
    __PYX_TYPE_MODULE_PREFIX "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    __pyx_GeneratorType_slots
};
#else
static PyTypeObject __pyx_GeneratorType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "generator",
    sizeof(__pyx_CoroutineObject),
    0,
    (destructor) __Pyx_Coroutine_dealloc,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_HAVE_FINALIZE,
    0,
    (traverseproc) __Pyx_Coroutine_traverse,
    0,
    0,
    offsetof(__pyx_CoroutineObject, gi_weakreflist),
    0,
    (iternextfunc) __Pyx_Generator_Next,
    __pyx_Generator_methods,
    __pyx_Generator_memberlist,
    __pyx_Generator_getsets,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if CYTHON_USE_TP_FINALIZE
    0,
#else
    __Pyx_Coroutine_del,
#endif
    0,
#if CYTHON_USE_TP_FINALIZE
    __Pyx_Coroutine_del,
#elif PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_Generator_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_GeneratorType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_GeneratorType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_GeneratorType_type.tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
    __pyx_GeneratorType_type.tp_iter = PyObject_SelfIter;
    __pyx_GeneratorType = __Pyx_FetchCommonType(&__pyx_GeneratorType_type);
#endif
    if (unlikely(!__pyx_GeneratorType)) {
        return -1;
    }
    return 0;
}

/* CheckBinaryVersion */
  static int __Pyx_check_binary_version(void) {
    char ctversion[5];
    int same=1, i, found_dot;
    const char* rt_from_call = Py_GetVersion();
    PyOS_snprintf(ctversion, 5, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    found_dot = 0;
    for (i = 0; i < 4; i++) {
        if (!ctversion[i]) {
            same = (rt_from_call[i] < '0' || rt_from_call[i] > '9');
            break;
        }
        if (rt_from_call[i] != ctversion[i]) {
            same = 0;
            break;
        }
    }
    if (!same) {
        char rtversion[5] = {'\0'};
        char message[200];
        for (i=0; i<4; ++i) {
            if (rt_from_call[i] == '.') {
                if (found_dot) break;
                found_dot = 1;
            } else if (rt_from_call[i] < '0' || rt_from_call[i] > '9') {
                break;
            }
            rtversion[i] = rt_from_call[i];
        }
        PyOS_snprintf(message, sizeof(message),
                      "compile time version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* FunctionImport */
  #ifndef __PYX_HAVE_RT_ImportFunction_3_0_0
#define __PYX_HAVE_RT_ImportFunction_3_0_0
static int __Pyx_ImportFunction_3_0_0(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C function %.200s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

/* InitStrings */
  #if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type " __Pyx_FMT_TYPENAME ")",
                 type_name, type_name, result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
