/* Generated by Cython 3.0.0 */

/* BEGIN: Cython Metadata
{
    "distutils": {
        "depends": [
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/arrayobject.h",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/arrayscalars.h",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/ndarrayobject.h",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/ndarraytypes.h",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include/numpy/ufuncobject.h",
            "include/cantera/base/AnyMap.h",
            "include/cantera/base/Delegator.h",
            "include/cantera/base/ExtensionManager.h",
            "include/cantera/base/ExtensionManagerFactory.h",
            "include/cantera/base/Interface.h",
            "include/cantera/base/Solution.h",
            "include/cantera/base/SolutionArray.h",
            "include/cantera/base/Units.h",
            "include/cantera/base/global.h",
            "include/cantera/base/stringUtils.h",
            "include/cantera/cython/funcWrapper.h",
            "include/cantera/cython/kinetics_utils.h",
            "include/cantera/cython/thermo_utils.h",
            "include/cantera/cython/transport_utils.h",
            "include/cantera/cython/utils_utils.h",
            "include/cantera/extensions/PythonExtensionManager.h",
            "include/cantera/extensions/PythonHandle.h",
            "include/cantera/kinetics/InterfaceKinetics.h",
            "include/cantera/kinetics/Kinetics.h",
            "include/cantera/kinetics/KineticsFactory.h",
            "include/cantera/numerics/Func1.h",
            "include/cantera/numerics/Func1Factory.h",
            "include/cantera/numerics/eigen_sparse.h",
            "include/cantera/thermo/Elements.h",
            "include/cantera/thermo/PlasmaPhase.h",
            "include/cantera/thermo/Species.h",
            "include/cantera/thermo/SpeciesThermoFactory.h",
            "include/cantera/thermo/SpeciesThermoInterpType.h",
            "include/cantera/thermo/SurfPhase.h",
            "include/cantera/thermo/ThermoFactory.h",
            "include/cantera/thermo/ThermoPhase.h",
            "include/cantera/transport/DustyGasTransport.h",
            "include/cantera/transport/Transport.h",
            "include/cantera/transport/TransportData.h",
            "include/cantera/transport/TransportFactory.h"
        ],
        "include_dirs": [
            "include",
            "include/cantera/ext",
            "src",
            "cantera",
            "/tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/core/include"
        ],
        "language": "c++",
        "name": "cantera._cantera",
        "sources": [
            "cantera/thermo.pyx",
            "cantera/_utils.pyx",
            "cantera/solutionbase.pyx",
            "cantera/kinetics.pyx",
            "cantera/reactor.pyx",
            "cantera/units.pyx",
            "cantera/_onedim.pyx",
            "cantera/transport.pyx",
            "cantera/delegator.pyx",
            "cantera/mixture.pyx",
            "cantera/speciesthermo.pyx",
            "cantera/func1.pyx",
            "cantera/_cantera.pyx",
            "cantera/constants.pyx",
            "cantera/reaction.pyx",
            "cantera/reactionpath.pyx",
            "cantera/preconditioners.pyx",
            "cantera/yamlwriter.pyx",
            "src/equil/MultiPhase.cpp",
            "src/equil/vcs_solve_TP.cpp",
            "src/equil/vcs_VolPhase.cpp",
            "src/equil/BasisOptimize.cpp",
            "src/equil/vcs_solve.cpp",
            "src/equil/vcs_MultiPhaseEquil.cpp",
            "src/equil/ChemEquil.cpp",
            "src/equil/vcs_util.cpp",
            "src/equil/MultiPhaseEquil.cpp",
            "src/oneD/MultiJac.cpp",
            "src/oneD/MultiNewton.cpp",
            "src/oneD/DomainFactory.cpp",
            "src/oneD/StFlow.cpp",
            "src/oneD/OneDim.cpp",
            "src/oneD/Domain1D.cpp",
            "src/oneD/refine.cpp",
            "src/oneD/Boundary1D.cpp",
            "src/oneD/Sim1D.cpp",
            "src/oneD/IonFlow.cpp",
            "src/transport/DustyGasTransport.cpp",
            "src/transport/HighPressureGasTransport.cpp",
            "src/transport/WaterTransport.cpp",
            "src/transport/MMCollisionInt.cpp",
            "src/transport/MultiTransport.cpp",
            "src/transport/GasTransport.cpp",
            "src/transport/IonGasTransport.cpp",
            "src/transport/TransportData.cpp",
            "src/transport/MixTransport.cpp",
            "src/transport/Transport.cpp",
            "src/transport/TransportFactory.cpp",
            "src/kinetics/ImplicitSurfChem.cpp",
            "src/kinetics/Falloff.cpp",
            "src/kinetics/Reaction.cpp",
            "src/kinetics/BulkKinetics.cpp",
            "src/kinetics/Kinetics.cpp",
            "src/kinetics/Arrhenius.cpp",
            "src/kinetics/TwoTempPlasmaRate.cpp",
            "src/kinetics/Group.cpp",
            "src/kinetics/InterfaceKinetics.cpp",
            "src/kinetics/ReactionRateDelegator.cpp",
            "src/kinetics/InterfaceRate.cpp",
            "src/kinetics/ChebyshevRate.cpp",
            "src/kinetics/ReactionPath.cpp",
            "src/kinetics/ReactionRateFactory.cpp",
            "src/kinetics/solveSP.cpp",
            "src/kinetics/PlogRate.cpp",
            "src/kinetics/Custom.cpp",
            "src/kinetics/KineticsFactory.cpp",
            "src/kinetics/BlowersMaselRate.cpp",
            "src/pch/system.cpp",
            "src/numerics/FuncEval.cpp",
            "src/numerics/Func1.cpp",
            "src/numerics/BandMatrix.cpp",
            "src/numerics/DenseMatrix.cpp",
            "src/numerics/Integrators.cpp",
            "src/numerics/PreconditionerFactory.cpp",
            "src/numerics/CVodesIntegrator.cpp",
            "src/numerics/IdasIntegrator.cpp",
            "src/numerics/polyfit.cpp",
            "src/numerics/funcs.cpp",
            "src/numerics/AdaptivePreconditioner.cpp",
            "src/numerics/Func1Factory.cpp",
            "src/numerics/ResidJacEval.cpp",
            "src/thermo/HMWSoln.cpp",
            "src/thermo/MargulesVPSSTP.cpp",
            "src/thermo/Nasa9PolyMultiTempRegion.cpp",
            "src/thermo/PengRobinson.cpp",
            "src/thermo/RedlichKwongMFTP.cpp",
            "src/thermo/WaterSSTP.cpp",
            "src/thermo/Phase.cpp",
            "src/thermo/StoichSubstance.cpp",
            "src/thermo/PDSS_SSVol.cpp",
            "src/thermo/VPStandardStateTP.cpp",
            "src/thermo/Mu0Poly.cpp",
            "src/thermo/MaskellSolidSolnPhase.cpp",
            "src/thermo/SurfPhase.cpp",
            "src/thermo/WaterProps.cpp",
            "src/thermo/IdealGasPhase.cpp",
            "src/thermo/RedlichKisterVPSSTP.cpp",
            "src/thermo/IdealMolalSoln.cpp",
            "src/thermo/SpeciesThermoFactory.cpp",
            "src/thermo/CoverageDependentSurfPhase.cpp",
            "src/thermo/PDSSFactory.cpp",
            "src/thermo/IonsFromNeutralVPSSTP.cpp",
            "src/thermo/PureFluidPhase.cpp",
            "src/thermo/PDSS_Water.cpp",
            "src/thermo/MolalityVPSSTP.cpp",
            "src/thermo/PDSS_IonsFromNeutral.cpp",
            "src/thermo/ThermoPhase.cpp",
            "src/thermo/PDSS_HKFT.cpp",
            "src/thermo/Elements.cpp",
            "src/thermo/MixtureFugacityTP.cpp",
            "src/thermo/PDSS_IdealGas.cpp",
            "src/thermo/SpeciesThermoInterpType.cpp",
            "src/thermo/Nasa9Poly1.cpp",
            "src/thermo/Species.cpp",
            "src/thermo/PDSS_ConstVol.cpp",
            "src/thermo/DebyeHuckel.cpp",
            "src/thermo/ConstCpPoly.cpp",
            "src/thermo/LatticePhase.cpp",
            "src/thermo/NasaPoly2.cpp",
            "src/thermo/PDSS.cpp",
            "src/thermo/LatticeSolidPhase.cpp",
            "src/thermo/WaterPropsIAPWS.cpp",
            "src/thermo/IdealSolidSolnPhase.cpp",
            "src/thermo/MultiSpeciesThermo.cpp",
            "src/thermo/ThermoFactory.cpp",
            "src/thermo/SingleSpeciesTP.cpp",
            "src/thermo/IdealSolnGasVPSS.cpp",
            "src/thermo/GibbsExcessVPSSTP.cpp",
            "src/thermo/BinarySolutionTabulatedThermo.cpp",
            "src/thermo/WaterPropsIAPWSphi.cpp",
            "src/thermo/PlasmaPhase.cpp",
            "src/zeroD/IdealGasConstPressureReactor.cpp",
            "src/zeroD/ConstPressureReactor.cpp",
            "src/zeroD/flowControllers.cpp",
            "src/zeroD/MoleReactor.cpp",
            "src/zeroD/FlowReactor.cpp",
            "src/zeroD/FlowDevice.cpp",
            "src/zeroD/Wall.cpp",
            "src/zeroD/Reactor.cpp",
            "src/zeroD/ReactorSurface.cpp",
            "src/zeroD/FlowDeviceFactory.cpp",
            "src/zeroD/IdealGasMoleReactor.cpp",
            "src/zeroD/WallFactory.cpp",
            "src/zeroD/ReactorNet.cpp",
            "src/zeroD/ReactorBase.cpp",
            "src/zeroD/IdealGasReactor.cpp",
            "src/zeroD/ReactorFactory.cpp",
            "src/zeroD/ConstPressureMoleReactor.cpp",
            "src/zeroD/IdealGasConstPressureMoleReactor.cpp",
            "src/base/Array.cpp",
            "src/base/Storage.cpp",
            "src/base/ctexceptions.cpp",
            "src/base/ExtensionManagerFactory.cpp",
            "src/base/AnyMap.cpp",
            "src/base/checkFinite.cpp",
            "src/base/application.cpp",
            "src/base/Solution.cpp",
            "src/base/YamlWriter.cpp",
            "src/base/clockWC.cpp",
            "src/base/ExtensionManager.cpp",
            "src/base/Units.cpp",
            "src/base/ValueCache.cpp",
            "src/base/stringUtils.cpp",
            "src/base/SolutionArray.cpp",
            "src/base/Interface.cpp",
            "src/base/global.cpp",
            "src/extensions/PythonExtensionManager.cpp",
            "src/extensions/canteraShared.cpp",
            "src/extensions/pythonShim.cpp",
            "src/tpx/Water.cpp",
            "src/tpx/CarbonDioxide.cpp",
            "src/tpx/Sub.cpp",
            "src/tpx/Methane.cpp",
            "src/tpx/HFC134a.cpp",
            "src/tpx/Hydrogen.cpp",
            "src/tpx/Oxygen.cpp",
            "src/tpx/utils.cpp",
            "src/tpx/Heptane.cpp",
            "src/tpx/Nitrogen.cpp"
        ]
    },
    "module_name": "cantera._cantera"
}
END: Cython Metadata */

#ifndef PY_SSIZE_T_CLEAN
#define PY_SSIZE_T_CLEAN
#endif /* PY_SSIZE_T_CLEAN */
#if defined(CYTHON_LIMITED_API) && 0
  #ifndef Py_LIMITED_API
    #if CYTHON_LIMITED_API+0 > 0x03030000
      #define Py_LIMITED_API CYTHON_LIMITED_API
    #else
      #define Py_LIMITED_API 0x03030000
    #endif
  #endif
#endif

#include "Python.h"

    #if PY_MAJOR_VERSION >= 3
      #define __Pyx_PyFloat_FromString(obj)  PyFloat_FromString(obj)
    #else
      #define __Pyx_PyFloat_FromString(obj)  PyFloat_FromString(obj, NULL)
    #endif
    

    #if PY_MAJOR_VERSION <= 2
    #define PyDict_GetItemWithError _PyDict_GetItemWithError
    #endif
    

    #if (PY_VERSION_HEX < 0x030700b1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM < 0x07030600)) && !defined(PyContextVar_Get)
    #define PyContextVar_Get(var, d, v)         ((d) ?             ((void)(var), Py_INCREF(d), (v)[0] = (d), 0) :             ((v)[0] = NULL, 0)         )
    #endif
    
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02070000 || (0x03000000 <= PY_VERSION_HEX && PY_VERSION_HEX < 0x03030000)
    #error Cython requires Python 2.7+ or Python 3.3+.
#else
#define CYTHON_ABI "3_0_0"
#define __PYX_ABI_MODULE_NAME "_cython_" CYTHON_ABI
#define __PYX_TYPE_MODULE_PREFIX __PYX_ABI_MODULE_NAME "."
#define CYTHON_HEX_VERSION 0x030000F0
#define CYTHON_FUTURE_DIVISION 1
#include <stddef.h>
#ifndef offsetof
  #define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(_WIN32) && !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#define __PYX_COMMA ,
#ifndef HAVE_LONG_LONG
  #define HAVE_LONG_LONG
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#if defined(GRAALVM_PYTHON)
  /* For very preliminary testing purposes. Most variables are set the same as PyPy.
     The existence of this section does not imply that anything works or is even tested */
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 1
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE 0
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PYPY_VERSION)
  #define CYTHON_COMPILING_IN_PYPY 1
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 0
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #undef CYTHON_AVOID_BORROWED_REFS
  #define CYTHON_AVOID_BORROWED_REFS 1
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS (PY_MAJOR_VERSION >= 3)
  #endif
  #if PY_VERSION_HEX < 0x03090000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 0
  #undef CYTHON_USE_TP_FINALIZE
  #define CYTHON_USE_TP_FINALIZE (PY_VERSION_HEX >= 0x030400a1 && PYPY_VERSION_NUM >= 0x07030C00)
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(CYTHON_LIMITED_API)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 1
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #undef CYTHON_CLINE_IN_TRACEBACK
  #define CYTHON_CLINE_IN_TRACEBACK 0
  #undef CYTHON_USE_TYPE_SLOTS
  #define CYTHON_USE_TYPE_SLOTS 0
  #undef CYTHON_USE_TYPE_SPECS
  #define CYTHON_USE_TYPE_SPECS 1
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #undef CYTHON_USE_ASYNC_SLOTS
  #define CYTHON_USE_ASYNC_SLOTS 0
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #undef CYTHON_USE_UNICODE_INTERNALS
  #define CYTHON_USE_UNICODE_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #endif
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #undef CYTHON_ASSUME_SAFE_MACROS
  #define CYTHON_ASSUME_SAFE_MACROS 0
  #undef CYTHON_UNPACK_METHODS
  #define CYTHON_UNPACK_METHODS 0
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_GIL
  #define CYTHON_FAST_GIL 0
  #undef CYTHON_METH_FASTCALL
  #define CYTHON_METH_FASTCALL 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #undef CYTHON_PEP489_MULTI_PHASE_INIT
  #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #undef CYTHON_USE_MODULE_STATE
  #define CYTHON_USE_MODULE_STATE 1
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 0
  #endif
#elif defined(PY_NOGIL)
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 0
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 1
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #undef CYTHON_USE_PYTYPE_LOOKUP
  #define CYTHON_USE_PYTYPE_LOOKUP 0
  #ifndef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #undef CYTHON_USE_PYLIST_INTERNALS
  #define CYTHON_USE_PYLIST_INTERNALS 0
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #undef CYTHON_USE_UNICODE_WRITER
  #define CYTHON_USE_UNICODE_WRITER 0
  #undef CYTHON_USE_PYLONG_INTERNALS
  #define CYTHON_USE_PYLONG_INTERNALS 0
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #undef CYTHON_FAST_THREAD_STATE
  #define CYTHON_FAST_THREAD_STATE 0
  #undef CYTHON_FAST_PYCALL
  #define CYTHON_FAST_PYCALL 0
  #ifndef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #undef CYTHON_USE_DICT_VERSIONS
  #define CYTHON_USE_DICT_VERSIONS 0
  #undef CYTHON_USE_EXC_INFO_STACK
  #define CYTHON_USE_EXC_INFO_STACK 0
#else
  #define CYTHON_COMPILING_IN_PYPY 0
  #define CYTHON_COMPILING_IN_CPYTHON 1
  #define CYTHON_COMPILING_IN_LIMITED_API 0
  #define CYTHON_COMPILING_IN_GRAAL 0
  #define CYTHON_COMPILING_IN_NOGIL 0
  #ifndef CYTHON_USE_TYPE_SLOTS
    #define CYTHON_USE_TYPE_SLOTS 1
  #endif
  #ifndef CYTHON_USE_TYPE_SPECS
    #define CYTHON_USE_TYPE_SPECS 0
  #endif
  #ifndef CYTHON_USE_PYTYPE_LOOKUP
    #define CYTHON_USE_PYTYPE_LOOKUP 1
  #endif
  #if PY_MAJOR_VERSION < 3
    #undef CYTHON_USE_ASYNC_SLOTS
    #define CYTHON_USE_ASYNC_SLOTS 0
  #elif !defined(CYTHON_USE_ASYNC_SLOTS)
    #define CYTHON_USE_ASYNC_SLOTS 1
  #endif
  #ifndef CYTHON_USE_PYLONG_INTERNALS
    #define CYTHON_USE_PYLONG_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_PYLIST_INTERNALS
    #define CYTHON_USE_PYLIST_INTERNALS 1
  #endif
  #ifndef CYTHON_USE_UNICODE_INTERNALS
    #define CYTHON_USE_UNICODE_INTERNALS 1
  #endif
  #if PY_VERSION_HEX < 0x030300F0 || PY_VERSION_HEX >= 0x030B00A2
    #undef CYTHON_USE_UNICODE_WRITER
    #define CYTHON_USE_UNICODE_WRITER 0
  #elif !defined(CYTHON_USE_UNICODE_WRITER)
    #define CYTHON_USE_UNICODE_WRITER 1
  #endif
  #ifndef CYTHON_AVOID_BORROWED_REFS
    #define CYTHON_AVOID_BORROWED_REFS 0
  #endif
  #ifndef CYTHON_ASSUME_SAFE_MACROS
    #define CYTHON_ASSUME_SAFE_MACROS 1
  #endif
  #ifndef CYTHON_UNPACK_METHODS
    #define CYTHON_UNPACK_METHODS 1
  #endif
  #ifndef CYTHON_FAST_THREAD_STATE
    #define CYTHON_FAST_THREAD_STATE 1
  #endif
  #ifndef CYTHON_FAST_GIL
    #define CYTHON_FAST_GIL (PY_MAJOR_VERSION < 3 || PY_VERSION_HEX >= 0x03060000 && PY_VERSION_HEX < 0x030C00A6)
  #endif
  #ifndef CYTHON_METH_FASTCALL
    #define CYTHON_METH_FASTCALL (PY_VERSION_HEX >= 0x030700A1)
  #endif
  #ifndef CYTHON_FAST_PYCALL
    #define CYTHON_FAST_PYCALL 1
  #endif
  #ifndef CYTHON_PEP487_INIT_SUBCLASS
    #define CYTHON_PEP487_INIT_SUBCLASS 1
  #endif
  #if PY_VERSION_HEX < 0x03050000
    #undef CYTHON_PEP489_MULTI_PHASE_INIT
    #define CYTHON_PEP489_MULTI_PHASE_INIT 0
  #elif !defined(CYTHON_PEP489_MULTI_PHASE_INIT)
    #define CYTHON_PEP489_MULTI_PHASE_INIT 1
  #endif
  #ifndef CYTHON_USE_MODULE_STATE
    #define CYTHON_USE_MODULE_STATE 0
  #endif
  #if PY_VERSION_HEX < 0x030400a1
    #undef CYTHON_USE_TP_FINALIZE
    #define CYTHON_USE_TP_FINALIZE 0
  #elif !defined(CYTHON_USE_TP_FINALIZE)
    #define CYTHON_USE_TP_FINALIZE 1
  #endif
  #if PY_VERSION_HEX < 0x030600B1
    #undef CYTHON_USE_DICT_VERSIONS
    #define CYTHON_USE_DICT_VERSIONS 0
  #elif !defined(CYTHON_USE_DICT_VERSIONS)
    #define CYTHON_USE_DICT_VERSIONS  (PY_VERSION_HEX < 0x030C00A5)
  #endif
  #if PY_VERSION_HEX < 0x030700A3
    #undef CYTHON_USE_EXC_INFO_STACK
    #define CYTHON_USE_EXC_INFO_STACK 0
  #elif !defined(CYTHON_USE_EXC_INFO_STACK)
    #define CYTHON_USE_EXC_INFO_STACK 1
  #endif
  #ifndef CYTHON_UPDATE_DESCRIPTOR_DOC
    #define CYTHON_UPDATE_DESCRIPTOR_DOC 1
  #endif
#endif
#if !defined(CYTHON_FAST_PYCCALL)
#define CYTHON_FAST_PYCCALL  (CYTHON_FAST_PYCALL && PY_VERSION_HEX >= 0x030600B1)
#endif
#if !defined(CYTHON_VECTORCALL)
#define CYTHON_VECTORCALL  (CYTHON_FAST_PYCCALL && PY_VERSION_HEX >= 0x030800B1)
#endif
#define CYTHON_BACKPORT_VECTORCALL (CYTHON_METH_FASTCALL && PY_VERSION_HEX < 0x030800B1)
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_MAJOR_VERSION < 3
    #include "longintrepr.h"
  #endif
  #undef SHIFT
  #undef BASE
  #undef MASK
  #ifdef SIZEOF_VOID_P
    enum { __pyx_check_sizeof_voidp = 1 / (int)(SIZEOF_VOID_P == sizeof(void*)) };
  #endif
#endif
#ifndef __has_attribute
  #define __has_attribute(x) 0
#endif
#ifndef __has_cpp_attribute
  #define __has_cpp_attribute(x) 0
#endif
#ifndef CYTHON_RESTRICT
  #if defined(__GNUC__)
    #define CYTHON_RESTRICT __restrict__
  #elif defined(_MSC_VER) && _MSC_VER >= 1400
    #define CYTHON_RESTRICT __restrict
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_RESTRICT restrict
  #else
    #define CYTHON_RESTRICT
  #endif
#endif
#ifndef CYTHON_UNUSED
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(maybe_unused) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(maybe_unused)
        #define CYTHON_UNUSED [[maybe_unused]]
      #endif
    #endif
  #endif
#endif
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif
#ifndef CYTHON_UNUSED_VAR
#  if defined(__cplusplus)
     template<class T> void CYTHON_UNUSED_VAR( const T& ) { }
#  else
#    define CYTHON_UNUSED_VAR(x) (void)(x)
#  endif
#endif
#ifndef CYTHON_MAYBE_UNUSED_VAR
  #define CYTHON_MAYBE_UNUSED_VAR(x) CYTHON_UNUSED_VAR(x)
#endif
#ifndef CYTHON_NCP_UNUSED
# if CYTHON_COMPILING_IN_CPYTHON
#  define CYTHON_NCP_UNUSED
# else
#  define CYTHON_NCP_UNUSED CYTHON_UNUSED
# endif
#endif
#define __Pyx_void_to_None(void_result) ((void)(void_result), Py_INCREF(Py_None), Py_None)
#ifdef _MSC_VER
    #ifndef _MSC_STDINT_H_
        #if _MSC_VER < 1300
            typedef unsigned char     uint8_t;
            typedef unsigned short    uint16_t;
            typedef unsigned int      uint32_t;
        #else
            typedef unsigned __int8   uint8_t;
            typedef unsigned __int16  uint16_t;
            typedef unsigned __int32  uint32_t;
        #endif
    #endif
    #if _MSC_VER < 1300
        #ifdef _WIN64
            typedef unsigned long long  __pyx_uintptr_t;
        #else
            typedef unsigned int        __pyx_uintptr_t;
        #endif
    #else
        #ifdef _WIN64
            typedef unsigned __int64    __pyx_uintptr_t;
        #else
            typedef unsigned __int32    __pyx_uintptr_t;
        #endif
    #endif
#else
    #include <stdint.h>
    typedef uintptr_t  __pyx_uintptr_t;
#endif
#ifndef CYTHON_FALLTHROUGH
  #if defined(__cplusplus)
    /* for clang __has_cpp_attribute(fallthrough) is true even before C++17
     * but leads to warnings with -pedantic, since it is a C++17 feature */
    #if ((defined(_MSVC_LANG) && _MSVC_LANG >= 201703L) || __cplusplus >= 201703L)
      #if __has_cpp_attribute(fallthrough)
        #define CYTHON_FALLTHROUGH [[fallthrough]]
      #endif
    #endif
    #ifndef CYTHON_FALLTHROUGH
      #if __has_cpp_attribute(clang::fallthrough)
        #define CYTHON_FALLTHROUGH [[clang::fallthrough]]
      #elif __has_cpp_attribute(gnu::fallthrough)
        #define CYTHON_FALLTHROUGH [[gnu::fallthrough]]
      #endif
    #endif
  #endif
  #ifndef CYTHON_FALLTHROUGH
    #if __has_attribute(fallthrough)
      #define CYTHON_FALLTHROUGH __attribute__((fallthrough))
    #else
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
  #if defined(__clang__) && defined(__apple_build_version__)
    #if __apple_build_version__ < 7000000
      #undef  CYTHON_FALLTHROUGH
      #define CYTHON_FALLTHROUGH
    #endif
  #endif
#endif
#ifdef __cplusplus
  template <typename T>
  struct __PYX_IS_UNSIGNED_IMPL {static const bool value = T(0) < T(-1);};
  #define __PYX_IS_UNSIGNED(type) (__PYX_IS_UNSIGNED_IMPL<type>::value)
#else
  #define __PYX_IS_UNSIGNED(type) (((type)-1) > 0)
#endif
#if CYTHON_COMPILING_IN_PYPY == 1
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x030A0000)
#else
  #define __PYX_NEED_TP_PRINT_SLOT  (PY_VERSION_HEX >= 0x030800b4 && PY_VERSION_HEX < 0x03090000)
#endif
#define __PYX_REINTERPRET_FUNCION(func_pointer, other_pointer) ((func_pointer)(void(*)(void))(other_pointer))

#ifndef __cplusplus
  #error "Cython files generated with the C++ option must be compiled with a C++ compiler."
#endif
#ifndef CYTHON_INLINE
  #if defined(__clang__)
    #define CYTHON_INLINE __inline__ __attribute__ ((__unused__))
  #else
    #define CYTHON_INLINE inline
  #endif
#endif
template<typename T>
void __Pyx_call_destructor(T& x) {
    x.~T();
}
template<typename T>
class __Pyx_FakeReference {
  public:
    __Pyx_FakeReference() : ptr(NULL) { }
    __Pyx_FakeReference(const T& ref) : ptr(const_cast<T*>(&ref)) { }
    T *operator->() { return ptr; }
    T *operator&() { return ptr; }
    operator T&() { return *ptr; }
    template<typename U> bool operator ==(const U& other) const { return *ptr == other; }
    template<typename U> bool operator !=(const U& other) const { return *ptr != other; }
    template<typename U> bool operator==(const __Pyx_FakeReference<U>& other) const { return *ptr == *other.ptr; }
    template<typename U> bool operator!=(const __Pyx_FakeReference<U>& other) const { return *ptr != *other.ptr; }
  private:
    T *ptr;
};

#define __PYX_BUILD_PY_SSIZE_T "n"
#define CYTHON_FORMAT_SSIZE_T "z"
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_DefaultClassType PyClass_Type
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a+k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_DefaultClassType PyType_Type
#if PY_VERSION_HEX >= 0x030B00A1
    static CYTHON_INLINE PyCodeObject* __Pyx_PyCode_New(int a, int p, int k, int l, int s, int f,
                                                    PyObject *code, PyObject *c, PyObject* n, PyObject *v,
                                                    PyObject *fv, PyObject *cell, PyObject* fn,
                                                    PyObject *name, int fline, PyObject *lnos) {
        PyObject *kwds=NULL, *argcount=NULL, *posonlyargcount=NULL, *kwonlyargcount=NULL;
        PyObject *nlocals=NULL, *stacksize=NULL, *flags=NULL, *replace=NULL, *empty=NULL;
        const char *fn_cstr=NULL;
        const char *name_cstr=NULL;
        PyCodeObject *co=NULL, *result=NULL;
        PyObject *type, *value, *traceback;
        PyErr_Fetch(&type, &value, &traceback);
        if (!(kwds=PyDict_New())) goto end;
        if (!(argcount=PyLong_FromLong(a))) goto end;
        if (PyDict_SetItemString(kwds, "co_argcount", argcount) != 0) goto end;
        if (!(posonlyargcount=PyLong_FromLong(p))) goto end;
        if (PyDict_SetItemString(kwds, "co_posonlyargcount", posonlyargcount) != 0) goto end;
        if (!(kwonlyargcount=PyLong_FromLong(k))) goto end;
        if (PyDict_SetItemString(kwds, "co_kwonlyargcount", kwonlyargcount) != 0) goto end;
        if (!(nlocals=PyLong_FromLong(l))) goto end;
        if (PyDict_SetItemString(kwds, "co_nlocals", nlocals) != 0) goto end;
        if (!(stacksize=PyLong_FromLong(s))) goto end;
        if (PyDict_SetItemString(kwds, "co_stacksize", stacksize) != 0) goto end;
        if (!(flags=PyLong_FromLong(f))) goto end;
        if (PyDict_SetItemString(kwds, "co_flags", flags) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_code", code) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_consts", c) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_names", n) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_varnames", v) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_freevars", fv) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_cellvars", cell) != 0) goto end;
        if (PyDict_SetItemString(kwds, "co_linetable", lnos) != 0) goto end;
        if (!(fn_cstr=PyUnicode_AsUTF8AndSize(fn, NULL))) goto end;
        if (!(name_cstr=PyUnicode_AsUTF8AndSize(name, NULL))) goto end;
        if (!(co = PyCode_NewEmpty(fn_cstr, name_cstr, fline))) goto end;
        if (!(replace = PyObject_GetAttrString((PyObject*)co, "replace"))) goto end;
        if (!(empty = PyTuple_New(0))) goto end;
        result = (PyCodeObject*) PyObject_Call(replace, empty, kwds);
    end:
        Py_XDECREF((PyObject*) co);
        Py_XDECREF(kwds);
        Py_XDECREF(argcount);
        Py_XDECREF(posonlyargcount);
        Py_XDECREF(kwonlyargcount);
        Py_XDECREF(nlocals);
        Py_XDECREF(stacksize);
        Py_XDECREF(replace);
        Py_XDECREF(empty);
        if (type) {
            PyErr_Restore(type, value, traceback);
        }
        return result;
    }
#elif PY_VERSION_HEX >= 0x030800B2 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_NewWithPosOnlyArgs(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_PyCode_New(a, p, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)\
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#endif
#if PY_VERSION_HEX >= 0x030900A4 || defined(Py_IS_TYPE)
  #define __Pyx_IS_TYPE(ob, type) Py_IS_TYPE(ob, type)
#else
  #define __Pyx_IS_TYPE(ob, type) (((const PyObject*)ob)->ob_type == (type))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_Is)
  #define __Pyx_Py_Is(x, y)  Py_Is(x, y)
#else
  #define __Pyx_Py_Is(x, y) ((x) == (y))
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsNone)
  #define __Pyx_Py_IsNone(ob) Py_IsNone(ob)
#else
  #define __Pyx_Py_IsNone(ob) __Pyx_Py_Is((ob), Py_None)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsTrue)
  #define __Pyx_Py_IsTrue(ob) Py_IsTrue(ob)
#else
  #define __Pyx_Py_IsTrue(ob) __Pyx_Py_Is((ob), Py_True)
#endif
#if PY_VERSION_HEX >= 0x030A00B1 || defined(Py_IsFalse)
  #define __Pyx_Py_IsFalse(ob) Py_IsFalse(ob)
#else
  #define __Pyx_Py_IsFalse(ob) __Pyx_Py_Is((ob), Py_False)
#endif
#define __Pyx_NoneAsNull(obj)  (__Pyx_Py_IsNone(obj) ? NULL : (obj))
#if PY_VERSION_HEX >= 0x030900F0 && !CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyObject_GC_IsFinalized(o) PyObject_GC_IsFinalized(o)
#else
  #define __Pyx_PyObject_GC_IsFinalized(o) _PyGC_FINALIZED(o)
#endif
#ifndef CO_COROUTINE
  #define CO_COROUTINE 0x80
#endif
#ifndef CO_ASYNC_GENERATOR
  #define CO_ASYNC_GENERATOR 0x200
#endif
#ifndef Py_TPFLAGS_CHECKTYPES
  #define Py_TPFLAGS_CHECKTYPES 0
#endif
#ifndef Py_TPFLAGS_HAVE_INDEX
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#ifndef Py_TPFLAGS_HAVE_NEWBUFFER
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#ifndef Py_TPFLAGS_HAVE_FINALIZE
  #define Py_TPFLAGS_HAVE_FINALIZE 0
#endif
#ifndef Py_TPFLAGS_SEQUENCE
  #define Py_TPFLAGS_SEQUENCE 0
#endif
#ifndef Py_TPFLAGS_MAPPING
  #define Py_TPFLAGS_MAPPING 0
#endif
#ifndef METH_STACKLESS
  #define METH_STACKLESS 0
#endif
#if PY_VERSION_HEX <= 0x030700A3 || !defined(METH_FASTCALL)
  #ifndef METH_FASTCALL
     #define METH_FASTCALL 0x80
  #endif
  typedef PyObject *(*__Pyx_PyCFunctionFast) (PyObject *self, PyObject *const *args, Py_ssize_t nargs);
  typedef PyObject *(*__Pyx_PyCFunctionFastWithKeywords) (PyObject *self, PyObject *const *args,
                                                          Py_ssize_t nargs, PyObject *kwnames);
#else
  #define __Pyx_PyCFunctionFast _PyCFunctionFast
  #define __Pyx_PyCFunctionFastWithKeywords _PyCFunctionFastWithKeywords
#endif
#if CYTHON_METH_FASTCALL
  #define __Pyx_METH_FASTCALL METH_FASTCALL
  #define __Pyx_PyCFunction_FastCall __Pyx_PyCFunctionFast
  #define __Pyx_PyCFunction_FastCallWithKeywords __Pyx_PyCFunctionFastWithKeywords
#else
  #define __Pyx_METH_FASTCALL METH_VARARGS
  #define __Pyx_PyCFunction_FastCall PyCFunction
  #define __Pyx_PyCFunction_FastCallWithKeywords PyCFunctionWithKeywords
#endif
#if CYTHON_VECTORCALL
  #define __pyx_vectorcallfunc vectorcallfunc
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  PY_VECTORCALL_ARGUMENTS_OFFSET
  #define __Pyx_PyVectorcall_NARGS(n)  PyVectorcall_NARGS((size_t)(n))
#elif CYTHON_BACKPORT_VECTORCALL
  typedef PyObject *(*__pyx_vectorcallfunc)(PyObject *callable, PyObject *const *args,
                                            size_t nargsf, PyObject *kwnames);
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  ((size_t)1 << (8 * sizeof(size_t) - 1))
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(((size_t)(n)) & ~__Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET))
#else
  #define __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET  0
  #define __Pyx_PyVectorcall_NARGS(n)  ((Py_ssize_t)(n))
#endif
#if PY_VERSION_HEX < 0x030900B1
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  ((void)m, PyType_FromSpecWithBases(s, b))
  typedef PyObject *(*__Pyx_PyCMethod)(PyObject *, PyTypeObject *, PyObject *const *, size_t, PyObject *);
#else
  #define __Pyx_PyType_FromModuleAndSpec(m, s, b)  PyType_FromModuleAndSpec(m, s, b)
  #define __Pyx_PyCMethod  PyCMethod
#endif
#ifndef METH_METHOD
  #define METH_METHOD 0x200
#endif
#if CYTHON_COMPILING_IN_PYPY && !defined(PyObject_Malloc)
  #define PyObject_Malloc(s)   PyMem_Malloc(s)
  #define PyObject_Free(p)     PyMem_Free(p)
  #define PyObject_Realloc(p)  PyMem_Realloc(p)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)
#else
  #define __Pyx_PyCode_HasFreeVars(co)  (PyCode_GetNumFree(co) > 0)
  #define __Pyx_PyFrame_SetLineNumber(frame, lineno)  (frame)->f_lineno = (lineno)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyThreadState_Current PyThreadState_Get()
#elif !CYTHON_FAST_THREAD_STATE
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#elif PY_VERSION_HEX >= 0x03060000
  #define __Pyx_PyThreadState_Current _PyThreadState_UncheckedGet()
#elif PY_VERSION_HEX >= 0x03000000
  #define __Pyx_PyThreadState_Current PyThreadState_GET()
#else
  #define __Pyx_PyThreadState_Current _PyThreadState_Current
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE void *__Pyx_PyModule_GetState(PyObject *op)
{
    void *result;
    result = PyModule_GetState(op);
    if (!result)
        Py_FatalError("Couldn't find the module state");
    return result;
}
#endif
#define __Pyx_PyObject_GetSlot(obj, name, func_ctype)  __Pyx_PyType_GetSlot(Py_TYPE(obj), name, func_ctype)
#if CYTHON_COMPILING_IN_LIMITED_API
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((func_ctype) PyType_GetSlot((type), Py_##name))
#else
  #define __Pyx_PyType_GetSlot(type, name, func_ctype)  ((type)->name)
#endif
#if PY_VERSION_HEX < 0x030700A2 && !defined(PyThread_tss_create) && !defined(Py_tss_NEEDS_INIT)
#include "pythread.h"
#define Py_tss_NEEDS_INIT 0
typedef int Py_tss_t;
static CYTHON_INLINE int PyThread_tss_create(Py_tss_t *key) {
  *key = PyThread_create_key();
  return 0;
}
static CYTHON_INLINE Py_tss_t * PyThread_tss_alloc(void) {
  Py_tss_t *key = (Py_tss_t *)PyObject_Malloc(sizeof(Py_tss_t));
  *key = Py_tss_NEEDS_INIT;
  return key;
}
static CYTHON_INLINE void PyThread_tss_free(Py_tss_t *key) {
  PyObject_Free(key);
}
static CYTHON_INLINE int PyThread_tss_is_created(Py_tss_t *key) {
  return *key != Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE void PyThread_tss_delete(Py_tss_t *key) {
  PyThread_delete_key(*key);
  *key = Py_tss_NEEDS_INIT;
}
static CYTHON_INLINE int PyThread_tss_set(Py_tss_t *key, void *value) {
  return PyThread_set_key_value(*key, value);
}
static CYTHON_INLINE void * PyThread_tss_get(Py_tss_t *key) {
  return PyThread_get_key_value(*key);
}
#endif
#if PY_MAJOR_VERSION < 3
    #if CYTHON_COMPILING_IN_PYPY
        #if PYPY_VERSION_NUM < 0x07030600
            #if defined(__cplusplus) && __cplusplus >= 201402L
                [[deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")]]
            #elif defined(__GNUC__) || defined(__clang__)
                __attribute__ ((__deprecated__("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6")))
            #elif defined(_MSC_VER)
                __declspec(deprecated("`with nogil:` inside a nogil function will not release the GIL in PyPy2 < 7.3.6"))
            #endif
            static CYTHON_INLINE int PyGILState_Check(void) {
                return 0;
            }
        #else  // PYPY_VERSION_NUM < 0x07030600
        #endif  // PYPY_VERSION_NUM < 0x07030600
    #else
        static CYTHON_INLINE int PyGILState_Check(void) {
            PyThreadState * tstate = _PyThreadState_Current;
            return tstate && (tstate == PyGILState_GetThisThreadState());
        }
    #endif
#endif
#if CYTHON_COMPILING_IN_CPYTHON || defined(_PyDict_NewPresized)
#define __Pyx_PyDict_NewPresized(n)  ((n <= 8) ? PyDict_New() : _PyDict_NewPresized(n))
#else
#define __Pyx_PyDict_NewPresized(n)  PyDict_New()
#endif
#if PY_MAJOR_VERSION >= 3 || CYTHON_FUTURE_DIVISION
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_Divide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceDivide(x,y)
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX > 0x030600B4 && CYTHON_USE_UNICODE_INTERNALS
#define __Pyx_PyDict_GetItemStrWithError(dict, name)  _PyDict_GetItem_KnownHash(dict, name, ((PyASCIIObject *) name)->hash)
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStr(PyObject *dict, PyObject *name) {
    PyObject *res = __Pyx_PyDict_GetItemStrWithError(dict, name);
    if (res == NULL) PyErr_Clear();
    return res;
}
#elif PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
#define __Pyx_PyDict_GetItemStrWithError  PyDict_GetItemWithError
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#else
static CYTHON_INLINE PyObject * __Pyx_PyDict_GetItemStrWithError(PyObject *dict, PyObject *name) {
#if CYTHON_COMPILING_IN_PYPY
    return PyDict_GetItem(dict, name);
#else
    PyDictEntry *ep;
    PyDictObject *mp = (PyDictObject*) dict;
    long hash = ((PyStringObject *) name)->ob_shash;
    assert(hash != -1);
    ep = (mp->ma_lookup)(mp, name, hash);
    if (ep == NULL) {
        return NULL;
    }
    return ep->me_value;
#endif
}
#define __Pyx_PyDict_GetItemStr           PyDict_GetItem
#endif
#if CYTHON_USE_TYPE_SLOTS
  #define __Pyx_PyType_GetFlags(tp)   (((PyTypeObject *)tp)->tp_flags)
  #define __Pyx_PyType_HasFeature(type, feature)  ((__Pyx_PyType_GetFlags(type) & (feature)) != 0)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  (Py_TYPE(obj)->tp_iternext)
#else
  #define __Pyx_PyType_GetFlags(tp)   (PyType_GetFlags((PyTypeObject *)tp))
  #define __Pyx_PyType_HasFeature(type, feature)  PyType_HasFeature(type, feature)
  #define __Pyx_PyObject_GetIterNextFunc(obj)  PyIter_Next
#endif
#if CYTHON_USE_TYPE_SPECS && PY_VERSION_HEX >= 0x03080000
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  {\
    PyTypeObject *type = Py_TYPE(obj);\
    assert(__Pyx_PyType_HasFeature(type, Py_TPFLAGS_HEAPTYPE));\
    PyObject_GC_Del(obj);\
    Py_DECREF(type);\
}
#else
#define __Pyx_PyHeapTypeObject_GC_Del(obj)  PyObject_GC_Del(obj)
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GetLength(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_ReadChar(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((void)u, 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((void)u, (0))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)u)
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)k, PyUnicode_ReadChar((PyObject*)(d), i))
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GetLength(u))
#elif PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_READY(op)       (0)
  #else
    #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ?\
                                                0 : _PyUnicode_Ready((PyObject *)(op)))
  #endif
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   PyUnicode_MAX_CHAR_VALUE(u)
  #define __Pyx_PyUnicode_KIND(u)         ((int)PyUnicode_KIND(u))
  #define __Pyx_PyUnicode_DATA(u)         PyUnicode_DATA(u)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  PyUnicode_WRITE(k, d, i, (Py_UCS4) ch)
  #if PY_VERSION_HEX >= 0x030C0000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_LENGTH(u))
  #else
    #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x03090000
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : ((PyCompactUnicodeObject *)(u))->wstr_length))
    #else
    #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != (likely(PyUnicode_IS_READY(u)) ? PyUnicode_GET_LENGTH(u) : PyUnicode_GET_SIZE(u)))
    #endif
  #endif
#else
  #define CYTHON_PEP393_ENABLED 0
  #define PyUnicode_1BYTE_KIND  1
  #define PyUnicode_2BYTE_KIND  2
  #define PyUnicode_4BYTE_KIND  4
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_MAX_CHAR_VALUE(u)   ((sizeof(Py_UNICODE) == 2) ? 65535U : 1114111U)
  #define __Pyx_PyUnicode_KIND(u)         ((int)sizeof(Py_UNICODE))
  #define __Pyx_PyUnicode_DATA(u)         ((void*)PyUnicode_AS_UNICODE(u))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((void)(k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
  #define __Pyx_PyUnicode_WRITE(k, d, i, ch)  (((void)(k)), ((Py_UNICODE*)d)[i] = (Py_UNICODE) ch)
  #define __Pyx_PyUnicode_IS_TRUE(u)      (0 != PyUnicode_GET_SIZE(u))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #define __Pyx_PyUnicode_Concat(a, b)      PyNumber_Add(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  PyNumber_Add(a, b)
#else
  #define __Pyx_PyUnicode_Concat(a, b)      PyUnicode_Concat(a, b)
  #define __Pyx_PyUnicode_ConcatSafe(a, b)  ((unlikely((a) == Py_None) || unlikely((b) == Py_None)) ?\
      PyNumber_Add(a, b) : __Pyx_PyUnicode_Concat(a, b))
#endif
#if CYTHON_COMPILING_IN_PYPY
  #if !defined(PyUnicode_DecodeUnicodeEscape)
    #define PyUnicode_DecodeUnicodeEscape(s, size, errors)  PyUnicode_Decode(s, size, "unicode_escape", errors)
  #endif
  #if !defined(PyUnicode_Contains) || (PY_MAJOR_VERSION == 2 && PYPY_VERSION_NUM < 0x07030500)
    #undef PyUnicode_Contains
    #define PyUnicode_Contains(u, s)  PySequence_Contains(u, s)
  #endif
  #if !defined(PyByteArray_Check)
    #define PyByteArray_Check(obj)  PyObject_TypeCheck(obj, &PyByteArray_Type)
  #endif
  #if !defined(PyObject_Format)
    #define PyObject_Format(obj, fmt)  PyObject_CallMethod(obj, "__format__", "O", fmt)
  #endif
#endif
#define __Pyx_PyString_FormatSafe(a, b)   ((unlikely((a) == Py_None || (PyString_Check(b) && !PyString_CheckExact(b)))) ? PyNumber_Remainder(a, b) : __Pyx_PyString_Format(a, b))
#define __Pyx_PyUnicode_FormatSafe(a, b)  ((unlikely((a) == Py_None || (PyUnicode_Check(b) && !PyUnicode_CheckExact(b)))) ? PyNumber_Remainder(a, b) : PyUnicode_Format(a, b))
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyString_Format(a, b)  PyUnicode_Format(a, b)
#else
  #define __Pyx_PyString_Format(a, b)  PyString_Format(a, b)
#endif
#if PY_MAJOR_VERSION < 3 && !defined(PyObject_ASCII)
  #define PyObject_ASCII(o)            PyObject_Repr(o)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#ifndef PyObject_Unicode
  #define PyObject_Unicode             PyObject_Str
#endif
#endif
#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyBaseString_Check(obj) PyUnicode_Check(obj)
  #define __Pyx_PyBaseString_CheckExact(obj) PyUnicode_CheckExact(obj)
#else
  #define __Pyx_PyBaseString_Check(obj) (PyString_Check(obj) || PyUnicode_Check(obj))
  #define __Pyx_PyBaseString_CheckExact(obj) (PyString_CheckExact(obj) || PyUnicode_CheckExact(obj))
#endif
#if CYTHON_COMPILING_IN_CPYTHON
  #define __Pyx_PySequence_ListKeepNew(obj)\
    (likely(PyList_CheckExact(obj) && Py_REFCNT(obj) == 1) ? __Pyx_NewRef(obj) : PySequence_List(obj))
#else
  #define __Pyx_PySequence_ListKeepNew(obj)  PySequence_List(obj)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        __Pyx_IS_TYPE(obj, &PySet_Type)
#endif
#if PY_VERSION_HEX >= 0x030900A4
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_SET_REFCNT(obj, refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SET_SIZE(obj, size)
#else
  #define __Pyx_SET_REFCNT(obj, refcnt) Py_REFCNT(obj) = (refcnt)
  #define __Pyx_SET_SIZE(obj, size) Py_SIZE(obj) = (size)
#endif
#if CYTHON_ASSUME_SAFE_MACROS
  #define __Pyx_PySequence_SIZE(seq)  Py_SIZE(seq)
#else
  #define __Pyx_PySequence_SIZE(seq)  PySequence_Size(seq)
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define __Pyx_Py3Int_Check(op)       PyLong_Check(op)
  #define __Pyx_Py3Int_CheckExact(op)  PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
  #define PyNumber_Int                 PyNumber_Long
#else
  #define __Pyx_Py3Int_Check(op)       (PyLong_Check(op) || PyInt_Check(op))
  #define __Pyx_Py3Int_CheckExact(op)  (PyLong_CheckExact(op) || PyInt_CheckExact(op))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_MAJOR_VERSION >= 3 && CYTHON_COMPILING_IN_PYPY
  #ifndef PyUnicode_InternFromString
    #define PyUnicode_InternFromString(s) PyUnicode_FromString(s)
  #endif
#endif
#if PY_VERSION_HEX < 0x030200A4
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsHash_t
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   __Pyx_PyIndex_AsSsize_t
#endif
#if CYTHON_USE_ASYNC_SLOTS
  #if PY_VERSION_HEX >= 0x030500B1
    #define __Pyx_PyAsyncMethodsStruct PyAsyncMethods
    #define __Pyx_PyType_AsAsync(obj) (Py_TYPE(obj)->tp_as_async)
  #else
    #define __Pyx_PyType_AsAsync(obj) ((__Pyx_PyAsyncMethodsStruct*) (Py_TYPE(obj)->tp_reserved))
  #endif
#else
  #define __Pyx_PyType_AsAsync(obj) NULL
#endif
#ifndef __Pyx_PyAsyncMethodsStruct
    typedef struct {
        unaryfunc am_await;
        unaryfunc am_aiter;
        unaryfunc am_anext;
    } __Pyx_PyAsyncMethodsStruct;
#endif

#if defined(_WIN32) || defined(WIN32) || defined(MS_WINDOWS)
  #if !defined(_USE_MATH_DEFINES)
    #define _USE_MATH_DEFINES
  #endif
#endif
#include <math.h>
#ifdef NAN
#define __PYX_NAN() ((float) NAN)
#else
static CYTHON_INLINE float __PYX_NAN() {
  float value;
  memset(&value, 0xFF, sizeof(value));
  return value;
}
#endif
#if defined(__CYGWIN__) && defined(_LDBL_EQ_DBL)
#define __Pyx_truncl trunc
#else
#define __Pyx_truncl truncl
#endif

#define __PYX_MARK_ERR_POS(f_index, lineno) \
    { __pyx_filename = __pyx_f[f_index]; (void)__pyx_filename; __pyx_lineno = lineno; (void)__pyx_lineno; __pyx_clineno = __LINE__; (void)__pyx_clineno; }
#define __PYX_ERR(f_index, lineno, Ln_error) \
    { __PYX_MARK_ERR_POS(f_index, lineno) goto Ln_error; }

#ifdef CYTHON_EXTERN_C
    #undef __PYX_EXTERN_C
    #define __PYX_EXTERN_C CYTHON_EXTERN_C
#elif defined(__PYX_EXTERN_C)
    #ifdef _MSC_VER
    #pragma message ("Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.")
    #else
    #warning Please do not define the '__PYX_EXTERN_C' macro externally. Use 'CYTHON_EXTERN_C' instead.
    #endif
#else
    #define __PYX_EXTERN_C extern "C++"
#endif

#define __PYX_HAVE__cantera__reaction
#define __PYX_HAVE_API__cantera__reaction
/* Early includes */
#include "ios"
#include "new"
#include "stdexcept"
#include "typeinfo"
#include <vector>
#include <string.h>
#include <string>
#include <utility>

    #if __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600)
    // move should be defined for these versions of MSVC, but __cplusplus isn't set usefully
    #include <type_traits>

    namespace cython_std {
    template <typename T> typename std::remove_reference<T>::type&& move(T& t) noexcept { return std::move(t); }
    template <typename T> typename std::remove_reference<T>::type&& move(T&& t) noexcept { return std::move(t); }
    }

    #endif
    
#include <map>
#include <functional>
#include <memory>
#include <stdio.h>
#include "pythread.h"

    /* Using NumPy API declarations from "numpy/__init__.cython-30.pxd" */
    
#include "numpy/arrayobject.h"
#include "numpy/ndarrayobject.h"
#include "numpy/ndarraytypes.h"
#include "numpy/arrayscalars.h"
#include "numpy/ufuncobject.h"
#include "cantera/cython/funcWrapper.h"
#include "cantera/numerics/Func1.h"
#include "cantera/numerics/Func1Factory.h"
#include "cantera/base/Units.h"
#include <array>
#include "cantera/extensions/PythonHandle.h"
#include "cantera/base/Delegator.h"
#include "cantera/base/ExtensionManager.h"
#include "cantera/base/ExtensionManagerFactory.h"
#include "cantera/extensions/PythonExtensionManager.h"
#include "cantera/kinetics/ReactionRateFactory.h"
#include "cantera/kinetics/ReactionRate.h"
#include "cantera/kinetics/Arrhenius.h"
#include "cantera/kinetics/TwoTempPlasmaRate.h"
#include "cantera/base/Array.h"
#include "cantera/cython/wrappers.h"
#include "cantera/kinetics/Reaction.h"
#include "cantera/kinetics/Falloff.h"
#include "cantera/kinetics/PlogRate.h"
#include "cantera/kinetics/ChebyshevRate.h"
#include "cantera/kinetics/Custom.h"
#include "cantera/kinetics/ReactionRateDelegator.h"
#include "cantera/kinetics/InterfaceRate.h"
#include "cantera/thermo/ThermoFactory.h"
#include "cantera/kinetics/KineticsFactory.h"
#include "cantera/transport/TransportFactory.h"
#include "cantera/base/Interface.h"
#include "cantera/base/Solution.h"
#include "cantera/base/SolutionArray.h"
#include "cantera/numerics/eigen_sparse.h"
#include "cantera/kinetics/Kinetics.h"
#include "cantera/kinetics/InterfaceKinetics.h"
#include "cantera/cython/kinetics_utils.h"
#include <unordered_map>
#include "cantera/base/AnyMap.h"
#include "cantera/base/stringUtils.h"
#include "cantera/base/global.h"
#include "cantera/cython/utils_utils.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#if defined(PYREX_WITHOUT_ASSERTIONS) && !defined(CYTHON_WITHOUT_ASSERTIONS)
#define CYTHON_WITHOUT_ASSERTIONS
#endif

typedef struct {PyObject **p; const char *s; const Py_ssize_t n; const char* encoding;
                const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry;

#define __PYX_DEFAULT_STRING_ENCODING_IS_ASCII 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_UTF8 0
#define __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT (PY_MAJOR_VERSION >= 3 && __PYX_DEFAULT_STRING_ENCODING_IS_UTF8)
#define __PYX_DEFAULT_STRING_ENCODING ""
#define __Pyx_PyObject_FromString __Pyx_PyBytes_FromString
#define __Pyx_PyObject_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#define __Pyx_uchar_cast(c) ((unsigned char)c)
#define __Pyx_long_cast(x) ((long)x)
#define __Pyx_fits_Py_ssize_t(v, type, is_signed)  (\
    (sizeof(type) < sizeof(Py_ssize_t))  ||\
    (sizeof(type) > sizeof(Py_ssize_t) &&\
          likely(v < (type)PY_SSIZE_T_MAX ||\
                 v == (type)PY_SSIZE_T_MAX)  &&\
          (!is_signed || likely(v > (type)PY_SSIZE_T_MIN ||\
                                v == (type)PY_SSIZE_T_MIN)))  ||\
    (sizeof(type) == sizeof(Py_ssize_t) &&\
          (is_signed || likely(v < (type)PY_SSIZE_T_MAX ||\
                               v == (type)PY_SSIZE_T_MAX)))  )
static CYTHON_INLINE int __Pyx_is_valid_index(Py_ssize_t i, Py_ssize_t limit) {
    return (size_t) i < (size_t) limit;
}
#if defined (__cplusplus) && __cplusplus >= 201103L
    #include <cstdlib>
    #define __Pyx_sst_abs(value) std::abs(value)
#elif SIZEOF_INT >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) abs(value)
#elif SIZEOF_LONG >= SIZEOF_SIZE_T
    #define __Pyx_sst_abs(value) labs(value)
#elif defined (_MSC_VER)
    #define __Pyx_sst_abs(value) ((Py_ssize_t)_abs64(value))
#elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define __Pyx_sst_abs(value) llabs(value)
#elif defined (__GNUC__)
    #define __Pyx_sst_abs(value) __builtin_llabs(value)
#else
    #define __Pyx_sst_abs(value) ((value<0) ? -value : value)
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject*);
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject*, Py_ssize_t* length);
#define __Pyx_PyByteArray_FromString(s) PyByteArray_FromStringAndSize((const char*)s, strlen((const char*)s))
#define __Pyx_PyByteArray_FromStringAndSize(s, l) PyByteArray_FromStringAndSize((const char*)s, l)
#define __Pyx_PyBytes_FromString        PyBytes_FromString
#define __Pyx_PyBytes_FromStringAndSize PyBytes_FromStringAndSize
static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char*);
#if PY_MAJOR_VERSION < 3
    #define __Pyx_PyStr_FromString        __Pyx_PyBytes_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyBytes_FromStringAndSize
#else
    #define __Pyx_PyStr_FromString        __Pyx_PyUnicode_FromString
    #define __Pyx_PyStr_FromStringAndSize __Pyx_PyUnicode_FromStringAndSize
#endif
#define __Pyx_PyBytes_AsWritableString(s)     ((char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableSString(s)    ((signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsWritableUString(s)    ((unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsString(s)     ((const char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsSString(s)    ((const signed char*) PyBytes_AS_STRING(s))
#define __Pyx_PyBytes_AsUString(s)    ((const unsigned char*) PyBytes_AS_STRING(s))
#define __Pyx_PyObject_AsWritableString(s)    ((char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableSString(s)    ((signed char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsWritableUString(s)    ((unsigned char*)(__pyx_uintptr_t) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsSString(s)    ((const signed char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_AsUString(s)    ((const unsigned char*) __Pyx_PyObject_AsString(s))
#define __Pyx_PyObject_FromCString(s)  __Pyx_PyObject_FromString((const char*)s)
#define __Pyx_PyBytes_FromCString(s)   __Pyx_PyBytes_FromString((const char*)s)
#define __Pyx_PyByteArray_FromCString(s)   __Pyx_PyByteArray_FromString((const char*)s)
#define __Pyx_PyStr_FromCString(s)     __Pyx_PyStr_FromString((const char*)s)
#define __Pyx_PyUnicode_FromCString(s) __Pyx_PyUnicode_FromString((const char*)s)
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const wchar_t *u)
{
    const wchar_t *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#else
static CYTHON_INLINE size_t __Pyx_Py_UNICODE_strlen(const Py_UNICODE *u)
{
    const Py_UNICODE *u_end = u;
    while (*u_end++) ;
    return (size_t)(u_end - u - 1);
}
#endif
#define __Pyx_PyUnicode_FromOrdinal(o)       PyUnicode_FromOrdinal((int)o)
#define __Pyx_PyUnicode_FromUnicode(u)       PyUnicode_FromUnicode(u, __Pyx_Py_UNICODE_strlen(u))
#define __Pyx_PyUnicode_FromUnicodeAndLength PyUnicode_FromUnicode
#define __Pyx_PyUnicode_AsUnicode            PyUnicode_AsUnicode
#define __Pyx_NewRef(obj) (Py_INCREF(obj), obj)
#define __Pyx_Owned_Py_None(b) __Pyx_NewRef(Py_None)
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b);
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x);
#define __Pyx_PySequence_Tuple(obj)\
    (likely(PyTuple_CheckExact(obj)) ? __Pyx_NewRef(obj) : PySequence_Tuple(obj))
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject*);
#if CYTHON_ASSUME_SAFE_MACROS
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))
#if PY_MAJOR_VERSION >= 3
#define __Pyx_PyNumber_Int(x) (PyLong_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Long(x))
#else
#define __Pyx_PyNumber_Int(x) (PyInt_CheckExact(x) ? __Pyx_NewRef(x) : PyNumber_Int(x))
#endif
#if CYTHON_USE_PYLONG_INTERNALS
  #if PY_VERSION_HEX >= 0x030C00A7
  #ifndef _PyLong_SIGN_MASK
    #define _PyLong_SIGN_MASK 3
  #endif
  #ifndef _PyLong_NON_SIZE_BITS
    #define _PyLong_NON_SIZE_BITS 3
  #endif
  #define __Pyx_PyLong_Sign(x)  (((PyLongObject*)x)->long_value.lv_tag & _PyLong_SIGN_MASK)
  #define __Pyx_PyLong_IsNeg(x)  ((__Pyx_PyLong_Sign(x) & 2) != 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (!__Pyx_PyLong_IsNeg(x))
  #define __Pyx_PyLong_IsZero(x)  (__Pyx_PyLong_Sign(x) & 1)
  #define __Pyx_PyLong_IsPos(x)  (__Pyx_PyLong_Sign(x) == 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  (__Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  ((Py_ssize_t) (((PyLongObject*)x)->long_value.lv_tag >> _PyLong_NON_SIZE_BITS))
  #define __Pyx_PyLong_SignedDigitCount(x)\
        ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * __Pyx_PyLong_DigitCount(x))
  #if defined(PyUnstable_Long_IsCompact) && defined(PyUnstable_Long_CompactValue)
    #define __Pyx_PyLong_IsCompact(x)     PyUnstable_Long_IsCompact((PyLongObject*) x)
    #define __Pyx_PyLong_CompactValue(x)  PyUnstable_Long_CompactValue((PyLongObject*) x)
  #else
    #define __Pyx_PyLong_IsCompact(x)     (((PyLongObject*)x)->long_value.lv_tag < (2 << _PyLong_NON_SIZE_BITS))
    #define __Pyx_PyLong_CompactValue(x)  ((1 - (Py_ssize_t) __Pyx_PyLong_Sign(x)) * (Py_ssize_t) __Pyx_PyLong_Digits(x)[0])
  #endif
  typedef Py_ssize_t  __Pyx_compact_pylong;
  typedef size_t  __Pyx_compact_upylong;
  #else  // Py < 3.12
  #define __Pyx_PyLong_IsNeg(x)  (Py_SIZE(x) < 0)
  #define __Pyx_PyLong_IsNonNeg(x)  (Py_SIZE(x) >= 0)
  #define __Pyx_PyLong_IsZero(x)  (Py_SIZE(x) == 0)
  #define __Pyx_PyLong_IsPos(x)  (Py_SIZE(x) > 0)
  #define __Pyx_PyLong_CompactValueUnsigned(x)  ((Py_SIZE(x) == 0) ? 0 : __Pyx_PyLong_Digits(x)[0])
  #define __Pyx_PyLong_DigitCount(x)  __Pyx_sst_abs(Py_SIZE(x))
  #define __Pyx_PyLong_SignedDigitCount(x)  Py_SIZE(x)
  #define __Pyx_PyLong_IsCompact(x)  (Py_SIZE(x) == 0 || Py_SIZE(x) == 1 || Py_SIZE(x) == -1)
  #define __Pyx_PyLong_CompactValue(x)\
        ((Py_SIZE(x) == 0) ? (sdigit) 0 : ((Py_SIZE(x) < 0) ? -(sdigit)__Pyx_PyLong_Digits(x)[0] : (sdigit)__Pyx_PyLong_Digits(x)[0]))
  typedef sdigit  __Pyx_compact_pylong;
  typedef digit  __Pyx_compact_upylong;
  #endif
  #if PY_VERSION_HEX >= 0x030C00A5
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->long_value.ob_digit)
  #else
  #define __Pyx_PyLong_Digits(x)  (((PyLongObject*)x)->ob_digit)
  #endif
#endif
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
static int __Pyx_sys_getdefaultencoding_not_ascii;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    PyObject* ascii_chars_u = NULL;
    PyObject* ascii_chars_b = NULL;
    const char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    if (strcmp(default_encoding_c, "ascii") == 0) {
        __Pyx_sys_getdefaultencoding_not_ascii = 0;
    } else {
        char ascii_chars[128];
        int c;
        for (c = 0; c < 128; c++) {
            ascii_chars[c] = (char) c;
        }
        __Pyx_sys_getdefaultencoding_not_ascii = 1;
        ascii_chars_u = PyUnicode_DecodeASCII(ascii_chars, 128, NULL);
        if (!ascii_chars_u) goto bad;
        ascii_chars_b = PyUnicode_AsEncodedString(ascii_chars_u, default_encoding_c, NULL);
        if (!ascii_chars_b || !PyBytes_Check(ascii_chars_b) || memcmp(ascii_chars, PyBytes_AS_STRING(ascii_chars_b), 128) != 0) {
            PyErr_Format(
                PyExc_ValueError,
                "This module compiled with c_string_encoding=ascii, but default encoding '%.200s' is not a superset of ascii.",
                default_encoding_c);
            goto bad;
        }
        Py_DECREF(ascii_chars_u);
        Py_DECREF(ascii_chars_b);
    }
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    Py_XDECREF(ascii_chars_u);
    Py_XDECREF(ascii_chars_b);
    return -1;
}
#endif
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT && PY_MAJOR_VERSION >= 3
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_DecodeUTF8(c_str, size, NULL)
#else
#define __Pyx_PyUnicode_FromStringAndSize(c_str, size) PyUnicode_Decode(c_str, size, __PYX_DEFAULT_STRING_ENCODING, NULL)
#if __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
static char* __PYX_DEFAULT_STRING_ENCODING;
static int __Pyx_init_sys_getdefaultencoding_params(void) {
    PyObject* sys;
    PyObject* default_encoding = NULL;
    char* default_encoding_c;
    sys = PyImport_ImportModule("sys");
    if (!sys) goto bad;
    default_encoding = PyObject_CallMethod(sys, (char*) (const char*) "getdefaultencoding", NULL);
    Py_DECREF(sys);
    if (!default_encoding) goto bad;
    default_encoding_c = PyBytes_AsString(default_encoding);
    if (!default_encoding_c) goto bad;
    __PYX_DEFAULT_STRING_ENCODING = (char*) malloc(strlen(default_encoding_c) + 1);
    if (!__PYX_DEFAULT_STRING_ENCODING) goto bad;
    strcpy(__PYX_DEFAULT_STRING_ENCODING, default_encoding_c);
    Py_DECREF(default_encoding);
    return 0;
bad:
    Py_XDECREF(default_encoding);
    return -1;
}
#endif
#endif


/* Test for GCC > 2.95 */
#if defined(__GNUC__)     && (__GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95)))
  #define likely(x)   __builtin_expect(!!(x), 1)
  #define unlikely(x) __builtin_expect(!!(x), 0)
#else /* !__GNUC__ or GCC < 2.95 */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
static CYTHON_INLINE void __Pyx_pretend_to_initialize(void* ptr) { (void)ptr; }

#if !CYTHON_USE_MODULE_STATE
static PyObject *__pyx_m = NULL;
#endif
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm = __FILE__;
static const char *__pyx_filename;

/* Header.proto */
#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif (defined(_Complex_I) && !defined(_MSC_VER)) || ((defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) && !defined(__STDC_NO_COMPLEX__))
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif

/* #### Code section: filename_table ### */

static const char *__pyx_f[] = {
  "cantera/reaction.pyx",
  "<stringsource>",
  "contextvars.pxd",
  "__init__.cython-30.pxd",
  "cantera/reaction.pxd",
  "type.pxd",
  "bool.pxd",
  "complex.pxd",
  "cantera/func1.pxd",
  "cantera/units.pxd",
  "cantera/solutionbase.pxd",
  "cantera/kinetics.pxd",
  "cantera/_utils.pxd",
};
/* #### Code section: utility_code_proto_before_types ### */
/* #### Code section: numeric_typedefs ### */

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":732
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":733
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":734
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":735
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":739
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":740
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":741
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":742
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":746
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":747
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":756
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":757
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":758
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":760
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":761
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":762
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":764
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":765
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":767
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":768
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":769
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
/* #### Code section: complex_type_declarations ### */
/* Declarations.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif
static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

/* Declarations.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif
static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

/* #### Code section: type_declarations ### */

/*--- Type declarations ---*/
struct __pyx_obj_7cantera_5func1_Func1;
struct __pyx_obj_7cantera_5units_Units;
struct __pyx_obj_7cantera_5units_UnitStack;
struct __pyx_obj_7cantera_5units_UnitSystem;
struct __pyx_obj_7cantera_12solutionbase__SolutionBase;
struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase;
struct __pyx_obj_7cantera_8kinetics_Kinetics;
struct __pyx_obj_7cantera_8kinetics_InterfaceKinetics;
struct __pyx_obj_7cantera_6_utils_AnyMap;
struct __pyx_obj_7cantera_8reaction_ReactionRate;
struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase;
struct __pyx_obj_7cantera_8reaction_FalloffRate;
struct __pyx_obj_7cantera_8reaction_CustomRate;
struct __pyx_obj_7cantera_8reaction_ExtensibleRate;
struct __pyx_obj_7cantera_8reaction_ExtensibleRateData;
struct __pyx_obj_7cantera_8reaction_InterfaceRateBase;
struct __pyx_obj_7cantera_8reaction_StickRateBase;
struct __pyx_obj_7cantera_8reaction_ThirdBody;
struct __pyx_obj_7cantera_8reaction_Reaction;
struct __pyx_obj_7cantera_8reaction_Arrhenius;
struct __pyx_obj_7cantera_8reaction_ArrheniusRate;
struct __pyx_obj_7cantera_8reaction_BlowersMaselRate;
struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate;
struct __pyx_obj_7cantera_8reaction_LindemannRate;
struct __pyx_obj_7cantera_8reaction_TroeRate;
struct __pyx_obj_7cantera_8reaction_SriRate;
struct __pyx_obj_7cantera_8reaction_TsangRate;
struct __pyx_obj_7cantera_8reaction_PlogRate;
struct __pyx_obj_7cantera_8reaction_ChebyshevRate;
struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate;
struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate;
struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate;
struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate;
struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction;
struct __pyx_obj_7cantera_8reaction_FalloffReaction;
struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction;
struct __pyx_obj_7cantera_8reaction_CustomReaction;
struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap;
struct __pyx_opt_args_7cpython_11contextvars_get_value;
struct __pyx_opt_args_7cpython_11contextvars_get_value_no_default;

/* "cpython/contextvars.pxd":112
 * 
 * 
 * cdef inline object get_value(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the default value of the context variable,
 */
struct __pyx_opt_args_7cpython_11contextvars_get_value {
  int __pyx_n;
  PyObject *default_value;
};

/* "cpython/contextvars.pxd":129
 * 
 * 
 * cdef inline object get_value_no_default(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the provided default value if no such value was found.
 */
struct __pyx_opt_args_7cpython_11contextvars_get_value_no_default {
  int __pyx_n;
  PyObject *default_value;
};

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":771
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":772
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":773
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":775
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;

/* "ctcxx.pxd":19
 * from cython.operator cimport dereference as deref, preincrement as inc
 * 
 * ctypedef stdmap[string,double] Composition             # <<<<<<<<<<<<<<
 * 
 * import numpy as np
 */
typedef std::map<std::string,double>  __pyx_t_7cantera_5ctcxx_Composition;

/* "delegator.pxd":107
 * 
 * 
 * ctypedef CxxDelegator* CxxDelegatorPtr             # <<<<<<<<<<<<<<
 * 
 * cdef int assign_delegates(object, CxxDelegator*) except -1
 */
typedef Cantera::Delegator *__pyx_t_7cantera_9delegator_CxxDelegatorPtr;
struct __pyx_opt_args_7cantera_12solutionbase__assign_Solution;

/* "solutionbase.pxd":99
 * 
 * 
 * ctypedef void (*transportMethod1d)(CxxTransport*, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * ctypedef void (*transportMethod2d)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod1i)(CxxTransport*, size_t, double*) except +translate_exception
 */
typedef void (*__pyx_t_7cantera_12solutionbase_transportMethod1d)(Cantera::Transport *, double *);

/* "solutionbase.pxd":100
 * 
 * ctypedef void (*transportMethod1d)(CxxTransport*, double*) except +translate_exception
 * ctypedef void (*transportMethod2d)(CxxTransport*, size_t, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * ctypedef void (*transportPolyMethod1i)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod2i)(CxxTransport*, size_t, size_t, double*) except +translate_exception
 */
typedef void (*__pyx_t_7cantera_12solutionbase_transportMethod2d)(Cantera::Transport *, size_t, double *);

/* "solutionbase.pxd":101
 * ctypedef void (*transportMethod1d)(CxxTransport*, double*) except +translate_exception
 * ctypedef void (*transportMethod2d)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod1i)(CxxTransport*, size_t, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * ctypedef void (*transportPolyMethod2i)(CxxTransport*, size_t, size_t, double*) except +translate_exception
 * 
 */
typedef void (*__pyx_t_7cantera_12solutionbase_transportPolyMethod1i)(Cantera::Transport *, size_t, double *);

/* "solutionbase.pxd":102
 * ctypedef void (*transportMethod2d)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod1i)(CxxTransport*, size_t, double*) except +translate_exception
 * ctypedef void (*transportPolyMethod2i)(CxxTransport*, size_t, size_t, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * 
 * cdef _assign_Solution(_SolutionBase soln, shared_ptr[CxxSolution] cxx_soln,
 */
typedef void (*__pyx_t_7cantera_12solutionbase_transportPolyMethod2i)(Cantera::Transport *, size_t, size_t, double *);

/* "solutionbase.pxd":104
 * ctypedef void (*transportPolyMethod2i)(CxxTransport*, size_t, size_t, double*) except +translate_exception
 * 
 * cdef _assign_Solution(_SolutionBase soln, shared_ptr[CxxSolution] cxx_soln,             # <<<<<<<<<<<<<<
 *                       pybool reset_adjacent, pybool weak=?)
 * cdef object _wrap_Solution(shared_ptr[CxxSolution] cxx_soln)
 */
struct __pyx_opt_args_7cantera_12solutionbase__assign_Solution {
  int __pyx_n;
  PyBoolObject *weak;
};

/* "kinetics.pxd":140
 * 
 * 
 * ctypedef void (*kineticsMethod1d)(CxxKinetics*, double*) except +translate_exception             # <<<<<<<<<<<<<<
 * ctypedef CxxSparseMatrix (*kineticsMethodSparse)(CxxKinetics*) except +translate_exception
 * 
 */
typedef void (*__pyx_t_7cantera_8kinetics_kineticsMethod1d)(Cantera::Kinetics *, double *);

/* "kinetics.pxd":141
 * 
 * ctypedef void (*kineticsMethod1d)(CxxKinetics*, double*) except +translate_exception
 * ctypedef CxxSparseMatrix (*kineticsMethodSparse)(CxxKinetics*) except +translate_exception             # <<<<<<<<<<<<<<
 * 
 * cdef class Kinetics(_SolutionBase):
 */
typedef Eigen::SparseMatrix<double> (*__pyx_t_7cantera_8kinetics_kineticsMethodSparse)(Cantera::Kinetics *);
struct __pyx_opt_args_7cantera_6_utils_py_to_anymap;
struct __pyx_opt_args_7cantera_6_utils_python_to_anyvalue;

/* "_utils.pxd":106
 * cdef Composition comp_map(X) except *
 * 
 * cdef CxxAnyMap py_to_anymap(data, cbool hyphenize=*) except *             # <<<<<<<<<<<<<<
 * cdef anymap_to_py(CxxAnyMap& m)
 * 
 */
struct __pyx_opt_args_7cantera_6_utils_py_to_anymap {
  int __pyx_n;
  bool hyphenize;
};

/* "_utils.pxd":109
 * cdef anymap_to_py(CxxAnyMap& m)
 * 
 * cdef CxxAnyValue python_to_anyvalue(item, name=*) except *             # <<<<<<<<<<<<<<
 * cdef anyvalue_to_python(string name, CxxAnyValue& v)
 */
struct __pyx_opt_args_7cantera_6_utils_python_to_anyvalue {
  int __pyx_n;
  PyObject *name;
};
struct __pyx_opt_args_7cantera_8reaction_14ExtensibleRate_set_cxx_object;

/* "cantera/reaction.pxd":264
 * cdef class ExtensibleRate(ReactionRate):
 *     cdef public list _delegates
 *     cdef set_cxx_object(self, CxxReactionRate* rate=*)             # <<<<<<<<<<<<<<
 * 
 * cdef class ExtensibleRateData:
 */
struct __pyx_opt_args_7cantera_8reaction_14ExtensibleRate_set_cxx_object {
  int __pyx_n;
  Cantera::ReactionRate *rate;
};

/* "func1.pxd":46
 * 
 * 
 * cdef class Func1:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxFunc1] _func
 *     cdef CxxFunc1* func
 */
struct __pyx_obj_7cantera_5func1_Func1 {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_5func1_Func1 *__pyx_vtab;
  std::shared_ptr<Cantera::Func1>  _func;
  Cantera::Func1 *func;
  PyObject *callable;
  PyObject *exception;
};


/* "units.pxd":42
 * 
 * 
 * cdef class Units:             # <<<<<<<<<<<<<<
 *     cdef CxxUnits units
 *     @staticmethod
 */
struct __pyx_obj_7cantera_5units_Units {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_5units_Units *__pyx_vtab;
  Cantera::Units units;
};


/* "units.pxd":47
 *     cdef Units copy(CxxUnits)
 * 
 * cdef class UnitStack:             # <<<<<<<<<<<<<<
 *     cdef CxxUnitStack stack
 *     @staticmethod
 */
struct __pyx_obj_7cantera_5units_UnitStack {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_5units_UnitStack *__pyx_vtab;
  Cantera::UnitStack stack;
};


/* "units.pxd":53
 * 
 * 
 * cdef class UnitSystem:             # <<<<<<<<<<<<<<
 *     cdef _set_unitSystem(self, shared_ptr[CxxUnitSystem] units)
 *     cdef shared_ptr[CxxUnitSystem] _unitsystem
 */
struct __pyx_obj_7cantera_5units_UnitSystem {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_5units_UnitSystem *__pyx_vtab;
  std::shared_ptr<Cantera::UnitSystem>  _unitsystem;
  Cantera::UnitSystem *unitsystem;
};


/* "solutionbase.pxd":108
 * cdef object _wrap_Solution(shared_ptr[CxxSolution] cxx_soln)
 * 
 * cdef class _SolutionBase:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxSolution] _base
 *     cdef weak_ptr[CxxSolution] weak_base
 */
struct __pyx_obj_7cantera_12solutionbase__SolutionBase {
  PyObject_HEAD
  std::shared_ptr<Cantera::Solution>  _base;
  std::weak_ptr<Cantera::Solution>  weak_base;
  Cantera::Solution *base;
  Cantera::ThermoPhase *thermo;
  Cantera::Kinetics *kinetics;
  Cantera::Transport *transport;
  int thermo_basis;
  PyArrayObject *_selected_species;
  PyObject *parent;
  PyObject *_adjacent;
  PyObject *_soln_changed_callback;
  PyObject *_references;
};


/* "solutionbase.pxd":122
 *     cdef public object _references
 * 
 * cdef class SolutionArrayBase:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxSolutionArray] _base
 *     cdef CxxSolutionArray* base
 */
struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase {
  PyObject_HEAD
  std::shared_ptr<Cantera::SolutionArray>  _base;
  Cantera::SolutionArray *base;
  PyObject *_weakref_proxy;
};


/* "kinetics.pxd":143
 * ctypedef CxxSparseMatrix (*kineticsMethodSparse)(CxxKinetics*) except +translate_exception
 * 
 * cdef class Kinetics(_SolutionBase):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_7cantera_8kinetics_Kinetics {
  struct __pyx_obj_7cantera_12solutionbase__SolutionBase __pyx_base;
};


/* "kinetics.pxd":146
 *     pass
 * 
 * cdef class InterfaceKinetics(Kinetics):             # <<<<<<<<<<<<<<
 *     pass
 * 
 */
struct __pyx_obj_7cantera_8kinetics_InterfaceKinetics {
  struct __pyx_obj_7cantera_8kinetics_Kinetics __pyx_base;
};


/* "_utils.pxd":96
 *     cdef void CxxSetLogger "setLogger" (CxxPythonLogger*)
 * 
 * cdef class AnyMap(dict):             # <<<<<<<<<<<<<<
 *     cdef _set_CxxUnitSystem(self, shared_ptr[CxxUnitSystem] units)
 *     cdef UnitSystem unitsystem
 */
struct __pyx_obj_7cantera_6_utils_AnyMap {
  PyDictObject __pyx_base;
  struct __pyx_vtabstruct_7cantera_6_utils_AnyMap *__pyx_vtab;
  struct __pyx_obj_7cantera_5units_UnitSystem *unitsystem;
};


/* "cantera/reaction.pxd":244
 * 
 * 
 * cdef class ReactionRate:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxReactionRate] _rate
 *     cdef CxxReactionRate* rate
 */
struct __pyx_obj_7cantera_8reaction_ReactionRate {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate *__pyx_vtab;
  std::shared_ptr<Cantera::ReactionRate>  _rate;
  Cantera::ReactionRate *rate;
};


/* "cantera/reaction.pxd":251
 *     cdef set_cxx_object(self)
 * 
 * cdef class ArrheniusRateBase(ReactionRate):             # <<<<<<<<<<<<<<
 *     cdef CxxArrheniusBase* base
 * 
 */
struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase {
  struct __pyx_obj_7cantera_8reaction_ReactionRate __pyx_base;
  Cantera::ArrheniusBase *base;
};


/* "cantera/reaction.pxd":254
 *     cdef CxxArrheniusBase* base
 * 
 * cdef class FalloffRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     cdef CxxFalloffRate* falloff
 *     cdef set_cxx_object(self)
 */
struct __pyx_obj_7cantera_8reaction_FalloffRate {
  struct __pyx_obj_7cantera_8reaction_ReactionRate __pyx_base;
  Cantera::FalloffRate *falloff;
};


/* "cantera/reaction.pxd":258
 *     cdef set_cxx_object(self)
 * 
 * cdef class CustomRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     cdef CxxCustomFunc1Rate* cxx_object(self)
 *     cdef Func1 _rate_func  # prevent premature garbage collection
 */
struct __pyx_obj_7cantera_8reaction_CustomRate {
  struct __pyx_obj_7cantera_8reaction_ReactionRate __pyx_base;
  struct __pyx_obj_7cantera_5func1_Func1 *_rate_func;
};


/* "cantera/reaction.pxd":262
 *     cdef Func1 _rate_func  # prevent premature garbage collection
 * 
 * cdef class ExtensibleRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     cdef public list _delegates
 *     cdef set_cxx_object(self, CxxReactionRate* rate=*)
 */
struct __pyx_obj_7cantera_8reaction_ExtensibleRate {
  struct __pyx_obj_7cantera_8reaction_ReactionRate __pyx_base;
  PyObject *_delegates;
};


/* "cantera/reaction.pxd":266
 *     cdef set_cxx_object(self, CxxReactionRate* rate=*)
 * 
 * cdef class ExtensibleRateData:             # <<<<<<<<<<<<<<
 *     cdef public list _delegates
 *     cdef set_cxx_object(self, CxxReactionDataDelegator* rate)
 */
struct __pyx_obj_7cantera_8reaction_ExtensibleRateData {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_8reaction_ExtensibleRateData *__pyx_vtab;
  PyObject *_delegates;
};


/* "cantera/reaction.pxd":270
 *     cdef set_cxx_object(self, CxxReactionDataDelegator* rate)
 * 
 * cdef class InterfaceRateBase(ArrheniusRateBase):             # <<<<<<<<<<<<<<
 *     cdef CxxInterfaceRateBase* interface
 * 
 */
struct __pyx_obj_7cantera_8reaction_InterfaceRateBase {
  struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase __pyx_base;
  Cantera::InterfaceRateBase *interface;
};


/* "cantera/reaction.pxd":273
 *     cdef CxxInterfaceRateBase* interface
 * 
 * cdef class StickRateBase(InterfaceRateBase):             # <<<<<<<<<<<<<<
 *     cdef CxxStickingCoverage* stick
 * 
 */
struct __pyx_obj_7cantera_8reaction_StickRateBase {
  struct __pyx_obj_7cantera_8reaction_InterfaceRateBase __pyx_base;
  Cantera::StickingCoverage *stick;
};


/* "cantera/reaction.pxd":276
 *     cdef CxxStickingCoverage* stick
 * 
 * cdef class ThirdBody:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxThirdBody] _third_body
 *     cdef CxxThirdBody* third_body
 */
struct __pyx_obj_7cantera_8reaction_ThirdBody {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_8reaction_ThirdBody *__pyx_vtab;
  std::shared_ptr<Cantera::ThirdBody>  _third_body;
  Cantera::ThirdBody *third_body;
};


/* "cantera/reaction.pxd":282
 *     cdef wrap(shared_ptr[CxxThirdBody])
 * 
 * cdef class Reaction:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxReaction] _reaction
 *     cdef CxxReaction* reaction
 */
struct __pyx_obj_7cantera_8reaction_Reaction {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_8reaction_Reaction *__pyx_vtab;
  std::shared_ptr<Cantera::Reaction>  _reaction;
  Cantera::Reaction *reaction;
  struct __pyx_obj_7cantera_8reaction_ReactionRate *_rate;
};


/* "cantera/reaction.pxd":289
 *     cdef ReactionRate _rate
 * 
 * cdef class Arrhenius:             # <<<<<<<<<<<<<<
 *     cdef CxxArrheniusRate* base
 *     cdef cbool own_rate
 */
struct __pyx_obj_7cantera_8reaction_Arrhenius {
  PyObject_HEAD
  struct __pyx_vtabstruct_7cantera_8reaction_Arrhenius *__pyx_vtab;
  Cantera::ArrheniusRate *base;
  bool own_rate;
  struct __pyx_obj_7cantera_8reaction_Reaction *reaction;
};


/* "cantera/reaction.pyx":227
 * 
 * 
 * cdef class ArrheniusRate(ArrheniusRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on temperature only and follows
 */
struct __pyx_obj_7cantera_8reaction_ArrheniusRate {
  struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase __pyx_base;
};


/* "cantera/reaction.pyx":262
 * 
 * 
 * cdef class BlowersMaselRate(ArrheniusRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on temperature and enthalpy change
 */
struct __pyx_obj_7cantera_8reaction_BlowersMaselRate {
  struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase __pyx_base;
};


/* "cantera/reaction.pyx":316
 * 
 * 
 * cdef class TwoTempPlasmaRate(ArrheniusRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on both gas and electron temperature
 */
struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate {
  struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase __pyx_base;
};


/* "cantera/reaction.pyx":469
 * 
 * 
 * cdef class LindemannRate(FalloffRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     The Lindemann falloff parameterization.
 */
struct __pyx_obj_7cantera_8reaction_LindemannRate {
  struct __pyx_obj_7cantera_8reaction_FalloffRate __pyx_base;
};


/* "cantera/reaction.pyx":487
 * 
 * 
 * cdef class TroeRate(FalloffRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     The 3- or 4-parameter Troe falloff function.
 */
struct __pyx_obj_7cantera_8reaction_TroeRate {
  struct __pyx_obj_7cantera_8reaction_FalloffRate __pyx_base;
};


/* "cantera/reaction.pyx":507
 * 
 * 
 * cdef class SriRate(FalloffRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     The 3- or 5-parameter SRI falloff function.
 */
struct __pyx_obj_7cantera_8reaction_SriRate {
  struct __pyx_obj_7cantera_8reaction_FalloffRate __pyx_base;
};


/* "cantera/reaction.pyx":527
 * 
 * 
 * cdef class TsangRate(FalloffRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     The Tsang falloff parameterization.
 */
struct __pyx_obj_7cantera_8reaction_TsangRate {
  struct __pyx_obj_7cantera_8reaction_FalloffRate __pyx_base;
};


/* "cantera/reaction.pyx":543
 * 
 * 
 * cdef class PlogRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     A pressure-dependent reaction rate parameterized by logarithmically
 */
struct __pyx_obj_7cantera_8reaction_PlogRate {
  struct __pyx_obj_7cantera_8reaction_ReactionRate __pyx_base;
};


/* "cantera/reaction.pyx":602
 * 
 * 
 * cdef class ChebyshevRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     A pressure-dependent reaction rate parameterized by a bivariate Chebyshev
 */
struct __pyx_obj_7cantera_8reaction_ChebyshevRate {
  struct __pyx_obj_7cantera_8reaction_ReactionRate __pyx_base;
};


/* "cantera/reaction.pyx":960
 * 
 * 
 * cdef class InterfaceArrheniusRate(InterfaceRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on temperature and interface coverage
 */
struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate {
  struct __pyx_obj_7cantera_8reaction_InterfaceRateBase __pyx_base;
};


/* "cantera/reaction.pyx":986
 * 
 * 
 * cdef class InterfaceBlowersMaselRate(InterfaceRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on temperature and enthalpy change
 */
struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate {
  struct __pyx_obj_7cantera_8reaction_InterfaceRateBase __pyx_base;
};


/* "cantera/reaction.pyx":1104
 * 
 * 
 * cdef class StickingArrheniusRate(StickRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A surface sticking rate expression based on the Arrhenius parameterization
 */
struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate {
  struct __pyx_obj_7cantera_8reaction_StickRateBase __pyx_base;
};


/* "cantera/reaction.pyx":1131
 * 
 * 
 * cdef class StickingBlowersMaselRate(StickRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A surface sticking rate expression based on the Blowers-Masel parameterization
 */
struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate {
  struct __pyx_obj_7cantera_8reaction_StickRateBase __pyx_base;
};


/* "cantera/reaction.pyx":1842
 * 
 * 
 * cdef class ThreeBodyReaction(Reaction):             # <<<<<<<<<<<<<<
 *     """
 *     A reaction with a non-reacting third body "M" that acts to add or remove
 */
struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction {
  struct __pyx_obj_7cantera_8reaction_Reaction __pyx_base;
};


/* "cantera/reaction.pyx":1872
 * 
 * 
 * cdef class FalloffReaction(Reaction):             # <<<<<<<<<<<<<<
 *     """
 *     A reaction that is first-order in [M] at low pressure, like a third-body
 */
struct __pyx_obj_7cantera_8reaction_FalloffReaction {
  struct __pyx_obj_7cantera_8reaction_Reaction __pyx_base;
};


/* "cantera/reaction.pyx":1905
 *                       "no specialization necessary.", DeprecationWarning)
 * 
 * cdef class ChemicallyActivatedReaction(FalloffReaction):             # <<<<<<<<<<<<<<
 *     """
 *     A reaction where the rate decreases as pressure increases due to collisional
 */
struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction {
  struct __pyx_obj_7cantera_8reaction_FalloffReaction __pyx_base;
};


/* "cantera/reaction.pyx":1917
 *                       "3.0; no specialization necessary.", DeprecationWarning)
 * 
 * cdef class CustomReaction(Reaction):             # <<<<<<<<<<<<<<
 *     """
 *     A reaction which follows mass-action kinetics with a custom reaction rate.
 */
struct __pyx_obj_7cantera_8reaction_CustomReaction {
  struct __pyx_obj_7cantera_8reaction_Reaction __pyx_base;
};


/* "cantera/reaction.pyx":48
 * 
 *     @staticmethod
 *     cdef wrap(shared_ptr[CxxReactionRate] rate):             # <<<<<<<<<<<<<<
 *         """
 *         Wrap a C++ Reaction object with a Python object of the correct derived type.
 */
struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap {
  PyObject_HEAD
  PyObject *__pyx_v_register_subclasses;
};



/* "func1.pxd":46
 * 
 * 
 * cdef class Func1:             # <<<<<<<<<<<<<<
 *     cdef shared_ptr[CxxFunc1] _func
 *     cdef CxxFunc1* func
 */

struct __pyx_vtabstruct_7cantera_5func1_Func1 {
  void (*_set_callback)(struct __pyx_obj_7cantera_5func1_Func1 *, PyObject *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_7cantera_5func1_Func1 *__pyx_vtabptr_7cantera_5func1_Func1;


/* "units.pxd":42
 * 
 * 
 * cdef class Units:             # <<<<<<<<<<<<<<
 *     cdef CxxUnits units
 *     @staticmethod
 */

struct __pyx_vtabstruct_7cantera_5units_Units {
  struct __pyx_obj_7cantera_5units_Units *(*copy)(Cantera::Units);
};
static struct __pyx_vtabstruct_7cantera_5units_Units *__pyx_vtabptr_7cantera_5units_Units;


/* "units.pxd":47
 *     cdef Units copy(CxxUnits)
 * 
 * cdef class UnitStack:             # <<<<<<<<<<<<<<
 *     cdef CxxUnitStack stack
 *     @staticmethod
 */

struct __pyx_vtabstruct_7cantera_5units_UnitStack {
  struct __pyx_obj_7cantera_5units_UnitStack *(*copy)(Cantera::UnitStack const &);
};
static struct __pyx_vtabstruct_7cantera_5units_UnitStack *__pyx_vtabptr_7cantera_5units_UnitStack;


/* "units.pxd":53
 * 
 * 
 * cdef class UnitSystem:             # <<<<<<<<<<<<<<
 *     cdef _set_unitSystem(self, shared_ptr[CxxUnitSystem] units)
 *     cdef shared_ptr[CxxUnitSystem] _unitsystem
 */

struct __pyx_vtabstruct_7cantera_5units_UnitSystem {
  PyObject *(*_set_unitSystem)(struct __pyx_obj_7cantera_5units_UnitSystem *, std::shared_ptr<Cantera::UnitSystem> );
};
static struct __pyx_vtabstruct_7cantera_5units_UnitSystem *__pyx_vtabptr_7cantera_5units_UnitSystem;


/* "_utils.pxd":96
 *     cdef void CxxSetLogger "setLogger" (CxxPythonLogger*)
 * 
 * cdef class AnyMap(dict):             # <<<<<<<<<<<<<<
 *     cdef _set_CxxUnitSystem(self, shared_ptr[CxxUnitSystem] units)
 *     cdef UnitSystem unitsystem
 */

struct __pyx_vtabstruct_7cantera_6_utils_AnyMap {
  PyObject *(*_set_CxxUnitSystem)(struct __pyx_obj_7cantera_6_utils_AnyMap *, std::shared_ptr<Cantera::UnitSystem> );
};
static struct __pyx_vtabstruct_7cantera_6_utils_AnyMap *__pyx_vtabptr_7cantera_6_utils_AnyMap;


/* "cantera/reaction.pyx":19
 * 
 * 
 * cdef class ReactionRate:             # <<<<<<<<<<<<<<
 *     """
 *     Base class for ReactionRate objects.
 */

struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate {
  PyObject *(*wrap)(std::shared_ptr<Cantera::ReactionRate> );
  PyObject *(*set_cxx_object)(struct __pyx_obj_7cantera_8reaction_ReactionRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate *__pyx_vtabptr_7cantera_8reaction_ReactionRate;


/* "cantera/reaction.pyx":159
 * 
 * 
 * cdef class ArrheniusRateBase(ReactionRate):             # <<<<<<<<<<<<<<
 *     """
 *     Base class collecting commonly used features of Arrhenius-type rate objects.
 */

struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRateBase {
  struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRateBase *__pyx_vtabptr_7cantera_8reaction_ArrheniusRateBase;


/* "cantera/reaction.pyx":373
 * 
 * 
 * cdef class FalloffRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     """
 *     Base class for parameterizations used to describe the fall-off in reaction rates
 */

struct __pyx_vtabstruct_7cantera_8reaction_FalloffRate {
  struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_FalloffRate *__pyx_vtabptr_7cantera_8reaction_FalloffRate;


/* "cantera/reaction.pyx":693
 * 
 * 
 * cdef class CustomRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     A custom rate coefficient which depends on temperature only.
 */

struct __pyx_vtabstruct_7cantera_8reaction_CustomRate {
  struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate __pyx_base;
  Cantera::CustomFunc1Rate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_CustomRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_CustomRate *__pyx_vtabptr_7cantera_8reaction_CustomRate;


/* "cantera/reaction.pyx":742
 * 
 * 
 * cdef class ExtensibleRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     """
 *     A base class for a user-defined reaction rate parameterization. Classes derived from
 */

struct __pyx_vtabstruct_7cantera_8reaction_ExtensibleRate {
  struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate __pyx_base;
  PyObject *(*set_cxx_object)(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *, struct __pyx_opt_args_7cantera_8reaction_14ExtensibleRate_set_cxx_object *__pyx_optional_args);
};
static struct __pyx_vtabstruct_7cantera_8reaction_ExtensibleRate *__pyx_vtabptr_7cantera_8reaction_ExtensibleRate;


/* "cantera/reaction.pyx":846
 * 
 * 
 * cdef class ExtensibleRateData:             # <<<<<<<<<<<<<<
 *     """
 *     A base class for data used when evaluating instances of `ExtensibleRate`. Classes
 */

struct __pyx_vtabstruct_7cantera_8reaction_ExtensibleRateData {
  PyObject *(*set_cxx_object)(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *, Cantera::ReactionDataDelegator *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_ExtensibleRateData *__pyx_vtabptr_7cantera_8reaction_ExtensibleRateData;


/* "cantera/reaction.pyx":878
 * 
 * 
 * cdef class InterfaceRateBase(ArrheniusRateBase):             # <<<<<<<<<<<<<<
 *     """
 *     Base class collecting commonly used features of Arrhenius-type rate objects
 */

struct __pyx_vtabstruct_7cantera_8reaction_InterfaceRateBase {
  struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRateBase __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_InterfaceRateBase *__pyx_vtabptr_7cantera_8reaction_InterfaceRateBase;


/* "cantera/reaction.pyx":1041
 * 
 * 
 * cdef class StickRateBase(InterfaceRateBase):             # <<<<<<<<<<<<<<
 *     """
 *     Base class collecting commonly used features of Arrhenius-type sticking rate
 */

struct __pyx_vtabstruct_7cantera_8reaction_StickRateBase {
  struct __pyx_vtabstruct_7cantera_8reaction_InterfaceRateBase __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_StickRateBase *__pyx_vtabptr_7cantera_8reaction_StickRateBase;


/* "cantera/reaction.pyx":1185
 * 
 * 
 * cdef class ThirdBody:             # <<<<<<<<<<<<<<
 *     r"""
 *     Class representing third-body collision partners in three-body or falloff reactions.
 */

struct __pyx_vtabstruct_7cantera_8reaction_ThirdBody {
  PyObject *(*wrap)(std::shared_ptr<Cantera::ThirdBody> );
};
static struct __pyx_vtabstruct_7cantera_8reaction_ThirdBody *__pyx_vtabptr_7cantera_8reaction_ThirdBody;


/* "cantera/reaction.pyx":1266
 * 
 * 
 * cdef class Reaction:             # <<<<<<<<<<<<<<
 *     """
 *     A class which stores data about a reaction and its rate parameterization so
 */

struct __pyx_vtabstruct_7cantera_8reaction_Reaction {
  PyObject *(*wrap)(std::shared_ptr<Cantera::Reaction> );
};
static struct __pyx_vtabstruct_7cantera_8reaction_Reaction *__pyx_vtabptr_7cantera_8reaction_Reaction;


/* "cantera/reaction.pyx":1774
 * 
 * 
 * cdef class Arrhenius:             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on temperature only and follows
 */

struct __pyx_vtabstruct_7cantera_8reaction_Arrhenius {
  PyObject *(*wrap)(Cantera::ArrheniusRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_Arrhenius *__pyx_vtabptr_7cantera_8reaction_Arrhenius;


/* "cantera/reaction.pyx":227
 * 
 * 
 * cdef class ArrheniusRate(ArrheniusRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on temperature only and follows
 */

struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRate {
  struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRateBase __pyx_base;
  Cantera::ArrheniusRate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRate *__pyx_vtabptr_7cantera_8reaction_ArrheniusRate;


/* "cantera/reaction.pyx":262
 * 
 * 
 * cdef class BlowersMaselRate(ArrheniusRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on temperature and enthalpy change
 */

struct __pyx_vtabstruct_7cantera_8reaction_BlowersMaselRate {
  struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRateBase __pyx_base;
  Cantera::BlowersMaselRate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_BlowersMaselRate *__pyx_vtabptr_7cantera_8reaction_BlowersMaselRate;


/* "cantera/reaction.pyx":316
 * 
 * 
 * cdef class TwoTempPlasmaRate(ArrheniusRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on both gas and electron temperature
 */

struct __pyx_vtabstruct_7cantera_8reaction_TwoTempPlasmaRate {
  struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRateBase __pyx_base;
  Cantera::TwoTempPlasmaRate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_TwoTempPlasmaRate *__pyx_vtabptr_7cantera_8reaction_TwoTempPlasmaRate;


/* "cantera/reaction.pyx":469
 * 
 * 
 * cdef class LindemannRate(FalloffRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     The Lindemann falloff parameterization.
 */

struct __pyx_vtabstruct_7cantera_8reaction_LindemannRate {
  struct __pyx_vtabstruct_7cantera_8reaction_FalloffRate __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_LindemannRate *__pyx_vtabptr_7cantera_8reaction_LindemannRate;


/* "cantera/reaction.pyx":487
 * 
 * 
 * cdef class TroeRate(FalloffRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     The 3- or 4-parameter Troe falloff function.
 */

struct __pyx_vtabstruct_7cantera_8reaction_TroeRate {
  struct __pyx_vtabstruct_7cantera_8reaction_FalloffRate __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_TroeRate *__pyx_vtabptr_7cantera_8reaction_TroeRate;


/* "cantera/reaction.pyx":507
 * 
 * 
 * cdef class SriRate(FalloffRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     The 3- or 5-parameter SRI falloff function.
 */

struct __pyx_vtabstruct_7cantera_8reaction_SriRate {
  struct __pyx_vtabstruct_7cantera_8reaction_FalloffRate __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_SriRate *__pyx_vtabptr_7cantera_8reaction_SriRate;


/* "cantera/reaction.pyx":527
 * 
 * 
 * cdef class TsangRate(FalloffRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     The Tsang falloff parameterization.
 */

struct __pyx_vtabstruct_7cantera_8reaction_TsangRate {
  struct __pyx_vtabstruct_7cantera_8reaction_FalloffRate __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_TsangRate *__pyx_vtabptr_7cantera_8reaction_TsangRate;


/* "cantera/reaction.pyx":543
 * 
 * 
 * cdef class PlogRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     A pressure-dependent reaction rate parameterized by logarithmically
 */

struct __pyx_vtabstruct_7cantera_8reaction_PlogRate {
  struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate __pyx_base;
  Cantera::PlogRate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_PlogRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_PlogRate *__pyx_vtabptr_7cantera_8reaction_PlogRate;


/* "cantera/reaction.pyx":602
 * 
 * 
 * cdef class ChebyshevRate(ReactionRate):             # <<<<<<<<<<<<<<
 *     r"""
 *     A pressure-dependent reaction rate parameterized by a bivariate Chebyshev
 */

struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate {
  struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate __pyx_base;
  Cantera::Array2D (*_cxxarray2d)(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *, PyObject *);
  Cantera::ChebyshevRate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *__pyx_vtabptr_7cantera_8reaction_ChebyshevRate;


/* "cantera/reaction.pyx":960
 * 
 * 
 * cdef class InterfaceArrheniusRate(InterfaceRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on temperature and interface coverage
 */

struct __pyx_vtabstruct_7cantera_8reaction_InterfaceArrheniusRate {
  struct __pyx_vtabstruct_7cantera_8reaction_InterfaceRateBase __pyx_base;
  Cantera::InterfaceArrheniusRate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_InterfaceArrheniusRate *__pyx_vtabptr_7cantera_8reaction_InterfaceArrheniusRate;


/* "cantera/reaction.pyx":986
 * 
 * 
 * cdef class InterfaceBlowersMaselRate(InterfaceRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A reaction rate coefficient which depends on temperature and enthalpy change
 */

struct __pyx_vtabstruct_7cantera_8reaction_InterfaceBlowersMaselRate {
  struct __pyx_vtabstruct_7cantera_8reaction_InterfaceRateBase __pyx_base;
  Cantera::InterfaceBlowersMaselRate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_vtabptr_7cantera_8reaction_InterfaceBlowersMaselRate;


/* "cantera/reaction.pyx":1104
 * 
 * 
 * cdef class StickingArrheniusRate(StickRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A surface sticking rate expression based on the Arrhenius parameterization
 */

struct __pyx_vtabstruct_7cantera_8reaction_StickingArrheniusRate {
  struct __pyx_vtabstruct_7cantera_8reaction_StickRateBase __pyx_base;
  Cantera::StickingArrheniusRate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_StickingArrheniusRate *__pyx_vtabptr_7cantera_8reaction_StickingArrheniusRate;


/* "cantera/reaction.pyx":1131
 * 
 * 
 * cdef class StickingBlowersMaselRate(StickRateBase):             # <<<<<<<<<<<<<<
 *     r"""
 *     A surface sticking rate expression based on the Blowers-Masel parameterization
 */

struct __pyx_vtabstruct_7cantera_8reaction_StickingBlowersMaselRate {
  struct __pyx_vtabstruct_7cantera_8reaction_StickRateBase __pyx_base;
  Cantera::StickingBlowersMaselRate *(*cxx_object)(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *);
};
static struct __pyx_vtabstruct_7cantera_8reaction_StickingBlowersMaselRate *__pyx_vtabptr_7cantera_8reaction_StickingBlowersMaselRate;


/* "cantera/reaction.pyx":1842
 * 
 * 
 * cdef class ThreeBodyReaction(Reaction):             # <<<<<<<<<<<<<<
 *     """
 *     A reaction with a non-reacting third body "M" that acts to add or remove
 */

struct __pyx_vtabstruct_7cantera_8reaction_ThreeBodyReaction {
  struct __pyx_vtabstruct_7cantera_8reaction_Reaction __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_ThreeBodyReaction *__pyx_vtabptr_7cantera_8reaction_ThreeBodyReaction;


/* "cantera/reaction.pyx":1872
 * 
 * 
 * cdef class FalloffReaction(Reaction):             # <<<<<<<<<<<<<<
 *     """
 *     A reaction that is first-order in [M] at low pressure, like a third-body
 */

struct __pyx_vtabstruct_7cantera_8reaction_FalloffReaction {
  struct __pyx_vtabstruct_7cantera_8reaction_Reaction __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_FalloffReaction *__pyx_vtabptr_7cantera_8reaction_FalloffReaction;


/* "cantera/reaction.pyx":1905
 *                       "no specialization necessary.", DeprecationWarning)
 * 
 * cdef class ChemicallyActivatedReaction(FalloffReaction):             # <<<<<<<<<<<<<<
 *     """
 *     A reaction where the rate decreases as pressure increases due to collisional
 */

struct __pyx_vtabstruct_7cantera_8reaction_ChemicallyActivatedReaction {
  struct __pyx_vtabstruct_7cantera_8reaction_FalloffReaction __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_ChemicallyActivatedReaction *__pyx_vtabptr_7cantera_8reaction_ChemicallyActivatedReaction;


/* "cantera/reaction.pyx":1917
 *                       "3.0; no specialization necessary.", DeprecationWarning)
 * 
 * cdef class CustomReaction(Reaction):             # <<<<<<<<<<<<<<
 *     """
 *     A reaction which follows mass-action kinetics with a custom reaction rate.
 */

struct __pyx_vtabstruct_7cantera_8reaction_CustomReaction {
  struct __pyx_vtabstruct_7cantera_8reaction_Reaction __pyx_base;
};
static struct __pyx_vtabstruct_7cantera_8reaction_CustomReaction *__pyx_vtabptr_7cantera_8reaction_CustomReaction;
/* #### Code section: utility_code_proto ### */

/* --- Runtime support code (head) --- */
/* Refnanny.proto */
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, Py_ssize_t);
    void (*DECREF)(void*, PyObject*, Py_ssize_t);
    void (*GOTREF)(void*, PyObject*, Py_ssize_t);
    void (*GIVEREF)(void*, PyObject*, Py_ssize_t);
    void* (*SetupContext)(const char*, Py_ssize_t, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname);
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          if (acquire_gil) {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
              PyGILState_Release(__pyx_gilstate_save);\
          } else {\
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__));\
          }
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil)\
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), (__LINE__), (__FILE__))
  #define __Pyx_RefNannyFinishContextNogil() __Pyx_RefNannyFinishContext()
#endif
  #define __Pyx_RefNannyFinishContextNogil() {\
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure();\
              __Pyx_RefNannyFinishContext();\
              PyGILState_Release(__pyx_gilstate_save);\
          }
  #define __Pyx_RefNannyFinishContext()\
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), (__LINE__))
  #define __Pyx_XINCREF(r)  do { if((r) == NULL); else {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) == NULL); else {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) == NULL); else {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) == NULL); else {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContextNogil()
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif
#define __Pyx_Py_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; Py_XDECREF(tmp);\
    } while (0)
#define __Pyx_XDECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_XDECREF(tmp);\
    } while (0)
#define __Pyx_DECREF_SET(r, v) do {\
        PyObject *tmp = (PyObject *) r;\
        r = v; __Pyx_DECREF(tmp);\
    } while (0)
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

/* PyErrExceptionMatches.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_ExceptionMatches(err) __Pyx_PyErr_ExceptionMatchesInState(__pyx_tstate, err)
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err);
#else
#define __Pyx_PyErr_ExceptionMatches(err)  PyErr_ExceptionMatches(err)
#endif

/* PyThreadStateGet.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyThreadState_declare  PyThreadState *__pyx_tstate;
#define __Pyx_PyThreadState_assign  __pyx_tstate = __Pyx_PyThreadState_Current;
#if PY_VERSION_HEX >= 0x030C00A6
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->current_exception != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->current_exception ? (PyObject*) Py_TYPE(__pyx_tstate->current_exception) : (PyObject*) NULL)
#else
#define __Pyx_PyErr_Occurred()  (__pyx_tstate->curexc_type != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  (__pyx_tstate->curexc_type)
#endif
#else
#define __Pyx_PyThreadState_declare
#define __Pyx_PyThreadState_assign
#define __Pyx_PyErr_Occurred()  (PyErr_Occurred() != NULL)
#define __Pyx_PyErr_CurrentExceptionType()  PyErr_Occurred()
#endif

/* PyErrFetchRestore.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_PyErr_Clear() __Pyx_ErrRestore(NULL, NULL, NULL)
#define __Pyx_ErrRestoreWithState(type, value, tb)  __Pyx_ErrRestoreInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)    __Pyx_ErrFetchInState(PyThreadState_GET(), type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  __Pyx_ErrRestoreInState(__pyx_tstate, type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)    __Pyx_ErrFetchInState(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A6
#define __Pyx_PyErr_SetNone(exc) (Py_INCREF(exc), __Pyx_ErrRestore((exc), NULL, NULL))
#else
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#endif
#else
#define __Pyx_PyErr_Clear() PyErr_Clear()
#define __Pyx_PyErr_SetNone(exc) PyErr_SetNone(exc)
#define __Pyx_ErrRestoreWithState(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchWithState(type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestoreInState(tstate, type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetchInState(tstate, type, value, tb)  PyErr_Fetch(type, value, tb)
#define __Pyx_ErrRestore(type, value, tb)  PyErr_Restore(type, value, tb)
#define __Pyx_ErrFetch(type, value, tb)  PyErr_Fetch(type, value, tb)
#endif

/* PyObjectGetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GetAttrStr(o,n) PyObject_GetAttr(o,n)
#endif

/* PyObjectGetAttrStrNoError.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name);

/* GetBuiltinName.proto */
static PyObject *__Pyx_GetBuiltinName(PyObject *name);

/* GetTopmostException.proto */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem * __Pyx_PyErr_GetTopmostException(PyThreadState *tstate);
#endif

/* SaveResetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_ExceptionSave(type, value, tb)  __Pyx__ExceptionSave(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#define __Pyx_ExceptionReset(type, value, tb)  __Pyx__ExceptionReset(__pyx_tstate, type, value, tb)
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb);
#else
#define __Pyx_ExceptionSave(type, value, tb)   PyErr_GetExcInfo(type, value, tb)
#define __Pyx_ExceptionReset(type, value, tb)  PyErr_SetExcInfo(type, value, tb)
#endif

/* GetException.proto */
#if CYTHON_FAST_THREAD_STATE
#define __Pyx_GetException(type, value, tb)  __Pyx__GetException(__pyx_tstate, type, value, tb)
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb);
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb);
#endif

/* PyObjectCall.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw);
#else
#define __Pyx_PyObject_Call(func, arg, kw) PyObject_Call(func, arg, kw)
#endif

/* RaiseException.proto */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause);

/* TupleAndListFromArray.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n);
#endif

/* IncludeStringH.proto */
#include <string.h>

/* BytesEquals.proto */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals);

/* UnicodeEquals.proto */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals);

/* fastcall.proto */
#define __Pyx_Arg_VARARGS(args, i) PyTuple_GET_ITEM(args, i)
#define __Pyx_NumKwargs_VARARGS(kwds) PyDict_Size(kwds)
#define __Pyx_KwValues_VARARGS(args, nargs) NULL
#define __Pyx_GetKwValue_VARARGS(kw, kwvalues, s) __Pyx_PyDict_GetItemStrWithError(kw, s)
#define __Pyx_KwargsAsDict_VARARGS(kw, kwvalues) PyDict_Copy(kw)
#if CYTHON_METH_FASTCALL
    #define __Pyx_Arg_FASTCALL(args, i) args[i]
    #define __Pyx_NumKwargs_FASTCALL(kwds) PyTuple_GET_SIZE(kwds)
    #define __Pyx_KwValues_FASTCALL(args, nargs) ((args) + (nargs))
    static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s);
    #define __Pyx_KwargsAsDict_FASTCALL(kw, kwvalues) _PyStack_AsDict(kwvalues, kw)
#else
    #define __Pyx_Arg_FASTCALL __Pyx_Arg_VARARGS
    #define __Pyx_NumKwargs_FASTCALL __Pyx_NumKwargs_VARARGS
    #define __Pyx_KwValues_FASTCALL __Pyx_KwValues_VARARGS
    #define __Pyx_GetKwValue_FASTCALL __Pyx_GetKwValue_VARARGS
    #define __Pyx_KwargsAsDict_FASTCALL __Pyx_KwargsAsDict_VARARGS
#endif
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_VARARGS(args, start), stop - start)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) __Pyx_PyTuple_FromArray(&__Pyx_Arg_FASTCALL(args, start), stop - start)
#else
#define __Pyx_ArgsSlice_VARARGS(args, start, stop) PyTuple_GetSlice(args, start, stop)
#define __Pyx_ArgsSlice_FASTCALL(args, start, stop) PyTuple_GetSlice(args, start, stop)
#endif

/* PyObjectFormatSimple.proto */
#if CYTHON_COMPILING_IN_PYPY
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#elif PY_MAJOR_VERSION < 3
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyString_CheckExact(s)) ? PyUnicode_FromEncodedObject(s, NULL, "strict") :\
        PyObject_Format(s, f))
#elif CYTHON_USE_TYPE_SLOTS
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        likely(PyLong_CheckExact(s)) ? PyLong_Type.tp_repr(s) :\
        likely(PyFloat_CheckExact(s)) ? PyFloat_Type.tp_repr(s) :\
        PyObject_Format(s, f))
#else
    #define __Pyx_PyObject_FormatSimple(s, f) (\
        likely(PyUnicode_CheckExact(s)) ? (Py_INCREF(s), s) :\
        PyObject_Format(s, f))
#endif

/* PyFunctionFastCall.proto */
#if CYTHON_FAST_PYCALL
#if !CYTHON_VECTORCALL
#define __Pyx_PyFunction_FastCall(func, args, nargs)\
    __Pyx_PyFunction_FastCallDict((func), (args), (nargs), NULL)
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs);
#endif
#define __Pyx_BUILD_ASSERT_EXPR(cond)\
    (sizeof(char [1 - 2*!(cond)]) - 1)
#ifndef Py_MEMBER_SIZE
#define Py_MEMBER_SIZE(type, member) sizeof(((type *)0)->member)
#endif
#if !CYTHON_VECTORCALL
#if PY_VERSION_HEX >= 0x03080000
  #include "frameobject.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
  #define __Pxy_PyFrame_Initialize_Offsets()
  #define __Pyx_PyFrame_GetLocalsplus(frame)  ((frame)->f_localsplus)
#else
  static size_t __pyx_pyframe_localsplus_offset = 0;
  #include "frameobject.h"
  #define __Pxy_PyFrame_Initialize_Offsets()\
    ((void)__Pyx_BUILD_ASSERT_EXPR(sizeof(PyFrameObject) == offsetof(PyFrameObject, f_localsplus) + Py_MEMBER_SIZE(PyFrameObject, f_localsplus)),\
     (void)(__pyx_pyframe_localsplus_offset = ((size_t)PyFrame_Type.tp_basicsize) - Py_MEMBER_SIZE(PyFrameObject, f_localsplus)))
  #define __Pyx_PyFrame_GetLocalsplus(frame)\
    (assert(__pyx_pyframe_localsplus_offset), (PyObject **)(((char *)(frame)) + __pyx_pyframe_localsplus_offset))
#endif
#endif
#endif

/* PyObjectCallMethO.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg);
#endif

/* PyObjectFastCall.proto */
#define __Pyx_PyObject_FastCall(func, args, nargs)  __Pyx_PyObject_FastCallDict(func, args, (size_t)(nargs), NULL)
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs);

/* PyObjectCallOneArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg);

/* PyObjectFormat.proto */
#if CYTHON_USE_UNICODE_WRITER
static PyObject* __Pyx_PyObject_Format(PyObject* s, PyObject* f);
#else
#define __Pyx_PyObject_Format(s, f) PyObject_Format(s, f)
#endif

/* JoinPyUnicode.proto */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char);

/* RaiseDoubleKeywords.proto */
static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name);

/* ParseKeywords.proto */
static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args,
    const char* function_name);

/* RaiseArgTupleInvalid.proto */
static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found);

/* GetAttr.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *, PyObject *);

/* RaiseClosureNameError.proto */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname);

/* IncludeStructmemberH.proto */
#include <structmember.h>

/* FixUpExtensionType.proto */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type);
#endif

/* FetchSharedCythonModule.proto */
static PyObject *__Pyx_FetchSharedCythonABIModule(void);

/* FetchCommonType.proto */
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type);
#else
static PyTypeObject* __Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases);
#endif

/* PyMethodNew.proto */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_PyMethod_New(PyObject *func, PyObject *self, PyObject *typ) {
    CYTHON_UNUSED_VAR(typ);
    if (!self)
        return __Pyx_NewRef(func);
    return PyMethod_New(func, self);
}
#else
    #define __Pyx_PyMethod_New PyMethod_New
#endif

/* PyVectorcallFastCallDict.proto */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw);
#endif

/* CythonFunctionShared.proto */
#define __Pyx_CyFunction_USED
#define __Pyx_CYFUNCTION_STATICMETHOD  0x01
#define __Pyx_CYFUNCTION_CLASSMETHOD   0x02
#define __Pyx_CYFUNCTION_CCLASS        0x04
#define __Pyx_CYFUNCTION_COROUTINE     0x08
#define __Pyx_CyFunction_GetClosure(f)\
    (((__pyx_CyFunctionObject *) (f))->func_closure)
#if PY_VERSION_HEX < 0x030900B1
  #define __Pyx_CyFunction_GetClassObj(f)\
      (((__pyx_CyFunctionObject *) (f))->func_classobj)
#else
  #define __Pyx_CyFunction_GetClassObj(f)\
      ((PyObject*) ((PyCMethodObject *) (f))->mm_class)
#endif
#define __Pyx_CyFunction_SetClassObj(f, classobj)\
    __Pyx__CyFunction_SetClassObj((__pyx_CyFunctionObject *) (f), (classobj))
#define __Pyx_CyFunction_Defaults(type, f)\
    ((type *)(((__pyx_CyFunctionObject *) (f))->defaults))
#define __Pyx_CyFunction_SetDefaultsGetter(f, g)\
    ((__pyx_CyFunctionObject *) (f))->defaults_getter = (g)
typedef struct {
#if PY_VERSION_HEX < 0x030900B1
    PyCFunctionObject func;
#else
    PyCMethodObject func;
#endif
#if CYTHON_BACKPORT_VECTORCALL
    __pyx_vectorcallfunc func_vectorcall;
#endif
#if PY_VERSION_HEX < 0x030500A0
    PyObject *func_weakreflist;
#endif
    PyObject *func_dict;
    PyObject *func_name;
    PyObject *func_qualname;
    PyObject *func_doc;
    PyObject *func_globals;
    PyObject *func_code;
    PyObject *func_closure;
#if PY_VERSION_HEX < 0x030900B1
    PyObject *func_classobj;
#endif
    void *defaults;
    int defaults_pyobjects;
    size_t defaults_size;  // used by FusedFunction for copying defaults
    int flags;
    PyObject *defaults_tuple;
    PyObject *defaults_kwdict;
    PyObject *(*defaults_getter)(PyObject *);
    PyObject *func_annotations;
    PyObject *func_is_coroutine;
} __pyx_CyFunctionObject;
#define __Pyx_CyFunction_Check(obj)  __Pyx_TypeCheck(obj, __pyx_CyFunctionType)
#define __Pyx_IsCyOrPyCFunction(obj)  __Pyx_TypeCheck2(obj, __pyx_CyFunctionType, &PyCFunction_Type)
#define __Pyx_CyFunction_CheckExact(obj)  __Pyx_IS_TYPE(obj, __pyx_CyFunctionType)
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject* op, PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj);
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *m,
                                                         size_t size,
                                                         int pyobjects);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *m,
                                                            PyObject *tuple);
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *m,
                                                             PyObject *dict);
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *m,
                                                              PyObject *dict);
static int __pyx_CyFunction_init(PyObject *module);
#if CYTHON_METH_FASTCALL
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames);
#if CYTHON_BACKPORT_VECTORCALL
#define __Pyx_CyFunction_func_vectorcall(f) (((__pyx_CyFunctionObject*)f)->func_vectorcall)
#else
#define __Pyx_CyFunction_func_vectorcall(f) (((PyCFunctionObject*)f)->vectorcall)
#endif
#endif

/* CythonFunction.proto */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml,
                                      int flags, PyObject* qualname,
                                      PyObject *closure,
                                      PyObject *module, PyObject *globals,
                                      PyObject* code);

/* PyDictVersioning.proto */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
#define __PYX_DICT_VERSION_INIT  ((PY_UINT64_T) -1)
#define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)\
    (version_var) = __PYX_GET_DICT_VERSION(dict);\
    (cache_var) = (value);
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP) {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\
        (VAR) = __pyx_dict_cached_value;\
    } else {\
        (VAR) = __pyx_dict_cached_value = (LOOKUP);\
        __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\
    }\
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj);
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj);
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version);
#else
#define __PYX_GET_DICT_VERSION(dict)  (0)
#define __PYX_UPDATE_DICT_CACHE(dict, value, cache_var, version_var)
#define __PYX_PY_DICT_LOOKUP_IF_MODIFIED(VAR, DICT, LOOKUP)  (VAR) = (LOOKUP);
#endif

/* GetModuleGlobalName.proto */
#if CYTHON_USE_DICT_VERSIONS
#define __Pyx_GetModuleGlobalName(var, name)  do {\
    static PY_UINT64_T __pyx_dict_version = 0;\
    static PyObject *__pyx_dict_cached_value = NULL;\
    (var) = (likely(__pyx_dict_version == __PYX_GET_DICT_VERSION(__pyx_d))) ?\
        (likely(__pyx_dict_cached_value) ? __Pyx_NewRef(__pyx_dict_cached_value) : __Pyx_GetBuiltinName(name)) :\
        __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  do {\
    PY_UINT64_T __pyx_dict_version;\
    PyObject *__pyx_dict_cached_value;\
    (var) = __Pyx__GetModuleGlobalName(name, &__pyx_dict_version, &__pyx_dict_cached_value);\
} while(0)
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value);
#else
#define __Pyx_GetModuleGlobalName(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
#define __Pyx_GetModuleGlobalNameUncached(var, name)  (var) = __Pyx__GetModuleGlobalName(name)
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name);
#endif

/* dict_getitem_default.proto */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value);

/* UnpackUnboundCMethod.proto */
typedef struct {
    PyObject *type;
    PyObject **method_name;
    PyCFunction func;
    PyObject *method;
    int flag;
} __Pyx_CachedCFunction;

/* CallUnboundCMethod1.proto */
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg);
#else
#define __Pyx_CallUnboundCMethod1(cfunc, self, arg)  __Pyx__CallUnboundCMethod1(cfunc, self, arg)
#endif

/* CallUnboundCMethod2.proto */
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2);
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2);
#else
#define __Pyx_CallUnboundCMethod2(cfunc, self, arg1, arg2)  __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2)
#endif

/* ExtTypeTest.proto */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type);

/* MoveIfSupported.proto */
#if __cplusplus >= 201103L || (defined(_MSC_VER) && _MSC_VER >= 1600)
  #include <utility>
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) std::move(x)
#else
  #define __PYX_STD_MOVE_IF_SUPPORTED(x) x
#endif

/* KeywordStringCheck.proto */
static int __Pyx_CheckKeywordStrings(PyObject *kw, const char* function_name, int kw_allowed);

/* IterFinish.proto */
static CYTHON_INLINE int __Pyx_IterFinish(void);

/* PyObjectCallNoArg.proto */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func);

/* PyObjectGetMethod.proto */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method);

/* PyObjectCallMethod0.proto */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name);

/* RaiseNeedMoreValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

/* RaiseTooManyValuesToUnpack.proto */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

/* UnpackItemEndCheck.proto */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected);

/* RaiseNoneIterError.proto */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

/* UnpackTupleError.proto */
static void __Pyx_UnpackTupleError(PyObject *, Py_ssize_t index);

/* UnpackTuple2.proto */
#define __Pyx_unpack_tuple2(tuple, value1, value2, is_tuple, has_known_size, decref_tuple)\
    (likely(is_tuple || PyTuple_Check(tuple)) ?\
        (likely(has_known_size || PyTuple_GET_SIZE(tuple) == 2) ?\
            __Pyx_unpack_tuple2_exact(tuple, value1, value2, decref_tuple) :\
            (__Pyx_UnpackTupleError(tuple, 2), -1)) :\
        __Pyx_unpack_tuple2_generic(tuple, value1, value2, has_known_size, decref_tuple))
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
    PyObject* tuple, PyObject** value1, PyObject** value2, int decref_tuple);
static int __Pyx_unpack_tuple2_generic(
    PyObject* tuple, PyObject** value1, PyObject** value2, int has_known_size, int decref_tuple);

/* dict_iter.proto */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* dict, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_is_dict);
static CYTHON_INLINE int __Pyx_dict_iter_next(PyObject* dict_or_iter, Py_ssize_t orig_length, Py_ssize_t* ppos,
                                              PyObject** pkey, PyObject** pvalue, PyObject** pitem, int is_dict);

/* ListCompAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_ListComp_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_ListComp_Append(L,x) PyList_Append(L,x)
#endif

/* DictGetItem.proto */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key);
#define __Pyx_PyObject_Dict_GetItem(obj, name)\
    (likely(PyDict_CheckExact(obj)) ?\
     __Pyx_PyDict_GetItem(obj, name) : PyObject_GetItem(obj, name))
#else
#define __Pyx_PyDict_GetItem(d, key) PyObject_GetItem(d, key)
#define __Pyx_PyObject_Dict_GetItem(obj, name)  PyObject_GetItem(obj, name)
#endif

/* SliceTupleAndList.proto */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyList_GetSlice(PyObject* src, Py_ssize_t start, Py_ssize_t stop);
static CYTHON_INLINE PyObject* __Pyx_PyTuple_GetSlice(PyObject* src, Py_ssize_t start, Py_ssize_t stop);
#else
#define __Pyx_PyList_GetSlice(seq, start, stop)   PySequence_GetSlice(seq, start, stop)
#define __Pyx_PyTuple_GetSlice(seq, start, stop)  PySequence_GetSlice(seq, start, stop)
#endif

/* GetItemInt.proto */
#define __Pyx_GetItemInt(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Fast(o, (Py_ssize_t)i, is_list, wraparound, boundscheck) :\
    (is_list ? (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL) :\
               __Pyx_GetItemInt_Generic(o, to_py_func(i))))
#define __Pyx_GetItemInt_List(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_List_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "list index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
#define __Pyx_GetItemInt_Tuple(o, i, type, is_signed, to_py_func, is_list, wraparound, boundscheck)\
    (__Pyx_fits_Py_ssize_t(i, type, is_signed) ?\
    __Pyx_GetItemInt_Tuple_Fast(o, (Py_ssize_t)i, wraparound, boundscheck) :\
    (PyErr_SetString(PyExc_IndexError, "tuple index out of range"), (PyObject*)NULL))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              int wraparound, int boundscheck);
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j);
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i,
                                                     int is_list, int wraparound, int boundscheck);

/* UnicodeConcatInPlace.proto */
# if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
    #if CYTHON_REFNANNY
        #define __Pyx_PyUnicode_ConcatInPlace(left, right) __Pyx_PyUnicode_ConcatInPlaceImpl(&left, right, __pyx_refnanny)
    #else
        #define __Pyx_PyUnicode_ConcatInPlace(left, right) __Pyx_PyUnicode_ConcatInPlaceImpl(&left, right)
    #endif
    static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_left, PyObject *right
        #if CYTHON_REFNANNY
        , void* __pyx_refnanny
        #endif
    );
#else
#define __Pyx_PyUnicode_ConcatInPlace __Pyx_PyUnicode_Concat
#endif
#define __Pyx_PyUnicode_ConcatInPlaceSafe(left, right) ((unlikely((left) == Py_None) || unlikely((right) == Py_None)) ?\
    PyNumber_InPlaceAdd(left, right) : __Pyx_PyUnicode_ConcatInPlace(left, right))

/* PyObjectSetAttrStr.proto */
#if CYTHON_USE_TYPE_SLOTS
#define __Pyx_PyObject_DelAttrStr(o,n) __Pyx_PyObject_SetAttrStr(o, n, NULL)
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value);
#else
#define __Pyx_PyObject_DelAttrStr(o,n)   PyObject_DelAttr(o,n)
#define __Pyx_PyObject_SetAttrStr(o,n,v) PyObject_SetAttr(o,n,v)
#endif

/* ArgTypeTest.proto */
#define __Pyx_ArgTypeTest(obj, type, none_allowed, name, exact)\
    ((likely(__Pyx_IS_TYPE(obj, type) | (none_allowed && (obj == Py_None)))) ? 1 :\
        __Pyx__ArgTypeTest(obj, type, name, exact))
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact);

/* ListAppend.proto */
#if CYTHON_USE_PYLIST_INTERNALS && CYTHON_ASSUME_SAFE_MACROS
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len) & likely(len > (L->allocated >> 1))) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        __Pyx_SET_SIZE(list, len + 1);
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

/* RaiseUnexpectedTypeError.proto */
static int __Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj);

/* GetAttr3.proto */
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *, PyObject *, PyObject *);

/* PySequenceContains.proto */
static CYTHON_INLINE int __Pyx_PySequence_ContainsTF(PyObject* item, PyObject* seq, int eq) {
    int result = PySequence_Contains(seq, item);
    return unlikely(result < 0) ? result : (result == (eq == Py_EQ));
}

/* CallableCheck.proto */
#if CYTHON_USE_TYPE_SLOTS && PY_MAJOR_VERSION >= 3
#define __Pyx_PyCallable_Check(obj)   (Py_TYPE(obj)->tp_call != NULL)
#else
#define __Pyx_PyCallable_Check(obj)   PyCallable_Check(obj)
#endif

/* RaiseUnboundLocalError.proto */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname);

/* Import.proto */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level);

/* ImportFrom.proto */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name);

/* HasAttr.proto */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *, PyObject *);

/* CallNextTpTraverse.proto */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse);

/* CallNextTpClear.proto */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear);

/* ValidateBasesTuple.proto */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases);
#endif

/* PyType_Ready.proto */
CYTHON_UNUSED static int __Pyx_PyType_Ready(PyTypeObject *t);

/* PyObject_GenericGetAttrNoDict.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttrNoDict PyObject_GenericGetAttr
#endif

/* PyObject_GenericGetAttr.proto */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name);
#else
#define __Pyx_PyObject_GenericGetAttr PyObject_GenericGetAttr
#endif

/* SetVTable.proto */
static int __Pyx_SetVtable(PyTypeObject* typeptr , void* vtable);

/* GetVTable.proto */
static void* __Pyx_GetVtable(PyTypeObject *type);

/* MergeVTables.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_MergeVtables(PyTypeObject *type);
#endif

/* SetupReduce.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce(PyObject* type_obj);
#endif

/* TypeImport.proto */
#ifndef __PYX_HAVE_RT_ImportType_proto_3_0_0
#define __PYX_HAVE_RT_ImportType_proto_3_0_0
#if defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L
#include <stdalign.h>
#endif
#if (defined (__STDC_VERSION__) && __STDC_VERSION__ >= 201112L) || __cplusplus >= 201103L
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_0(s) alignof(s)
#else
#define __PYX_GET_STRUCT_ALIGNMENT_3_0_0(s) sizeof(void*)
#endif
enum __Pyx_ImportType_CheckSize_3_0_0 {
   __Pyx_ImportType_CheckSize_Error_3_0_0 = 0,
   __Pyx_ImportType_CheckSize_Warn_3_0_0 = 1,
   __Pyx_ImportType_CheckSize_Ignore_3_0_0 = 2
};
static PyTypeObject *__Pyx_ImportType_3_0_0(PyObject* module, const char *module_name, const char *class_name, size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_0 check_size);
#endif

/* ImportDottedModule.proto */
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple);
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple);
#endif

/* ClassMethod.proto */
#include "descrobject.h"
CYTHON_UNUSED static PyObject* __Pyx_Method_ClassMethod(PyObject *method);

/* GetNameInClass.proto */
#define __Pyx_GetNameInClass(var, nmspace, name)  (var) = __Pyx__GetNameInClass(nmspace, name)
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name);

/* CLineInTraceback.proto */
#ifdef CYTHON_CLINE_IN_TRACEBACK
#define __Pyx_CLineForTraceback(tstate, c_line)  (((CYTHON_CLINE_IN_TRACEBACK)) ? c_line : 0)
#else
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line);
#endif

/* CodeObjectCache.proto */
#if !CYTHON_COMPILING_IN_LIMITED_API
typedef struct {
    PyCodeObject* code_object;
    int code_line;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);
#endif

/* AddTraceback.proto */
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename);

/* None.proto */
#include <new>

/* GCCDiagnostics.proto */
#if !defined(__INTEL_COMPILER) && defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 6))
#define __Pyx_HAS_GCC_DIAGNOSTIC
#endif

/* CppExceptionConversion.proto */
#ifndef __Pyx_CppExn2PyErr
#include <new>
#include <typeinfo>
#include <stdexcept>
#include <ios>
static void __Pyx_CppExn2PyErr() {
  try {
    if (PyErr_Occurred())
      ; // let the latest Python exn pass through and ignore the current one
    else
      throw;
  } catch (const std::bad_alloc& exn) {
    PyErr_SetString(PyExc_MemoryError, exn.what());
  } catch (const std::bad_cast& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::bad_typeid& exn) {
    PyErr_SetString(PyExc_TypeError, exn.what());
  } catch (const std::domain_error& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::invalid_argument& exn) {
    PyErr_SetString(PyExc_ValueError, exn.what());
  } catch (const std::ios_base::failure& exn) {
    PyErr_SetString(PyExc_IOError, exn.what());
  } catch (const std::out_of_range& exn) {
    PyErr_SetString(PyExc_IndexError, exn.what());
  } catch (const std::overflow_error& exn) {
    PyErr_SetString(PyExc_OverflowError, exn.what());
  } catch (const std::range_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::underflow_error& exn) {
    PyErr_SetString(PyExc_ArithmeticError, exn.what());
  } catch (const std::exception& exn) {
    PyErr_SetString(PyExc_RuntimeError, exn.what());
  }
  catch (...)
  {
    PyErr_SetString(PyExc_RuntimeError, "Unknown exception");
  }
}
#endif

/* RealImag.proto */
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(__cplusplus) && CYTHON_CCOMPLEX\
        && (defined(_WIN32) || defined(__clang__) || (defined(__GNUC__) && (__GNUC__ >= 5 || __GNUC__ == 4 && __GNUC_MINOR__ >= 4 )) || __cplusplus >= 201103)
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
    #define __Pyx_c_eq_float(a, b)   ((a)==(b))
    #define __Pyx_c_sum_float(a, b)  ((a)+(b))
    #define __Pyx_c_diff_float(a, b) ((a)-(b))
    #define __Pyx_c_prod_float(a, b) ((a)*(b))
    #define __Pyx_c_quot_float(a, b) ((a)/(b))
    #define __Pyx_c_neg_float(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_float(z) ((z)==(float)0)
    #define __Pyx_c_conj_float(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (::std::abs(z))
        #define __Pyx_c_pow_float(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_float(z) ((z)==0)
    #define __Pyx_c_conj_float(z)    (conjf(z))
    #if 1
        #define __Pyx_c_abs_float(z)     (cabsf(z))
        #define __Pyx_c_pow_float(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

/* Arithmetic.proto */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
    #define __Pyx_c_eq_double(a, b)   ((a)==(b))
    #define __Pyx_c_sum_double(a, b)  ((a)+(b))
    #define __Pyx_c_diff_double(a, b) ((a)-(b))
    #define __Pyx_c_prod_double(a, b) ((a)*(b))
    #define __Pyx_c_quot_double(a, b) ((a)/(b))
    #define __Pyx_c_neg_double(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero_double(z) ((z)==(double)0)
    #define __Pyx_c_conj_double(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (::std::abs(z))
        #define __Pyx_c_pow_double(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero_double(z) ((z)==0)
    #define __Pyx_c_conj_double(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs_double(z)     (cabs(z))
        #define __Pyx_c_pow_double(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

/* CIntFromPy.proto */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *);

/* CIntToPy.proto */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value);

/* CIntFromPy.proto */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *);

/* FormatTypeName.proto */
#if CYTHON_COMPILING_IN_LIMITED_API
typedef PyObject *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%U"
static __Pyx_TypeName __Pyx_PyType_GetName(PyTypeObject* tp);
#define __Pyx_DECREF_TypeName(obj) Py_XDECREF(obj)
#else
typedef const char *__Pyx_TypeName;
#define __Pyx_FMT_TYPENAME "%.200s"
#define __Pyx_PyType_GetName(tp) ((tp)->tp_name)
#define __Pyx_DECREF_TypeName(obj)
#endif

/* FastTypeChecks.proto */
#if CYTHON_COMPILING_IN_CPYTHON
#define __Pyx_TypeCheck(obj, type) __Pyx_IsSubtype(Py_TYPE(obj), (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) __Pyx_IsAnySubtype2(Py_TYPE(obj), (PyTypeObject *)type1, (PyTypeObject *)type2)
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject *type);
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *type1, PyObject *type2);
#else
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#define __Pyx_TypeCheck2(obj, type1, type2) (PyObject_TypeCheck(obj, (PyTypeObject *)type1) || PyObject_TypeCheck(obj, (PyTypeObject *)type2))
#define __Pyx_PyErr_GivenExceptionMatches(err, type) PyErr_GivenExceptionMatches(err, type)
#define __Pyx_PyErr_GivenExceptionMatches2(err, type1, type2) (PyErr_GivenExceptionMatches(err, type1) || PyErr_GivenExceptionMatches(err, type2))
#endif
#define __Pyx_PyErr_ExceptionMatches2(err1, err2)  __Pyx_PyErr_GivenExceptionMatches2(__Pyx_PyErr_CurrentExceptionType(), err1, err2)
#define __Pyx_PyException_Check(obj) __Pyx_TypeCheck(obj, PyExc_Exception)

/* CheckBinaryVersion.proto */
static int __Pyx_check_binary_version(void);

/* FunctionImport.proto */
static int __Pyx_ImportFunction_3_0_0(PyObject *module, const char *funcname, void (**f)(void), const char *sig);

/* InitStrings.proto */
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t);

/* #### Code section: module_declarations ### */
static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4real_real(PyComplexObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4imag_imag(PyComplexObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE PyObject *__pyx_f_5numpy_7ndarray_4base_base(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE PyArray_Descr *__pyx_f_5numpy_7ndarray_5descr_descr(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE int __pyx_f_5numpy_7ndarray_4ndim_ndim(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_5shape_shape(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_7strides_strides(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE npy_intp __pyx_f_5numpy_7ndarray_4size_size(PyArrayObject *__pyx_v_self); /* proto*/
static CYTHON_INLINE char *__pyx_f_5numpy_7ndarray_4data_data(PyArrayObject *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_12ReactionRate_wrap(std::shared_ptr<Cantera::ReactionRate>  __pyx_v_rate); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_12ReactionRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_13ArrheniusRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self); /* proto*/
static Cantera::ArrheniusRate *__pyx_f_7cantera_8reaction_13ArrheniusRate_cxx_object(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_16BlowersMaselRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self); /* proto*/
static Cantera::BlowersMaselRate *__pyx_f_7cantera_8reaction_16BlowersMaselRate_cxx_object(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_17TwoTempPlasmaRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self); /* proto*/
static Cantera::TwoTempPlasmaRate *__pyx_f_7cantera_8reaction_17TwoTempPlasmaRate_cxx_object(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_11FalloffRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_13LindemannRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_LindemannRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_8TroeRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_TroeRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_7SriRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_SriRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_9TsangRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_TsangRate *__pyx_v_self); /* proto*/
static Cantera::PlogRate *__pyx_f_7cantera_8reaction_8PlogRate_cxx_object(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self); /* proto*/
static Cantera::Array2D __pyx_f_7cantera_8reaction_13ChebyshevRate__cxxarray2d(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self, PyObject *__pyx_v_coeffs); /* proto*/
static Cantera::ChebyshevRate *__pyx_f_7cantera_8reaction_13ChebyshevRate_cxx_object(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self); /* proto*/
static Cantera::CustomFunc1Rate *__pyx_f_7cantera_8reaction_10CustomRate_cxx_object(struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self); /* proto*/
PyObject *__pyx_f_7cantera_8reaction_14ExtensibleRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, struct __pyx_opt_args_7cantera_8reaction_14ExtensibleRate_set_cxx_object *__pyx_optional_args); /* proto*/
PyObject *__pyx_f_7cantera_8reaction_14ExtensibleRate_set_cxx_object__pyx_wrap_1(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_18ExtensibleRateData_set_cxx_object(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self, Cantera::ReactionDataDelegator *__pyx_v_data); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_22InterfaceArrheniusRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self); /* proto*/
static Cantera::InterfaceArrheniusRate *__pyx_f_7cantera_8reaction_22InterfaceArrheniusRate_cxx_object(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_25InterfaceBlowersMaselRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self); /* proto*/
static Cantera::InterfaceBlowersMaselRate *__pyx_f_7cantera_8reaction_25InterfaceBlowersMaselRate_cxx_object(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_21StickingArrheniusRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self); /* proto*/
static Cantera::StickingArrheniusRate *__pyx_f_7cantera_8reaction_21StickingArrheniusRate_cxx_object(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_24StickingBlowersMaselRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self); /* proto*/
static Cantera::StickingBlowersMaselRate *__pyx_f_7cantera_8reaction_24StickingBlowersMaselRate_cxx_object(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_9ThirdBody_wrap(std::shared_ptr<Cantera::ThirdBody>  __pyx_v_third_body); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_8Reaction_wrap(std::shared_ptr<Cantera::Reaction>  __pyx_v_reaction); /* proto*/
static PyObject *__pyx_f_7cantera_8reaction_9Arrhenius_wrap(Cantera::ArrheniusRate *__pyx_v_rate); /* proto*/

/* Module declarations from "libcpp.vector" */

/* Module declarations from "libc.string" */

/* Module declarations from "libcpp.string" */

/* Module declarations from "libcpp.utility" */

/* Module declarations from "libcpp.map" */

/* Module declarations from "libcpp.cast" */

/* Module declarations from "libcpp.pair" */

/* Module declarations from "libcpp" */

/* Module declarations from "libcpp.functional" */

/* Module declarations from "libcpp.memory" */

/* Module declarations from "cpython.version" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.type" */

/* Module declarations from "libc.stdio" */

/* Module declarations from "cpython.object" */

/* Module declarations from "cpython.ref" */

/* Module declarations from "cpython.exc" */

/* Module declarations from "cpython.module" */

/* Module declarations from "cpython.mem" */

/* Module declarations from "cpython.tuple" */

/* Module declarations from "cpython.list" */

/* Module declarations from "cpython.sequence" */

/* Module declarations from "cpython.mapping" */

/* Module declarations from "cpython.iterator" */

/* Module declarations from "cpython.number" */

/* Module declarations from "cpython.int" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.bool" */

/* Module declarations from "cpython.long" */

/* Module declarations from "cpython.float" */

/* Module declarations from "__builtin__" */

/* Module declarations from "cpython.complex" */

/* Module declarations from "cpython.string" */

/* Module declarations from "cpython.unicode" */

/* Module declarations from "cpython.pyport" */

/* Module declarations from "cpython.dict" */

/* Module declarations from "cpython.instance" */

/* Module declarations from "cpython.function" */

/* Module declarations from "cpython.method" */

/* Module declarations from "cpython.weakref" */

/* Module declarations from "cpython.getargs" */

/* Module declarations from "cpython.pythread" */

/* Module declarations from "cpython.pystate" */

/* Module declarations from "cpython.cobject" */

/* Module declarations from "cpython.oldbuffer" */

/* Module declarations from "cpython.set" */

/* Module declarations from "cpython.buffer" */

/* Module declarations from "cpython.bytes" */

/* Module declarations from "cpython.pycapsule" */

/* Module declarations from "cpython.contextvars" */

/* Module declarations from "cpython" */

/* Module declarations from "numpy" */

/* Module declarations from "numpy" */

/* Module declarations from "cantera.ctcxx" */

/* Module declarations from "cantera.func1" */

/* Module declarations from "cantera.units" */

/* Module declarations from "cantera.delegator" */
static int (*__pyx_f_7cantera_9delegator_assign_delegates)(PyObject *, Cantera::Delegator *); /*proto*/

/* Module declarations from "cantera.solutionbase" */

/* Module declarations from "cantera.kinetics" */

/* Module declarations from "libcpp.unordered_map" */

/* Module declarations from "cantera._utils" */
static std::string (*__pyx_f_7cantera_6_utils_stringify)(PyObject *); /*proto*/
static PyObject *(*__pyx_f_7cantera_6_utils_pystr)(std::string); /*proto*/
static PyObject *(*__pyx_f_7cantera_6_utils_comp_map_to_dict)(__pyx_t_7cantera_5ctcxx_Composition); /*proto*/
static __pyx_t_7cantera_5ctcxx_Composition (*__pyx_f_7cantera_6_utils_comp_map)(PyObject *); /*proto*/
static Cantera::AnyMap (*__pyx_f_7cantera_6_utils_py_to_anymap)(PyObject *, struct __pyx_opt_args_7cantera_6_utils_py_to_anymap *__pyx_optional_args); /*proto*/
static PyObject *(*__pyx_f_7cantera_6_utils_anymap_to_py)(Cantera::AnyMap &); /*proto*/

/* Module declarations from "cantera.reaction" */
static PyObject *__pyx_v_7cantera_8reaction__reaction_rate_class_registry = 0;
static PyObject *__pyx_f_7cantera_8reaction_copyArrhenius(Cantera::ArrheniusRate *); /*proto*/
static PyObject *__pyx_f_7cantera_8reaction___pyx_unpickle_ExtensibleRateData__set_state(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *, PyObject *); /*proto*/
static PyObject *__pyx_convert_vector_to_py_double(std::vector<double>  const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &); /*proto*/
static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &); /*proto*/
static PyObject *__pyx_convert_map_to_py_std_3a__3a_string____double(std::map<std::string,double>  const &); /*proto*/
/* #### Code section: typeinfo ### */
/* #### Code section: before_global_var ### */
#define __Pyx_MODULE_NAME "cantera.reaction"
extern int __pyx_module_is_main_cantera__reaction;
int __pyx_module_is_main_cantera__reaction = 0;

/* Implementation of "cantera.reaction" */
/* #### Code section: global_var ### */
static PyObject *__pyx_builtin_staticmethod;
static PyObject *__pyx_builtin_id;
static PyObject *__pyx_builtin_TypeError;
static PyObject *__pyx_builtin_all;
static PyObject *__pyx_builtin_enumerate;
static PyObject *__pyx_builtin_NotImplementedError;
static PyObject *__pyx_builtin_DeprecationWarning;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_MemoryError;
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_ImportError;
/* #### Code section: string_decls ### */
static const char __pyx_k_A[] = "A";
static const char __pyx_k_E[] = "E";
static const char __pyx_k_F[] = "F";
static const char __pyx_k_M[] = "M";
static const char __pyx_k_T[] = "T";
static const char __pyx_k_b[] = "b";
static const char __pyx_k_c[] = "c";
static const char __pyx_k_k[] = "k";
static const char __pyx_k_r[] = "r";
static const char __pyx_k_s[] = "s";
static const char __pyx_k_w[] = "w";
static const char __pyx_k_0x[] = "0x";
static const char __pyx_k_Ea[] = "Ea";
static const char __pyx_k__3[] = "<";
static const char __pyx_k__4[] = ">";
static const char __pyx_k__7[] = "";
static const char __pyx_k__9[] = "'";
static const char __pyx_k_at[] = " at ";
static const char __pyx_k_gc[] = "gc";
static const char __pyx_k_id[] = "id";
static const char __pyx_k_np[] = "np";
static const char __pyx_k_or[] = " or ";
static const char __pyx_k_Ea0[] = "Ea0";
static const char __pyx_k_SRI[] = "SRI";
static const char __pyx_k__10[] = ", ";
static const char __pyx_k__20[] = "    <";
static const char __pyx_k__32[] = ".";
static const char __pyx_k__33[] = "*";
static const char __pyx_k_all[] = "all";
static const char __pyx_k_cls[] = "cls";
static const char __pyx_k_get[] = "get";
static const char __pyx_k_log[] = "log";
static const char __pyx_k_low[] = "low";
static const char __pyx_k_new[] = "__new__";
static const char __pyx_k_str[] = "str";
static const char __pyx_k_None[] = "None";
static const char __pyx_k_Troe[] = "Troe";
static const char __pyx_k__159[] = "?";
static const char __pyx_k_data[] = "data";
static const char __pyx_k_dict[] = "__dict__";
static const char __pyx_k_eval[] = ".eval";
static const char __pyx_k_high[] = "high";
static const char __pyx_k_init[] = "init";
static const char __pyx_k_main[] = "__main__";
static const char __pyx_k_name[] = "__name__";
static const char __pyx_k_rate[] = "rate";
static const char __pyx_k_root[] = "root";
static const char __pyx_k_self[] = "self";
static const char __pyx_k_soln[] = "soln";
static const char __pyx_k_spec[] = "__spec__";
static const char __pyx_k_test[] = "__test__";
static const char __pyx_k_text[] = "text";
static const char __pyx_k_type[] = "type";
static const char __pyx_k_warn[] = "warn";
static const char __pyx_k_Tsang[] = "Tsang";
static const char __pyx_k_after[] = "after";
static const char __pyx_k_cinit[] = "_cinit";
static const char __pyx_k_class[] = "__class__";
static const char __pyx_k_concm[] = "concm";
static const char __pyx_k_float[] = "float";
static const char __pyx_k_items[] = "items";
static const char __pyx_k_numpy[] = "numpy";
static const char __pyx_k_order[] = "order";
static const char __pyx_k_range[] = "range";
static const char __pyx_k_rates[] = "rates";
static const char __pyx_k_state[] = "state";
static const char __pyx_k_utils[] = "_utils";
static const char __pyx_k_AnyMap[] = "AnyMap";
static const char __pyx_k_Ea_gas[] = "Ea_gas";
static const char __pyx_k_conc3b[] = "conc3b";
static const char __pyx_k_dict_2[] = "_dict";
static const char __pyx_k_double[] = "double";
static const char __pyx_k_enable[] = "enable";
static const char __pyx_k_eval_2[] = "eval";
static const char __pyx_k_format[] = "format";
static const char __pyx_k_import[] = "__import__";
static const char __pyx_k_kwargs[] = "kwargs";
static const char __pyx_k_name_2[] = "name";
static const char __pyx_k_params[] = "params";
static const char __pyx_k_pickle[] = "pickle";
static const char __pyx_k_python[] = "python";
static const char __pyx_k_reduce[] = "__reduce__";
static const char __pyx_k_return[] = "return";
static const char __pyx_k_tolist[] = "tolist";
static const char __pyx_k_update[] = ".update";
static const char __pyx_k_SriRate[] = "SriRate";
static const char __pyx_k_any_map[] = "any_map";
static const char __pyx_k_disable[] = "disable";
static const char __pyx_k_replace[] = "replace";
static const char __pyx_k_reshape[] = "reshape";
static const char __pyx_k_section[] = "section";
static const char __pyx_k_species[] = "species";
static const char __pyx_k_PlogRate[] = "PlogRate";
static const char __pyx_k_Reaction[] = "Reaction";
static const char __pyx_k_Solution[] = "'Solution'";
static const char __pyx_k_TroeRate[] = "TroeRate";
static const char __pyx_k_collider[] = "collider";
static const char __pyx_k_cxx_rate[] = "cxx_rate";
static const char __pyx_k_equation[] = "equation";
static const char __pyx_k_filename[] = "filename";
static const char __pyx_k_fromiter[] = "fromiter";
static const char __pyx_k_getstate[] = "__getstate__";
static const char __pyx_k_kinetics[] = "kinetics";
static const char __pyx_k_low_rate[] = "low_rate";
static const char __pyx_k_par_list[] = "par_list";
static const char __pyx_k_pressure[] = "pressure";
static const char __pyx_k_products[] = "products";
static const char __pyx_k_pyx_type[] = "__pyx_type";
static const char __pyx_k_setstate[] = "__setstate__";
static const char __pyx_k_update_2[] = "update";
static const char __pyx_k_validate[] = "validate";
static const char __pyx_k_warnings[] = "warnings";
static const char __pyx_k_Arrhenius[] = "Arrhenius";
static const char __pyx_k_Chebyshev[] = "Chebyshev";
static const char __pyx_k_Lindemann[] = "Lindemann";
static const char __pyx_k_ThirdBody[] = "ThirdBody";
static const char __pyx_k_TsangRate[] = "TsangRate";
static const char __pyx_k_TypeError[] = "TypeError";
static const char __pyx_k_UnitStack[] = "UnitStack";
static const char __pyx_k_coverages[] = "coverages";
static const char __pyx_k_cxxvector[] = "cxxvector";
static const char __pyx_k_elec_temp[] = "elec_temp";
static const char __pyx_k_enumerate[] = "enumerate";
static const char __pyx_k_from_dict[] = "_from_dict";
static const char __pyx_k_from_yaml[] = "from_yaml";
static const char __pyx_k_high_rate[] = "high_rate";
static const char __pyx_k_hyphenize[] = "hyphenize";
static const char __pyx_k_isenabled[] = "isenabled";
static const char __pyx_k_pyx_state[] = "__pyx_state";
static const char __pyx_k_rate_type[] = "rate_type";
static const char __pyx_k_reactants[] = "reactants";
static const char __pyx_k_reactions[] = "reactions";
static const char __pyx_k_reduce_ex[] = "__reduce_ex__";
static const char __pyx_k_Base_class[] = "Base class '";
static const char __pyx_k_CustomRate[] = "CustomRate";
static const char __pyx_k_ValueError[] = "ValueError";
static const char __pyx_k_efficiency[] = "efficiency";
static const char __pyx_k_extensible[] = "extensible";
static const char __pyx_k_input_data[] = "input_data";
static const char __pyx_k_par_string[] = "par_string";
static const char __pyx_k_pyx_result[] = "__pyx_result";
static const char __pyx_k_pyx_vtable[] = "__pyx_vtable__";
static const char __pyx_k_subclasses[] = "__subclasses__";
static const char __pyx_k_third_body[] = "third_body";
static const char __pyx_k_Ea_electron[] = "Ea_electron";
static const char __pyx_k_FalloffRate[] = "FalloffRate";
static const char __pyx_k_ImportError[] = "ImportError";
static const char __pyx_k_MemoryError[] = "MemoryError";
static const char __pyx_k_PickleError[] = "PickleError";
static const char __pyx_k_double_void[] = "double(void*)";
static const char __pyx_k_from_dict_2[] = "from_dict";
static const char __pyx_k_set_species[] = "set_species";
static const char __pyx_k_temperature[] = "temperature";
static const char __pyx_k_void_AnyMap[] = "void(AnyMap&)";
static const char __pyx_k_CanteraError[] = "CanteraError";
static const char __pyx_k_ReactionRate[] = "ReactionRate";
static const char __pyx_k_cxx_reaction[] = "cxx_reaction";
static const char __pyx_k_efficiencies[] = "efficiencies";
static const char __pyx_k_initializing[] = "_initializing";
static const char __pyx_k_is_coroutine[] = "_is_coroutine";
static const char __pyx_k_pyx_checksum[] = "__pyx_checksum";
static const char __pyx_k_staticmethod[] = "staticmethod";
static const char __pyx_k_stringsource[] = "<stringsource>";
static const char __pyx_k_use_setstate[] = "use_setstate";
static const char __pyx_k_ArrheniusRate[] = "ArrheniusRate";
static const char __pyx_k_Blowers_Masel[] = "Blowers-Masel";
static const char __pyx_k_ChebyshevRate[] = "ChebyshevRate";
static const char __pyx_k_LindemannRate[] = "LindemannRate";
static const char __pyx_k_StickRateBase[] = "StickRateBase";
static const char __pyx_k_cxx_reactions[] = "cxx_reactions";
static const char __pyx_k_getParameters[] = "getParameters";
static const char __pyx_k_rate_constant[] = "rate-constant";
static const char __pyx_k_reaction_type[] = "reaction_type";
static const char __pyx_k_reduce_cython[] = "__reduce_cython__";
static const char __pyx_k_setParameters[] = "setParameters";
static const char __pyx_k_CustomReaction[] = "CustomReaction";
static const char __pyx_k_ExtensibleRate[] = "ExtensibleRate";
static const char __pyx_k_evalFromStruct[] = "evalFromStruct";
static const char __pyx_k_falloff_coeffs[] = "falloff_coeffs";
static const char __pyx_k_get_parameters[] = ".get_parameters";
static const char __pyx_k_list_from_file[] = "list_from_file";
static const char __pyx_k_list_from_yaml[] = "list_from_yaml";
static const char __pyx_k_pressure_range[] = "pressure_range";
static const char __pyx_k_set_parameters[] = "set_parameters";
static const char __pyx_k_FalloffReaction[] = "FalloffReaction";
static const char __pyx_k_clear_user_data[] = "clear_user_data";
static const char __pyx_k_from_parameters[] = "_from_parameters";
static const char __pyx_k_pyx_PickleError[] = "__pyx_PickleError";
static const char __pyx_k_setstate_cython[] = "__setstate_cython__";
static const char __pyx_k_BlowersMaselRate[] = "BlowersMaselRate";
static const char __pyx_k_cantera_reaction[] = "cantera.reaction";
static const char __pyx_k_falloff_function[] = "falloff_function";
static const char __pyx_k_get_parameters_2[] = "get_parameters";
static const char __pyx_k_rate_coeff_units[] = "rate_coeff_units";
static const char __pyx_k_set_parameters_2[] = ".set_parameters";
static const char __pyx_k_update_user_data[] = "update_user_data";
static const char __pyx_k_void_string_void[] = "void(string, void*)";
static const char __pyx_k_ArrheniusRateBase[] = "ArrheniusRateBase";
static const char __pyx_k_InterfaceRateBase[] = "InterfaceRateBase";
static const char __pyx_k_ThreeBodyReaction[] = "ThreeBodyReaction";
static const char __pyx_k_TwoTempPlasmaRate[] = "TwoTempPlasmaRate";
static const char __pyx_k_activation_energy[] = "activation_energy";
static const char __pyx_k_set_rate_function[] = "set_rate_function";
static const char __pyx_k_temperature_range[] = "temperature_range";
static const char __pyx_k_DeprecationWarning[] = "DeprecationWarning";
static const char __pyx_k_ExtensibleRateData[] = "ExtensibleRateData";
static const char __pyx_k_Invalid_parameters[] = "Invalid parameters ";
static const char __pyx_k_Reaction_from_dict[] = "Reaction.from_dict";
static const char __pyx_k_Reaction_from_yaml[] = "Reaction.from_yaml";
static const char __pyx_k_SriRate__from_dict[] = "SriRate._from_dict";
static const char __pyx_k_asyncio_coroutines[] = "asyncio.coroutines";
static const char __pyx_k_cline_in_traceback[] = "cline_in_traceback";
static const char __pyx_k_default_efficiency[] = "default_efficiency";
static const char __pyx_k_reaction_rate_type[] = "_reaction_rate_type";
static const char __pyx_k_sticking_Arrhenius[] = "sticking-Arrhenius";
static const char __pyx_k_to_rate_expression[] = "' to rate expression.";
static const char __pyx_k_ExtensibleRate_eval[] = "ExtensibleRate.eval";
static const char __pyx_k_NotImplementedError[] = "NotImplementedError";
static const char __pyx_k_Reaction_efficiency[] = "Reaction.efficiency";
static const char __pyx_k_TroeRate__from_dict[] = "TroeRate._from_dict";
static const char __pyx_k_delegatable_methods[] = "delegatable_methods";
static const char __pyx_k_interface_Arrhenius[] = "interface-Arrhenius";
static const char __pyx_k_register_subclasses[] = "register_subclasses";
static const char __pyx_k_Invalid_parameters_2[] = "Invalid parameters";
static const char __pyx_k_ThirdBody_efficiency[] = "ThirdBody.efficiency";
static const char __pyx_k_TsangRate__from_dict[] = "TsangRate._from_dict";
static const char __pyx_k_cantera_reaction_pyx[] = "cantera/reaction.pyx";
static const char __pyx_k_custom_rate_function[] = "custom-rate-function";
static const char __pyx_k_temperature_exponent[] = "temperature_exponent";
static const char __pyx_k_Arrhenius_A_g_b_g_E_g[] = "Arrhenius(A={:g}, b={:g}, E={:g})";
static const char __pyx_k_StickingArrheniusRate[] = "StickingArrheniusRate";
static const char __pyx_k_void_AnyMap_UnitStack[] = "void(AnyMap&, UnitStack&)";
static const char __pyx_k_InterfaceArrheniusRate[] = "InterfaceArrheniusRate";
static const char __pyx_k_ReactionRate_from_dict[] = "ReactionRate.from_dict";
static const char __pyx_k_ReactionRate_from_yaml[] = "ReactionRate.from_yaml";
static const char __pyx_k_pre_exponential_factor[] = "pre_exponential_factor";
static const char __pyx_k_sticking_Blowers_Masel[] = "sticking-Blowers-Masel";
static const char __pyx_k_two_temperature_plasma[] = "two-temperature-plasma";
static const char __pyx_k_ExtensibleRate_validate[] = "ExtensibleRate.validate";
static const char __pyx_k_Invalid_parameter_rates[] = "Invalid parameter 'rates'";
static const char __pyx_k_Reaction_list_from_file[] = "Reaction.list_from_file";
static const char __pyx_k_Reaction_list_from_yaml[] = "Reaction.list_from_yaml";
static const char __pyx_k_SriRate___reduce_cython[] = "SriRate.__reduce_cython__";
static const char __pyx_k_interface_Blowers_Masel[] = "interface-Blowers-Masel";
static const char __pyx_k_ArrheniusRateBase__cinit[] = "ArrheniusRateBase._cinit";
static const char __pyx_k_ArrheniusRate__from_dict[] = "ArrheniusRate._from_dict";
static const char __pyx_k_Invalid_input_parameters[] = "Invalid input parameters";
static const char __pyx_k_LindemannRate__from_dict[] = "LindemannRate._from_dict";
static const char __pyx_k_PlogRate___reduce_cython[] = "PlogRate.__reduce_cython__";
static const char __pyx_k_Reaction___reduce_cython[] = "Reaction.__reduce_cython__";
static const char __pyx_k_Reaction_clear_user_data[] = "Reaction.clear_user_data";
static const char __pyx_k_StickingBlowersMaselRate[] = "StickingBlowersMaselRate";
static const char __pyx_k_TroeRate___reduce_cython[] = "TroeRate.__reduce_cython__";
static const char __pyx_k_Arrhenius___reduce_cython[] = "Arrhenius.__reduce_cython__";
static const char __pyx_k_ExtensibleRateData_update[] = "ExtensibleRateData.update";
static const char __pyx_k_InterfaceBlowersMaselRate[] = "InterfaceBlowersMaselRate";
static const char __pyx_k_Reaction_update_user_data[] = "Reaction.update_user_data";
static const char __pyx_k_SriRate___setstate_cython[] = "SriRate.__setstate_cython__";
static const char __pyx_k_ThirdBody___reduce_cython[] = "ThirdBody.__reduce_cython__";
static const char __pyx_k_TsangRate___reduce_cython[] = "TsangRate.__reduce_cython__";
static const char __pyx_k_CustomRate___reduce_cython[] = "CustomRate.__reduce_cython__";
static const char __pyx_k_PlogRate___setstate_cython[] = "PlogRate.__setstate_cython__";
static const char __pyx_k_Reaction___setstate_cython[] = "Reaction.__setstate_cython__";
static const char __pyx_k_TroeRate___setstate_cython[] = "TroeRate.__setstate_cython__";
static const char __pyx_k_Arrhenius___setstate_cython[] = "Arrhenius.__setstate_cython__";
static const char __pyx_k_BlowersMaselRate__from_dict[] = "BlowersMaselRate._from_dict";
static const char __pyx_k_ChemicallyActivatedReaction[] = "ChemicallyActivatedReaction";
static const char __pyx_k_FalloffRate___reduce_cython[] = "FalloffRate.__reduce_cython__";
static const char __pyx_k_ThirdBody___setstate_cython[] = "ThirdBody.__setstate_cython__";
static const char __pyx_k_TsangRate___setstate_cython[] = "TsangRate.__setstate_cython__";
static const char __pyx_k_CustomRate___setstate_cython[] = "CustomRate.__setstate_cython__";
static const char __pyx_k_CustomRate_set_rate_function[] = "CustomRate.set_rate_function";
static const char __pyx_k_FalloffRate_falloff_function[] = "FalloffRate.falloff_function";
static const char __pyx_k_Invalid_parameter_input_data[] = "Invalid parameter 'input_data'";
static const char __pyx_k_ReactionRate___reduce_cython[] = "ReactionRate.__reduce_cython__";
static const char __pyx_k_TwoTempPlasmaRate__from_dict[] = "TwoTempPlasmaRate._from_dict";
static const char __pyx_k_pressure_dependent_Arrhenius[] = "pressure-dependent-Arrhenius";
static const char __pyx_k_ArrheniusRate___reduce_cython[] = "ArrheniusRate.__reduce_cython__";
static const char __pyx_k_ChebyshevRate___reduce_cython[] = "ChebyshevRate.__reduce_cython__";
static const char __pyx_k_ExtensibleRate_get_parameters[] = "ExtensibleRate.get_parameters";
static const char __pyx_k_ExtensibleRate_set_parameters[] = "ExtensibleRate.set_parameters";
static const char __pyx_k_FalloffRate___setstate_cython[] = "FalloffRate.__setstate_cython__";
static const char __pyx_k_InterfaceRateBase_set_species[] = "InterfaceRateBase.set_species";
static const char __pyx_k_LindemannRate___reduce_cython[] = "LindemannRate.__reduce_cython__";
static const char __pyx_k_StickRateBase___reduce_cython[] = "StickRateBase.__reduce_cython__";
static const char __pyx_k_ArrheniusRate__from_parameters[] = "ArrheniusRate._from_parameters";
static const char __pyx_k_Cannot_convert_input_with_type[] = "Cannot convert input with type '";
static const char __pyx_k_CustomReaction___reduce_cython[] = "CustomReaction.__reduce_cython__";
static const char __pyx_k_ExtensibleRate___reduce_cython[] = "ExtensibleRate.__reduce_cython__";
static const char __pyx_k_ReactionRate___setstate_cython[] = "ReactionRate.__setstate_cython__";
static const char __pyx_k_but_should_be_called_from_base[] = "' but should be called from base class 'ReactionRate'";
static const char __pyx_k_pyx_unpickle_ExtensibleRateDat[] = "__pyx_unpickle_ExtensibleRateData";
static const char __pyx_k_ArrheniusRate___setstate_cython[] = "ArrheniusRate.__setstate_cython__";
static const char __pyx_k_ChebyshevRate___setstate_cython[] = "ChebyshevRate.__setstate_cython__";
static const char __pyx_k_FalloffReaction___reduce_cython[] = "FalloffReaction.__reduce_cython__";
static const char __pyx_k_InterfaceArrheniusRate___reduce[] = "InterfaceArrheniusRate.__reduce_cython__";
static const char __pyx_k_InterfaceBlowersMaselRate__from[] = "InterfaceBlowersMaselRate._from_dict";
static const char __pyx_k_LindemannRate___setstate_cython[] = "LindemannRate.__setstate_cython__";
static const char __pyx_k_Missing_reactant_and_or_product[] = "Missing reactant and/or product information.";
static const char __pyx_k_Reaction_does_not_involve_third[] = "Reaction does not involve third body collider";
static const char __pyx_k_Reaction_products_setter_is_dep[] = "'Reaction.products' setter is deprecated and will be removed after Cantera 3.0.\nInstantiate using constructor instead.";
static const char __pyx_k_Reaction_reactants_setter_is_de[] = "'Reaction.reactants' setter is deprecated and will be removed after Cantera 3.0.\nInstantiate using constructor instead.";
static const char __pyx_k_StickRateBase___setstate_cython[] = "StickRateBase.__setstate_cython__";
static const char __pyx_k_cannot_be_instantiated_by_itsel[] = "' cannot be instantiated by itself; use specialized rate constructors instead.";
static const char __pyx_k_numpy_core_multiarray_failed_to[] = "numpy.core.multiarray failed to import";
static const char __pyx_k_ArrheniusRateBase___reduce_cytho[] = "ArrheniusRateBase.__reduce_cython__";
static const char __pyx_k_ArrheniusRateBase___setstate_cyt[] = "ArrheniusRateBase.__setstate_cython__";
static const char __pyx_k_BlowersMaselRate___reduce_cython[] = "BlowersMaselRate.__reduce_cython__";
static const char __pyx_k_BlowersMaselRate___setstate_cyth[] = "BlowersMaselRate.__setstate_cython__";
static const char __pyx_k_BlowersMaselRate__from_parameter[] = "BlowersMaselRate._from_parameters";
static const char __pyx_k_ChemicallyActivatedReaction_Clas[] = "ChemicallyActivatedReaction: Class to be removed after Cantera 3.0; no specialization necessary.";
static const char __pyx_k_ChemicallyActivatedReaction___re[] = "ChemicallyActivatedReaction.__reduce_cython__";
static const char __pyx_k_ChemicallyActivatedReaction___se[] = "ChemicallyActivatedReaction.__setstate_cython__";
static const char __pyx_k_Class_method_from_dict_was_invok[] = "Class method 'from_dict' was invoked from '";
static const char __pyx_k_Class_method_from_yaml_was_invok[] = "Class method 'from_yaml' was invoked from '";
static const char __pyx_k_CustomReaction_Class_to_be_remov[] = "CustomReaction: Class to be removed after Cantera 3.0; no specialization necessary.";
static const char __pyx_k_CustomReaction___setstate_cython[] = "CustomReaction.__setstate_cython__";
static const char __pyx_k_ExtensibleRateData___reduce_cyth[] = "ExtensibleRateData.__reduce_cython__";
static const char __pyx_k_ExtensibleRateData___setstate_cy[] = "ExtensibleRateData.__setstate_cython__";
static const char __pyx_k_ExtensibleRate___setstate_cython[] = "ExtensibleRate.__setstate_cython__";
static const char __pyx_k_FalloffReaction_Class_to_be_remo[] = "FalloffReaction: Class to be removed after Cantera 3.0; no specialization necessary.";
static const char __pyx_k_FalloffReaction___setstate_cytho[] = "FalloffReaction.__setstate_cython__";
static const char __pyx_k_Incompatible_checksums_0x_x_vs_0[] = "Incompatible checksums (0x%x vs (0x7c4e57e, 0xb662b45, 0xa3ea2d7) = (_delegates))";
static const char __pyx_k_InterfaceArrheniusRate___setstat[] = "InterfaceArrheniusRate.__setstate_cython__";
static const char __pyx_k_InterfaceArrheniusRate__from_dic[] = "InterfaceArrheniusRate._from_dict";
static const char __pyx_k_InterfaceArrheniusRate__from_par[] = "InterfaceArrheniusRate._from_parameters";
static const char __pyx_k_InterfaceBlowersMaselRate___redu[] = "InterfaceBlowersMaselRate.__reduce_cython__";
static const char __pyx_k_InterfaceBlowersMaselRate___sets[] = "InterfaceBlowersMaselRate.__setstate_cython__";
static const char __pyx_k_InterfaceRateBase___reduce_cytho[] = "InterfaceRateBase.__reduce_cython__";
static const char __pyx_k_InterfaceRateBase___setstate_cyt[] = "InterfaceRateBase.__setstate_cython__";
static const char __pyx_k_Internal_Error_Delegator_does_no[] = "Internal Error: Delegator does not have a corresponding Python ExtensibleRate object";
static const char __pyx_k_Invalid_rate_definition_with_typ[] = "Invalid rate definition with type '";
static const char __pyx_k_Missing_reaction_rate_informatio[] = "Missing reaction rate information.";
static const char __pyx_k_ReactionRate_wrap_locals_registe[] = "ReactionRate.wrap.<locals>.register_subclasses";
static const char __pyx_k_Reaction_Argument_efficiencies_i[] = "Reaction: Argument 'efficiencies' is deprecated and will be removed after Cantera 3.0. Use ThirdBody instead.";
static const char __pyx_k_Reaction_Parameter_kinetics_is_n[] = "Reaction: Parameter 'kinetics' is no longer used and will be removed after Cantera 3.0.";
static const char __pyx_k_Reaction_default_efficiency_Prop[] = "Reaction.default_efficiency: Property is deprecated and will be removed after Cantera 3.0. Use ThirdBody instead.";
static const char __pyx_k_Reaction_efficiencies_Property_i[] = "Reaction.efficiencies: Property is deprecated and will be removed after Cantera 3.0. Access via ThirdBody instead.";
static const char __pyx_k_Reaction_efficiency_Method_is_de[] = "Reaction.efficiency: Method is deprecated and will be removed after Cantera 3.0. Use ThirdBody instead.";
static const char __pyx_k_StickingArrheniusRate___reduce_c[] = "StickingArrheniusRate.__reduce_cython__";
static const char __pyx_k_StickingArrheniusRate___setstate[] = "StickingArrheniusRate.__setstate_cython__";
static const char __pyx_k_StickingArrheniusRate__from_dict[] = "StickingArrheniusRate._from_dict";
static const char __pyx_k_StickingArrheniusRate__from_para[] = "StickingArrheniusRate._from_parameters";
static const char __pyx_k_StickingBlowersMaselRate___reduc[] = "StickingBlowersMaselRate.__reduce_cython__";
static const char __pyx_k_StickingBlowersMaselRate___setst[] = "StickingBlowersMaselRate.__setstate_cython__";
static const char __pyx_k_StickingBlowersMaselRate__from_d[] = "StickingBlowersMaselRate._from_dict";
static const char __pyx_k_StickingBlowersMaselRate__from_p[] = "StickingBlowersMaselRate._from_parameters";
static const char __pyx_k_ThreeBodyReaction_Class_to_be_re[] = "ThreeBodyReaction: Class to be removed after Cantera 3.0; no specialization necessary.";
static const char __pyx_k_ThreeBodyReaction___reduce_cytho[] = "ThreeBodyReaction.__reduce_cython__";
static const char __pyx_k_ThreeBodyReaction___setstate_cyt[] = "ThreeBodyReaction.__setstate_cython__";
static const char __pyx_k_TwoTempPlasmaRate___reduce_cytho[] = "TwoTempPlasmaRate.__reduce_cython__";
static const char __pyx_k_TwoTempPlasmaRate___setstate_cyt[] = "TwoTempPlasmaRate.__setstate_cython__";
static const char __pyx_k_TwoTempPlasmaRate__from_paramete[] = "TwoTempPlasmaRate._from_parameters";
static const char __pyx_k_no_default___reduce___due_to_non[] = "no default __reduce__ due to non-trivial __cinit__";
static const char __pyx_k_numpy_core_umath_failed_to_impor[] = "numpy.core.umath failed to import";
static const char __pyx_k_self__rate_self_base_self_interf[] = "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling";
static const char __pyx_k_self__rate_self_base_self_rate_c[] = "self._rate,self.base,self.rate cannot be converted to a Python object for pickling";
static const char __pyx_k_self__rate_self_rate_cannot_be_c[] = "self._rate,self.rate cannot be converted to a Python object for pickling";
static const char __pyx_k_InterfaceBlowersMaselRate__from_2[] = "InterfaceBlowersMaselRate._from_parameters";
static const char __pyx_k_cannot_be_instantiated_by_itsel_2[] = "' cannot be instantiated by itself; use specialized fall-off rate instead.";
static const char __pyx_k_self__rate_self_base_self_interf_2[] = "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling";
/* #### Code section: decls ### */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate___repr__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_2__call__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self, double __pyx_v_temperature); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_4type___get__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_8sub_type___get__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_4wrap_register_subclasses(PyObject *__pyx_self, PyObject *__pyx_v_cls); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_4from_dict(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_data, PyObject *__pyx_v_hyphenize); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_6from_yaml(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_text); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_10input_data___get__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_16conversion_units___get__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase__cinit(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self, PyObject *__pyx_v_input_data, PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_22pre_exponential_factor___get__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_20temperature_exponent___get__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_17activation_energy___get__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor___get__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor_2__set__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self, bool __pyx_v_allow); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_13ArrheniusRate___cinit__(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ArrheniusRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ArrheniusRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ArrheniusRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ArrheniusRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_16BlowersMaselRate___cinit__(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_11bond_energy___get__(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy___get__(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy_2__set__(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, double __pyx_v_delta_H); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate___cinit__(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea_gas, PyObject *__pyx_v_Ea_electron, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_2__call__(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_elec_temp); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_4_from_dict(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_6_from_parameters(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea_gas, PyObject *__pyx_v_Ea_electron); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_26activation_electron_energy___get__(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_11FalloffRate___cinit__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, PyObject *__pyx_v_low, PyObject *__pyx_v_high, PyObject *__pyx_v_falloff_coeffs, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_2__call__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_concm); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_8low_rate___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_11FalloffRate_8low_rate_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_rate); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_9high_rate___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_11FalloffRate_9high_rate_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_rate); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_14falloff_coeffs___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_11FalloffRate_14falloff_coeffs_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, PyObject *__pyx_v_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, bool __pyx_v_allow); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_20chemically_activated___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_11FalloffRate_20chemically_activated_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, bool __pyx_v_activated); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_4falloff_function(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_conc3b); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13LindemannRate__from_dict(struct __pyx_obj_7cantera_8reaction_LindemannRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13LindemannRate_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_LindemannRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13LindemannRate_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_LindemannRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8TroeRate__from_dict(struct __pyx_obj_7cantera_8reaction_TroeRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8TroeRate_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TroeRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8TroeRate_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TroeRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_7SriRate__from_dict(struct __pyx_obj_7cantera_8reaction_SriRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_7SriRate_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_SriRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_7SriRate_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_SriRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9TsangRate__from_dict(struct __pyx_obj_7cantera_8reaction_TsangRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9TsangRate_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TsangRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9TsangRate_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TsangRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_8PlogRate___cinit__(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self, PyObject *__pyx_v_rates, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8PlogRate_2__call__(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_pressure); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8PlogRate_5rates___get__(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8PlogRate_5rates_2__set__(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self, PyObject *__pyx_v_rates); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8PlogRate_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8PlogRate_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_13ChebyshevRate___cinit__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self, PyObject *__pyx_v_temperature_range, PyObject *__pyx_v_pressure_range, PyObject *__pyx_v_data, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_2__call__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_pressure); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_17temperature_range___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_14pressure_range___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_13n_temperature___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_10n_pressure___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_4data___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_10CustomRate___cinit__(struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self, PyObject *__pyx_v_k, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_10CustomRate_2set_rate_function(struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self, PyObject *__pyx_v_k); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_10CustomRate_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_10CustomRate_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_14ExtensibleRate___cinit__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, PyObject *__pyx_v_init, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static int __pyx_pf_7cantera_8reaction_14ExtensibleRate_2__init__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, PyObject *__pyx_v_input_data, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_4set_parameters(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_7cantera_6_utils_AnyMap *__pyx_v_params, CYTHON_UNUSED struct __pyx_obj_7cantera_5units_UnitStack *__pyx_v_rate_coeff_units); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_6get_parameters(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_7cantera_6_utils_AnyMap *__pyx_v_params); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_8eval(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_10validate(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_equation, CYTHON_UNUSED PyObject *__pyx_v_soln); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_10_delegates___get__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_14ExtensibleRate_10_delegates_2__set__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7cantera_8reaction_14ExtensibleRate_10_delegates_4__del__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_12__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_14__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_18ExtensibleRateData_update(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_soln); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_18ExtensibleRateData_10_delegates___get__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_18ExtensibleRateData_10_delegates_2__set__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self, PyObject *__pyx_v_value); /* proto */
static int __pyx_pf_7cantera_8reaction_18ExtensibleRateData_10_delegates_4__del__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_18ExtensibleRateData_2__reduce_cython__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_18ExtensibleRateData_4__setstate_cython__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase___call__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, double __pyx_v_temperature, PyArrayObject *__pyx_v_coverages); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies___get__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies_2__set__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, PyObject *__pyx_v_deps); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_2set_species(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, PyObject *__pyx_v_species); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_12site_density___get__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_17InterfaceRateBase_12site_density_2__set__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, double __pyx_v_site_density); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_21uses_electrochemistry___get__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_4beta___get__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate___cinit__(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate___cinit__(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_11bond_energy___get__(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy___get__(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy_2__set__(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, double __pyx_v_delta_H); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_20motz_wise_correction___get__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_13StickRateBase_20motz_wise_correction_2__set__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, bool __pyx_v_motz_wise); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_16sticking_species___get__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_13StickRateBase_16sticking_species_2__set__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, PyObject *__pyx_v_species); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_14sticking_order___get__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_13StickRateBase_14sticking_order_2__set__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, double __pyx_v_order); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_15sticking_weight___get__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_13StickRateBase_15sticking_weight_2__set__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, double __pyx_v_weight); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase___reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_2__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_21StickingArrheniusRate___cinit__(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_21StickingArrheniusRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_21StickingArrheniusRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_21StickingArrheniusRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_21StickingArrheniusRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate___cinit__(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_input_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_11bond_energy___get__(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy___get__(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy_2__set__(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, double __pyx_v_delta_H); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_9ThirdBody___cinit__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, PyObject *__pyx_v_collider, PyObject *__pyx_v_efficiencies, PyObject *__pyx_v_default_efficiency, PyObject *__pyx_v_init); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_4name___get__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_11mass_action___get__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_12efficiencies___get__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_9ThirdBody_12efficiencies_2__set__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, PyObject *__pyx_v_eff); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_18default_efficiency___get__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_9ThirdBody_18default_efficiency_2__set__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, PyObject *__pyx_v_default_eff); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_2efficiency(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, PyObject *__pyx_v_species); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction___cinit__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_reactants, PyObject *__pyx_v_products, PyObject *__pyx_v_rate, PyObject *__pyx_v_equation, PyObject *__pyx_v_init, PyObject *__pyx_v_efficiencies, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics, PyObject *__pyx_v_third_body); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_2from_dict(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_data, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics, PyObject *__pyx_v_hyphenize); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_4from_yaml(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_text, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_6list_from_file(PyObject *__pyx_v_filename, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics, PyObject *__pyx_v_section); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_8list_from_yaml(PyObject *__pyx_v_text, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_15reactant_string___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_14product_string___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_8equation___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_9reactants___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_9reactants_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_reactants); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_8products___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_8products_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_products); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_10__contains__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_species); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_6orders___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_6orders_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_orders); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_2ID___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_2ID_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_ID); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_13reaction_type___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_4rate___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_4rate_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_rate); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_10reversible___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_10reversible_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_reversible); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_9duplicate___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_9duplicate_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_duplicate); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_24allow_nonreactant_orders___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_24allow_nonreactant_orders_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_allow); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_21allow_negative_orders___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_21allow_negative_orders_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_allow); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_10input_data___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_12update_user_data(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_data); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_14clear_user_data(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_16__repr__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_18__str__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_16rate_coeff_units___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_10third_body___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_15third_body_name___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_12efficiencies___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_12efficiencies_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_eff); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_18default_efficiency___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static int __pyx_pf_7cantera_8reaction_8Reaction_18default_efficiency_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_default_eff); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_20efficiency(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_species); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_22__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_24__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_9Arrhenius___cinit__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_E, PyObject *__pyx_v_init); /* proto */
static void __pyx_pf_7cantera_8reaction_9Arrhenius_2__dealloc__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_22pre_exponential_factor___get__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_20temperature_exponent___get__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_17activation_energy___get__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_4__repr__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_6__call__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self, float __pyx_v_T); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_17ThreeBodyReaction___init__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17ThreeBodyReaction_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_17ThreeBodyReaction_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_15FalloffReaction___init__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_15FalloffReaction_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffReaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_15FalloffReaction_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_27ChemicallyActivatedReaction___init__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_27ChemicallyActivatedReaction_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_27ChemicallyActivatedReaction_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static int __pyx_pf_7cantera_8reaction_14CustomReaction___init__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_14CustomReaction_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomReaction *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction_14CustomReaction_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_pf_7cantera_8reaction___pyx_unpickle_ExtensibleRateData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state); /* proto */
static PyObject *__pyx_tp_new_7cantera_8reaction_ReactionRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_ArrheniusRateBase(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_FalloffRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_CustomRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_ExtensibleRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_ExtensibleRateData(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_InterfaceRateBase(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_StickRateBase(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_ThirdBody(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_Reaction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_Arrhenius(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_ArrheniusRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_BlowersMaselRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_TwoTempPlasmaRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_LindemannRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_TroeRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_SriRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_TsangRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_PlogRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_ChebyshevRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_InterfaceArrheniusRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_InterfaceBlowersMaselRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_StickingArrheniusRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_StickingBlowersMaselRate(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_ThreeBodyReaction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_FalloffReaction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_ChemicallyActivatedReaction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction_CustomReaction(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static PyObject *__pyx_tp_new_7cantera_8reaction___pyx_scope_struct__wrap(PyTypeObject *t, PyObject *a, PyObject *k); /*proto*/
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_get = {0, 0, 0, 0, 0};
static __Pyx_CachedCFunction __pyx_umethod_PyDict_Type_update = {0, 0, 0, 0, 0};
/* #### Code section: late_includes ### */
/* #### Code section: module_state ### */
typedef struct {
  PyObject *__pyx_d;
  PyObject *__pyx_b;
  PyObject *__pyx_cython_runtime;
  PyObject *__pyx_empty_tuple;
  PyObject *__pyx_empty_bytes;
  PyObject *__pyx_empty_unicode;
  #ifdef __Pyx_CyFunction_USED
  PyTypeObject *__pyx_CyFunctionType;
  #endif
  #ifdef __Pyx_FusedFunction_USED
  PyTypeObject *__pyx_FusedFunctionType;
  #endif
  #ifdef __Pyx_Generator_USED
  PyTypeObject *__pyx_GeneratorType;
  #endif
  #ifdef __Pyx_IterableCoroutine_USED
  PyTypeObject *__pyx_IterableCoroutineType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineAwaitType;
  #endif
  #ifdef __Pyx_Coroutine_USED
  PyTypeObject *__pyx_CoroutineType;
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_4type_type;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_4bool_bool;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cpython_7complex_complex;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_5numpy_dtype;
  PyTypeObject *__pyx_ptype_5numpy_flatiter;
  PyTypeObject *__pyx_ptype_5numpy_broadcast;
  PyTypeObject *__pyx_ptype_5numpy_ndarray;
  PyTypeObject *__pyx_ptype_5numpy_generic;
  PyTypeObject *__pyx_ptype_5numpy_number;
  PyTypeObject *__pyx_ptype_5numpy_integer;
  PyTypeObject *__pyx_ptype_5numpy_signedinteger;
  PyTypeObject *__pyx_ptype_5numpy_unsignedinteger;
  PyTypeObject *__pyx_ptype_5numpy_inexact;
  PyTypeObject *__pyx_ptype_5numpy_floating;
  PyTypeObject *__pyx_ptype_5numpy_complexfloating;
  PyTypeObject *__pyx_ptype_5numpy_flexible;
  PyTypeObject *__pyx_ptype_5numpy_character;
  PyTypeObject *__pyx_ptype_5numpy_ufunc;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_5func1_Func1;
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_5units_Units;
  PyTypeObject *__pyx_ptype_7cantera_5units_UnitStack;
  PyTypeObject *__pyx_ptype_7cantera_5units_UnitSystem;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_12solutionbase__SolutionBase;
  PyTypeObject *__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase;
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_8kinetics_Kinetics;
  PyTypeObject *__pyx_ptype_7cantera_8kinetics_InterfaceKinetics;
  #if CYTHON_USE_MODULE_STATE
  #endif
  #if CYTHON_USE_MODULE_STATE
  #endif
  PyTypeObject *__pyx_ptype_7cantera_6_utils_AnyMap;
  #if CYTHON_USE_MODULE_STATE
  PyObject *__pyx_type_7cantera_8reaction_ReactionRate;
  PyObject *__pyx_type_7cantera_8reaction_ArrheniusRateBase;
  PyObject *__pyx_type_7cantera_8reaction_FalloffRate;
  PyObject *__pyx_type_7cantera_8reaction_CustomRate;
  PyObject *__pyx_type_7cantera_8reaction_ExtensibleRate;
  PyObject *__pyx_type_7cantera_8reaction_ExtensibleRateData;
  PyObject *__pyx_type_7cantera_8reaction_InterfaceRateBase;
  PyObject *__pyx_type_7cantera_8reaction_StickRateBase;
  PyObject *__pyx_type_7cantera_8reaction_ThirdBody;
  PyObject *__pyx_type_7cantera_8reaction_Reaction;
  PyObject *__pyx_type_7cantera_8reaction_Arrhenius;
  PyObject *__pyx_type_7cantera_8reaction_ArrheniusRate;
  PyObject *__pyx_type_7cantera_8reaction_BlowersMaselRate;
  PyObject *__pyx_type_7cantera_8reaction_TwoTempPlasmaRate;
  PyObject *__pyx_type_7cantera_8reaction_LindemannRate;
  PyObject *__pyx_type_7cantera_8reaction_TroeRate;
  PyObject *__pyx_type_7cantera_8reaction_SriRate;
  PyObject *__pyx_type_7cantera_8reaction_TsangRate;
  PyObject *__pyx_type_7cantera_8reaction_PlogRate;
  PyObject *__pyx_type_7cantera_8reaction_ChebyshevRate;
  PyObject *__pyx_type_7cantera_8reaction_InterfaceArrheniusRate;
  PyObject *__pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate;
  PyObject *__pyx_type_7cantera_8reaction_StickingArrheniusRate;
  PyObject *__pyx_type_7cantera_8reaction_StickingBlowersMaselRate;
  PyObject *__pyx_type_7cantera_8reaction_ThreeBodyReaction;
  PyObject *__pyx_type_7cantera_8reaction_FalloffReaction;
  PyObject *__pyx_type_7cantera_8reaction_ChemicallyActivatedReaction;
  PyObject *__pyx_type_7cantera_8reaction_CustomReaction;
  PyObject *__pyx_type_7cantera_8reaction___pyx_scope_struct__wrap;
  #endif
  PyTypeObject *__pyx_ptype_7cantera_8reaction_ReactionRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_ArrheniusRateBase;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_FalloffRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_CustomRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_ExtensibleRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_ExtensibleRateData;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_InterfaceRateBase;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_StickRateBase;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_ThirdBody;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_Reaction;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_Arrhenius;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_ArrheniusRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_BlowersMaselRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_LindemannRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_TroeRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_SriRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_TsangRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_PlogRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_ChebyshevRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_StickingArrheniusRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_ThreeBodyReaction;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_FalloffReaction;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction;
  PyTypeObject *__pyx_ptype_7cantera_8reaction_CustomReaction;
  PyTypeObject *__pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap;
  PyObject *__pyx_kp_u_0x;
  PyObject *__pyx_n_s_A;
  PyObject *__pyx_n_u_A;
  PyObject *__pyx_n_s_AnyMap;
  PyObject *__pyx_n_s_Arrhenius;
  PyObject *__pyx_n_u_Arrhenius;
  PyObject *__pyx_n_s_ArrheniusRate;
  PyObject *__pyx_n_s_ArrheniusRateBase;
  PyObject *__pyx_n_s_ArrheniusRateBase___reduce_cytho;
  PyObject *__pyx_n_s_ArrheniusRateBase___setstate_cyt;
  PyObject *__pyx_n_s_ArrheniusRateBase__cinit;
  PyObject *__pyx_n_s_ArrheniusRate___reduce_cython;
  PyObject *__pyx_n_s_ArrheniusRate___setstate_cython;
  PyObject *__pyx_n_s_ArrheniusRate__from_dict;
  PyObject *__pyx_n_s_ArrheniusRate__from_parameters;
  PyObject *__pyx_kp_u_Arrhenius_A_g_b_g_E_g;
  PyObject *__pyx_n_s_Arrhenius___reduce_cython;
  PyObject *__pyx_n_s_Arrhenius___setstate_cython;
  PyObject *__pyx_kp_u_Base_class;
  PyObject *__pyx_n_s_BlowersMaselRate;
  PyObject *__pyx_n_s_BlowersMaselRate___reduce_cython;
  PyObject *__pyx_n_s_BlowersMaselRate___setstate_cyth;
  PyObject *__pyx_n_s_BlowersMaselRate__from_dict;
  PyObject *__pyx_n_s_BlowersMaselRate__from_parameter;
  PyObject *__pyx_kp_u_Blowers_Masel;
  PyObject *__pyx_kp_u_Cannot_convert_input_with_type;
  PyObject *__pyx_n_s_CanteraError;
  PyObject *__pyx_n_u_Chebyshev;
  PyObject *__pyx_n_s_ChebyshevRate;
  PyObject *__pyx_n_s_ChebyshevRate___reduce_cython;
  PyObject *__pyx_n_s_ChebyshevRate___setstate_cython;
  PyObject *__pyx_n_s_ChemicallyActivatedReaction;
  PyObject *__pyx_kp_u_ChemicallyActivatedReaction_Clas;
  PyObject *__pyx_n_s_ChemicallyActivatedReaction___re;
  PyObject *__pyx_n_s_ChemicallyActivatedReaction___se;
  PyObject *__pyx_kp_u_Class_method_from_dict_was_invok;
  PyObject *__pyx_kp_u_Class_method_from_yaml_was_invok;
  PyObject *__pyx_n_s_CustomRate;
  PyObject *__pyx_n_s_CustomRate___reduce_cython;
  PyObject *__pyx_n_s_CustomRate___setstate_cython;
  PyObject *__pyx_n_s_CustomRate_set_rate_function;
  PyObject *__pyx_n_s_CustomReaction;
  PyObject *__pyx_kp_u_CustomReaction_Class_to_be_remov;
  PyObject *__pyx_n_s_CustomReaction___reduce_cython;
  PyObject *__pyx_n_s_CustomReaction___setstate_cython;
  PyObject *__pyx_n_s_DeprecationWarning;
  PyObject *__pyx_n_s_E;
  PyObject *__pyx_n_s_Ea;
  PyObject *__pyx_n_s_Ea0;
  PyObject *__pyx_n_u_Ea0;
  PyObject *__pyx_n_s_Ea_electron;
  PyObject *__pyx_n_s_Ea_gas;
  PyObject *__pyx_n_u_Ea_gas;
  PyObject *__pyx_n_s_ExtensibleRate;
  PyObject *__pyx_n_s_ExtensibleRateData;
  PyObject *__pyx_n_s_ExtensibleRateData___reduce_cyth;
  PyObject *__pyx_n_s_ExtensibleRateData___setstate_cy;
  PyObject *__pyx_n_s_ExtensibleRateData_update;
  PyObject *__pyx_n_s_ExtensibleRate___reduce_cython;
  PyObject *__pyx_n_s_ExtensibleRate___setstate_cython;
  PyObject *__pyx_n_s_ExtensibleRate_eval;
  PyObject *__pyx_n_s_ExtensibleRate_get_parameters;
  PyObject *__pyx_n_s_ExtensibleRate_set_parameters;
  PyObject *__pyx_n_s_ExtensibleRate_validate;
  PyObject *__pyx_n_u_F;
  PyObject *__pyx_n_s_FalloffRate;
  PyObject *__pyx_n_s_FalloffRate___reduce_cython;
  PyObject *__pyx_n_s_FalloffRate___setstate_cython;
  PyObject *__pyx_n_s_FalloffRate_falloff_function;
  PyObject *__pyx_n_s_FalloffReaction;
  PyObject *__pyx_kp_u_FalloffReaction_Class_to_be_remo;
  PyObject *__pyx_n_s_FalloffReaction___reduce_cython;
  PyObject *__pyx_n_s_FalloffReaction___setstate_cytho;
  PyObject *__pyx_n_s_ImportError;
  PyObject *__pyx_kp_s_Incompatible_checksums_0x_x_vs_0;
  PyObject *__pyx_n_s_InterfaceArrheniusRate;
  PyObject *__pyx_n_s_InterfaceArrheniusRate___reduce;
  PyObject *__pyx_n_s_InterfaceArrheniusRate___setstat;
  PyObject *__pyx_n_s_InterfaceArrheniusRate__from_dic;
  PyObject *__pyx_n_s_InterfaceArrheniusRate__from_par;
  PyObject *__pyx_n_s_InterfaceBlowersMaselRate;
  PyObject *__pyx_n_s_InterfaceBlowersMaselRate___redu;
  PyObject *__pyx_n_s_InterfaceBlowersMaselRate___sets;
  PyObject *__pyx_n_s_InterfaceBlowersMaselRate__from;
  PyObject *__pyx_n_s_InterfaceBlowersMaselRate__from_2;
  PyObject *__pyx_n_s_InterfaceRateBase;
  PyObject *__pyx_n_s_InterfaceRateBase___reduce_cytho;
  PyObject *__pyx_n_s_InterfaceRateBase___setstate_cyt;
  PyObject *__pyx_n_s_InterfaceRateBase_set_species;
  PyObject *__pyx_kp_u_Internal_Error_Delegator_does_no;
  PyObject *__pyx_kp_u_Invalid_input_parameters;
  PyObject *__pyx_kp_u_Invalid_parameter_input_data;
  PyObject *__pyx_kp_u_Invalid_parameter_rates;
  PyObject *__pyx_kp_u_Invalid_parameters;
  PyObject *__pyx_kp_u_Invalid_parameters_2;
  PyObject *__pyx_kp_u_Invalid_rate_definition_with_typ;
  PyObject *__pyx_n_u_Lindemann;
  PyObject *__pyx_n_s_LindemannRate;
  PyObject *__pyx_n_s_LindemannRate___reduce_cython;
  PyObject *__pyx_n_s_LindemannRate___setstate_cython;
  PyObject *__pyx_n_s_LindemannRate__from_dict;
  PyObject *__pyx_n_u_M;
  PyObject *__pyx_n_s_MemoryError;
  PyObject *__pyx_kp_u_Missing_reactant_and_or_product;
  PyObject *__pyx_kp_u_Missing_reaction_rate_informatio;
  PyObject *__pyx_n_s_None;
  PyObject *__pyx_n_s_NotImplementedError;
  PyObject *__pyx_n_s_PickleError;
  PyObject *__pyx_n_s_PlogRate;
  PyObject *__pyx_n_s_PlogRate___reduce_cython;
  PyObject *__pyx_n_s_PlogRate___setstate_cython;
  PyObject *__pyx_n_s_Reaction;
  PyObject *__pyx_n_s_ReactionRate;
  PyObject *__pyx_n_s_ReactionRate___reduce_cython;
  PyObject *__pyx_n_s_ReactionRate___setstate_cython;
  PyObject *__pyx_n_s_ReactionRate_from_dict;
  PyObject *__pyx_n_s_ReactionRate_from_yaml;
  PyObject *__pyx_n_s_ReactionRate_wrap_locals_registe;
  PyObject *__pyx_kp_u_Reaction_Argument_efficiencies_i;
  PyObject *__pyx_kp_u_Reaction_Parameter_kinetics_is_n;
  PyObject *__pyx_n_s_Reaction___reduce_cython;
  PyObject *__pyx_n_s_Reaction___setstate_cython;
  PyObject *__pyx_n_s_Reaction_clear_user_data;
  PyObject *__pyx_kp_u_Reaction_default_efficiency_Prop;
  PyObject *__pyx_kp_u_Reaction_does_not_involve_third;
  PyObject *__pyx_kp_u_Reaction_efficiencies_Property_i;
  PyObject *__pyx_n_s_Reaction_efficiency;
  PyObject *__pyx_kp_u_Reaction_efficiency_Method_is_de;
  PyObject *__pyx_n_s_Reaction_from_dict;
  PyObject *__pyx_n_s_Reaction_from_yaml;
  PyObject *__pyx_n_s_Reaction_list_from_file;
  PyObject *__pyx_n_s_Reaction_list_from_yaml;
  PyObject *__pyx_kp_u_Reaction_products_setter_is_dep;
  PyObject *__pyx_kp_u_Reaction_reactants_setter_is_de;
  PyObject *__pyx_n_s_Reaction_update_user_data;
  PyObject *__pyx_n_u_SRI;
  PyObject *__pyx_kp_s_Solution;
  PyObject *__pyx_n_s_SriRate;
  PyObject *__pyx_n_s_SriRate___reduce_cython;
  PyObject *__pyx_n_s_SriRate___setstate_cython;
  PyObject *__pyx_n_s_SriRate__from_dict;
  PyObject *__pyx_n_s_StickRateBase;
  PyObject *__pyx_n_s_StickRateBase___reduce_cython;
  PyObject *__pyx_n_s_StickRateBase___setstate_cython;
  PyObject *__pyx_n_s_StickingArrheniusRate;
  PyObject *__pyx_n_s_StickingArrheniusRate___reduce_c;
  PyObject *__pyx_n_s_StickingArrheniusRate___setstate;
  PyObject *__pyx_n_s_StickingArrheniusRate__from_dict;
  PyObject *__pyx_n_s_StickingArrheniusRate__from_para;
  PyObject *__pyx_n_s_StickingBlowersMaselRate;
  PyObject *__pyx_n_s_StickingBlowersMaselRate___reduc;
  PyObject *__pyx_n_s_StickingBlowersMaselRate___setst;
  PyObject *__pyx_n_s_StickingBlowersMaselRate__from_d;
  PyObject *__pyx_n_s_StickingBlowersMaselRate__from_p;
  PyObject *__pyx_n_s_T;
  PyObject *__pyx_n_s_ThirdBody;
  PyObject *__pyx_n_s_ThirdBody___reduce_cython;
  PyObject *__pyx_n_s_ThirdBody___setstate_cython;
  PyObject *__pyx_n_s_ThirdBody_efficiency;
  PyObject *__pyx_n_s_ThreeBodyReaction;
  PyObject *__pyx_kp_u_ThreeBodyReaction_Class_to_be_re;
  PyObject *__pyx_n_s_ThreeBodyReaction___reduce_cytho;
  PyObject *__pyx_n_s_ThreeBodyReaction___setstate_cyt;
  PyObject *__pyx_n_u_Troe;
  PyObject *__pyx_n_s_TroeRate;
  PyObject *__pyx_n_s_TroeRate___reduce_cython;
  PyObject *__pyx_n_s_TroeRate___setstate_cython;
  PyObject *__pyx_n_s_TroeRate__from_dict;
  PyObject *__pyx_n_u_Tsang;
  PyObject *__pyx_n_s_TsangRate;
  PyObject *__pyx_n_s_TsangRate___reduce_cython;
  PyObject *__pyx_n_s_TsangRate___setstate_cython;
  PyObject *__pyx_n_s_TsangRate__from_dict;
  PyObject *__pyx_n_s_TwoTempPlasmaRate;
  PyObject *__pyx_n_s_TwoTempPlasmaRate___reduce_cytho;
  PyObject *__pyx_n_s_TwoTempPlasmaRate___setstate_cyt;
  PyObject *__pyx_n_s_TwoTempPlasmaRate__from_dict;
  PyObject *__pyx_n_s_TwoTempPlasmaRate__from_paramete;
  PyObject *__pyx_n_s_TypeError;
  PyObject *__pyx_n_s_UnitStack;
  PyObject *__pyx_n_s_ValueError;
  PyObject *__pyx_kp_u__10;
  PyObject *__pyx_n_s__159;
  PyObject *__pyx_kp_u__20;
  PyObject *__pyx_kp_u__3;
  PyObject *__pyx_kp_u__32;
  PyObject *__pyx_n_s__33;
  PyObject *__pyx_kp_u__4;
  PyObject *__pyx_kp_u__7;
  PyObject *__pyx_kp_u__9;
  PyObject *__pyx_n_s_activation_energy;
  PyObject *__pyx_n_u_after;
  PyObject *__pyx_n_s_all;
  PyObject *__pyx_n_s_any_map;
  PyObject *__pyx_n_s_asyncio_coroutines;
  PyObject *__pyx_kp_u_at;
  PyObject *__pyx_n_s_b;
  PyObject *__pyx_n_u_b;
  PyObject *__pyx_kp_u_but_should_be_called_from_base;
  PyObject *__pyx_n_s_c;
  PyObject *__pyx_kp_u_cannot_be_instantiated_by_itsel;
  PyObject *__pyx_kp_u_cannot_be_instantiated_by_itsel_2;
  PyObject *__pyx_n_s_cantera_reaction;
  PyObject *__pyx_kp_s_cantera_reaction_pyx;
  PyObject *__pyx_n_s_cinit;
  PyObject *__pyx_n_s_class;
  PyObject *__pyx_n_s_clear_user_data;
  PyObject *__pyx_n_s_cline_in_traceback;
  PyObject *__pyx_n_s_cls;
  PyObject *__pyx_n_s_collider;
  PyObject *__pyx_n_s_conc3b;
  PyObject *__pyx_n_s_concm;
  PyObject *__pyx_n_s_coverages;
  PyObject *__pyx_kp_u_custom_rate_function;
  PyObject *__pyx_n_s_cxx_rate;
  PyObject *__pyx_n_s_cxx_reaction;
  PyObject *__pyx_n_s_cxx_reactions;
  PyObject *__pyx_n_s_cxxvector;
  PyObject *__pyx_n_s_data;
  PyObject *__pyx_n_s_default_efficiency;
  PyObject *__pyx_n_s_delegatable_methods;
  PyObject *__pyx_n_s_dict;
  PyObject *__pyx_n_s_dict_2;
  PyObject *__pyx_kp_u_disable;
  PyObject *__pyx_n_s_double;
  PyObject *__pyx_kp_u_double_void;
  PyObject *__pyx_n_s_efficiencies;
  PyObject *__pyx_n_s_efficiency;
  PyObject *__pyx_n_s_elec_temp;
  PyObject *__pyx_kp_u_enable;
  PyObject *__pyx_n_s_enumerate;
  PyObject *__pyx_n_s_equation;
  PyObject *__pyx_kp_u_eval;
  PyObject *__pyx_n_u_evalFromStruct;
  PyObject *__pyx_n_s_eval_2;
  PyObject *__pyx_n_u_eval_2;
  PyObject *__pyx_n_u_extensible;
  PyObject *__pyx_n_s_falloff_coeffs;
  PyObject *__pyx_n_s_falloff_function;
  PyObject *__pyx_n_s_filename;
  PyObject *__pyx_n_s_float;
  PyObject *__pyx_n_s_format;
  PyObject *__pyx_n_s_from_dict;
  PyObject *__pyx_n_s_from_dict_2;
  PyObject *__pyx_n_s_from_parameters;
  PyObject *__pyx_n_s_from_yaml;
  PyObject *__pyx_n_s_fromiter;
  PyObject *__pyx_kp_u_gc;
  PyObject *__pyx_n_s_get;
  PyObject *__pyx_n_u_getParameters;
  PyObject *__pyx_kp_u_get_parameters;
  PyObject *__pyx_n_s_get_parameters_2;
  PyObject *__pyx_n_u_get_parameters_2;
  PyObject *__pyx_n_s_getstate;
  PyObject *__pyx_n_s_high;
  PyObject *__pyx_n_s_high_rate;
  PyObject *__pyx_n_s_hyphenize;
  PyObject *__pyx_n_s_id;
  PyObject *__pyx_n_s_import;
  PyObject *__pyx_n_s_init;
  PyObject *__pyx_n_s_initializing;
  PyObject *__pyx_n_s_input_data;
  PyObject *__pyx_kp_u_interface_Arrhenius;
  PyObject *__pyx_kp_u_interface_Blowers_Masel;
  PyObject *__pyx_n_s_is_coroutine;
  PyObject *__pyx_kp_u_isenabled;
  PyObject *__pyx_n_u_items;
  PyObject *__pyx_n_s_k;
  PyObject *__pyx_n_s_kinetics;
  PyObject *__pyx_n_s_kwargs;
  PyObject *__pyx_n_s_list_from_file;
  PyObject *__pyx_n_s_list_from_yaml;
  PyObject *__pyx_n_s_log;
  PyObject *__pyx_n_s_low;
  PyObject *__pyx_n_s_low_rate;
  PyObject *__pyx_n_s_main;
  PyObject *__pyx_n_s_name;
  PyObject *__pyx_n_s_name_2;
  PyObject *__pyx_n_s_new;
  PyObject *__pyx_kp_s_no_default___reduce___due_to_non;
  PyObject *__pyx_n_s_np;
  PyObject *__pyx_n_s_numpy;
  PyObject *__pyx_kp_u_numpy_core_multiarray_failed_to;
  PyObject *__pyx_kp_u_numpy_core_umath_failed_to_impor;
  PyObject *__pyx_kp_u_or;
  PyObject *__pyx_n_s_order;
  PyObject *__pyx_n_s_par_list;
  PyObject *__pyx_n_s_par_string;
  PyObject *__pyx_n_s_params;
  PyObject *__pyx_n_s_pickle;
  PyObject *__pyx_n_s_pre_exponential_factor;
  PyObject *__pyx_n_s_pressure;
  PyObject *__pyx_kp_u_pressure_dependent_Arrhenius;
  PyObject *__pyx_n_s_pressure_range;
  PyObject *__pyx_n_s_products;
  PyObject *__pyx_n_u_python;
  PyObject *__pyx_n_s_pyx_PickleError;
  PyObject *__pyx_n_s_pyx_checksum;
  PyObject *__pyx_n_s_pyx_result;
  PyObject *__pyx_n_s_pyx_state;
  PyObject *__pyx_n_s_pyx_type;
  PyObject *__pyx_n_s_pyx_unpickle_ExtensibleRateDat;
  PyObject *__pyx_n_s_pyx_vtable;
  PyObject *__pyx_n_s_r;
  PyObject *__pyx_n_s_range;
  PyObject *__pyx_n_s_rate;
  PyObject *__pyx_n_s_rate_coeff_units;
  PyObject *__pyx_kp_u_rate_constant;
  PyObject *__pyx_n_s_rate_type;
  PyObject *__pyx_n_s_rates;
  PyObject *__pyx_n_s_reactants;
  PyObject *__pyx_n_s_reaction_rate_type;
  PyObject *__pyx_n_u_reaction_rate_type;
  PyObject *__pyx_n_s_reaction_type;
  PyObject *__pyx_n_u_reactions;
  PyObject *__pyx_n_s_reduce;
  PyObject *__pyx_n_s_reduce_cython;
  PyObject *__pyx_n_s_reduce_ex;
  PyObject *__pyx_n_s_register_subclasses;
  PyObject *__pyx_n_u_replace;
  PyObject *__pyx_n_s_reshape;
  PyObject *__pyx_n_s_return;
  PyObject *__pyx_n_s_root;
  PyObject *__pyx_n_s_s;
  PyObject *__pyx_n_s_section;
  PyObject *__pyx_n_s_self;
  PyObject *__pyx_kp_s_self__rate_self_base_self_interf;
  PyObject *__pyx_kp_s_self__rate_self_base_self_interf_2;
  PyObject *__pyx_kp_s_self__rate_self_base_self_rate_c;
  PyObject *__pyx_kp_s_self__rate_self_rate_cannot_be_c;
  PyObject *__pyx_n_u_setParameters;
  PyObject *__pyx_n_s_set_parameters;
  PyObject *__pyx_n_u_set_parameters;
  PyObject *__pyx_kp_u_set_parameters_2;
  PyObject *__pyx_n_s_set_rate_function;
  PyObject *__pyx_n_s_set_species;
  PyObject *__pyx_n_s_setstate;
  PyObject *__pyx_n_s_setstate_cython;
  PyObject *__pyx_n_s_soln;
  PyObject *__pyx_n_s_spec;
  PyObject *__pyx_n_s_species;
  PyObject *__pyx_n_s_state;
  PyObject *__pyx_n_s_staticmethod;
  PyObject *__pyx_kp_u_sticking_Arrhenius;
  PyObject *__pyx_kp_u_sticking_Blowers_Masel;
  PyObject *__pyx_n_s_str;
  PyObject *__pyx_kp_s_stringsource;
  PyObject *__pyx_n_s_subclasses;
  PyObject *__pyx_n_s_temperature;
  PyObject *__pyx_n_s_temperature_exponent;
  PyObject *__pyx_n_s_temperature_range;
  PyObject *__pyx_n_s_test;
  PyObject *__pyx_n_s_text;
  PyObject *__pyx_n_s_third_body;
  PyObject *__pyx_kp_u_to_rate_expression;
  PyObject *__pyx_n_s_tolist;
  PyObject *__pyx_kp_u_two_temperature_plasma;
  PyObject *__pyx_n_u_type;
  PyObject *__pyx_kp_u_update;
  PyObject *__pyx_n_s_update_2;
  PyObject *__pyx_n_u_update_2;
  PyObject *__pyx_n_s_update_user_data;
  PyObject *__pyx_n_s_use_setstate;
  PyObject *__pyx_n_s_utils;
  PyObject *__pyx_n_s_validate;
  PyObject *__pyx_n_u_validate;
  PyObject *__pyx_kp_u_void_AnyMap;
  PyObject *__pyx_kp_u_void_AnyMap_UnitStack;
  PyObject *__pyx_kp_u_void_string_void;
  PyObject *__pyx_n_s_w;
  PyObject *__pyx_n_s_warn;
  PyObject *__pyx_n_s_warnings;
  PyObject *__pyx_float_0_0;
  PyObject *__pyx_int_0;
  PyObject *__pyx_int_130344318;
  PyObject *__pyx_int_171877079;
  PyObject *__pyx_int_191245125;
  PyObject *__pyx_tuple_;
  PyObject *__pyx_tuple__2;
  PyObject *__pyx_tuple__5;
  PyObject *__pyx_tuple__8;
  PyObject *__pyx_tuple__11;
  PyObject *__pyx_tuple__12;
  PyObject *__pyx_tuple__13;
  PyObject *__pyx_tuple__14;
  PyObject *__pyx_tuple__15;
  PyObject *__pyx_tuple__16;
  PyObject *__pyx_tuple__17;
  PyObject *__pyx_tuple__18;
  PyObject *__pyx_tuple__19;
  PyObject *__pyx_tuple__21;
  PyObject *__pyx_tuple__22;
  PyObject *__pyx_tuple__23;
  PyObject *__pyx_tuple__24;
  PyObject *__pyx_tuple__25;
  PyObject *__pyx_tuple__26;
  PyObject *__pyx_tuple__27;
  PyObject *__pyx_tuple__28;
  PyObject *__pyx_tuple__29;
  PyObject *__pyx_tuple__30;
  PyObject *__pyx_tuple__31;
  PyObject *__pyx_tuple__34;
  PyObject *__pyx_tuple__36;
  PyObject *__pyx_tuple__37;
  PyObject *__pyx_tuple__39;
  PyObject *__pyx_tuple__41;
  PyObject *__pyx_tuple__43;
  PyObject *__pyx_tuple__47;
  PyObject *__pyx_tuple__49;
  PyObject *__pyx_tuple__54;
  PyObject *__pyx_tuple__59;
  PyObject *__pyx_tuple__63;
  PyObject *__pyx_tuple__83;
  PyObject *__pyx_tuple__87;
  PyObject *__pyx_tuple__88;
  PyObject *__pyx_tuple__89;
  PyObject *__pyx_tuple__90;
  PyObject *__pyx_tuple__91;
  PyObject *__pyx_tuple__93;
  PyObject *__pyx_tuple__95;
  PyObject *__pyx_tuple__97;
  PyObject *__pyx_codeobj__6;
  PyObject *__pyx_tuple__101;
  PyObject *__pyx_tuple__102;
  PyObject *__pyx_tuple__104;
  PyObject *__pyx_tuple__107;
  PyObject *__pyx_tuple__129;
  PyObject *__pyx_tuple__133;
  PyObject *__pyx_tuple__135;
  PyObject *__pyx_tuple__137;
  PyObject *__pyx_tuple__139;
  PyObject *__pyx_tuple__140;
  PyObject *__pyx_tuple__157;
  PyObject *__pyx_codeobj__35;
  PyObject *__pyx_codeobj__38;
  PyObject *__pyx_codeobj__40;
  PyObject *__pyx_codeobj__42;
  PyObject *__pyx_codeobj__44;
  PyObject *__pyx_codeobj__45;
  PyObject *__pyx_codeobj__46;
  PyObject *__pyx_codeobj__48;
  PyObject *__pyx_codeobj__50;
  PyObject *__pyx_codeobj__51;
  PyObject *__pyx_codeobj__52;
  PyObject *__pyx_codeobj__53;
  PyObject *__pyx_codeobj__55;
  PyObject *__pyx_codeobj__56;
  PyObject *__pyx_codeobj__57;
  PyObject *__pyx_codeobj__58;
  PyObject *__pyx_codeobj__60;
  PyObject *__pyx_codeobj__61;
  PyObject *__pyx_codeobj__62;
  PyObject *__pyx_codeobj__64;
  PyObject *__pyx_codeobj__65;
  PyObject *__pyx_codeobj__66;
  PyObject *__pyx_codeobj__67;
  PyObject *__pyx_codeobj__68;
  PyObject *__pyx_codeobj__69;
  PyObject *__pyx_codeobj__70;
  PyObject *__pyx_codeobj__71;
  PyObject *__pyx_codeobj__72;
  PyObject *__pyx_codeobj__73;
  PyObject *__pyx_codeobj__74;
  PyObject *__pyx_codeobj__75;
  PyObject *__pyx_codeobj__76;
  PyObject *__pyx_codeobj__77;
  PyObject *__pyx_codeobj__78;
  PyObject *__pyx_codeobj__79;
  PyObject *__pyx_codeobj__80;
  PyObject *__pyx_codeobj__81;
  PyObject *__pyx_codeobj__82;
  PyObject *__pyx_codeobj__84;
  PyObject *__pyx_codeobj__85;
  PyObject *__pyx_codeobj__86;
  PyObject *__pyx_codeobj__92;
  PyObject *__pyx_codeobj__94;
  PyObject *__pyx_codeobj__96;
  PyObject *__pyx_codeobj__98;
  PyObject *__pyx_codeobj__99;
  PyObject *__pyx_codeobj__100;
  PyObject *__pyx_codeobj__103;
  PyObject *__pyx_codeobj__105;
  PyObject *__pyx_codeobj__106;
  PyObject *__pyx_codeobj__108;
  PyObject *__pyx_codeobj__109;
  PyObject *__pyx_codeobj__110;
  PyObject *__pyx_codeobj__111;
  PyObject *__pyx_codeobj__112;
  PyObject *__pyx_codeobj__113;
  PyObject *__pyx_codeobj__114;
  PyObject *__pyx_codeobj__115;
  PyObject *__pyx_codeobj__116;
  PyObject *__pyx_codeobj__117;
  PyObject *__pyx_codeobj__118;
  PyObject *__pyx_codeobj__119;
  PyObject *__pyx_codeobj__120;
  PyObject *__pyx_codeobj__121;
  PyObject *__pyx_codeobj__122;
  PyObject *__pyx_codeobj__123;
  PyObject *__pyx_codeobj__124;
  PyObject *__pyx_codeobj__125;
  PyObject *__pyx_codeobj__126;
  PyObject *__pyx_codeobj__127;
  PyObject *__pyx_codeobj__128;
  PyObject *__pyx_codeobj__130;
  PyObject *__pyx_codeobj__131;
  PyObject *__pyx_codeobj__132;
  PyObject *__pyx_codeobj__134;
  PyObject *__pyx_codeobj__136;
  PyObject *__pyx_codeobj__138;
  PyObject *__pyx_codeobj__141;
  PyObject *__pyx_codeobj__142;
  PyObject *__pyx_codeobj__143;
  PyObject *__pyx_codeobj__144;
  PyObject *__pyx_codeobj__145;
  PyObject *__pyx_codeobj__146;
  PyObject *__pyx_codeobj__147;
  PyObject *__pyx_codeobj__148;
  PyObject *__pyx_codeobj__149;
  PyObject *__pyx_codeobj__150;
  PyObject *__pyx_codeobj__151;
  PyObject *__pyx_codeobj__152;
  PyObject *__pyx_codeobj__153;
  PyObject *__pyx_codeobj__154;
  PyObject *__pyx_codeobj__155;
  PyObject *__pyx_codeobj__156;
  PyObject *__pyx_codeobj__158;
} __pyx_mstate;

#if CYTHON_USE_MODULE_STATE
#ifdef __cplusplus
namespace {
  extern struct PyModuleDef __pyx_moduledef;
} /* anonymous namespace */
#else
static struct PyModuleDef __pyx_moduledef;
#endif

#define __pyx_mstate(o) ((__pyx_mstate *)__Pyx_PyModule_GetState(o))

#define __pyx_mstate_global (__pyx_mstate(PyState_FindModule(&__pyx_moduledef)))

#define __pyx_m (PyState_FindModule(&__pyx_moduledef))
#else
static __pyx_mstate __pyx_mstate_global_static =
#ifdef __cplusplus
    {};
#else
    {0};
#endif
static __pyx_mstate *__pyx_mstate_global = &__pyx_mstate_global_static;
#endif
/* #### Code section: module_state_clear ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_clear(PyObject *m) {
  __pyx_mstate *clear_module_state = __pyx_mstate(m);
  if (!clear_module_state) return 0;
  Py_CLEAR(clear_module_state->__pyx_d);
  Py_CLEAR(clear_module_state->__pyx_b);
  Py_CLEAR(clear_module_state->__pyx_cython_runtime);
  Py_CLEAR(clear_module_state->__pyx_empty_tuple);
  Py_CLEAR(clear_module_state->__pyx_empty_bytes);
  Py_CLEAR(clear_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_CLEAR(clear_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_CLEAR(clear_module_state->__pyx_FusedFunctionType);
  #endif
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_4type_type);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_4bool_bool);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cpython_7complex_complex);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_dtype);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_flatiter);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_broadcast);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_ndarray);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_generic);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_number);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_integer);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_signedinteger);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_unsignedinteger);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_inexact);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_floating);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_complexfloating);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_flexible);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_character);
  Py_CLEAR(clear_module_state->__pyx_ptype_5numpy_ufunc);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_5func1_Func1);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_5units_Units);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_5units_UnitStack);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_5units_UnitSystem);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_12solutionbase__SolutionBase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8kinetics_Kinetics);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8kinetics_InterfaceKinetics);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_6_utils_AnyMap);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_ReactionRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_ReactionRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_ArrheniusRateBase);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_ArrheniusRateBase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_FalloffRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_FalloffRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_CustomRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_CustomRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_ExtensibleRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_ExtensibleRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_ExtensibleRateData);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_ExtensibleRateData);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_InterfaceRateBase);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_InterfaceRateBase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_StickRateBase);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_StickRateBase);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_ThirdBody);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_ThirdBody);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_Reaction);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_Reaction);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_Arrhenius);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_Arrhenius);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_ArrheniusRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_ArrheniusRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_BlowersMaselRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_BlowersMaselRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_TwoTempPlasmaRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_LindemannRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_LindemannRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_TroeRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_TroeRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_SriRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_SriRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_TsangRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_TsangRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_PlogRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_PlogRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_ChebyshevRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_ChebyshevRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_InterfaceArrheniusRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_StickingArrheniusRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_StickingArrheniusRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_StickingBlowersMaselRate);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_ThreeBodyReaction);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_ThreeBodyReaction);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_FalloffReaction);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_FalloffReaction);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_ChemicallyActivatedReaction);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction_CustomReaction);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction_CustomReaction);
  Py_CLEAR(clear_module_state->__pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap);
  Py_CLEAR(clear_module_state->__pyx_type_7cantera_8reaction___pyx_scope_struct__wrap);
  Py_CLEAR(clear_module_state->__pyx_kp_u_0x);
  Py_CLEAR(clear_module_state->__pyx_n_s_A);
  Py_CLEAR(clear_module_state->__pyx_n_u_A);
  Py_CLEAR(clear_module_state->__pyx_n_s_AnyMap);
  Py_CLEAR(clear_module_state->__pyx_n_s_Arrhenius);
  Py_CLEAR(clear_module_state->__pyx_n_u_Arrhenius);
  Py_CLEAR(clear_module_state->__pyx_n_s_ArrheniusRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_ArrheniusRateBase);
  Py_CLEAR(clear_module_state->__pyx_n_s_ArrheniusRateBase___reduce_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_ArrheniusRateBase___setstate_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_ArrheniusRateBase__cinit);
  Py_CLEAR(clear_module_state->__pyx_n_s_ArrheniusRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ArrheniusRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ArrheniusRate__from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_ArrheniusRate__from_parameters);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Arrhenius_A_g_b_g_E_g);
  Py_CLEAR(clear_module_state->__pyx_n_s_Arrhenius___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Arrhenius___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Base_class);
  Py_CLEAR(clear_module_state->__pyx_n_s_BlowersMaselRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_BlowersMaselRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_BlowersMaselRate___setstate_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_BlowersMaselRate__from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_BlowersMaselRate__from_parameter);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Blowers_Masel);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Cannot_convert_input_with_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_CanteraError);
  Py_CLEAR(clear_module_state->__pyx_n_u_Chebyshev);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChebyshevRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChebyshevRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChebyshevRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChemicallyActivatedReaction);
  Py_CLEAR(clear_module_state->__pyx_kp_u_ChemicallyActivatedReaction_Clas);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChemicallyActivatedReaction___re);
  Py_CLEAR(clear_module_state->__pyx_n_s_ChemicallyActivatedReaction___se);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Class_method_from_dict_was_invok);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Class_method_from_yaml_was_invok);
  Py_CLEAR(clear_module_state->__pyx_n_s_CustomRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_CustomRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_CustomRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_CustomRate_set_rate_function);
  Py_CLEAR(clear_module_state->__pyx_n_s_CustomReaction);
  Py_CLEAR(clear_module_state->__pyx_kp_u_CustomReaction_Class_to_be_remov);
  Py_CLEAR(clear_module_state->__pyx_n_s_CustomReaction___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_CustomReaction___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_DeprecationWarning);
  Py_CLEAR(clear_module_state->__pyx_n_s_E);
  Py_CLEAR(clear_module_state->__pyx_n_s_Ea);
  Py_CLEAR(clear_module_state->__pyx_n_s_Ea0);
  Py_CLEAR(clear_module_state->__pyx_n_u_Ea0);
  Py_CLEAR(clear_module_state->__pyx_n_s_Ea_electron);
  Py_CLEAR(clear_module_state->__pyx_n_s_Ea_gas);
  Py_CLEAR(clear_module_state->__pyx_n_u_Ea_gas);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRateData);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRateData___reduce_cyth);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRateData___setstate_cy);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRateData_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRate_eval);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRate_get_parameters);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRate_set_parameters);
  Py_CLEAR(clear_module_state->__pyx_n_s_ExtensibleRate_validate);
  Py_CLEAR(clear_module_state->__pyx_n_u_F);
  Py_CLEAR(clear_module_state->__pyx_n_s_FalloffRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_FalloffRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_FalloffRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_FalloffRate_falloff_function);
  Py_CLEAR(clear_module_state->__pyx_n_s_FalloffReaction);
  Py_CLEAR(clear_module_state->__pyx_kp_u_FalloffReaction_Class_to_be_remo);
  Py_CLEAR(clear_module_state->__pyx_n_s_FalloffReaction___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_FalloffReaction___setstate_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_ImportError);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Incompatible_checksums_0x_x_vs_0);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceArrheniusRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceArrheniusRate___reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceArrheniusRate___setstat);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceArrheniusRate__from_dic);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceArrheniusRate__from_par);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceBlowersMaselRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceBlowersMaselRate___redu);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceBlowersMaselRate___sets);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceBlowersMaselRate__from);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceBlowersMaselRate__from_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceRateBase);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceRateBase___reduce_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceRateBase___setstate_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_InterfaceRateBase_set_species);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Internal_Error_Delegator_does_no);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Invalid_input_parameters);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Invalid_parameter_input_data);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Invalid_parameter_rates);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Invalid_parameters);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Invalid_parameters_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Invalid_rate_definition_with_typ);
  Py_CLEAR(clear_module_state->__pyx_n_u_Lindemann);
  Py_CLEAR(clear_module_state->__pyx_n_s_LindemannRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_LindemannRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_LindemannRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_LindemannRate__from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_u_M);
  Py_CLEAR(clear_module_state->__pyx_n_s_MemoryError);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Missing_reactant_and_or_product);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Missing_reaction_rate_informatio);
  Py_CLEAR(clear_module_state->__pyx_n_s_None);
  Py_CLEAR(clear_module_state->__pyx_n_s_NotImplementedError);
  Py_CLEAR(clear_module_state->__pyx_n_s_PickleError);
  Py_CLEAR(clear_module_state->__pyx_n_s_PlogRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_PlogRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_PlogRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction);
  Py_CLEAR(clear_module_state->__pyx_n_s_ReactionRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_ReactionRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ReactionRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ReactionRate_from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_ReactionRate_from_yaml);
  Py_CLEAR(clear_module_state->__pyx_n_s_ReactionRate_wrap_locals_registe);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Reaction_Argument_efficiencies_i);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Reaction_Parameter_kinetics_is_n);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction_clear_user_data);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Reaction_default_efficiency_Prop);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Reaction_does_not_involve_third);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Reaction_efficiencies_Property_i);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction_efficiency);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Reaction_efficiency_Method_is_de);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction_from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction_from_yaml);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction_list_from_file);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction_list_from_yaml);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Reaction_products_setter_is_dep);
  Py_CLEAR(clear_module_state->__pyx_kp_u_Reaction_reactants_setter_is_de);
  Py_CLEAR(clear_module_state->__pyx_n_s_Reaction_update_user_data);
  Py_CLEAR(clear_module_state->__pyx_n_u_SRI);
  Py_CLEAR(clear_module_state->__pyx_kp_s_Solution);
  Py_CLEAR(clear_module_state->__pyx_n_s_SriRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_SriRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_SriRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_SriRate__from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickRateBase);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickRateBase___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickRateBase___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingArrheniusRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingArrheniusRate___reduce_c);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingArrheniusRate___setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingArrheniusRate__from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingArrheniusRate__from_para);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingBlowersMaselRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingBlowersMaselRate___reduc);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingBlowersMaselRate___setst);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingBlowersMaselRate__from_d);
  Py_CLEAR(clear_module_state->__pyx_n_s_StickingBlowersMaselRate__from_p);
  Py_CLEAR(clear_module_state->__pyx_n_s_T);
  Py_CLEAR(clear_module_state->__pyx_n_s_ThirdBody);
  Py_CLEAR(clear_module_state->__pyx_n_s_ThirdBody___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ThirdBody___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_ThirdBody_efficiency);
  Py_CLEAR(clear_module_state->__pyx_n_s_ThreeBodyReaction);
  Py_CLEAR(clear_module_state->__pyx_kp_u_ThreeBodyReaction_Class_to_be_re);
  Py_CLEAR(clear_module_state->__pyx_n_s_ThreeBodyReaction___reduce_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_ThreeBodyReaction___setstate_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_u_Troe);
  Py_CLEAR(clear_module_state->__pyx_n_s_TroeRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_TroeRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_TroeRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_TroeRate__from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_u_Tsang);
  Py_CLEAR(clear_module_state->__pyx_n_s_TsangRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_TsangRate___reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_TsangRate___setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_TsangRate__from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_TwoTempPlasmaRate);
  Py_CLEAR(clear_module_state->__pyx_n_s_TwoTempPlasmaRate___reduce_cytho);
  Py_CLEAR(clear_module_state->__pyx_n_s_TwoTempPlasmaRate___setstate_cyt);
  Py_CLEAR(clear_module_state->__pyx_n_s_TwoTempPlasmaRate__from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_TwoTempPlasmaRate__from_paramete);
  Py_CLEAR(clear_module_state->__pyx_n_s_TypeError);
  Py_CLEAR(clear_module_state->__pyx_n_s_UnitStack);
  Py_CLEAR(clear_module_state->__pyx_n_s_ValueError);
  Py_CLEAR(clear_module_state->__pyx_kp_u__10);
  Py_CLEAR(clear_module_state->__pyx_n_s__159);
  Py_CLEAR(clear_module_state->__pyx_kp_u__20);
  Py_CLEAR(clear_module_state->__pyx_kp_u__3);
  Py_CLEAR(clear_module_state->__pyx_kp_u__32);
  Py_CLEAR(clear_module_state->__pyx_n_s__33);
  Py_CLEAR(clear_module_state->__pyx_kp_u__4);
  Py_CLEAR(clear_module_state->__pyx_kp_u__7);
  Py_CLEAR(clear_module_state->__pyx_kp_u__9);
  Py_CLEAR(clear_module_state->__pyx_n_s_activation_energy);
  Py_CLEAR(clear_module_state->__pyx_n_u_after);
  Py_CLEAR(clear_module_state->__pyx_n_s_all);
  Py_CLEAR(clear_module_state->__pyx_n_s_any_map);
  Py_CLEAR(clear_module_state->__pyx_n_s_asyncio_coroutines);
  Py_CLEAR(clear_module_state->__pyx_kp_u_at);
  Py_CLEAR(clear_module_state->__pyx_n_s_b);
  Py_CLEAR(clear_module_state->__pyx_n_u_b);
  Py_CLEAR(clear_module_state->__pyx_kp_u_but_should_be_called_from_base);
  Py_CLEAR(clear_module_state->__pyx_n_s_c);
  Py_CLEAR(clear_module_state->__pyx_kp_u_cannot_be_instantiated_by_itsel);
  Py_CLEAR(clear_module_state->__pyx_kp_u_cannot_be_instantiated_by_itsel_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_cantera_reaction);
  Py_CLEAR(clear_module_state->__pyx_kp_s_cantera_reaction_pyx);
  Py_CLEAR(clear_module_state->__pyx_n_s_cinit);
  Py_CLEAR(clear_module_state->__pyx_n_s_class);
  Py_CLEAR(clear_module_state->__pyx_n_s_clear_user_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_cline_in_traceback);
  Py_CLEAR(clear_module_state->__pyx_n_s_cls);
  Py_CLEAR(clear_module_state->__pyx_n_s_collider);
  Py_CLEAR(clear_module_state->__pyx_n_s_conc3b);
  Py_CLEAR(clear_module_state->__pyx_n_s_concm);
  Py_CLEAR(clear_module_state->__pyx_n_s_coverages);
  Py_CLEAR(clear_module_state->__pyx_kp_u_custom_rate_function);
  Py_CLEAR(clear_module_state->__pyx_n_s_cxx_rate);
  Py_CLEAR(clear_module_state->__pyx_n_s_cxx_reaction);
  Py_CLEAR(clear_module_state->__pyx_n_s_cxx_reactions);
  Py_CLEAR(clear_module_state->__pyx_n_s_cxxvector);
  Py_CLEAR(clear_module_state->__pyx_n_s_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_default_efficiency);
  Py_CLEAR(clear_module_state->__pyx_n_s_delegatable_methods);
  Py_CLEAR(clear_module_state->__pyx_n_s_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_dict_2);
  Py_CLEAR(clear_module_state->__pyx_kp_u_disable);
  Py_CLEAR(clear_module_state->__pyx_n_s_double);
  Py_CLEAR(clear_module_state->__pyx_kp_u_double_void);
  Py_CLEAR(clear_module_state->__pyx_n_s_efficiencies);
  Py_CLEAR(clear_module_state->__pyx_n_s_efficiency);
  Py_CLEAR(clear_module_state->__pyx_n_s_elec_temp);
  Py_CLEAR(clear_module_state->__pyx_kp_u_enable);
  Py_CLEAR(clear_module_state->__pyx_n_s_enumerate);
  Py_CLEAR(clear_module_state->__pyx_n_s_equation);
  Py_CLEAR(clear_module_state->__pyx_kp_u_eval);
  Py_CLEAR(clear_module_state->__pyx_n_u_evalFromStruct);
  Py_CLEAR(clear_module_state->__pyx_n_s_eval_2);
  Py_CLEAR(clear_module_state->__pyx_n_u_eval_2);
  Py_CLEAR(clear_module_state->__pyx_n_u_extensible);
  Py_CLEAR(clear_module_state->__pyx_n_s_falloff_coeffs);
  Py_CLEAR(clear_module_state->__pyx_n_s_falloff_function);
  Py_CLEAR(clear_module_state->__pyx_n_s_filename);
  Py_CLEAR(clear_module_state->__pyx_n_s_float);
  Py_CLEAR(clear_module_state->__pyx_n_s_format);
  Py_CLEAR(clear_module_state->__pyx_n_s_from_dict);
  Py_CLEAR(clear_module_state->__pyx_n_s_from_dict_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_from_parameters);
  Py_CLEAR(clear_module_state->__pyx_n_s_from_yaml);
  Py_CLEAR(clear_module_state->__pyx_n_s_fromiter);
  Py_CLEAR(clear_module_state->__pyx_kp_u_gc);
  Py_CLEAR(clear_module_state->__pyx_n_s_get);
  Py_CLEAR(clear_module_state->__pyx_n_u_getParameters);
  Py_CLEAR(clear_module_state->__pyx_kp_u_get_parameters);
  Py_CLEAR(clear_module_state->__pyx_n_s_get_parameters_2);
  Py_CLEAR(clear_module_state->__pyx_n_u_get_parameters_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_getstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_high);
  Py_CLEAR(clear_module_state->__pyx_n_s_high_rate);
  Py_CLEAR(clear_module_state->__pyx_n_s_hyphenize);
  Py_CLEAR(clear_module_state->__pyx_n_s_id);
  Py_CLEAR(clear_module_state->__pyx_n_s_import);
  Py_CLEAR(clear_module_state->__pyx_n_s_init);
  Py_CLEAR(clear_module_state->__pyx_n_s_initializing);
  Py_CLEAR(clear_module_state->__pyx_n_s_input_data);
  Py_CLEAR(clear_module_state->__pyx_kp_u_interface_Arrhenius);
  Py_CLEAR(clear_module_state->__pyx_kp_u_interface_Blowers_Masel);
  Py_CLEAR(clear_module_state->__pyx_n_s_is_coroutine);
  Py_CLEAR(clear_module_state->__pyx_kp_u_isenabled);
  Py_CLEAR(clear_module_state->__pyx_n_u_items);
  Py_CLEAR(clear_module_state->__pyx_n_s_k);
  Py_CLEAR(clear_module_state->__pyx_n_s_kinetics);
  Py_CLEAR(clear_module_state->__pyx_n_s_kwargs);
  Py_CLEAR(clear_module_state->__pyx_n_s_list_from_file);
  Py_CLEAR(clear_module_state->__pyx_n_s_list_from_yaml);
  Py_CLEAR(clear_module_state->__pyx_n_s_log);
  Py_CLEAR(clear_module_state->__pyx_n_s_low);
  Py_CLEAR(clear_module_state->__pyx_n_s_low_rate);
  Py_CLEAR(clear_module_state->__pyx_n_s_main);
  Py_CLEAR(clear_module_state->__pyx_n_s_name);
  Py_CLEAR(clear_module_state->__pyx_n_s_name_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_new);
  Py_CLEAR(clear_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_CLEAR(clear_module_state->__pyx_n_s_np);
  Py_CLEAR(clear_module_state->__pyx_n_s_numpy);
  Py_CLEAR(clear_module_state->__pyx_kp_u_numpy_core_multiarray_failed_to);
  Py_CLEAR(clear_module_state->__pyx_kp_u_numpy_core_umath_failed_to_impor);
  Py_CLEAR(clear_module_state->__pyx_kp_u_or);
  Py_CLEAR(clear_module_state->__pyx_n_s_order);
  Py_CLEAR(clear_module_state->__pyx_n_s_par_list);
  Py_CLEAR(clear_module_state->__pyx_n_s_par_string);
  Py_CLEAR(clear_module_state->__pyx_n_s_params);
  Py_CLEAR(clear_module_state->__pyx_n_s_pickle);
  Py_CLEAR(clear_module_state->__pyx_n_s_pre_exponential_factor);
  Py_CLEAR(clear_module_state->__pyx_n_s_pressure);
  Py_CLEAR(clear_module_state->__pyx_kp_u_pressure_dependent_Arrhenius);
  Py_CLEAR(clear_module_state->__pyx_n_s_pressure_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_products);
  Py_CLEAR(clear_module_state->__pyx_n_u_python);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_PickleError);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_checksum);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_result);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_unpickle_ExtensibleRateDat);
  Py_CLEAR(clear_module_state->__pyx_n_s_pyx_vtable);
  Py_CLEAR(clear_module_state->__pyx_n_s_r);
  Py_CLEAR(clear_module_state->__pyx_n_s_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_rate);
  Py_CLEAR(clear_module_state->__pyx_n_s_rate_coeff_units);
  Py_CLEAR(clear_module_state->__pyx_kp_u_rate_constant);
  Py_CLEAR(clear_module_state->__pyx_n_s_rate_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_rates);
  Py_CLEAR(clear_module_state->__pyx_n_s_reactants);
  Py_CLEAR(clear_module_state->__pyx_n_s_reaction_rate_type);
  Py_CLEAR(clear_module_state->__pyx_n_u_reaction_rate_type);
  Py_CLEAR(clear_module_state->__pyx_n_s_reaction_type);
  Py_CLEAR(clear_module_state->__pyx_n_u_reactions);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_reduce_ex);
  Py_CLEAR(clear_module_state->__pyx_n_s_register_subclasses);
  Py_CLEAR(clear_module_state->__pyx_n_u_replace);
  Py_CLEAR(clear_module_state->__pyx_n_s_reshape);
  Py_CLEAR(clear_module_state->__pyx_n_s_return);
  Py_CLEAR(clear_module_state->__pyx_n_s_root);
  Py_CLEAR(clear_module_state->__pyx_n_s_s);
  Py_CLEAR(clear_module_state->__pyx_n_s_section);
  Py_CLEAR(clear_module_state->__pyx_n_s_self);
  Py_CLEAR(clear_module_state->__pyx_kp_s_self__rate_self_base_self_interf);
  Py_CLEAR(clear_module_state->__pyx_kp_s_self__rate_self_base_self_interf_2);
  Py_CLEAR(clear_module_state->__pyx_kp_s_self__rate_self_base_self_rate_c);
  Py_CLEAR(clear_module_state->__pyx_kp_s_self__rate_self_rate_cannot_be_c);
  Py_CLEAR(clear_module_state->__pyx_n_u_setParameters);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_parameters);
  Py_CLEAR(clear_module_state->__pyx_n_u_set_parameters);
  Py_CLEAR(clear_module_state->__pyx_kp_u_set_parameters_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_rate_function);
  Py_CLEAR(clear_module_state->__pyx_n_s_set_species);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_setstate_cython);
  Py_CLEAR(clear_module_state->__pyx_n_s_soln);
  Py_CLEAR(clear_module_state->__pyx_n_s_spec);
  Py_CLEAR(clear_module_state->__pyx_n_s_species);
  Py_CLEAR(clear_module_state->__pyx_n_s_state);
  Py_CLEAR(clear_module_state->__pyx_n_s_staticmethod);
  Py_CLEAR(clear_module_state->__pyx_kp_u_sticking_Arrhenius);
  Py_CLEAR(clear_module_state->__pyx_kp_u_sticking_Blowers_Masel);
  Py_CLEAR(clear_module_state->__pyx_n_s_str);
  Py_CLEAR(clear_module_state->__pyx_kp_s_stringsource);
  Py_CLEAR(clear_module_state->__pyx_n_s_subclasses);
  Py_CLEAR(clear_module_state->__pyx_n_s_temperature);
  Py_CLEAR(clear_module_state->__pyx_n_s_temperature_exponent);
  Py_CLEAR(clear_module_state->__pyx_n_s_temperature_range);
  Py_CLEAR(clear_module_state->__pyx_n_s_test);
  Py_CLEAR(clear_module_state->__pyx_n_s_text);
  Py_CLEAR(clear_module_state->__pyx_n_s_third_body);
  Py_CLEAR(clear_module_state->__pyx_kp_u_to_rate_expression);
  Py_CLEAR(clear_module_state->__pyx_n_s_tolist);
  Py_CLEAR(clear_module_state->__pyx_kp_u_two_temperature_plasma);
  Py_CLEAR(clear_module_state->__pyx_n_u_type);
  Py_CLEAR(clear_module_state->__pyx_kp_u_update);
  Py_CLEAR(clear_module_state->__pyx_n_s_update_2);
  Py_CLEAR(clear_module_state->__pyx_n_u_update_2);
  Py_CLEAR(clear_module_state->__pyx_n_s_update_user_data);
  Py_CLEAR(clear_module_state->__pyx_n_s_use_setstate);
  Py_CLEAR(clear_module_state->__pyx_n_s_utils);
  Py_CLEAR(clear_module_state->__pyx_n_s_validate);
  Py_CLEAR(clear_module_state->__pyx_n_u_validate);
  Py_CLEAR(clear_module_state->__pyx_kp_u_void_AnyMap);
  Py_CLEAR(clear_module_state->__pyx_kp_u_void_AnyMap_UnitStack);
  Py_CLEAR(clear_module_state->__pyx_kp_u_void_string_void);
  Py_CLEAR(clear_module_state->__pyx_n_s_w);
  Py_CLEAR(clear_module_state->__pyx_n_s_warn);
  Py_CLEAR(clear_module_state->__pyx_n_s_warnings);
  Py_CLEAR(clear_module_state->__pyx_float_0_0);
  Py_CLEAR(clear_module_state->__pyx_int_0);
  Py_CLEAR(clear_module_state->__pyx_int_130344318);
  Py_CLEAR(clear_module_state->__pyx_int_171877079);
  Py_CLEAR(clear_module_state->__pyx_int_191245125);
  Py_CLEAR(clear_module_state->__pyx_tuple_);
  Py_CLEAR(clear_module_state->__pyx_tuple__2);
  Py_CLEAR(clear_module_state->__pyx_tuple__5);
  Py_CLEAR(clear_module_state->__pyx_tuple__8);
  Py_CLEAR(clear_module_state->__pyx_tuple__11);
  Py_CLEAR(clear_module_state->__pyx_tuple__12);
  Py_CLEAR(clear_module_state->__pyx_tuple__13);
  Py_CLEAR(clear_module_state->__pyx_tuple__14);
  Py_CLEAR(clear_module_state->__pyx_tuple__15);
  Py_CLEAR(clear_module_state->__pyx_tuple__16);
  Py_CLEAR(clear_module_state->__pyx_tuple__17);
  Py_CLEAR(clear_module_state->__pyx_tuple__18);
  Py_CLEAR(clear_module_state->__pyx_tuple__19);
  Py_CLEAR(clear_module_state->__pyx_tuple__21);
  Py_CLEAR(clear_module_state->__pyx_tuple__22);
  Py_CLEAR(clear_module_state->__pyx_tuple__23);
  Py_CLEAR(clear_module_state->__pyx_tuple__24);
  Py_CLEAR(clear_module_state->__pyx_tuple__25);
  Py_CLEAR(clear_module_state->__pyx_tuple__26);
  Py_CLEAR(clear_module_state->__pyx_tuple__27);
  Py_CLEAR(clear_module_state->__pyx_tuple__28);
  Py_CLEAR(clear_module_state->__pyx_tuple__29);
  Py_CLEAR(clear_module_state->__pyx_tuple__30);
  Py_CLEAR(clear_module_state->__pyx_tuple__31);
  Py_CLEAR(clear_module_state->__pyx_tuple__34);
  Py_CLEAR(clear_module_state->__pyx_tuple__36);
  Py_CLEAR(clear_module_state->__pyx_tuple__37);
  Py_CLEAR(clear_module_state->__pyx_tuple__39);
  Py_CLEAR(clear_module_state->__pyx_tuple__41);
  Py_CLEAR(clear_module_state->__pyx_tuple__43);
  Py_CLEAR(clear_module_state->__pyx_tuple__47);
  Py_CLEAR(clear_module_state->__pyx_tuple__49);
  Py_CLEAR(clear_module_state->__pyx_tuple__54);
  Py_CLEAR(clear_module_state->__pyx_tuple__59);
  Py_CLEAR(clear_module_state->__pyx_tuple__63);
  Py_CLEAR(clear_module_state->__pyx_tuple__83);
  Py_CLEAR(clear_module_state->__pyx_tuple__87);
  Py_CLEAR(clear_module_state->__pyx_tuple__88);
  Py_CLEAR(clear_module_state->__pyx_tuple__89);
  Py_CLEAR(clear_module_state->__pyx_tuple__90);
  Py_CLEAR(clear_module_state->__pyx_tuple__91);
  Py_CLEAR(clear_module_state->__pyx_tuple__93);
  Py_CLEAR(clear_module_state->__pyx_tuple__95);
  Py_CLEAR(clear_module_state->__pyx_tuple__97);
  Py_CLEAR(clear_module_state->__pyx_codeobj__6);
  Py_CLEAR(clear_module_state->__pyx_tuple__101);
  Py_CLEAR(clear_module_state->__pyx_tuple__102);
  Py_CLEAR(clear_module_state->__pyx_tuple__104);
  Py_CLEAR(clear_module_state->__pyx_tuple__107);
  Py_CLEAR(clear_module_state->__pyx_tuple__129);
  Py_CLEAR(clear_module_state->__pyx_tuple__133);
  Py_CLEAR(clear_module_state->__pyx_tuple__135);
  Py_CLEAR(clear_module_state->__pyx_tuple__137);
  Py_CLEAR(clear_module_state->__pyx_tuple__139);
  Py_CLEAR(clear_module_state->__pyx_tuple__140);
  Py_CLEAR(clear_module_state->__pyx_tuple__157);
  Py_CLEAR(clear_module_state->__pyx_codeobj__35);
  Py_CLEAR(clear_module_state->__pyx_codeobj__38);
  Py_CLEAR(clear_module_state->__pyx_codeobj__40);
  Py_CLEAR(clear_module_state->__pyx_codeobj__42);
  Py_CLEAR(clear_module_state->__pyx_codeobj__44);
  Py_CLEAR(clear_module_state->__pyx_codeobj__45);
  Py_CLEAR(clear_module_state->__pyx_codeobj__46);
  Py_CLEAR(clear_module_state->__pyx_codeobj__48);
  Py_CLEAR(clear_module_state->__pyx_codeobj__50);
  Py_CLEAR(clear_module_state->__pyx_codeobj__51);
  Py_CLEAR(clear_module_state->__pyx_codeobj__52);
  Py_CLEAR(clear_module_state->__pyx_codeobj__53);
  Py_CLEAR(clear_module_state->__pyx_codeobj__55);
  Py_CLEAR(clear_module_state->__pyx_codeobj__56);
  Py_CLEAR(clear_module_state->__pyx_codeobj__57);
  Py_CLEAR(clear_module_state->__pyx_codeobj__58);
  Py_CLEAR(clear_module_state->__pyx_codeobj__60);
  Py_CLEAR(clear_module_state->__pyx_codeobj__61);
  Py_CLEAR(clear_module_state->__pyx_codeobj__62);
  Py_CLEAR(clear_module_state->__pyx_codeobj__64);
  Py_CLEAR(clear_module_state->__pyx_codeobj__65);
  Py_CLEAR(clear_module_state->__pyx_codeobj__66);
  Py_CLEAR(clear_module_state->__pyx_codeobj__67);
  Py_CLEAR(clear_module_state->__pyx_codeobj__68);
  Py_CLEAR(clear_module_state->__pyx_codeobj__69);
  Py_CLEAR(clear_module_state->__pyx_codeobj__70);
  Py_CLEAR(clear_module_state->__pyx_codeobj__71);
  Py_CLEAR(clear_module_state->__pyx_codeobj__72);
  Py_CLEAR(clear_module_state->__pyx_codeobj__73);
  Py_CLEAR(clear_module_state->__pyx_codeobj__74);
  Py_CLEAR(clear_module_state->__pyx_codeobj__75);
  Py_CLEAR(clear_module_state->__pyx_codeobj__76);
  Py_CLEAR(clear_module_state->__pyx_codeobj__77);
  Py_CLEAR(clear_module_state->__pyx_codeobj__78);
  Py_CLEAR(clear_module_state->__pyx_codeobj__79);
  Py_CLEAR(clear_module_state->__pyx_codeobj__80);
  Py_CLEAR(clear_module_state->__pyx_codeobj__81);
  Py_CLEAR(clear_module_state->__pyx_codeobj__82);
  Py_CLEAR(clear_module_state->__pyx_codeobj__84);
  Py_CLEAR(clear_module_state->__pyx_codeobj__85);
  Py_CLEAR(clear_module_state->__pyx_codeobj__86);
  Py_CLEAR(clear_module_state->__pyx_codeobj__92);
  Py_CLEAR(clear_module_state->__pyx_codeobj__94);
  Py_CLEAR(clear_module_state->__pyx_codeobj__96);
  Py_CLEAR(clear_module_state->__pyx_codeobj__98);
  Py_CLEAR(clear_module_state->__pyx_codeobj__99);
  Py_CLEAR(clear_module_state->__pyx_codeobj__100);
  Py_CLEAR(clear_module_state->__pyx_codeobj__103);
  Py_CLEAR(clear_module_state->__pyx_codeobj__105);
  Py_CLEAR(clear_module_state->__pyx_codeobj__106);
  Py_CLEAR(clear_module_state->__pyx_codeobj__108);
  Py_CLEAR(clear_module_state->__pyx_codeobj__109);
  Py_CLEAR(clear_module_state->__pyx_codeobj__110);
  Py_CLEAR(clear_module_state->__pyx_codeobj__111);
  Py_CLEAR(clear_module_state->__pyx_codeobj__112);
  Py_CLEAR(clear_module_state->__pyx_codeobj__113);
  Py_CLEAR(clear_module_state->__pyx_codeobj__114);
  Py_CLEAR(clear_module_state->__pyx_codeobj__115);
  Py_CLEAR(clear_module_state->__pyx_codeobj__116);
  Py_CLEAR(clear_module_state->__pyx_codeobj__117);
  Py_CLEAR(clear_module_state->__pyx_codeobj__118);
  Py_CLEAR(clear_module_state->__pyx_codeobj__119);
  Py_CLEAR(clear_module_state->__pyx_codeobj__120);
  Py_CLEAR(clear_module_state->__pyx_codeobj__121);
  Py_CLEAR(clear_module_state->__pyx_codeobj__122);
  Py_CLEAR(clear_module_state->__pyx_codeobj__123);
  Py_CLEAR(clear_module_state->__pyx_codeobj__124);
  Py_CLEAR(clear_module_state->__pyx_codeobj__125);
  Py_CLEAR(clear_module_state->__pyx_codeobj__126);
  Py_CLEAR(clear_module_state->__pyx_codeobj__127);
  Py_CLEAR(clear_module_state->__pyx_codeobj__128);
  Py_CLEAR(clear_module_state->__pyx_codeobj__130);
  Py_CLEAR(clear_module_state->__pyx_codeobj__131);
  Py_CLEAR(clear_module_state->__pyx_codeobj__132);
  Py_CLEAR(clear_module_state->__pyx_codeobj__134);
  Py_CLEAR(clear_module_state->__pyx_codeobj__136);
  Py_CLEAR(clear_module_state->__pyx_codeobj__138);
  Py_CLEAR(clear_module_state->__pyx_codeobj__141);
  Py_CLEAR(clear_module_state->__pyx_codeobj__142);
  Py_CLEAR(clear_module_state->__pyx_codeobj__143);
  Py_CLEAR(clear_module_state->__pyx_codeobj__144);
  Py_CLEAR(clear_module_state->__pyx_codeobj__145);
  Py_CLEAR(clear_module_state->__pyx_codeobj__146);
  Py_CLEAR(clear_module_state->__pyx_codeobj__147);
  Py_CLEAR(clear_module_state->__pyx_codeobj__148);
  Py_CLEAR(clear_module_state->__pyx_codeobj__149);
  Py_CLEAR(clear_module_state->__pyx_codeobj__150);
  Py_CLEAR(clear_module_state->__pyx_codeobj__151);
  Py_CLEAR(clear_module_state->__pyx_codeobj__152);
  Py_CLEAR(clear_module_state->__pyx_codeobj__153);
  Py_CLEAR(clear_module_state->__pyx_codeobj__154);
  Py_CLEAR(clear_module_state->__pyx_codeobj__155);
  Py_CLEAR(clear_module_state->__pyx_codeobj__156);
  Py_CLEAR(clear_module_state->__pyx_codeobj__158);
  return 0;
}
#endif
/* #### Code section: module_state_traverse ### */
#if CYTHON_USE_MODULE_STATE
static int __pyx_m_traverse(PyObject *m, visitproc visit, void *arg) {
  __pyx_mstate *traverse_module_state = __pyx_mstate(m);
  if (!traverse_module_state) return 0;
  Py_VISIT(traverse_module_state->__pyx_d);
  Py_VISIT(traverse_module_state->__pyx_b);
  Py_VISIT(traverse_module_state->__pyx_cython_runtime);
  Py_VISIT(traverse_module_state->__pyx_empty_tuple);
  Py_VISIT(traverse_module_state->__pyx_empty_bytes);
  Py_VISIT(traverse_module_state->__pyx_empty_unicode);
  #ifdef __Pyx_CyFunction_USED
  Py_VISIT(traverse_module_state->__pyx_CyFunctionType);
  #endif
  #ifdef __Pyx_FusedFunction_USED
  Py_VISIT(traverse_module_state->__pyx_FusedFunctionType);
  #endif
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_4type_type);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_4bool_bool);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cpython_7complex_complex);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_dtype);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_flatiter);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_broadcast);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_ndarray);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_generic);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_number);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_integer);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_signedinteger);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_unsignedinteger);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_inexact);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_floating);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_complexfloating);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_flexible);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_character);
  Py_VISIT(traverse_module_state->__pyx_ptype_5numpy_ufunc);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_5func1_Func1);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_5units_Units);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_5units_UnitStack);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_5units_UnitSystem);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_12solutionbase__SolutionBase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8kinetics_Kinetics);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8kinetics_InterfaceKinetics);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_6_utils_AnyMap);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_ReactionRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_ReactionRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_ArrheniusRateBase);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_ArrheniusRateBase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_FalloffRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_FalloffRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_CustomRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_CustomRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_ExtensibleRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_ExtensibleRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_ExtensibleRateData);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_ExtensibleRateData);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_InterfaceRateBase);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_InterfaceRateBase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_StickRateBase);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_StickRateBase);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_ThirdBody);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_ThirdBody);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_Reaction);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_Reaction);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_Arrhenius);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_Arrhenius);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_ArrheniusRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_ArrheniusRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_BlowersMaselRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_BlowersMaselRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_TwoTempPlasmaRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_LindemannRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_LindemannRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_TroeRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_TroeRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_SriRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_SriRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_TsangRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_TsangRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_PlogRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_PlogRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_ChebyshevRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_ChebyshevRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_InterfaceArrheniusRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_StickingArrheniusRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_StickingArrheniusRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_StickingBlowersMaselRate);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_ThreeBodyReaction);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_ThreeBodyReaction);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_FalloffReaction);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_FalloffReaction);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_ChemicallyActivatedReaction);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction_CustomReaction);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction_CustomReaction);
  Py_VISIT(traverse_module_state->__pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap);
  Py_VISIT(traverse_module_state->__pyx_type_7cantera_8reaction___pyx_scope_struct__wrap);
  Py_VISIT(traverse_module_state->__pyx_kp_u_0x);
  Py_VISIT(traverse_module_state->__pyx_n_s_A);
  Py_VISIT(traverse_module_state->__pyx_n_u_A);
  Py_VISIT(traverse_module_state->__pyx_n_s_AnyMap);
  Py_VISIT(traverse_module_state->__pyx_n_s_Arrhenius);
  Py_VISIT(traverse_module_state->__pyx_n_u_Arrhenius);
  Py_VISIT(traverse_module_state->__pyx_n_s_ArrheniusRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_ArrheniusRateBase);
  Py_VISIT(traverse_module_state->__pyx_n_s_ArrheniusRateBase___reduce_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_ArrheniusRateBase___setstate_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_ArrheniusRateBase__cinit);
  Py_VISIT(traverse_module_state->__pyx_n_s_ArrheniusRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ArrheniusRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ArrheniusRate__from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_ArrheniusRate__from_parameters);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Arrhenius_A_g_b_g_E_g);
  Py_VISIT(traverse_module_state->__pyx_n_s_Arrhenius___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Arrhenius___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Base_class);
  Py_VISIT(traverse_module_state->__pyx_n_s_BlowersMaselRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_BlowersMaselRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_BlowersMaselRate___setstate_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_BlowersMaselRate__from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_BlowersMaselRate__from_parameter);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Blowers_Masel);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Cannot_convert_input_with_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_CanteraError);
  Py_VISIT(traverse_module_state->__pyx_n_u_Chebyshev);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChebyshevRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChebyshevRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChebyshevRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChemicallyActivatedReaction);
  Py_VISIT(traverse_module_state->__pyx_kp_u_ChemicallyActivatedReaction_Clas);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChemicallyActivatedReaction___re);
  Py_VISIT(traverse_module_state->__pyx_n_s_ChemicallyActivatedReaction___se);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Class_method_from_dict_was_invok);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Class_method_from_yaml_was_invok);
  Py_VISIT(traverse_module_state->__pyx_n_s_CustomRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_CustomRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_CustomRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_CustomRate_set_rate_function);
  Py_VISIT(traverse_module_state->__pyx_n_s_CustomReaction);
  Py_VISIT(traverse_module_state->__pyx_kp_u_CustomReaction_Class_to_be_remov);
  Py_VISIT(traverse_module_state->__pyx_n_s_CustomReaction___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_CustomReaction___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_DeprecationWarning);
  Py_VISIT(traverse_module_state->__pyx_n_s_E);
  Py_VISIT(traverse_module_state->__pyx_n_s_Ea);
  Py_VISIT(traverse_module_state->__pyx_n_s_Ea0);
  Py_VISIT(traverse_module_state->__pyx_n_u_Ea0);
  Py_VISIT(traverse_module_state->__pyx_n_s_Ea_electron);
  Py_VISIT(traverse_module_state->__pyx_n_s_Ea_gas);
  Py_VISIT(traverse_module_state->__pyx_n_u_Ea_gas);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRateData);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRateData___reduce_cyth);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRateData___setstate_cy);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRateData_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRate_eval);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRate_get_parameters);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRate_set_parameters);
  Py_VISIT(traverse_module_state->__pyx_n_s_ExtensibleRate_validate);
  Py_VISIT(traverse_module_state->__pyx_n_u_F);
  Py_VISIT(traverse_module_state->__pyx_n_s_FalloffRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_FalloffRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_FalloffRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_FalloffRate_falloff_function);
  Py_VISIT(traverse_module_state->__pyx_n_s_FalloffReaction);
  Py_VISIT(traverse_module_state->__pyx_kp_u_FalloffReaction_Class_to_be_remo);
  Py_VISIT(traverse_module_state->__pyx_n_s_FalloffReaction___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_FalloffReaction___setstate_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_ImportError);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Incompatible_checksums_0x_x_vs_0);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceArrheniusRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceArrheniusRate___reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceArrheniusRate___setstat);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceArrheniusRate__from_dic);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceArrheniusRate__from_par);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceBlowersMaselRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceBlowersMaselRate___redu);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceBlowersMaselRate___sets);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceBlowersMaselRate__from);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceBlowersMaselRate__from_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceRateBase);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceRateBase___reduce_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceRateBase___setstate_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_InterfaceRateBase_set_species);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Internal_Error_Delegator_does_no);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Invalid_input_parameters);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Invalid_parameter_input_data);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Invalid_parameter_rates);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Invalid_parameters);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Invalid_parameters_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Invalid_rate_definition_with_typ);
  Py_VISIT(traverse_module_state->__pyx_n_u_Lindemann);
  Py_VISIT(traverse_module_state->__pyx_n_s_LindemannRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_LindemannRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_LindemannRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_LindemannRate__from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_u_M);
  Py_VISIT(traverse_module_state->__pyx_n_s_MemoryError);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Missing_reactant_and_or_product);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Missing_reaction_rate_informatio);
  Py_VISIT(traverse_module_state->__pyx_n_s_None);
  Py_VISIT(traverse_module_state->__pyx_n_s_NotImplementedError);
  Py_VISIT(traverse_module_state->__pyx_n_s_PickleError);
  Py_VISIT(traverse_module_state->__pyx_n_s_PlogRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_PlogRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_PlogRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction);
  Py_VISIT(traverse_module_state->__pyx_n_s_ReactionRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_ReactionRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ReactionRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ReactionRate_from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_ReactionRate_from_yaml);
  Py_VISIT(traverse_module_state->__pyx_n_s_ReactionRate_wrap_locals_registe);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Reaction_Argument_efficiencies_i);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Reaction_Parameter_kinetics_is_n);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction_clear_user_data);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Reaction_default_efficiency_Prop);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Reaction_does_not_involve_third);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Reaction_efficiencies_Property_i);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction_efficiency);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Reaction_efficiency_Method_is_de);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction_from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction_from_yaml);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction_list_from_file);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction_list_from_yaml);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Reaction_products_setter_is_dep);
  Py_VISIT(traverse_module_state->__pyx_kp_u_Reaction_reactants_setter_is_de);
  Py_VISIT(traverse_module_state->__pyx_n_s_Reaction_update_user_data);
  Py_VISIT(traverse_module_state->__pyx_n_u_SRI);
  Py_VISIT(traverse_module_state->__pyx_kp_s_Solution);
  Py_VISIT(traverse_module_state->__pyx_n_s_SriRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_SriRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_SriRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_SriRate__from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickRateBase);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickRateBase___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickRateBase___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingArrheniusRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingArrheniusRate___reduce_c);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingArrheniusRate___setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingArrheniusRate__from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingArrheniusRate__from_para);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingBlowersMaselRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingBlowersMaselRate___reduc);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingBlowersMaselRate___setst);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingBlowersMaselRate__from_d);
  Py_VISIT(traverse_module_state->__pyx_n_s_StickingBlowersMaselRate__from_p);
  Py_VISIT(traverse_module_state->__pyx_n_s_T);
  Py_VISIT(traverse_module_state->__pyx_n_s_ThirdBody);
  Py_VISIT(traverse_module_state->__pyx_n_s_ThirdBody___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ThirdBody___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_ThirdBody_efficiency);
  Py_VISIT(traverse_module_state->__pyx_n_s_ThreeBodyReaction);
  Py_VISIT(traverse_module_state->__pyx_kp_u_ThreeBodyReaction_Class_to_be_re);
  Py_VISIT(traverse_module_state->__pyx_n_s_ThreeBodyReaction___reduce_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_ThreeBodyReaction___setstate_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_u_Troe);
  Py_VISIT(traverse_module_state->__pyx_n_s_TroeRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_TroeRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_TroeRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_TroeRate__from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_u_Tsang);
  Py_VISIT(traverse_module_state->__pyx_n_s_TsangRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_TsangRate___reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_TsangRate___setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_TsangRate__from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_TwoTempPlasmaRate);
  Py_VISIT(traverse_module_state->__pyx_n_s_TwoTempPlasmaRate___reduce_cytho);
  Py_VISIT(traverse_module_state->__pyx_n_s_TwoTempPlasmaRate___setstate_cyt);
  Py_VISIT(traverse_module_state->__pyx_n_s_TwoTempPlasmaRate__from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_TwoTempPlasmaRate__from_paramete);
  Py_VISIT(traverse_module_state->__pyx_n_s_TypeError);
  Py_VISIT(traverse_module_state->__pyx_n_s_UnitStack);
  Py_VISIT(traverse_module_state->__pyx_n_s_ValueError);
  Py_VISIT(traverse_module_state->__pyx_kp_u__10);
  Py_VISIT(traverse_module_state->__pyx_n_s__159);
  Py_VISIT(traverse_module_state->__pyx_kp_u__20);
  Py_VISIT(traverse_module_state->__pyx_kp_u__3);
  Py_VISIT(traverse_module_state->__pyx_kp_u__32);
  Py_VISIT(traverse_module_state->__pyx_n_s__33);
  Py_VISIT(traverse_module_state->__pyx_kp_u__4);
  Py_VISIT(traverse_module_state->__pyx_kp_u__7);
  Py_VISIT(traverse_module_state->__pyx_kp_u__9);
  Py_VISIT(traverse_module_state->__pyx_n_s_activation_energy);
  Py_VISIT(traverse_module_state->__pyx_n_u_after);
  Py_VISIT(traverse_module_state->__pyx_n_s_all);
  Py_VISIT(traverse_module_state->__pyx_n_s_any_map);
  Py_VISIT(traverse_module_state->__pyx_n_s_asyncio_coroutines);
  Py_VISIT(traverse_module_state->__pyx_kp_u_at);
  Py_VISIT(traverse_module_state->__pyx_n_s_b);
  Py_VISIT(traverse_module_state->__pyx_n_u_b);
  Py_VISIT(traverse_module_state->__pyx_kp_u_but_should_be_called_from_base);
  Py_VISIT(traverse_module_state->__pyx_n_s_c);
  Py_VISIT(traverse_module_state->__pyx_kp_u_cannot_be_instantiated_by_itsel);
  Py_VISIT(traverse_module_state->__pyx_kp_u_cannot_be_instantiated_by_itsel_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_cantera_reaction);
  Py_VISIT(traverse_module_state->__pyx_kp_s_cantera_reaction_pyx);
  Py_VISIT(traverse_module_state->__pyx_n_s_cinit);
  Py_VISIT(traverse_module_state->__pyx_n_s_class);
  Py_VISIT(traverse_module_state->__pyx_n_s_clear_user_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_cline_in_traceback);
  Py_VISIT(traverse_module_state->__pyx_n_s_cls);
  Py_VISIT(traverse_module_state->__pyx_n_s_collider);
  Py_VISIT(traverse_module_state->__pyx_n_s_conc3b);
  Py_VISIT(traverse_module_state->__pyx_n_s_concm);
  Py_VISIT(traverse_module_state->__pyx_n_s_coverages);
  Py_VISIT(traverse_module_state->__pyx_kp_u_custom_rate_function);
  Py_VISIT(traverse_module_state->__pyx_n_s_cxx_rate);
  Py_VISIT(traverse_module_state->__pyx_n_s_cxx_reaction);
  Py_VISIT(traverse_module_state->__pyx_n_s_cxx_reactions);
  Py_VISIT(traverse_module_state->__pyx_n_s_cxxvector);
  Py_VISIT(traverse_module_state->__pyx_n_s_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_default_efficiency);
  Py_VISIT(traverse_module_state->__pyx_n_s_delegatable_methods);
  Py_VISIT(traverse_module_state->__pyx_n_s_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_dict_2);
  Py_VISIT(traverse_module_state->__pyx_kp_u_disable);
  Py_VISIT(traverse_module_state->__pyx_n_s_double);
  Py_VISIT(traverse_module_state->__pyx_kp_u_double_void);
  Py_VISIT(traverse_module_state->__pyx_n_s_efficiencies);
  Py_VISIT(traverse_module_state->__pyx_n_s_efficiency);
  Py_VISIT(traverse_module_state->__pyx_n_s_elec_temp);
  Py_VISIT(traverse_module_state->__pyx_kp_u_enable);
  Py_VISIT(traverse_module_state->__pyx_n_s_enumerate);
  Py_VISIT(traverse_module_state->__pyx_n_s_equation);
  Py_VISIT(traverse_module_state->__pyx_kp_u_eval);
  Py_VISIT(traverse_module_state->__pyx_n_u_evalFromStruct);
  Py_VISIT(traverse_module_state->__pyx_n_s_eval_2);
  Py_VISIT(traverse_module_state->__pyx_n_u_eval_2);
  Py_VISIT(traverse_module_state->__pyx_n_u_extensible);
  Py_VISIT(traverse_module_state->__pyx_n_s_falloff_coeffs);
  Py_VISIT(traverse_module_state->__pyx_n_s_falloff_function);
  Py_VISIT(traverse_module_state->__pyx_n_s_filename);
  Py_VISIT(traverse_module_state->__pyx_n_s_float);
  Py_VISIT(traverse_module_state->__pyx_n_s_format);
  Py_VISIT(traverse_module_state->__pyx_n_s_from_dict);
  Py_VISIT(traverse_module_state->__pyx_n_s_from_dict_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_from_parameters);
  Py_VISIT(traverse_module_state->__pyx_n_s_from_yaml);
  Py_VISIT(traverse_module_state->__pyx_n_s_fromiter);
  Py_VISIT(traverse_module_state->__pyx_kp_u_gc);
  Py_VISIT(traverse_module_state->__pyx_n_s_get);
  Py_VISIT(traverse_module_state->__pyx_n_u_getParameters);
  Py_VISIT(traverse_module_state->__pyx_kp_u_get_parameters);
  Py_VISIT(traverse_module_state->__pyx_n_s_get_parameters_2);
  Py_VISIT(traverse_module_state->__pyx_n_u_get_parameters_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_getstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_high);
  Py_VISIT(traverse_module_state->__pyx_n_s_high_rate);
  Py_VISIT(traverse_module_state->__pyx_n_s_hyphenize);
  Py_VISIT(traverse_module_state->__pyx_n_s_id);
  Py_VISIT(traverse_module_state->__pyx_n_s_import);
  Py_VISIT(traverse_module_state->__pyx_n_s_init);
  Py_VISIT(traverse_module_state->__pyx_n_s_initializing);
  Py_VISIT(traverse_module_state->__pyx_n_s_input_data);
  Py_VISIT(traverse_module_state->__pyx_kp_u_interface_Arrhenius);
  Py_VISIT(traverse_module_state->__pyx_kp_u_interface_Blowers_Masel);
  Py_VISIT(traverse_module_state->__pyx_n_s_is_coroutine);
  Py_VISIT(traverse_module_state->__pyx_kp_u_isenabled);
  Py_VISIT(traverse_module_state->__pyx_n_u_items);
  Py_VISIT(traverse_module_state->__pyx_n_s_k);
  Py_VISIT(traverse_module_state->__pyx_n_s_kinetics);
  Py_VISIT(traverse_module_state->__pyx_n_s_kwargs);
  Py_VISIT(traverse_module_state->__pyx_n_s_list_from_file);
  Py_VISIT(traverse_module_state->__pyx_n_s_list_from_yaml);
  Py_VISIT(traverse_module_state->__pyx_n_s_log);
  Py_VISIT(traverse_module_state->__pyx_n_s_low);
  Py_VISIT(traverse_module_state->__pyx_n_s_low_rate);
  Py_VISIT(traverse_module_state->__pyx_n_s_main);
  Py_VISIT(traverse_module_state->__pyx_n_s_name);
  Py_VISIT(traverse_module_state->__pyx_n_s_name_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_new);
  Py_VISIT(traverse_module_state->__pyx_kp_s_no_default___reduce___due_to_non);
  Py_VISIT(traverse_module_state->__pyx_n_s_np);
  Py_VISIT(traverse_module_state->__pyx_n_s_numpy);
  Py_VISIT(traverse_module_state->__pyx_kp_u_numpy_core_multiarray_failed_to);
  Py_VISIT(traverse_module_state->__pyx_kp_u_numpy_core_umath_failed_to_impor);
  Py_VISIT(traverse_module_state->__pyx_kp_u_or);
  Py_VISIT(traverse_module_state->__pyx_n_s_order);
  Py_VISIT(traverse_module_state->__pyx_n_s_par_list);
  Py_VISIT(traverse_module_state->__pyx_n_s_par_string);
  Py_VISIT(traverse_module_state->__pyx_n_s_params);
  Py_VISIT(traverse_module_state->__pyx_n_s_pickle);
  Py_VISIT(traverse_module_state->__pyx_n_s_pre_exponential_factor);
  Py_VISIT(traverse_module_state->__pyx_n_s_pressure);
  Py_VISIT(traverse_module_state->__pyx_kp_u_pressure_dependent_Arrhenius);
  Py_VISIT(traverse_module_state->__pyx_n_s_pressure_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_products);
  Py_VISIT(traverse_module_state->__pyx_n_u_python);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_PickleError);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_checksum);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_result);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_unpickle_ExtensibleRateDat);
  Py_VISIT(traverse_module_state->__pyx_n_s_pyx_vtable);
  Py_VISIT(traverse_module_state->__pyx_n_s_r);
  Py_VISIT(traverse_module_state->__pyx_n_s_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_rate);
  Py_VISIT(traverse_module_state->__pyx_n_s_rate_coeff_units);
  Py_VISIT(traverse_module_state->__pyx_kp_u_rate_constant);
  Py_VISIT(traverse_module_state->__pyx_n_s_rate_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_rates);
  Py_VISIT(traverse_module_state->__pyx_n_s_reactants);
  Py_VISIT(traverse_module_state->__pyx_n_s_reaction_rate_type);
  Py_VISIT(traverse_module_state->__pyx_n_u_reaction_rate_type);
  Py_VISIT(traverse_module_state->__pyx_n_s_reaction_type);
  Py_VISIT(traverse_module_state->__pyx_n_u_reactions);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_reduce_ex);
  Py_VISIT(traverse_module_state->__pyx_n_s_register_subclasses);
  Py_VISIT(traverse_module_state->__pyx_n_u_replace);
  Py_VISIT(traverse_module_state->__pyx_n_s_reshape);
  Py_VISIT(traverse_module_state->__pyx_n_s_return);
  Py_VISIT(traverse_module_state->__pyx_n_s_root);
  Py_VISIT(traverse_module_state->__pyx_n_s_s);
  Py_VISIT(traverse_module_state->__pyx_n_s_section);
  Py_VISIT(traverse_module_state->__pyx_n_s_self);
  Py_VISIT(traverse_module_state->__pyx_kp_s_self__rate_self_base_self_interf);
  Py_VISIT(traverse_module_state->__pyx_kp_s_self__rate_self_base_self_interf_2);
  Py_VISIT(traverse_module_state->__pyx_kp_s_self__rate_self_base_self_rate_c);
  Py_VISIT(traverse_module_state->__pyx_kp_s_self__rate_self_rate_cannot_be_c);
  Py_VISIT(traverse_module_state->__pyx_n_u_setParameters);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_parameters);
  Py_VISIT(traverse_module_state->__pyx_n_u_set_parameters);
  Py_VISIT(traverse_module_state->__pyx_kp_u_set_parameters_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_rate_function);
  Py_VISIT(traverse_module_state->__pyx_n_s_set_species);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_setstate_cython);
  Py_VISIT(traverse_module_state->__pyx_n_s_soln);
  Py_VISIT(traverse_module_state->__pyx_n_s_spec);
  Py_VISIT(traverse_module_state->__pyx_n_s_species);
  Py_VISIT(traverse_module_state->__pyx_n_s_state);
  Py_VISIT(traverse_module_state->__pyx_n_s_staticmethod);
  Py_VISIT(traverse_module_state->__pyx_kp_u_sticking_Arrhenius);
  Py_VISIT(traverse_module_state->__pyx_kp_u_sticking_Blowers_Masel);
  Py_VISIT(traverse_module_state->__pyx_n_s_str);
  Py_VISIT(traverse_module_state->__pyx_kp_s_stringsource);
  Py_VISIT(traverse_module_state->__pyx_n_s_subclasses);
  Py_VISIT(traverse_module_state->__pyx_n_s_temperature);
  Py_VISIT(traverse_module_state->__pyx_n_s_temperature_exponent);
  Py_VISIT(traverse_module_state->__pyx_n_s_temperature_range);
  Py_VISIT(traverse_module_state->__pyx_n_s_test);
  Py_VISIT(traverse_module_state->__pyx_n_s_text);
  Py_VISIT(traverse_module_state->__pyx_n_s_third_body);
  Py_VISIT(traverse_module_state->__pyx_kp_u_to_rate_expression);
  Py_VISIT(traverse_module_state->__pyx_n_s_tolist);
  Py_VISIT(traverse_module_state->__pyx_kp_u_two_temperature_plasma);
  Py_VISIT(traverse_module_state->__pyx_n_u_type);
  Py_VISIT(traverse_module_state->__pyx_kp_u_update);
  Py_VISIT(traverse_module_state->__pyx_n_s_update_2);
  Py_VISIT(traverse_module_state->__pyx_n_u_update_2);
  Py_VISIT(traverse_module_state->__pyx_n_s_update_user_data);
  Py_VISIT(traverse_module_state->__pyx_n_s_use_setstate);
  Py_VISIT(traverse_module_state->__pyx_n_s_utils);
  Py_VISIT(traverse_module_state->__pyx_n_s_validate);
  Py_VISIT(traverse_module_state->__pyx_n_u_validate);
  Py_VISIT(traverse_module_state->__pyx_kp_u_void_AnyMap);
  Py_VISIT(traverse_module_state->__pyx_kp_u_void_AnyMap_UnitStack);
  Py_VISIT(traverse_module_state->__pyx_kp_u_void_string_void);
  Py_VISIT(traverse_module_state->__pyx_n_s_w);
  Py_VISIT(traverse_module_state->__pyx_n_s_warn);
  Py_VISIT(traverse_module_state->__pyx_n_s_warnings);
  Py_VISIT(traverse_module_state->__pyx_float_0_0);
  Py_VISIT(traverse_module_state->__pyx_int_0);
  Py_VISIT(traverse_module_state->__pyx_int_130344318);
  Py_VISIT(traverse_module_state->__pyx_int_171877079);
  Py_VISIT(traverse_module_state->__pyx_int_191245125);
  Py_VISIT(traverse_module_state->__pyx_tuple_);
  Py_VISIT(traverse_module_state->__pyx_tuple__2);
  Py_VISIT(traverse_module_state->__pyx_tuple__5);
  Py_VISIT(traverse_module_state->__pyx_tuple__8);
  Py_VISIT(traverse_module_state->__pyx_tuple__11);
  Py_VISIT(traverse_module_state->__pyx_tuple__12);
  Py_VISIT(traverse_module_state->__pyx_tuple__13);
  Py_VISIT(traverse_module_state->__pyx_tuple__14);
  Py_VISIT(traverse_module_state->__pyx_tuple__15);
  Py_VISIT(traverse_module_state->__pyx_tuple__16);
  Py_VISIT(traverse_module_state->__pyx_tuple__17);
  Py_VISIT(traverse_module_state->__pyx_tuple__18);
  Py_VISIT(traverse_module_state->__pyx_tuple__19);
  Py_VISIT(traverse_module_state->__pyx_tuple__21);
  Py_VISIT(traverse_module_state->__pyx_tuple__22);
  Py_VISIT(traverse_module_state->__pyx_tuple__23);
  Py_VISIT(traverse_module_state->__pyx_tuple__24);
  Py_VISIT(traverse_module_state->__pyx_tuple__25);
  Py_VISIT(traverse_module_state->__pyx_tuple__26);
  Py_VISIT(traverse_module_state->__pyx_tuple__27);
  Py_VISIT(traverse_module_state->__pyx_tuple__28);
  Py_VISIT(traverse_module_state->__pyx_tuple__29);
  Py_VISIT(traverse_module_state->__pyx_tuple__30);
  Py_VISIT(traverse_module_state->__pyx_tuple__31);
  Py_VISIT(traverse_module_state->__pyx_tuple__34);
  Py_VISIT(traverse_module_state->__pyx_tuple__36);
  Py_VISIT(traverse_module_state->__pyx_tuple__37);
  Py_VISIT(traverse_module_state->__pyx_tuple__39);
  Py_VISIT(traverse_module_state->__pyx_tuple__41);
  Py_VISIT(traverse_module_state->__pyx_tuple__43);
  Py_VISIT(traverse_module_state->__pyx_tuple__47);
  Py_VISIT(traverse_module_state->__pyx_tuple__49);
  Py_VISIT(traverse_module_state->__pyx_tuple__54);
  Py_VISIT(traverse_module_state->__pyx_tuple__59);
  Py_VISIT(traverse_module_state->__pyx_tuple__63);
  Py_VISIT(traverse_module_state->__pyx_tuple__83);
  Py_VISIT(traverse_module_state->__pyx_tuple__87);
  Py_VISIT(traverse_module_state->__pyx_tuple__88);
  Py_VISIT(traverse_module_state->__pyx_tuple__89);
  Py_VISIT(traverse_module_state->__pyx_tuple__90);
  Py_VISIT(traverse_module_state->__pyx_tuple__91);
  Py_VISIT(traverse_module_state->__pyx_tuple__93);
  Py_VISIT(traverse_module_state->__pyx_tuple__95);
  Py_VISIT(traverse_module_state->__pyx_tuple__97);
  Py_VISIT(traverse_module_state->__pyx_codeobj__6);
  Py_VISIT(traverse_module_state->__pyx_tuple__101);
  Py_VISIT(traverse_module_state->__pyx_tuple__102);
  Py_VISIT(traverse_module_state->__pyx_tuple__104);
  Py_VISIT(traverse_module_state->__pyx_tuple__107);
  Py_VISIT(traverse_module_state->__pyx_tuple__129);
  Py_VISIT(traverse_module_state->__pyx_tuple__133);
  Py_VISIT(traverse_module_state->__pyx_tuple__135);
  Py_VISIT(traverse_module_state->__pyx_tuple__137);
  Py_VISIT(traverse_module_state->__pyx_tuple__139);
  Py_VISIT(traverse_module_state->__pyx_tuple__140);
  Py_VISIT(traverse_module_state->__pyx_tuple__157);
  Py_VISIT(traverse_module_state->__pyx_codeobj__35);
  Py_VISIT(traverse_module_state->__pyx_codeobj__38);
  Py_VISIT(traverse_module_state->__pyx_codeobj__40);
  Py_VISIT(traverse_module_state->__pyx_codeobj__42);
  Py_VISIT(traverse_module_state->__pyx_codeobj__44);
  Py_VISIT(traverse_module_state->__pyx_codeobj__45);
  Py_VISIT(traverse_module_state->__pyx_codeobj__46);
  Py_VISIT(traverse_module_state->__pyx_codeobj__48);
  Py_VISIT(traverse_module_state->__pyx_codeobj__50);
  Py_VISIT(traverse_module_state->__pyx_codeobj__51);
  Py_VISIT(traverse_module_state->__pyx_codeobj__52);
  Py_VISIT(traverse_module_state->__pyx_codeobj__53);
  Py_VISIT(traverse_module_state->__pyx_codeobj__55);
  Py_VISIT(traverse_module_state->__pyx_codeobj__56);
  Py_VISIT(traverse_module_state->__pyx_codeobj__57);
  Py_VISIT(traverse_module_state->__pyx_codeobj__58);
  Py_VISIT(traverse_module_state->__pyx_codeobj__60);
  Py_VISIT(traverse_module_state->__pyx_codeobj__61);
  Py_VISIT(traverse_module_state->__pyx_codeobj__62);
  Py_VISIT(traverse_module_state->__pyx_codeobj__64);
  Py_VISIT(traverse_module_state->__pyx_codeobj__65);
  Py_VISIT(traverse_module_state->__pyx_codeobj__66);
  Py_VISIT(traverse_module_state->__pyx_codeobj__67);
  Py_VISIT(traverse_module_state->__pyx_codeobj__68);
  Py_VISIT(traverse_module_state->__pyx_codeobj__69);
  Py_VISIT(traverse_module_state->__pyx_codeobj__70);
  Py_VISIT(traverse_module_state->__pyx_codeobj__71);
  Py_VISIT(traverse_module_state->__pyx_codeobj__72);
  Py_VISIT(traverse_module_state->__pyx_codeobj__73);
  Py_VISIT(traverse_module_state->__pyx_codeobj__74);
  Py_VISIT(traverse_module_state->__pyx_codeobj__75);
  Py_VISIT(traverse_module_state->__pyx_codeobj__76);
  Py_VISIT(traverse_module_state->__pyx_codeobj__77);
  Py_VISIT(traverse_module_state->__pyx_codeobj__78);
  Py_VISIT(traverse_module_state->__pyx_codeobj__79);
  Py_VISIT(traverse_module_state->__pyx_codeobj__80);
  Py_VISIT(traverse_module_state->__pyx_codeobj__81);
  Py_VISIT(traverse_module_state->__pyx_codeobj__82);
  Py_VISIT(traverse_module_state->__pyx_codeobj__84);
  Py_VISIT(traverse_module_state->__pyx_codeobj__85);
  Py_VISIT(traverse_module_state->__pyx_codeobj__86);
  Py_VISIT(traverse_module_state->__pyx_codeobj__92);
  Py_VISIT(traverse_module_state->__pyx_codeobj__94);
  Py_VISIT(traverse_module_state->__pyx_codeobj__96);
  Py_VISIT(traverse_module_state->__pyx_codeobj__98);
  Py_VISIT(traverse_module_state->__pyx_codeobj__99);
  Py_VISIT(traverse_module_state->__pyx_codeobj__100);
  Py_VISIT(traverse_module_state->__pyx_codeobj__103);
  Py_VISIT(traverse_module_state->__pyx_codeobj__105);
  Py_VISIT(traverse_module_state->__pyx_codeobj__106);
  Py_VISIT(traverse_module_state->__pyx_codeobj__108);
  Py_VISIT(traverse_module_state->__pyx_codeobj__109);
  Py_VISIT(traverse_module_state->__pyx_codeobj__110);
  Py_VISIT(traverse_module_state->__pyx_codeobj__111);
  Py_VISIT(traverse_module_state->__pyx_codeobj__112);
  Py_VISIT(traverse_module_state->__pyx_codeobj__113);
  Py_VISIT(traverse_module_state->__pyx_codeobj__114);
  Py_VISIT(traverse_module_state->__pyx_codeobj__115);
  Py_VISIT(traverse_module_state->__pyx_codeobj__116);
  Py_VISIT(traverse_module_state->__pyx_codeobj__117);
  Py_VISIT(traverse_module_state->__pyx_codeobj__118);
  Py_VISIT(traverse_module_state->__pyx_codeobj__119);
  Py_VISIT(traverse_module_state->__pyx_codeobj__120);
  Py_VISIT(traverse_module_state->__pyx_codeobj__121);
  Py_VISIT(traverse_module_state->__pyx_codeobj__122);
  Py_VISIT(traverse_module_state->__pyx_codeobj__123);
  Py_VISIT(traverse_module_state->__pyx_codeobj__124);
  Py_VISIT(traverse_module_state->__pyx_codeobj__125);
  Py_VISIT(traverse_module_state->__pyx_codeobj__126);
  Py_VISIT(traverse_module_state->__pyx_codeobj__127);
  Py_VISIT(traverse_module_state->__pyx_codeobj__128);
  Py_VISIT(traverse_module_state->__pyx_codeobj__130);
  Py_VISIT(traverse_module_state->__pyx_codeobj__131);
  Py_VISIT(traverse_module_state->__pyx_codeobj__132);
  Py_VISIT(traverse_module_state->__pyx_codeobj__134);
  Py_VISIT(traverse_module_state->__pyx_codeobj__136);
  Py_VISIT(traverse_module_state->__pyx_codeobj__138);
  Py_VISIT(traverse_module_state->__pyx_codeobj__141);
  Py_VISIT(traverse_module_state->__pyx_codeobj__142);
  Py_VISIT(traverse_module_state->__pyx_codeobj__143);
  Py_VISIT(traverse_module_state->__pyx_codeobj__144);
  Py_VISIT(traverse_module_state->__pyx_codeobj__145);
  Py_VISIT(traverse_module_state->__pyx_codeobj__146);
  Py_VISIT(traverse_module_state->__pyx_codeobj__147);
  Py_VISIT(traverse_module_state->__pyx_codeobj__148);
  Py_VISIT(traverse_module_state->__pyx_codeobj__149);
  Py_VISIT(traverse_module_state->__pyx_codeobj__150);
  Py_VISIT(traverse_module_state->__pyx_codeobj__151);
  Py_VISIT(traverse_module_state->__pyx_codeobj__152);
  Py_VISIT(traverse_module_state->__pyx_codeobj__153);
  Py_VISIT(traverse_module_state->__pyx_codeobj__154);
  Py_VISIT(traverse_module_state->__pyx_codeobj__155);
  Py_VISIT(traverse_module_state->__pyx_codeobj__156);
  Py_VISIT(traverse_module_state->__pyx_codeobj__158);
  return 0;
}
#endif
/* #### Code section: module_state_defines ### */
#define __pyx_d __pyx_mstate_global->__pyx_d
#define __pyx_b __pyx_mstate_global->__pyx_b
#define __pyx_cython_runtime __pyx_mstate_global->__pyx_cython_runtime
#define __pyx_empty_tuple __pyx_mstate_global->__pyx_empty_tuple
#define __pyx_empty_bytes __pyx_mstate_global->__pyx_empty_bytes
#define __pyx_empty_unicode __pyx_mstate_global->__pyx_empty_unicode
#ifdef __Pyx_CyFunction_USED
#define __pyx_CyFunctionType __pyx_mstate_global->__pyx_CyFunctionType
#endif
#ifdef __Pyx_FusedFunction_USED
#define __pyx_FusedFunctionType __pyx_mstate_global->__pyx_FusedFunctionType
#endif
#ifdef __Pyx_Generator_USED
#define __pyx_GeneratorType __pyx_mstate_global->__pyx_GeneratorType
#endif
#ifdef __Pyx_IterableCoroutine_USED
#define __pyx_IterableCoroutineType __pyx_mstate_global->__pyx_IterableCoroutineType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineAwaitType __pyx_mstate_global->__pyx_CoroutineAwaitType
#endif
#ifdef __Pyx_Coroutine_USED
#define __pyx_CoroutineType __pyx_mstate_global->__pyx_CoroutineType
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_4type_type __pyx_mstate_global->__pyx_ptype_7cpython_4type_type
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_4bool_bool __pyx_mstate_global->__pyx_ptype_7cpython_4bool_bool
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cpython_7complex_complex __pyx_mstate_global->__pyx_ptype_7cpython_7complex_complex
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_5numpy_dtype __pyx_mstate_global->__pyx_ptype_5numpy_dtype
#define __pyx_ptype_5numpy_flatiter __pyx_mstate_global->__pyx_ptype_5numpy_flatiter
#define __pyx_ptype_5numpy_broadcast __pyx_mstate_global->__pyx_ptype_5numpy_broadcast
#define __pyx_ptype_5numpy_ndarray __pyx_mstate_global->__pyx_ptype_5numpy_ndarray
#define __pyx_ptype_5numpy_generic __pyx_mstate_global->__pyx_ptype_5numpy_generic
#define __pyx_ptype_5numpy_number __pyx_mstate_global->__pyx_ptype_5numpy_number
#define __pyx_ptype_5numpy_integer __pyx_mstate_global->__pyx_ptype_5numpy_integer
#define __pyx_ptype_5numpy_signedinteger __pyx_mstate_global->__pyx_ptype_5numpy_signedinteger
#define __pyx_ptype_5numpy_unsignedinteger __pyx_mstate_global->__pyx_ptype_5numpy_unsignedinteger
#define __pyx_ptype_5numpy_inexact __pyx_mstate_global->__pyx_ptype_5numpy_inexact
#define __pyx_ptype_5numpy_floating __pyx_mstate_global->__pyx_ptype_5numpy_floating
#define __pyx_ptype_5numpy_complexfloating __pyx_mstate_global->__pyx_ptype_5numpy_complexfloating
#define __pyx_ptype_5numpy_flexible __pyx_mstate_global->__pyx_ptype_5numpy_flexible
#define __pyx_ptype_5numpy_character __pyx_mstate_global->__pyx_ptype_5numpy_character
#define __pyx_ptype_5numpy_ufunc __pyx_mstate_global->__pyx_ptype_5numpy_ufunc
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_5func1_Func1 __pyx_mstate_global->__pyx_ptype_7cantera_5func1_Func1
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_5units_Units __pyx_mstate_global->__pyx_ptype_7cantera_5units_Units
#define __pyx_ptype_7cantera_5units_UnitStack __pyx_mstate_global->__pyx_ptype_7cantera_5units_UnitStack
#define __pyx_ptype_7cantera_5units_UnitSystem __pyx_mstate_global->__pyx_ptype_7cantera_5units_UnitSystem
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_12solutionbase__SolutionBase __pyx_mstate_global->__pyx_ptype_7cantera_12solutionbase__SolutionBase
#define __pyx_ptype_7cantera_12solutionbase_SolutionArrayBase __pyx_mstate_global->__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_8kinetics_Kinetics __pyx_mstate_global->__pyx_ptype_7cantera_8kinetics_Kinetics
#define __pyx_ptype_7cantera_8kinetics_InterfaceKinetics __pyx_mstate_global->__pyx_ptype_7cantera_8kinetics_InterfaceKinetics
#if CYTHON_USE_MODULE_STATE
#endif
#if CYTHON_USE_MODULE_STATE
#endif
#define __pyx_ptype_7cantera_6_utils_AnyMap __pyx_mstate_global->__pyx_ptype_7cantera_6_utils_AnyMap
#if CYTHON_USE_MODULE_STATE
#define __pyx_type_7cantera_8reaction_ReactionRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_ReactionRate
#define __pyx_type_7cantera_8reaction_ArrheniusRateBase __pyx_mstate_global->__pyx_type_7cantera_8reaction_ArrheniusRateBase
#define __pyx_type_7cantera_8reaction_FalloffRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_FalloffRate
#define __pyx_type_7cantera_8reaction_CustomRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_CustomRate
#define __pyx_type_7cantera_8reaction_ExtensibleRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_ExtensibleRate
#define __pyx_type_7cantera_8reaction_ExtensibleRateData __pyx_mstate_global->__pyx_type_7cantera_8reaction_ExtensibleRateData
#define __pyx_type_7cantera_8reaction_InterfaceRateBase __pyx_mstate_global->__pyx_type_7cantera_8reaction_InterfaceRateBase
#define __pyx_type_7cantera_8reaction_StickRateBase __pyx_mstate_global->__pyx_type_7cantera_8reaction_StickRateBase
#define __pyx_type_7cantera_8reaction_ThirdBody __pyx_mstate_global->__pyx_type_7cantera_8reaction_ThirdBody
#define __pyx_type_7cantera_8reaction_Reaction __pyx_mstate_global->__pyx_type_7cantera_8reaction_Reaction
#define __pyx_type_7cantera_8reaction_Arrhenius __pyx_mstate_global->__pyx_type_7cantera_8reaction_Arrhenius
#define __pyx_type_7cantera_8reaction_ArrheniusRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_ArrheniusRate
#define __pyx_type_7cantera_8reaction_BlowersMaselRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_BlowersMaselRate
#define __pyx_type_7cantera_8reaction_TwoTempPlasmaRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_TwoTempPlasmaRate
#define __pyx_type_7cantera_8reaction_LindemannRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_LindemannRate
#define __pyx_type_7cantera_8reaction_TroeRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_TroeRate
#define __pyx_type_7cantera_8reaction_SriRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_SriRate
#define __pyx_type_7cantera_8reaction_TsangRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_TsangRate
#define __pyx_type_7cantera_8reaction_PlogRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_PlogRate
#define __pyx_type_7cantera_8reaction_ChebyshevRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_ChebyshevRate
#define __pyx_type_7cantera_8reaction_InterfaceArrheniusRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_InterfaceArrheniusRate
#define __pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate
#define __pyx_type_7cantera_8reaction_StickingArrheniusRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_StickingArrheniusRate
#define __pyx_type_7cantera_8reaction_StickingBlowersMaselRate __pyx_mstate_global->__pyx_type_7cantera_8reaction_StickingBlowersMaselRate
#define __pyx_type_7cantera_8reaction_ThreeBodyReaction __pyx_mstate_global->__pyx_type_7cantera_8reaction_ThreeBodyReaction
#define __pyx_type_7cantera_8reaction_FalloffReaction __pyx_mstate_global->__pyx_type_7cantera_8reaction_FalloffReaction
#define __pyx_type_7cantera_8reaction_ChemicallyActivatedReaction __pyx_mstate_global->__pyx_type_7cantera_8reaction_ChemicallyActivatedReaction
#define __pyx_type_7cantera_8reaction_CustomReaction __pyx_mstate_global->__pyx_type_7cantera_8reaction_CustomReaction
#define __pyx_type_7cantera_8reaction___pyx_scope_struct__wrap __pyx_mstate_global->__pyx_type_7cantera_8reaction___pyx_scope_struct__wrap
#endif
#define __pyx_ptype_7cantera_8reaction_ReactionRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_ReactionRate
#define __pyx_ptype_7cantera_8reaction_ArrheniusRateBase __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_ArrheniusRateBase
#define __pyx_ptype_7cantera_8reaction_FalloffRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_FalloffRate
#define __pyx_ptype_7cantera_8reaction_CustomRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_CustomRate
#define __pyx_ptype_7cantera_8reaction_ExtensibleRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_ExtensibleRate
#define __pyx_ptype_7cantera_8reaction_ExtensibleRateData __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_ExtensibleRateData
#define __pyx_ptype_7cantera_8reaction_InterfaceRateBase __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_InterfaceRateBase
#define __pyx_ptype_7cantera_8reaction_StickRateBase __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_StickRateBase
#define __pyx_ptype_7cantera_8reaction_ThirdBody __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_ThirdBody
#define __pyx_ptype_7cantera_8reaction_Reaction __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_Reaction
#define __pyx_ptype_7cantera_8reaction_Arrhenius __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_Arrhenius
#define __pyx_ptype_7cantera_8reaction_ArrheniusRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_ArrheniusRate
#define __pyx_ptype_7cantera_8reaction_BlowersMaselRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_BlowersMaselRate
#define __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate
#define __pyx_ptype_7cantera_8reaction_LindemannRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_LindemannRate
#define __pyx_ptype_7cantera_8reaction_TroeRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_TroeRate
#define __pyx_ptype_7cantera_8reaction_SriRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_SriRate
#define __pyx_ptype_7cantera_8reaction_TsangRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_TsangRate
#define __pyx_ptype_7cantera_8reaction_PlogRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_PlogRate
#define __pyx_ptype_7cantera_8reaction_ChebyshevRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_ChebyshevRate
#define __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate
#define __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate
#define __pyx_ptype_7cantera_8reaction_StickingArrheniusRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_StickingArrheniusRate
#define __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate
#define __pyx_ptype_7cantera_8reaction_ThreeBodyReaction __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_ThreeBodyReaction
#define __pyx_ptype_7cantera_8reaction_FalloffReaction __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_FalloffReaction
#define __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction
#define __pyx_ptype_7cantera_8reaction_CustomReaction __pyx_mstate_global->__pyx_ptype_7cantera_8reaction_CustomReaction
#define __pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap __pyx_mstate_global->__pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap
#define __pyx_kp_u_0x __pyx_mstate_global->__pyx_kp_u_0x
#define __pyx_n_s_A __pyx_mstate_global->__pyx_n_s_A
#define __pyx_n_u_A __pyx_mstate_global->__pyx_n_u_A
#define __pyx_n_s_AnyMap __pyx_mstate_global->__pyx_n_s_AnyMap
#define __pyx_n_s_Arrhenius __pyx_mstate_global->__pyx_n_s_Arrhenius
#define __pyx_n_u_Arrhenius __pyx_mstate_global->__pyx_n_u_Arrhenius
#define __pyx_n_s_ArrheniusRate __pyx_mstate_global->__pyx_n_s_ArrheniusRate
#define __pyx_n_s_ArrheniusRateBase __pyx_mstate_global->__pyx_n_s_ArrheniusRateBase
#define __pyx_n_s_ArrheniusRateBase___reduce_cytho __pyx_mstate_global->__pyx_n_s_ArrheniusRateBase___reduce_cytho
#define __pyx_n_s_ArrheniusRateBase___setstate_cyt __pyx_mstate_global->__pyx_n_s_ArrheniusRateBase___setstate_cyt
#define __pyx_n_s_ArrheniusRateBase__cinit __pyx_mstate_global->__pyx_n_s_ArrheniusRateBase__cinit
#define __pyx_n_s_ArrheniusRate___reduce_cython __pyx_mstate_global->__pyx_n_s_ArrheniusRate___reduce_cython
#define __pyx_n_s_ArrheniusRate___setstate_cython __pyx_mstate_global->__pyx_n_s_ArrheniusRate___setstate_cython
#define __pyx_n_s_ArrheniusRate__from_dict __pyx_mstate_global->__pyx_n_s_ArrheniusRate__from_dict
#define __pyx_n_s_ArrheniusRate__from_parameters __pyx_mstate_global->__pyx_n_s_ArrheniusRate__from_parameters
#define __pyx_kp_u_Arrhenius_A_g_b_g_E_g __pyx_mstate_global->__pyx_kp_u_Arrhenius_A_g_b_g_E_g
#define __pyx_n_s_Arrhenius___reduce_cython __pyx_mstate_global->__pyx_n_s_Arrhenius___reduce_cython
#define __pyx_n_s_Arrhenius___setstate_cython __pyx_mstate_global->__pyx_n_s_Arrhenius___setstate_cython
#define __pyx_kp_u_Base_class __pyx_mstate_global->__pyx_kp_u_Base_class
#define __pyx_n_s_BlowersMaselRate __pyx_mstate_global->__pyx_n_s_BlowersMaselRate
#define __pyx_n_s_BlowersMaselRate___reduce_cython __pyx_mstate_global->__pyx_n_s_BlowersMaselRate___reduce_cython
#define __pyx_n_s_BlowersMaselRate___setstate_cyth __pyx_mstate_global->__pyx_n_s_BlowersMaselRate___setstate_cyth
#define __pyx_n_s_BlowersMaselRate__from_dict __pyx_mstate_global->__pyx_n_s_BlowersMaselRate__from_dict
#define __pyx_n_s_BlowersMaselRate__from_parameter __pyx_mstate_global->__pyx_n_s_BlowersMaselRate__from_parameter
#define __pyx_kp_u_Blowers_Masel __pyx_mstate_global->__pyx_kp_u_Blowers_Masel
#define __pyx_kp_u_Cannot_convert_input_with_type __pyx_mstate_global->__pyx_kp_u_Cannot_convert_input_with_type
#define __pyx_n_s_CanteraError __pyx_mstate_global->__pyx_n_s_CanteraError
#define __pyx_n_u_Chebyshev __pyx_mstate_global->__pyx_n_u_Chebyshev
#define __pyx_n_s_ChebyshevRate __pyx_mstate_global->__pyx_n_s_ChebyshevRate
#define __pyx_n_s_ChebyshevRate___reduce_cython __pyx_mstate_global->__pyx_n_s_ChebyshevRate___reduce_cython
#define __pyx_n_s_ChebyshevRate___setstate_cython __pyx_mstate_global->__pyx_n_s_ChebyshevRate___setstate_cython
#define __pyx_n_s_ChemicallyActivatedReaction __pyx_mstate_global->__pyx_n_s_ChemicallyActivatedReaction
#define __pyx_kp_u_ChemicallyActivatedReaction_Clas __pyx_mstate_global->__pyx_kp_u_ChemicallyActivatedReaction_Clas
#define __pyx_n_s_ChemicallyActivatedReaction___re __pyx_mstate_global->__pyx_n_s_ChemicallyActivatedReaction___re
#define __pyx_n_s_ChemicallyActivatedReaction___se __pyx_mstate_global->__pyx_n_s_ChemicallyActivatedReaction___se
#define __pyx_kp_u_Class_method_from_dict_was_invok __pyx_mstate_global->__pyx_kp_u_Class_method_from_dict_was_invok
#define __pyx_kp_u_Class_method_from_yaml_was_invok __pyx_mstate_global->__pyx_kp_u_Class_method_from_yaml_was_invok
#define __pyx_n_s_CustomRate __pyx_mstate_global->__pyx_n_s_CustomRate
#define __pyx_n_s_CustomRate___reduce_cython __pyx_mstate_global->__pyx_n_s_CustomRate___reduce_cython
#define __pyx_n_s_CustomRate___setstate_cython __pyx_mstate_global->__pyx_n_s_CustomRate___setstate_cython
#define __pyx_n_s_CustomRate_set_rate_function __pyx_mstate_global->__pyx_n_s_CustomRate_set_rate_function
#define __pyx_n_s_CustomReaction __pyx_mstate_global->__pyx_n_s_CustomReaction
#define __pyx_kp_u_CustomReaction_Class_to_be_remov __pyx_mstate_global->__pyx_kp_u_CustomReaction_Class_to_be_remov
#define __pyx_n_s_CustomReaction___reduce_cython __pyx_mstate_global->__pyx_n_s_CustomReaction___reduce_cython
#define __pyx_n_s_CustomReaction___setstate_cython __pyx_mstate_global->__pyx_n_s_CustomReaction___setstate_cython
#define __pyx_n_s_DeprecationWarning __pyx_mstate_global->__pyx_n_s_DeprecationWarning
#define __pyx_n_s_E __pyx_mstate_global->__pyx_n_s_E
#define __pyx_n_s_Ea __pyx_mstate_global->__pyx_n_s_Ea
#define __pyx_n_s_Ea0 __pyx_mstate_global->__pyx_n_s_Ea0
#define __pyx_n_u_Ea0 __pyx_mstate_global->__pyx_n_u_Ea0
#define __pyx_n_s_Ea_electron __pyx_mstate_global->__pyx_n_s_Ea_electron
#define __pyx_n_s_Ea_gas __pyx_mstate_global->__pyx_n_s_Ea_gas
#define __pyx_n_u_Ea_gas __pyx_mstate_global->__pyx_n_u_Ea_gas
#define __pyx_n_s_ExtensibleRate __pyx_mstate_global->__pyx_n_s_ExtensibleRate
#define __pyx_n_s_ExtensibleRateData __pyx_mstate_global->__pyx_n_s_ExtensibleRateData
#define __pyx_n_s_ExtensibleRateData___reduce_cyth __pyx_mstate_global->__pyx_n_s_ExtensibleRateData___reduce_cyth
#define __pyx_n_s_ExtensibleRateData___setstate_cy __pyx_mstate_global->__pyx_n_s_ExtensibleRateData___setstate_cy
#define __pyx_n_s_ExtensibleRateData_update __pyx_mstate_global->__pyx_n_s_ExtensibleRateData_update
#define __pyx_n_s_ExtensibleRate___reduce_cython __pyx_mstate_global->__pyx_n_s_ExtensibleRate___reduce_cython
#define __pyx_n_s_ExtensibleRate___setstate_cython __pyx_mstate_global->__pyx_n_s_ExtensibleRate___setstate_cython
#define __pyx_n_s_ExtensibleRate_eval __pyx_mstate_global->__pyx_n_s_ExtensibleRate_eval
#define __pyx_n_s_ExtensibleRate_get_parameters __pyx_mstate_global->__pyx_n_s_ExtensibleRate_get_parameters
#define __pyx_n_s_ExtensibleRate_set_parameters __pyx_mstate_global->__pyx_n_s_ExtensibleRate_set_parameters
#define __pyx_n_s_ExtensibleRate_validate __pyx_mstate_global->__pyx_n_s_ExtensibleRate_validate
#define __pyx_n_u_F __pyx_mstate_global->__pyx_n_u_F
#define __pyx_n_s_FalloffRate __pyx_mstate_global->__pyx_n_s_FalloffRate
#define __pyx_n_s_FalloffRate___reduce_cython __pyx_mstate_global->__pyx_n_s_FalloffRate___reduce_cython
#define __pyx_n_s_FalloffRate___setstate_cython __pyx_mstate_global->__pyx_n_s_FalloffRate___setstate_cython
#define __pyx_n_s_FalloffRate_falloff_function __pyx_mstate_global->__pyx_n_s_FalloffRate_falloff_function
#define __pyx_n_s_FalloffReaction __pyx_mstate_global->__pyx_n_s_FalloffReaction
#define __pyx_kp_u_FalloffReaction_Class_to_be_remo __pyx_mstate_global->__pyx_kp_u_FalloffReaction_Class_to_be_remo
#define __pyx_n_s_FalloffReaction___reduce_cython __pyx_mstate_global->__pyx_n_s_FalloffReaction___reduce_cython
#define __pyx_n_s_FalloffReaction___setstate_cytho __pyx_mstate_global->__pyx_n_s_FalloffReaction___setstate_cytho
#define __pyx_n_s_ImportError __pyx_mstate_global->__pyx_n_s_ImportError
#define __pyx_kp_s_Incompatible_checksums_0x_x_vs_0 __pyx_mstate_global->__pyx_kp_s_Incompatible_checksums_0x_x_vs_0
#define __pyx_n_s_InterfaceArrheniusRate __pyx_mstate_global->__pyx_n_s_InterfaceArrheniusRate
#define __pyx_n_s_InterfaceArrheniusRate___reduce __pyx_mstate_global->__pyx_n_s_InterfaceArrheniusRate___reduce
#define __pyx_n_s_InterfaceArrheniusRate___setstat __pyx_mstate_global->__pyx_n_s_InterfaceArrheniusRate___setstat
#define __pyx_n_s_InterfaceArrheniusRate__from_dic __pyx_mstate_global->__pyx_n_s_InterfaceArrheniusRate__from_dic
#define __pyx_n_s_InterfaceArrheniusRate__from_par __pyx_mstate_global->__pyx_n_s_InterfaceArrheniusRate__from_par
#define __pyx_n_s_InterfaceBlowersMaselRate __pyx_mstate_global->__pyx_n_s_InterfaceBlowersMaselRate
#define __pyx_n_s_InterfaceBlowersMaselRate___redu __pyx_mstate_global->__pyx_n_s_InterfaceBlowersMaselRate___redu
#define __pyx_n_s_InterfaceBlowersMaselRate___sets __pyx_mstate_global->__pyx_n_s_InterfaceBlowersMaselRate___sets
#define __pyx_n_s_InterfaceBlowersMaselRate__from __pyx_mstate_global->__pyx_n_s_InterfaceBlowersMaselRate__from
#define __pyx_n_s_InterfaceBlowersMaselRate__from_2 __pyx_mstate_global->__pyx_n_s_InterfaceBlowersMaselRate__from_2
#define __pyx_n_s_InterfaceRateBase __pyx_mstate_global->__pyx_n_s_InterfaceRateBase
#define __pyx_n_s_InterfaceRateBase___reduce_cytho __pyx_mstate_global->__pyx_n_s_InterfaceRateBase___reduce_cytho
#define __pyx_n_s_InterfaceRateBase___setstate_cyt __pyx_mstate_global->__pyx_n_s_InterfaceRateBase___setstate_cyt
#define __pyx_n_s_InterfaceRateBase_set_species __pyx_mstate_global->__pyx_n_s_InterfaceRateBase_set_species
#define __pyx_kp_u_Internal_Error_Delegator_does_no __pyx_mstate_global->__pyx_kp_u_Internal_Error_Delegator_does_no
#define __pyx_kp_u_Invalid_input_parameters __pyx_mstate_global->__pyx_kp_u_Invalid_input_parameters
#define __pyx_kp_u_Invalid_parameter_input_data __pyx_mstate_global->__pyx_kp_u_Invalid_parameter_input_data
#define __pyx_kp_u_Invalid_parameter_rates __pyx_mstate_global->__pyx_kp_u_Invalid_parameter_rates
#define __pyx_kp_u_Invalid_parameters __pyx_mstate_global->__pyx_kp_u_Invalid_parameters
#define __pyx_kp_u_Invalid_parameters_2 __pyx_mstate_global->__pyx_kp_u_Invalid_parameters_2
#define __pyx_kp_u_Invalid_rate_definition_with_typ __pyx_mstate_global->__pyx_kp_u_Invalid_rate_definition_with_typ
#define __pyx_n_u_Lindemann __pyx_mstate_global->__pyx_n_u_Lindemann
#define __pyx_n_s_LindemannRate __pyx_mstate_global->__pyx_n_s_LindemannRate
#define __pyx_n_s_LindemannRate___reduce_cython __pyx_mstate_global->__pyx_n_s_LindemannRate___reduce_cython
#define __pyx_n_s_LindemannRate___setstate_cython __pyx_mstate_global->__pyx_n_s_LindemannRate___setstate_cython
#define __pyx_n_s_LindemannRate__from_dict __pyx_mstate_global->__pyx_n_s_LindemannRate__from_dict
#define __pyx_n_u_M __pyx_mstate_global->__pyx_n_u_M
#define __pyx_n_s_MemoryError __pyx_mstate_global->__pyx_n_s_MemoryError
#define __pyx_kp_u_Missing_reactant_and_or_product __pyx_mstate_global->__pyx_kp_u_Missing_reactant_and_or_product
#define __pyx_kp_u_Missing_reaction_rate_informatio __pyx_mstate_global->__pyx_kp_u_Missing_reaction_rate_informatio
#define __pyx_n_s_None __pyx_mstate_global->__pyx_n_s_None
#define __pyx_n_s_NotImplementedError __pyx_mstate_global->__pyx_n_s_NotImplementedError
#define __pyx_n_s_PickleError __pyx_mstate_global->__pyx_n_s_PickleError
#define __pyx_n_s_PlogRate __pyx_mstate_global->__pyx_n_s_PlogRate
#define __pyx_n_s_PlogRate___reduce_cython __pyx_mstate_global->__pyx_n_s_PlogRate___reduce_cython
#define __pyx_n_s_PlogRate___setstate_cython __pyx_mstate_global->__pyx_n_s_PlogRate___setstate_cython
#define __pyx_n_s_Reaction __pyx_mstate_global->__pyx_n_s_Reaction
#define __pyx_n_s_ReactionRate __pyx_mstate_global->__pyx_n_s_ReactionRate
#define __pyx_n_s_ReactionRate___reduce_cython __pyx_mstate_global->__pyx_n_s_ReactionRate___reduce_cython
#define __pyx_n_s_ReactionRate___setstate_cython __pyx_mstate_global->__pyx_n_s_ReactionRate___setstate_cython
#define __pyx_n_s_ReactionRate_from_dict __pyx_mstate_global->__pyx_n_s_ReactionRate_from_dict
#define __pyx_n_s_ReactionRate_from_yaml __pyx_mstate_global->__pyx_n_s_ReactionRate_from_yaml
#define __pyx_n_s_ReactionRate_wrap_locals_registe __pyx_mstate_global->__pyx_n_s_ReactionRate_wrap_locals_registe
#define __pyx_kp_u_Reaction_Argument_efficiencies_i __pyx_mstate_global->__pyx_kp_u_Reaction_Argument_efficiencies_i
#define __pyx_kp_u_Reaction_Parameter_kinetics_is_n __pyx_mstate_global->__pyx_kp_u_Reaction_Parameter_kinetics_is_n
#define __pyx_n_s_Reaction___reduce_cython __pyx_mstate_global->__pyx_n_s_Reaction___reduce_cython
#define __pyx_n_s_Reaction___setstate_cython __pyx_mstate_global->__pyx_n_s_Reaction___setstate_cython
#define __pyx_n_s_Reaction_clear_user_data __pyx_mstate_global->__pyx_n_s_Reaction_clear_user_data
#define __pyx_kp_u_Reaction_default_efficiency_Prop __pyx_mstate_global->__pyx_kp_u_Reaction_default_efficiency_Prop
#define __pyx_kp_u_Reaction_does_not_involve_third __pyx_mstate_global->__pyx_kp_u_Reaction_does_not_involve_third
#define __pyx_kp_u_Reaction_efficiencies_Property_i __pyx_mstate_global->__pyx_kp_u_Reaction_efficiencies_Property_i
#define __pyx_n_s_Reaction_efficiency __pyx_mstate_global->__pyx_n_s_Reaction_efficiency
#define __pyx_kp_u_Reaction_efficiency_Method_is_de __pyx_mstate_global->__pyx_kp_u_Reaction_efficiency_Method_is_de
#define __pyx_n_s_Reaction_from_dict __pyx_mstate_global->__pyx_n_s_Reaction_from_dict
#define __pyx_n_s_Reaction_from_yaml __pyx_mstate_global->__pyx_n_s_Reaction_from_yaml
#define __pyx_n_s_Reaction_list_from_file __pyx_mstate_global->__pyx_n_s_Reaction_list_from_file
#define __pyx_n_s_Reaction_list_from_yaml __pyx_mstate_global->__pyx_n_s_Reaction_list_from_yaml
#define __pyx_kp_u_Reaction_products_setter_is_dep __pyx_mstate_global->__pyx_kp_u_Reaction_products_setter_is_dep
#define __pyx_kp_u_Reaction_reactants_setter_is_de __pyx_mstate_global->__pyx_kp_u_Reaction_reactants_setter_is_de
#define __pyx_n_s_Reaction_update_user_data __pyx_mstate_global->__pyx_n_s_Reaction_update_user_data
#define __pyx_n_u_SRI __pyx_mstate_global->__pyx_n_u_SRI
#define __pyx_kp_s_Solution __pyx_mstate_global->__pyx_kp_s_Solution
#define __pyx_n_s_SriRate __pyx_mstate_global->__pyx_n_s_SriRate
#define __pyx_n_s_SriRate___reduce_cython __pyx_mstate_global->__pyx_n_s_SriRate___reduce_cython
#define __pyx_n_s_SriRate___setstate_cython __pyx_mstate_global->__pyx_n_s_SriRate___setstate_cython
#define __pyx_n_s_SriRate__from_dict __pyx_mstate_global->__pyx_n_s_SriRate__from_dict
#define __pyx_n_s_StickRateBase __pyx_mstate_global->__pyx_n_s_StickRateBase
#define __pyx_n_s_StickRateBase___reduce_cython __pyx_mstate_global->__pyx_n_s_StickRateBase___reduce_cython
#define __pyx_n_s_StickRateBase___setstate_cython __pyx_mstate_global->__pyx_n_s_StickRateBase___setstate_cython
#define __pyx_n_s_StickingArrheniusRate __pyx_mstate_global->__pyx_n_s_StickingArrheniusRate
#define __pyx_n_s_StickingArrheniusRate___reduce_c __pyx_mstate_global->__pyx_n_s_StickingArrheniusRate___reduce_c
#define __pyx_n_s_StickingArrheniusRate___setstate __pyx_mstate_global->__pyx_n_s_StickingArrheniusRate___setstate
#define __pyx_n_s_StickingArrheniusRate__from_dict __pyx_mstate_global->__pyx_n_s_StickingArrheniusRate__from_dict
#define __pyx_n_s_StickingArrheniusRate__from_para __pyx_mstate_global->__pyx_n_s_StickingArrheniusRate__from_para
#define __pyx_n_s_StickingBlowersMaselRate __pyx_mstate_global->__pyx_n_s_StickingBlowersMaselRate
#define __pyx_n_s_StickingBlowersMaselRate___reduc __pyx_mstate_global->__pyx_n_s_StickingBlowersMaselRate___reduc
#define __pyx_n_s_StickingBlowersMaselRate___setst __pyx_mstate_global->__pyx_n_s_StickingBlowersMaselRate___setst
#define __pyx_n_s_StickingBlowersMaselRate__from_d __pyx_mstate_global->__pyx_n_s_StickingBlowersMaselRate__from_d
#define __pyx_n_s_StickingBlowersMaselRate__from_p __pyx_mstate_global->__pyx_n_s_StickingBlowersMaselRate__from_p
#define __pyx_n_s_T __pyx_mstate_global->__pyx_n_s_T
#define __pyx_n_s_ThirdBody __pyx_mstate_global->__pyx_n_s_ThirdBody
#define __pyx_n_s_ThirdBody___reduce_cython __pyx_mstate_global->__pyx_n_s_ThirdBody___reduce_cython
#define __pyx_n_s_ThirdBody___setstate_cython __pyx_mstate_global->__pyx_n_s_ThirdBody___setstate_cython
#define __pyx_n_s_ThirdBody_efficiency __pyx_mstate_global->__pyx_n_s_ThirdBody_efficiency
#define __pyx_n_s_ThreeBodyReaction __pyx_mstate_global->__pyx_n_s_ThreeBodyReaction
#define __pyx_kp_u_ThreeBodyReaction_Class_to_be_re __pyx_mstate_global->__pyx_kp_u_ThreeBodyReaction_Class_to_be_re
#define __pyx_n_s_ThreeBodyReaction___reduce_cytho __pyx_mstate_global->__pyx_n_s_ThreeBodyReaction___reduce_cytho
#define __pyx_n_s_ThreeBodyReaction___setstate_cyt __pyx_mstate_global->__pyx_n_s_ThreeBodyReaction___setstate_cyt
#define __pyx_n_u_Troe __pyx_mstate_global->__pyx_n_u_Troe
#define __pyx_n_s_TroeRate __pyx_mstate_global->__pyx_n_s_TroeRate
#define __pyx_n_s_TroeRate___reduce_cython __pyx_mstate_global->__pyx_n_s_TroeRate___reduce_cython
#define __pyx_n_s_TroeRate___setstate_cython __pyx_mstate_global->__pyx_n_s_TroeRate___setstate_cython
#define __pyx_n_s_TroeRate__from_dict __pyx_mstate_global->__pyx_n_s_TroeRate__from_dict
#define __pyx_n_u_Tsang __pyx_mstate_global->__pyx_n_u_Tsang
#define __pyx_n_s_TsangRate __pyx_mstate_global->__pyx_n_s_TsangRate
#define __pyx_n_s_TsangRate___reduce_cython __pyx_mstate_global->__pyx_n_s_TsangRate___reduce_cython
#define __pyx_n_s_TsangRate___setstate_cython __pyx_mstate_global->__pyx_n_s_TsangRate___setstate_cython
#define __pyx_n_s_TsangRate__from_dict __pyx_mstate_global->__pyx_n_s_TsangRate__from_dict
#define __pyx_n_s_TwoTempPlasmaRate __pyx_mstate_global->__pyx_n_s_TwoTempPlasmaRate
#define __pyx_n_s_TwoTempPlasmaRate___reduce_cytho __pyx_mstate_global->__pyx_n_s_TwoTempPlasmaRate___reduce_cytho
#define __pyx_n_s_TwoTempPlasmaRate___setstate_cyt __pyx_mstate_global->__pyx_n_s_TwoTempPlasmaRate___setstate_cyt
#define __pyx_n_s_TwoTempPlasmaRate__from_dict __pyx_mstate_global->__pyx_n_s_TwoTempPlasmaRate__from_dict
#define __pyx_n_s_TwoTempPlasmaRate__from_paramete __pyx_mstate_global->__pyx_n_s_TwoTempPlasmaRate__from_paramete
#define __pyx_n_s_TypeError __pyx_mstate_global->__pyx_n_s_TypeError
#define __pyx_n_s_UnitStack __pyx_mstate_global->__pyx_n_s_UnitStack
#define __pyx_n_s_ValueError __pyx_mstate_global->__pyx_n_s_ValueError
#define __pyx_kp_u__10 __pyx_mstate_global->__pyx_kp_u__10
#define __pyx_n_s__159 __pyx_mstate_global->__pyx_n_s__159
#define __pyx_kp_u__20 __pyx_mstate_global->__pyx_kp_u__20
#define __pyx_kp_u__3 __pyx_mstate_global->__pyx_kp_u__3
#define __pyx_kp_u__32 __pyx_mstate_global->__pyx_kp_u__32
#define __pyx_n_s__33 __pyx_mstate_global->__pyx_n_s__33
#define __pyx_kp_u__4 __pyx_mstate_global->__pyx_kp_u__4
#define __pyx_kp_u__7 __pyx_mstate_global->__pyx_kp_u__7
#define __pyx_kp_u__9 __pyx_mstate_global->__pyx_kp_u__9
#define __pyx_n_s_activation_energy __pyx_mstate_global->__pyx_n_s_activation_energy
#define __pyx_n_u_after __pyx_mstate_global->__pyx_n_u_after
#define __pyx_n_s_all __pyx_mstate_global->__pyx_n_s_all
#define __pyx_n_s_any_map __pyx_mstate_global->__pyx_n_s_any_map
#define __pyx_n_s_asyncio_coroutines __pyx_mstate_global->__pyx_n_s_asyncio_coroutines
#define __pyx_kp_u_at __pyx_mstate_global->__pyx_kp_u_at
#define __pyx_n_s_b __pyx_mstate_global->__pyx_n_s_b
#define __pyx_n_u_b __pyx_mstate_global->__pyx_n_u_b
#define __pyx_kp_u_but_should_be_called_from_base __pyx_mstate_global->__pyx_kp_u_but_should_be_called_from_base
#define __pyx_n_s_c __pyx_mstate_global->__pyx_n_s_c
#define __pyx_kp_u_cannot_be_instantiated_by_itsel __pyx_mstate_global->__pyx_kp_u_cannot_be_instantiated_by_itsel
#define __pyx_kp_u_cannot_be_instantiated_by_itsel_2 __pyx_mstate_global->__pyx_kp_u_cannot_be_instantiated_by_itsel_2
#define __pyx_n_s_cantera_reaction __pyx_mstate_global->__pyx_n_s_cantera_reaction
#define __pyx_kp_s_cantera_reaction_pyx __pyx_mstate_global->__pyx_kp_s_cantera_reaction_pyx
#define __pyx_n_s_cinit __pyx_mstate_global->__pyx_n_s_cinit
#define __pyx_n_s_class __pyx_mstate_global->__pyx_n_s_class
#define __pyx_n_s_clear_user_data __pyx_mstate_global->__pyx_n_s_clear_user_data
#define __pyx_n_s_cline_in_traceback __pyx_mstate_global->__pyx_n_s_cline_in_traceback
#define __pyx_n_s_cls __pyx_mstate_global->__pyx_n_s_cls
#define __pyx_n_s_collider __pyx_mstate_global->__pyx_n_s_collider
#define __pyx_n_s_conc3b __pyx_mstate_global->__pyx_n_s_conc3b
#define __pyx_n_s_concm __pyx_mstate_global->__pyx_n_s_concm
#define __pyx_n_s_coverages __pyx_mstate_global->__pyx_n_s_coverages
#define __pyx_kp_u_custom_rate_function __pyx_mstate_global->__pyx_kp_u_custom_rate_function
#define __pyx_n_s_cxx_rate __pyx_mstate_global->__pyx_n_s_cxx_rate
#define __pyx_n_s_cxx_reaction __pyx_mstate_global->__pyx_n_s_cxx_reaction
#define __pyx_n_s_cxx_reactions __pyx_mstate_global->__pyx_n_s_cxx_reactions
#define __pyx_n_s_cxxvector __pyx_mstate_global->__pyx_n_s_cxxvector
#define __pyx_n_s_data __pyx_mstate_global->__pyx_n_s_data
#define __pyx_n_s_default_efficiency __pyx_mstate_global->__pyx_n_s_default_efficiency
#define __pyx_n_s_delegatable_methods __pyx_mstate_global->__pyx_n_s_delegatable_methods
#define __pyx_n_s_dict __pyx_mstate_global->__pyx_n_s_dict
#define __pyx_n_s_dict_2 __pyx_mstate_global->__pyx_n_s_dict_2
#define __pyx_kp_u_disable __pyx_mstate_global->__pyx_kp_u_disable
#define __pyx_n_s_double __pyx_mstate_global->__pyx_n_s_double
#define __pyx_kp_u_double_void __pyx_mstate_global->__pyx_kp_u_double_void
#define __pyx_n_s_efficiencies __pyx_mstate_global->__pyx_n_s_efficiencies
#define __pyx_n_s_efficiency __pyx_mstate_global->__pyx_n_s_efficiency
#define __pyx_n_s_elec_temp __pyx_mstate_global->__pyx_n_s_elec_temp
#define __pyx_kp_u_enable __pyx_mstate_global->__pyx_kp_u_enable
#define __pyx_n_s_enumerate __pyx_mstate_global->__pyx_n_s_enumerate
#define __pyx_n_s_equation __pyx_mstate_global->__pyx_n_s_equation
#define __pyx_kp_u_eval __pyx_mstate_global->__pyx_kp_u_eval
#define __pyx_n_u_evalFromStruct __pyx_mstate_global->__pyx_n_u_evalFromStruct
#define __pyx_n_s_eval_2 __pyx_mstate_global->__pyx_n_s_eval_2
#define __pyx_n_u_eval_2 __pyx_mstate_global->__pyx_n_u_eval_2
#define __pyx_n_u_extensible __pyx_mstate_global->__pyx_n_u_extensible
#define __pyx_n_s_falloff_coeffs __pyx_mstate_global->__pyx_n_s_falloff_coeffs
#define __pyx_n_s_falloff_function __pyx_mstate_global->__pyx_n_s_falloff_function
#define __pyx_n_s_filename __pyx_mstate_global->__pyx_n_s_filename
#define __pyx_n_s_float __pyx_mstate_global->__pyx_n_s_float
#define __pyx_n_s_format __pyx_mstate_global->__pyx_n_s_format
#define __pyx_n_s_from_dict __pyx_mstate_global->__pyx_n_s_from_dict
#define __pyx_n_s_from_dict_2 __pyx_mstate_global->__pyx_n_s_from_dict_2
#define __pyx_n_s_from_parameters __pyx_mstate_global->__pyx_n_s_from_parameters
#define __pyx_n_s_from_yaml __pyx_mstate_global->__pyx_n_s_from_yaml
#define __pyx_n_s_fromiter __pyx_mstate_global->__pyx_n_s_fromiter
#define __pyx_kp_u_gc __pyx_mstate_global->__pyx_kp_u_gc
#define __pyx_n_s_get __pyx_mstate_global->__pyx_n_s_get
#define __pyx_n_u_getParameters __pyx_mstate_global->__pyx_n_u_getParameters
#define __pyx_kp_u_get_parameters __pyx_mstate_global->__pyx_kp_u_get_parameters
#define __pyx_n_s_get_parameters_2 __pyx_mstate_global->__pyx_n_s_get_parameters_2
#define __pyx_n_u_get_parameters_2 __pyx_mstate_global->__pyx_n_u_get_parameters_2
#define __pyx_n_s_getstate __pyx_mstate_global->__pyx_n_s_getstate
#define __pyx_n_s_high __pyx_mstate_global->__pyx_n_s_high
#define __pyx_n_s_high_rate __pyx_mstate_global->__pyx_n_s_high_rate
#define __pyx_n_s_hyphenize __pyx_mstate_global->__pyx_n_s_hyphenize
#define __pyx_n_s_id __pyx_mstate_global->__pyx_n_s_id
#define __pyx_n_s_import __pyx_mstate_global->__pyx_n_s_import
#define __pyx_n_s_init __pyx_mstate_global->__pyx_n_s_init
#define __pyx_n_s_initializing __pyx_mstate_global->__pyx_n_s_initializing
#define __pyx_n_s_input_data __pyx_mstate_global->__pyx_n_s_input_data
#define __pyx_kp_u_interface_Arrhenius __pyx_mstate_global->__pyx_kp_u_interface_Arrhenius
#define __pyx_kp_u_interface_Blowers_Masel __pyx_mstate_global->__pyx_kp_u_interface_Blowers_Masel
#define __pyx_n_s_is_coroutine __pyx_mstate_global->__pyx_n_s_is_coroutine
#define __pyx_kp_u_isenabled __pyx_mstate_global->__pyx_kp_u_isenabled
#define __pyx_n_u_items __pyx_mstate_global->__pyx_n_u_items
#define __pyx_n_s_k __pyx_mstate_global->__pyx_n_s_k
#define __pyx_n_s_kinetics __pyx_mstate_global->__pyx_n_s_kinetics
#define __pyx_n_s_kwargs __pyx_mstate_global->__pyx_n_s_kwargs
#define __pyx_n_s_list_from_file __pyx_mstate_global->__pyx_n_s_list_from_file
#define __pyx_n_s_list_from_yaml __pyx_mstate_global->__pyx_n_s_list_from_yaml
#define __pyx_n_s_log __pyx_mstate_global->__pyx_n_s_log
#define __pyx_n_s_low __pyx_mstate_global->__pyx_n_s_low
#define __pyx_n_s_low_rate __pyx_mstate_global->__pyx_n_s_low_rate
#define __pyx_n_s_main __pyx_mstate_global->__pyx_n_s_main
#define __pyx_n_s_name __pyx_mstate_global->__pyx_n_s_name
#define __pyx_n_s_name_2 __pyx_mstate_global->__pyx_n_s_name_2
#define __pyx_n_s_new __pyx_mstate_global->__pyx_n_s_new
#define __pyx_kp_s_no_default___reduce___due_to_non __pyx_mstate_global->__pyx_kp_s_no_default___reduce___due_to_non
#define __pyx_n_s_np __pyx_mstate_global->__pyx_n_s_np
#define __pyx_n_s_numpy __pyx_mstate_global->__pyx_n_s_numpy
#define __pyx_kp_u_numpy_core_multiarray_failed_to __pyx_mstate_global->__pyx_kp_u_numpy_core_multiarray_failed_to
#define __pyx_kp_u_numpy_core_umath_failed_to_impor __pyx_mstate_global->__pyx_kp_u_numpy_core_umath_failed_to_impor
#define __pyx_kp_u_or __pyx_mstate_global->__pyx_kp_u_or
#define __pyx_n_s_order __pyx_mstate_global->__pyx_n_s_order
#define __pyx_n_s_par_list __pyx_mstate_global->__pyx_n_s_par_list
#define __pyx_n_s_par_string __pyx_mstate_global->__pyx_n_s_par_string
#define __pyx_n_s_params __pyx_mstate_global->__pyx_n_s_params
#define __pyx_n_s_pickle __pyx_mstate_global->__pyx_n_s_pickle
#define __pyx_n_s_pre_exponential_factor __pyx_mstate_global->__pyx_n_s_pre_exponential_factor
#define __pyx_n_s_pressure __pyx_mstate_global->__pyx_n_s_pressure
#define __pyx_kp_u_pressure_dependent_Arrhenius __pyx_mstate_global->__pyx_kp_u_pressure_dependent_Arrhenius
#define __pyx_n_s_pressure_range __pyx_mstate_global->__pyx_n_s_pressure_range
#define __pyx_n_s_products __pyx_mstate_global->__pyx_n_s_products
#define __pyx_n_u_python __pyx_mstate_global->__pyx_n_u_python
#define __pyx_n_s_pyx_PickleError __pyx_mstate_global->__pyx_n_s_pyx_PickleError
#define __pyx_n_s_pyx_checksum __pyx_mstate_global->__pyx_n_s_pyx_checksum
#define __pyx_n_s_pyx_result __pyx_mstate_global->__pyx_n_s_pyx_result
#define __pyx_n_s_pyx_state __pyx_mstate_global->__pyx_n_s_pyx_state
#define __pyx_n_s_pyx_type __pyx_mstate_global->__pyx_n_s_pyx_type
#define __pyx_n_s_pyx_unpickle_ExtensibleRateDat __pyx_mstate_global->__pyx_n_s_pyx_unpickle_ExtensibleRateDat
#define __pyx_n_s_pyx_vtable __pyx_mstate_global->__pyx_n_s_pyx_vtable
#define __pyx_n_s_r __pyx_mstate_global->__pyx_n_s_r
#define __pyx_n_s_range __pyx_mstate_global->__pyx_n_s_range
#define __pyx_n_s_rate __pyx_mstate_global->__pyx_n_s_rate
#define __pyx_n_s_rate_coeff_units __pyx_mstate_global->__pyx_n_s_rate_coeff_units
#define __pyx_kp_u_rate_constant __pyx_mstate_global->__pyx_kp_u_rate_constant
#define __pyx_n_s_rate_type __pyx_mstate_global->__pyx_n_s_rate_type
#define __pyx_n_s_rates __pyx_mstate_global->__pyx_n_s_rates
#define __pyx_n_s_reactants __pyx_mstate_global->__pyx_n_s_reactants
#define __pyx_n_s_reaction_rate_type __pyx_mstate_global->__pyx_n_s_reaction_rate_type
#define __pyx_n_u_reaction_rate_type __pyx_mstate_global->__pyx_n_u_reaction_rate_type
#define __pyx_n_s_reaction_type __pyx_mstate_global->__pyx_n_s_reaction_type
#define __pyx_n_u_reactions __pyx_mstate_global->__pyx_n_u_reactions
#define __pyx_n_s_reduce __pyx_mstate_global->__pyx_n_s_reduce
#define __pyx_n_s_reduce_cython __pyx_mstate_global->__pyx_n_s_reduce_cython
#define __pyx_n_s_reduce_ex __pyx_mstate_global->__pyx_n_s_reduce_ex
#define __pyx_n_s_register_subclasses __pyx_mstate_global->__pyx_n_s_register_subclasses
#define __pyx_n_u_replace __pyx_mstate_global->__pyx_n_u_replace
#define __pyx_n_s_reshape __pyx_mstate_global->__pyx_n_s_reshape
#define __pyx_n_s_return __pyx_mstate_global->__pyx_n_s_return
#define __pyx_n_s_root __pyx_mstate_global->__pyx_n_s_root
#define __pyx_n_s_s __pyx_mstate_global->__pyx_n_s_s
#define __pyx_n_s_section __pyx_mstate_global->__pyx_n_s_section
#define __pyx_n_s_self __pyx_mstate_global->__pyx_n_s_self
#define __pyx_kp_s_self__rate_self_base_self_interf __pyx_mstate_global->__pyx_kp_s_self__rate_self_base_self_interf
#define __pyx_kp_s_self__rate_self_base_self_interf_2 __pyx_mstate_global->__pyx_kp_s_self__rate_self_base_self_interf_2
#define __pyx_kp_s_self__rate_self_base_self_rate_c __pyx_mstate_global->__pyx_kp_s_self__rate_self_base_self_rate_c
#define __pyx_kp_s_self__rate_self_rate_cannot_be_c __pyx_mstate_global->__pyx_kp_s_self__rate_self_rate_cannot_be_c
#define __pyx_n_u_setParameters __pyx_mstate_global->__pyx_n_u_setParameters
#define __pyx_n_s_set_parameters __pyx_mstate_global->__pyx_n_s_set_parameters
#define __pyx_n_u_set_parameters __pyx_mstate_global->__pyx_n_u_set_parameters
#define __pyx_kp_u_set_parameters_2 __pyx_mstate_global->__pyx_kp_u_set_parameters_2
#define __pyx_n_s_set_rate_function __pyx_mstate_global->__pyx_n_s_set_rate_function
#define __pyx_n_s_set_species __pyx_mstate_global->__pyx_n_s_set_species
#define __pyx_n_s_setstate __pyx_mstate_global->__pyx_n_s_setstate
#define __pyx_n_s_setstate_cython __pyx_mstate_global->__pyx_n_s_setstate_cython
#define __pyx_n_s_soln __pyx_mstate_global->__pyx_n_s_soln
#define __pyx_n_s_spec __pyx_mstate_global->__pyx_n_s_spec
#define __pyx_n_s_species __pyx_mstate_global->__pyx_n_s_species
#define __pyx_n_s_state __pyx_mstate_global->__pyx_n_s_state
#define __pyx_n_s_staticmethod __pyx_mstate_global->__pyx_n_s_staticmethod
#define __pyx_kp_u_sticking_Arrhenius __pyx_mstate_global->__pyx_kp_u_sticking_Arrhenius
#define __pyx_kp_u_sticking_Blowers_Masel __pyx_mstate_global->__pyx_kp_u_sticking_Blowers_Masel
#define __pyx_n_s_str __pyx_mstate_global->__pyx_n_s_str
#define __pyx_kp_s_stringsource __pyx_mstate_global->__pyx_kp_s_stringsource
#define __pyx_n_s_subclasses __pyx_mstate_global->__pyx_n_s_subclasses
#define __pyx_n_s_temperature __pyx_mstate_global->__pyx_n_s_temperature
#define __pyx_n_s_temperature_exponent __pyx_mstate_global->__pyx_n_s_temperature_exponent
#define __pyx_n_s_temperature_range __pyx_mstate_global->__pyx_n_s_temperature_range
#define __pyx_n_s_test __pyx_mstate_global->__pyx_n_s_test
#define __pyx_n_s_text __pyx_mstate_global->__pyx_n_s_text
#define __pyx_n_s_third_body __pyx_mstate_global->__pyx_n_s_third_body
#define __pyx_kp_u_to_rate_expression __pyx_mstate_global->__pyx_kp_u_to_rate_expression
#define __pyx_n_s_tolist __pyx_mstate_global->__pyx_n_s_tolist
#define __pyx_kp_u_two_temperature_plasma __pyx_mstate_global->__pyx_kp_u_two_temperature_plasma
#define __pyx_n_u_type __pyx_mstate_global->__pyx_n_u_type
#define __pyx_kp_u_update __pyx_mstate_global->__pyx_kp_u_update
#define __pyx_n_s_update_2 __pyx_mstate_global->__pyx_n_s_update_2
#define __pyx_n_u_update_2 __pyx_mstate_global->__pyx_n_u_update_2
#define __pyx_n_s_update_user_data __pyx_mstate_global->__pyx_n_s_update_user_data
#define __pyx_n_s_use_setstate __pyx_mstate_global->__pyx_n_s_use_setstate
#define __pyx_n_s_utils __pyx_mstate_global->__pyx_n_s_utils
#define __pyx_n_s_validate __pyx_mstate_global->__pyx_n_s_validate
#define __pyx_n_u_validate __pyx_mstate_global->__pyx_n_u_validate
#define __pyx_kp_u_void_AnyMap __pyx_mstate_global->__pyx_kp_u_void_AnyMap
#define __pyx_kp_u_void_AnyMap_UnitStack __pyx_mstate_global->__pyx_kp_u_void_AnyMap_UnitStack
#define __pyx_kp_u_void_string_void __pyx_mstate_global->__pyx_kp_u_void_string_void
#define __pyx_n_s_w __pyx_mstate_global->__pyx_n_s_w
#define __pyx_n_s_warn __pyx_mstate_global->__pyx_n_s_warn
#define __pyx_n_s_warnings __pyx_mstate_global->__pyx_n_s_warnings
#define __pyx_float_0_0 __pyx_mstate_global->__pyx_float_0_0
#define __pyx_int_0 __pyx_mstate_global->__pyx_int_0
#define __pyx_int_130344318 __pyx_mstate_global->__pyx_int_130344318
#define __pyx_int_171877079 __pyx_mstate_global->__pyx_int_171877079
#define __pyx_int_191245125 __pyx_mstate_global->__pyx_int_191245125
#define __pyx_tuple_ __pyx_mstate_global->__pyx_tuple_
#define __pyx_tuple__2 __pyx_mstate_global->__pyx_tuple__2
#define __pyx_tuple__5 __pyx_mstate_global->__pyx_tuple__5
#define __pyx_tuple__8 __pyx_mstate_global->__pyx_tuple__8
#define __pyx_tuple__11 __pyx_mstate_global->__pyx_tuple__11
#define __pyx_tuple__12 __pyx_mstate_global->__pyx_tuple__12
#define __pyx_tuple__13 __pyx_mstate_global->__pyx_tuple__13
#define __pyx_tuple__14 __pyx_mstate_global->__pyx_tuple__14
#define __pyx_tuple__15 __pyx_mstate_global->__pyx_tuple__15
#define __pyx_tuple__16 __pyx_mstate_global->__pyx_tuple__16
#define __pyx_tuple__17 __pyx_mstate_global->__pyx_tuple__17
#define __pyx_tuple__18 __pyx_mstate_global->__pyx_tuple__18
#define __pyx_tuple__19 __pyx_mstate_global->__pyx_tuple__19
#define __pyx_tuple__21 __pyx_mstate_global->__pyx_tuple__21
#define __pyx_tuple__22 __pyx_mstate_global->__pyx_tuple__22
#define __pyx_tuple__23 __pyx_mstate_global->__pyx_tuple__23
#define __pyx_tuple__24 __pyx_mstate_global->__pyx_tuple__24
#define __pyx_tuple__25 __pyx_mstate_global->__pyx_tuple__25
#define __pyx_tuple__26 __pyx_mstate_global->__pyx_tuple__26
#define __pyx_tuple__27 __pyx_mstate_global->__pyx_tuple__27
#define __pyx_tuple__28 __pyx_mstate_global->__pyx_tuple__28
#define __pyx_tuple__29 __pyx_mstate_global->__pyx_tuple__29
#define __pyx_tuple__30 __pyx_mstate_global->__pyx_tuple__30
#define __pyx_tuple__31 __pyx_mstate_global->__pyx_tuple__31
#define __pyx_tuple__34 __pyx_mstate_global->__pyx_tuple__34
#define __pyx_tuple__36 __pyx_mstate_global->__pyx_tuple__36
#define __pyx_tuple__37 __pyx_mstate_global->__pyx_tuple__37
#define __pyx_tuple__39 __pyx_mstate_global->__pyx_tuple__39
#define __pyx_tuple__41 __pyx_mstate_global->__pyx_tuple__41
#define __pyx_tuple__43 __pyx_mstate_global->__pyx_tuple__43
#define __pyx_tuple__47 __pyx_mstate_global->__pyx_tuple__47
#define __pyx_tuple__49 __pyx_mstate_global->__pyx_tuple__49
#define __pyx_tuple__54 __pyx_mstate_global->__pyx_tuple__54
#define __pyx_tuple__59 __pyx_mstate_global->__pyx_tuple__59
#define __pyx_tuple__63 __pyx_mstate_global->__pyx_tuple__63
#define __pyx_tuple__83 __pyx_mstate_global->__pyx_tuple__83
#define __pyx_tuple__87 __pyx_mstate_global->__pyx_tuple__87
#define __pyx_tuple__88 __pyx_mstate_global->__pyx_tuple__88
#define __pyx_tuple__89 __pyx_mstate_global->__pyx_tuple__89
#define __pyx_tuple__90 __pyx_mstate_global->__pyx_tuple__90
#define __pyx_tuple__91 __pyx_mstate_global->__pyx_tuple__91
#define __pyx_tuple__93 __pyx_mstate_global->__pyx_tuple__93
#define __pyx_tuple__95 __pyx_mstate_global->__pyx_tuple__95
#define __pyx_tuple__97 __pyx_mstate_global->__pyx_tuple__97
#define __pyx_codeobj__6 __pyx_mstate_global->__pyx_codeobj__6
#define __pyx_tuple__101 __pyx_mstate_global->__pyx_tuple__101
#define __pyx_tuple__102 __pyx_mstate_global->__pyx_tuple__102
#define __pyx_tuple__104 __pyx_mstate_global->__pyx_tuple__104
#define __pyx_tuple__107 __pyx_mstate_global->__pyx_tuple__107
#define __pyx_tuple__129 __pyx_mstate_global->__pyx_tuple__129
#define __pyx_tuple__133 __pyx_mstate_global->__pyx_tuple__133
#define __pyx_tuple__135 __pyx_mstate_global->__pyx_tuple__135
#define __pyx_tuple__137 __pyx_mstate_global->__pyx_tuple__137
#define __pyx_tuple__139 __pyx_mstate_global->__pyx_tuple__139
#define __pyx_tuple__140 __pyx_mstate_global->__pyx_tuple__140
#define __pyx_tuple__157 __pyx_mstate_global->__pyx_tuple__157
#define __pyx_codeobj__35 __pyx_mstate_global->__pyx_codeobj__35
#define __pyx_codeobj__38 __pyx_mstate_global->__pyx_codeobj__38
#define __pyx_codeobj__40 __pyx_mstate_global->__pyx_codeobj__40
#define __pyx_codeobj__42 __pyx_mstate_global->__pyx_codeobj__42
#define __pyx_codeobj__44 __pyx_mstate_global->__pyx_codeobj__44
#define __pyx_codeobj__45 __pyx_mstate_global->__pyx_codeobj__45
#define __pyx_codeobj__46 __pyx_mstate_global->__pyx_codeobj__46
#define __pyx_codeobj__48 __pyx_mstate_global->__pyx_codeobj__48
#define __pyx_codeobj__50 __pyx_mstate_global->__pyx_codeobj__50
#define __pyx_codeobj__51 __pyx_mstate_global->__pyx_codeobj__51
#define __pyx_codeobj__52 __pyx_mstate_global->__pyx_codeobj__52
#define __pyx_codeobj__53 __pyx_mstate_global->__pyx_codeobj__53
#define __pyx_codeobj__55 __pyx_mstate_global->__pyx_codeobj__55
#define __pyx_codeobj__56 __pyx_mstate_global->__pyx_codeobj__56
#define __pyx_codeobj__57 __pyx_mstate_global->__pyx_codeobj__57
#define __pyx_codeobj__58 __pyx_mstate_global->__pyx_codeobj__58
#define __pyx_codeobj__60 __pyx_mstate_global->__pyx_codeobj__60
#define __pyx_codeobj__61 __pyx_mstate_global->__pyx_codeobj__61
#define __pyx_codeobj__62 __pyx_mstate_global->__pyx_codeobj__62
#define __pyx_codeobj__64 __pyx_mstate_global->__pyx_codeobj__64
#define __pyx_codeobj__65 __pyx_mstate_global->__pyx_codeobj__65
#define __pyx_codeobj__66 __pyx_mstate_global->__pyx_codeobj__66
#define __pyx_codeobj__67 __pyx_mstate_global->__pyx_codeobj__67
#define __pyx_codeobj__68 __pyx_mstate_global->__pyx_codeobj__68
#define __pyx_codeobj__69 __pyx_mstate_global->__pyx_codeobj__69
#define __pyx_codeobj__70 __pyx_mstate_global->__pyx_codeobj__70
#define __pyx_codeobj__71 __pyx_mstate_global->__pyx_codeobj__71
#define __pyx_codeobj__72 __pyx_mstate_global->__pyx_codeobj__72
#define __pyx_codeobj__73 __pyx_mstate_global->__pyx_codeobj__73
#define __pyx_codeobj__74 __pyx_mstate_global->__pyx_codeobj__74
#define __pyx_codeobj__75 __pyx_mstate_global->__pyx_codeobj__75
#define __pyx_codeobj__76 __pyx_mstate_global->__pyx_codeobj__76
#define __pyx_codeobj__77 __pyx_mstate_global->__pyx_codeobj__77
#define __pyx_codeobj__78 __pyx_mstate_global->__pyx_codeobj__78
#define __pyx_codeobj__79 __pyx_mstate_global->__pyx_codeobj__79
#define __pyx_codeobj__80 __pyx_mstate_global->__pyx_codeobj__80
#define __pyx_codeobj__81 __pyx_mstate_global->__pyx_codeobj__81
#define __pyx_codeobj__82 __pyx_mstate_global->__pyx_codeobj__82
#define __pyx_codeobj__84 __pyx_mstate_global->__pyx_codeobj__84
#define __pyx_codeobj__85 __pyx_mstate_global->__pyx_codeobj__85
#define __pyx_codeobj__86 __pyx_mstate_global->__pyx_codeobj__86
#define __pyx_codeobj__92 __pyx_mstate_global->__pyx_codeobj__92
#define __pyx_codeobj__94 __pyx_mstate_global->__pyx_codeobj__94
#define __pyx_codeobj__96 __pyx_mstate_global->__pyx_codeobj__96
#define __pyx_codeobj__98 __pyx_mstate_global->__pyx_codeobj__98
#define __pyx_codeobj__99 __pyx_mstate_global->__pyx_codeobj__99
#define __pyx_codeobj__100 __pyx_mstate_global->__pyx_codeobj__100
#define __pyx_codeobj__103 __pyx_mstate_global->__pyx_codeobj__103
#define __pyx_codeobj__105 __pyx_mstate_global->__pyx_codeobj__105
#define __pyx_codeobj__106 __pyx_mstate_global->__pyx_codeobj__106
#define __pyx_codeobj__108 __pyx_mstate_global->__pyx_codeobj__108
#define __pyx_codeobj__109 __pyx_mstate_global->__pyx_codeobj__109
#define __pyx_codeobj__110 __pyx_mstate_global->__pyx_codeobj__110
#define __pyx_codeobj__111 __pyx_mstate_global->__pyx_codeobj__111
#define __pyx_codeobj__112 __pyx_mstate_global->__pyx_codeobj__112
#define __pyx_codeobj__113 __pyx_mstate_global->__pyx_codeobj__113
#define __pyx_codeobj__114 __pyx_mstate_global->__pyx_codeobj__114
#define __pyx_codeobj__115 __pyx_mstate_global->__pyx_codeobj__115
#define __pyx_codeobj__116 __pyx_mstate_global->__pyx_codeobj__116
#define __pyx_codeobj__117 __pyx_mstate_global->__pyx_codeobj__117
#define __pyx_codeobj__118 __pyx_mstate_global->__pyx_codeobj__118
#define __pyx_codeobj__119 __pyx_mstate_global->__pyx_codeobj__119
#define __pyx_codeobj__120 __pyx_mstate_global->__pyx_codeobj__120
#define __pyx_codeobj__121 __pyx_mstate_global->__pyx_codeobj__121
#define __pyx_codeobj__122 __pyx_mstate_global->__pyx_codeobj__122
#define __pyx_codeobj__123 __pyx_mstate_global->__pyx_codeobj__123
#define __pyx_codeobj__124 __pyx_mstate_global->__pyx_codeobj__124
#define __pyx_codeobj__125 __pyx_mstate_global->__pyx_codeobj__125
#define __pyx_codeobj__126 __pyx_mstate_global->__pyx_codeobj__126
#define __pyx_codeobj__127 __pyx_mstate_global->__pyx_codeobj__127
#define __pyx_codeobj__128 __pyx_mstate_global->__pyx_codeobj__128
#define __pyx_codeobj__130 __pyx_mstate_global->__pyx_codeobj__130
#define __pyx_codeobj__131 __pyx_mstate_global->__pyx_codeobj__131
#define __pyx_codeobj__132 __pyx_mstate_global->__pyx_codeobj__132
#define __pyx_codeobj__134 __pyx_mstate_global->__pyx_codeobj__134
#define __pyx_codeobj__136 __pyx_mstate_global->__pyx_codeobj__136
#define __pyx_codeobj__138 __pyx_mstate_global->__pyx_codeobj__138
#define __pyx_codeobj__141 __pyx_mstate_global->__pyx_codeobj__141
#define __pyx_codeobj__142 __pyx_mstate_global->__pyx_codeobj__142
#define __pyx_codeobj__143 __pyx_mstate_global->__pyx_codeobj__143
#define __pyx_codeobj__144 __pyx_mstate_global->__pyx_codeobj__144
#define __pyx_codeobj__145 __pyx_mstate_global->__pyx_codeobj__145
#define __pyx_codeobj__146 __pyx_mstate_global->__pyx_codeobj__146
#define __pyx_codeobj__147 __pyx_mstate_global->__pyx_codeobj__147
#define __pyx_codeobj__148 __pyx_mstate_global->__pyx_codeobj__148
#define __pyx_codeobj__149 __pyx_mstate_global->__pyx_codeobj__149
#define __pyx_codeobj__150 __pyx_mstate_global->__pyx_codeobj__150
#define __pyx_codeobj__151 __pyx_mstate_global->__pyx_codeobj__151
#define __pyx_codeobj__152 __pyx_mstate_global->__pyx_codeobj__152
#define __pyx_codeobj__153 __pyx_mstate_global->__pyx_codeobj__153
#define __pyx_codeobj__154 __pyx_mstate_global->__pyx_codeobj__154
#define __pyx_codeobj__155 __pyx_mstate_global->__pyx_codeobj__155
#define __pyx_codeobj__156 __pyx_mstate_global->__pyx_codeobj__156
#define __pyx_codeobj__158 __pyx_mstate_global->__pyx_codeobj__158
/* #### Code section: module_code ### */

/* "vector.to_py":66
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):             # <<<<<<<<<<<<<<
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 */

static PyObject *__pyx_convert_vector_to_py_double(std::vector<double>  const &__pyx_v_v) {
  Py_ssize_t __pyx_v_v_size_signed;
  PyObject *__pyx_v_o = NULL;
  Py_ssize_t __pyx_v_i;
  PyObject *__pyx_v_item = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_vector_to_py_double", 0);

  /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  __pyx_t_1 = (__pyx_v_v.size() > ((size_t)PY_SSIZE_T_MAX));
  if (unlikely(__pyx_t_1)) {

    /* "vector.to_py":68
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()             # <<<<<<<<<<<<<<
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 */
    PyErr_NoMemory(); __PYX_ERR(1, 68, __pyx_L1_error)

    /* "vector.to_py":67
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:             # <<<<<<<<<<<<<<
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()
 */
  }

  /* "vector.to_py":69
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 *     v_size_signed = <Py_ssize_t> v.size()             # <<<<<<<<<<<<<<
 * 
 *     o = PyList_New(v_size_signed)
 */
  __pyx_v_v_size_signed = ((Py_ssize_t)__pyx_v_v.size());

  /* "vector.to_py":71
 *     v_size_signed = <Py_ssize_t> v.size()
 * 
 *     o = PyList_New(v_size_signed)             # <<<<<<<<<<<<<<
 * 
 *     cdef Py_ssize_t i
 */
  __pyx_t_2 = PyList_New(__pyx_v_v_size_signed); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 71, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_v_o = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "vector.to_py":76
 *     cdef object item
 * 
 *     for i in range(v_size_signed):             # <<<<<<<<<<<<<<
 *         item = v[i]
 *         Py_INCREF(item)
 */
  __pyx_t_3 = __pyx_v_v_size_signed;
  __pyx_t_4 = __pyx_t_3;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;

    /* "vector.to_py":77
 * 
 *     for i in range(v_size_signed):
 *         item = v[i]             # <<<<<<<<<<<<<<
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)
 */
    __pyx_t_2 = PyFloat_FromDouble((__pyx_v_v[__pyx_v_i])); if (unlikely(!__pyx_t_2)) __PYX_ERR(1, 77, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_XDECREF_SET(__pyx_v_item, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "vector.to_py":78
 *     for i in range(v_size_signed):
 *         item = v[i]
 *         Py_INCREF(item)             # <<<<<<<<<<<<<<
 *         PyList_SET_ITEM(o, i, item)
 * 
 */
    Py_INCREF(__pyx_v_item);

    /* "vector.to_py":79
 *         item = v[i]
 *         Py_INCREF(item)
 *         PyList_SET_ITEM(o, i, item)             # <<<<<<<<<<<<<<
 * 
 *     return o
 */
    PyList_SET_ITEM(__pyx_v_o, __pyx_v_i, __pyx_v_item);
  }

  /* "vector.to_py":81
 *         PyList_SET_ITEM(o, i, item)
 * 
 *     return o             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "vector.to_py":66
 * 
 * @cname("__pyx_convert_vector_to_py_double")
 * cdef object __pyx_convert_vector_to_py_double(const vector[X]& v):             # <<<<<<<<<<<<<<
 *     if v.size() > <size_t> PY_SSIZE_T_MAX:
 *         raise MemoryError()
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("vector.to_py.__pyx_convert_vector_to_py_double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XDECREF(__pyx_v_item);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyObject_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyObject_string_to_py_std__in_string", 0);

  /* "string.to_py":32
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyUnicode_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 32, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":31
 * 
 * @cname("__pyx_convert_PyObject_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyObject_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyObject_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyObject_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyUnicode_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyUnicode_string_to_py_std__in_string", 0);

  /* "string.to_py":38
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyStr_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyUnicode_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 38, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":37
 * 
 * @cname("__pyx_convert_PyUnicode_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyUnicode_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyUnicode_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyUnicode_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyStr_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyStr_string_to_py_std__in_string", 0);

  /* "string.to_py":44
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyBytes_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyStr_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 44, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":43
 * 
 * @cname("__pyx_convert_PyStr_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyStr_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyStr_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyStr_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyBytes_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyBytes_string_to_py_std__in_string", 0);

  /* "string.to_py":50
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * cdef extern from *:
 *     cdef object __Pyx_PyByteArray_FromStringAndSize(const char*, size_t)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBytes_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 50, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":49
 * 
 * @cname("__pyx_convert_PyBytes_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyBytes_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyBytes_FromStringAndSize(s.data(), s.size())
 * cdef extern from *:
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyBytes_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

static CYTHON_INLINE PyObject *__pyx_convert_PyByteArray_string_to_py_std__in_string(std::string const &__pyx_v_s) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_PyByteArray_string_to_py_std__in_string", 0);

  /* "string.to_py":56
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())             # <<<<<<<<<<<<<<
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyByteArray_FromStringAndSize(__pyx_v_s.data(), __pyx_v_s.size()); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 56, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "string.to_py":55
 * 
 * @cname("__pyx_convert_PyByteArray_string_to_py_std__in_string")
 * cdef inline object __pyx_convert_PyByteArray_string_to_py_std__in_string(const string& s):             # <<<<<<<<<<<<<<
 *     return __Pyx_PyByteArray_FromStringAndSize(s.data(), s.size())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("string.to_py.__pyx_convert_PyByteArray_string_to_py_std__in_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "map.to_py":237
 * 
 * @cname("__pyx_convert_map_to_py_std_3a__3a_string____double")
 * cdef object __pyx_convert_map_to_py_std_3a__3a_string____double(const map[X,Y]& s):             # <<<<<<<<<<<<<<
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 */

static PyObject *__pyx_convert_map_to_py_std_3a__3a_string____double(std::map<std::string,double>  const &__pyx_v_s) {
  PyObject *__pyx_v_o = NULL;
  std::map<std::string,double> ::value_type const *__pyx_v_key_value;
  std::map<std::string,double> ::const_iterator __pyx_v_iter;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_convert_map_to_py_std_3a__3a_string____double", 0);

  /* "map.to_py":238
 * @cname("__pyx_convert_map_to_py_std_3a__3a_string____double")
 * cdef object __pyx_convert_map_to_py_std_3a__3a_string____double(const map[X,Y]& s):
 *     o = {}             # <<<<<<<<<<<<<<
 *     cdef const map[X,Y].value_type *key_value
 *     cdef map[X,Y].const_iterator iter = s.begin()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 238, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_o = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "map.to_py":240
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 *     cdef map[X,Y].const_iterator iter = s.begin()             # <<<<<<<<<<<<<<
 *     while iter != s.end():
 *         key_value = &cython.operator.dereference(iter)
 */
  __pyx_v_iter = __pyx_v_s.begin();

  /* "map.to_py":241
 *     cdef const map[X,Y].value_type *key_value
 *     cdef map[X,Y].const_iterator iter = s.begin()
 *     while iter != s.end():             # <<<<<<<<<<<<<<
 *         key_value = &cython.operator.dereference(iter)
 *         o[key_value.first] = key_value.second
 */
  while (1) {
    __pyx_t_2 = (__pyx_v_iter != __pyx_v_s.end());
    if (!__pyx_t_2) break;

    /* "map.to_py":242
 *     cdef map[X,Y].const_iterator iter = s.begin()
 *     while iter != s.end():
 *         key_value = &cython.operator.dereference(iter)             # <<<<<<<<<<<<<<
 *         o[key_value.first] = key_value.second
 *         cython.operator.preincrement(iter)
 */
    __pyx_v_key_value = (&(*__pyx_v_iter));

    /* "map.to_py":243
 *     while iter != s.end():
 *         key_value = &cython.operator.dereference(iter)
 *         o[key_value.first] = key_value.second             # <<<<<<<<<<<<<<
 *         cython.operator.preincrement(iter)
 *     return o
 */
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_key_value->second); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 243, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_v_key_value->first); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 243, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (unlikely((PyDict_SetItem(__pyx_v_o, __pyx_t_3, __pyx_t_1) < 0))) __PYX_ERR(1, 243, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "map.to_py":244
 *         key_value = &cython.operator.dereference(iter)
 *         o[key_value.first] = key_value.second
 *         cython.operator.preincrement(iter)             # <<<<<<<<<<<<<<
 *     return o
 * 
 */
    (void)((++__pyx_v_iter));
  }

  /* "map.to_py":245
 *         o[key_value.first] = key_value.second
 *         cython.operator.preincrement(iter)
 *     return o             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_o);
  __pyx_r = __pyx_v_o;
  goto __pyx_L0;

  /* "map.to_py":237
 * 
 * @cname("__pyx_convert_map_to_py_std_3a__3a_string____double")
 * cdef object __pyx_convert_map_to_py_std_3a__3a_string____double(const map[X,Y]& s):             # <<<<<<<<<<<<<<
 *     o = {}
 *     cdef const map[X,Y].value_type *key_value
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("map.to_py.__pyx_convert_map_to_py_std_3a__3a_string____double", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_o);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/complex.pxd":19
 * 
 *         @property
 *         cdef inline double real(self):             # <<<<<<<<<<<<<<
 *             return self.cval.real
 * 
 */

static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4real_real(PyComplexObject *__pyx_v_self) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("real", 0);

  /* "cpython/complex.pxd":20
 *         @property
 *         cdef inline double real(self):
 *             return self.cval.real             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = __pyx_v_self->cval.real;
  goto __pyx_L0;

  /* "cpython/complex.pxd":19
 * 
 *         @property
 *         cdef inline double real(self):             # <<<<<<<<<<<<<<
 *             return self.cval.real
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/complex.pxd":23
 * 
 *         @property
 *         cdef inline double imag(self):             # <<<<<<<<<<<<<<
 *             return self.cval.imag
 * 
 */

static CYTHON_INLINE double __pyx_f_7cpython_7complex_7complex_4imag_imag(PyComplexObject *__pyx_v_self) {
  double __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("imag", 0);

  /* "cpython/complex.pxd":24
 *         @property
 *         cdef inline double imag(self):
 *             return self.cval.imag             # <<<<<<<<<<<<<<
 * 
 *     # PyTypeObject PyComplex_Type
 */
  __pyx_r = __pyx_v_self->cval.imag;
  goto __pyx_L0;

  /* "cpython/complex.pxd":23
 * 
 *         @property
 *         cdef inline double imag(self):             # <<<<<<<<<<<<<<
 *             return self.cval.imag
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/contextvars.pxd":112
 * 
 * 
 * cdef inline object get_value(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the default value of the context variable,
 */

static CYTHON_INLINE PyObject *__pyx_f_7cpython_11contextvars_get_value(PyObject *__pyx_v_var, struct __pyx_opt_args_7cpython_11contextvars_get_value *__pyx_optional_args) {
  PyObject *__pyx_v_default_value = ((PyObject *)Py_None);
  PyObject *__pyx_v_value;
  PyObject *__pyx_v_pyvalue = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_value", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default_value = __pyx_optional_args->default_value;
    }
  }

  /* "cpython/contextvars.pxd":117
 *     or None if no such value or default was found.
 *     """
 *     cdef PyObject *value = NULL             # <<<<<<<<<<<<<<
 *     PyContextVar_Get(var, NULL, &value)
 *     if value is NULL:
 */
  __pyx_v_value = NULL;

  /* "cpython/contextvars.pxd":118
 *     """
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, NULL, &value)             # <<<<<<<<<<<<<<
 *     if value is NULL:
 *         # context variable does not have a default
 */
  __pyx_t_1 = PyContextVar_Get(__pyx_v_var, NULL, (&__pyx_v_value)); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(2, 118, __pyx_L1_error)

  /* "cpython/contextvars.pxd":119
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, NULL, &value)
 *     if value is NULL:             # <<<<<<<<<<<<<<
 *         # context variable does not have a default
 *         pyvalue = default_value
 */
  __pyx_t_2 = (__pyx_v_value == NULL);
  if (__pyx_t_2) {

    /* "cpython/contextvars.pxd":121
 *     if value is NULL:
 *         # context variable does not have a default
 *         pyvalue = default_value             # <<<<<<<<<<<<<<
 *     else:
 *         # value or default value of context variable
 */
    __Pyx_INCREF(__pyx_v_default_value);
    __pyx_v_pyvalue = __pyx_v_default_value;

    /* "cpython/contextvars.pxd":119
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, NULL, &value)
 *     if value is NULL:             # <<<<<<<<<<<<<<
 *         # context variable does not have a default
 *         pyvalue = default_value
 */
    goto __pyx_L3;
  }

  /* "cpython/contextvars.pxd":124
 *     else:
 *         # value or default value of context variable
 *         pyvalue = <object>value             # <<<<<<<<<<<<<<
 *         Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue
 */
  /*else*/ {
    __pyx_t_3 = ((PyObject *)__pyx_v_value);
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v_pyvalue = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "cpython/contextvars.pxd":125
 *         # value or default value of context variable
 *         pyvalue = <object>value
 *         Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'             # <<<<<<<<<<<<<<
 *     return pyvalue
 * 
 */
    Py_XDECREF(__pyx_v_value);
  }
  __pyx_L3:;

  /* "cpython/contextvars.pxd":126
 *         pyvalue = <object>value
 *         Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_pyvalue);
  __pyx_r = __pyx_v_pyvalue;
  goto __pyx_L0;

  /* "cpython/contextvars.pxd":112
 * 
 * 
 * cdef inline object get_value(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the default value of the context variable,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cpython.contextvars.get_value", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyvalue);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cpython/contextvars.pxd":129
 * 
 * 
 * cdef inline object get_value_no_default(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the provided default value if no such value was found.
 */

static CYTHON_INLINE PyObject *__pyx_f_7cpython_11contextvars_get_value_no_default(PyObject *__pyx_v_var, struct __pyx_opt_args_7cpython_11contextvars_get_value_no_default *__pyx_optional_args) {
  PyObject *__pyx_v_default_value = ((PyObject *)Py_None);
  PyObject *__pyx_v_value;
  PyObject *__pyx_v_pyvalue = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_value_no_default", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_default_value = __pyx_optional_args->default_value;
    }
  }

  /* "cpython/contextvars.pxd":135
 *     Ignores the default value of the context variable, if any.
 *     """
 *     cdef PyObject *value = NULL             # <<<<<<<<<<<<<<
 *     PyContextVar_Get(var, <PyObject*>default_value, &value)
 *     # value of context variable or 'default_value'
 */
  __pyx_v_value = NULL;

  /* "cpython/contextvars.pxd":136
 *     """
 *     cdef PyObject *value = NULL
 *     PyContextVar_Get(var, <PyObject*>default_value, &value)             # <<<<<<<<<<<<<<
 *     # value of context variable or 'default_value'
 *     pyvalue = <object>value
 */
  __pyx_t_1 = PyContextVar_Get(__pyx_v_var, ((PyObject *)__pyx_v_default_value), (&__pyx_v_value)); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(2, 136, __pyx_L1_error)

  /* "cpython/contextvars.pxd":138
 *     PyContextVar_Get(var, <PyObject*>default_value, &value)
 *     # value of context variable or 'default_value'
 *     pyvalue = <object>value             # <<<<<<<<<<<<<<
 *     Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue
 */
  __pyx_t_2 = ((PyObject *)__pyx_v_value);
  __Pyx_INCREF(__pyx_t_2);
  __pyx_v_pyvalue = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cpython/contextvars.pxd":139
 *     # value of context variable or 'default_value'
 *     pyvalue = <object>value
 *     Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'             # <<<<<<<<<<<<<<
 *     return pyvalue
 */
  Py_XDECREF(__pyx_v_value);

  /* "cpython/contextvars.pxd":140
 *     pyvalue = <object>value
 *     Py_XDECREF(value)  # PyContextVar_Get() returned an owned reference as 'PyObject*'
 *     return pyvalue             # <<<<<<<<<<<<<<
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_pyvalue);
  __pyx_r = __pyx_v_pyvalue;
  goto __pyx_L0;

  /* "cpython/contextvars.pxd":129
 * 
 * 
 * cdef inline object get_value_no_default(var, default_value=None):             # <<<<<<<<<<<<<<
 *     """Return a new reference to the value of the context variable,
 *     or the provided default value if no such value was found.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cpython.contextvars.get_value_no_default", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pyvalue);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":246
 * 
 *         @property
 *         cdef inline PyObject* base(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a borrowed reference to the object owning the data/memory.
 *             """
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_7ndarray_4base_base(PyArrayObject *__pyx_v_self) {
  PyObject *__pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":249
 *             """Returns a borrowed reference to the object owning the data/memory.
 *             """
 *             return PyArray_BASE(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_BASE(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":246
 * 
 *         @property
 *         cdef inline PyObject* base(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a borrowed reference to the object owning the data/memory.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":252
 * 
 *         @property
 *         cdef inline dtype descr(self):             # <<<<<<<<<<<<<<
 *             """Returns an owned reference to the dtype of the array.
 *             """
 */

static CYTHON_INLINE PyArray_Descr *__pyx_f_5numpy_7ndarray_5descr_descr(PyArrayObject *__pyx_v_self) {
  PyArray_Descr *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyArray_Descr *__pyx_t_1;
  __Pyx_RefNannySetupContext("descr", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":255
 *             """Returns an owned reference to the dtype of the array.
 *             """
 *             return <dtype>PyArray_DESCR(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __Pyx_XDECREF((PyObject *)__pyx_r);
  __pyx_t_1 = PyArray_DESCR(__pyx_v_self);
  __Pyx_INCREF((PyObject *)((PyArray_Descr *)__pyx_t_1));
  __pyx_r = ((PyArray_Descr *)__pyx_t_1);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":252
 * 
 *         @property
 *         cdef inline dtype descr(self):             # <<<<<<<<<<<<<<
 *             """Returns an owned reference to the dtype of the array.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF((PyObject *)__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":258
 * 
 *         @property
 *         cdef inline int ndim(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the number of dimensions in the array.
 *             """
 */

static CYTHON_INLINE int __pyx_f_5numpy_7ndarray_4ndim_ndim(PyArrayObject *__pyx_v_self) {
  int __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":261
 *             """Returns the number of dimensions in the array.
 *             """
 *             return PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_NDIM(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":258
 * 
 *         @property
 *         cdef inline int ndim(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the number of dimensions in the array.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":264
 * 
 *         @property
 *         cdef inline npy_intp *shape(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the dimensions/shape of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_5shape_shape(PyArrayObject *__pyx_v_self) {
  npy_intp *__pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":269
 *             Can return NULL for 0-dimensional arrays.
 *             """
 *             return PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_DIMS(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":264
 * 
 *         @property
 *         cdef inline npy_intp *shape(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the dimensions/shape of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":272
 * 
 *         @property
 *         cdef inline npy_intp *strides(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the strides of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

static CYTHON_INLINE npy_intp *__pyx_f_5numpy_7ndarray_7strides_strides(PyArrayObject *__pyx_v_self) {
  npy_intp *__pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":276
 *             The number of elements matches the number of dimensions of the array (ndim).
 *             """
 *             return PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_STRIDES(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":272
 * 
 *         @property
 *         cdef inline npy_intp *strides(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns a pointer to the strides of the array.
 *             The number of elements matches the number of dimensions of the array (ndim).
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":279
 * 
 *         @property
 *         cdef inline npy_intp size(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the total size (in number of elements) of the array.
 *             """
 */

static CYTHON_INLINE npy_intp __pyx_f_5numpy_7ndarray_4size_size(PyArrayObject *__pyx_v_self) {
  npy_intp __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":282
 *             """Returns the total size (in number of elements) of the array.
 *             """
 *             return PyArray_SIZE(self)             # <<<<<<<<<<<<<<
 * 
 *         @property
 */
  __pyx_r = PyArray_SIZE(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":279
 * 
 *         @property
 *         cdef inline npy_intp size(self) nogil:             # <<<<<<<<<<<<<<
 *             """Returns the total size (in number of elements) of the array.
 *             """
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":285
 * 
 *         @property
 *         cdef inline char* data(self) nogil:             # <<<<<<<<<<<<<<
 *             """The pointer to the data buffer as a char*.
 *             This is provided for legacy reasons to avoid direct struct field access.
 */

static CYTHON_INLINE char *__pyx_f_5numpy_7ndarray_4data_data(PyArrayObject *__pyx_v_self) {
  char *__pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":291
 *             of `PyArray_DATA()` instead, which returns a 'void*'.
 *             """
 *             return PyArray_BYTES(self)             # <<<<<<<<<<<<<<
 * 
 *     ctypedef unsigned char      npy_bool
 */
  __pyx_r = PyArray_BYTES(__pyx_v_self);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":285
 * 
 *         @property
 *         cdef inline char* data(self) nogil:             # <<<<<<<<<<<<<<
 *             """The pointer to the data buffer as a char*.
 *             This is provided for legacy reasons to avoid direct struct field access.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":777
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":778
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 778, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":777
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":780
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":781
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 781, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":780
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":783
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":784
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 784, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":783
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":786
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":787
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 787, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":786
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":789
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":790
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 790, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":789
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":792
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyDataType_SHAPE(PyArray_Descr *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("PyDataType_SHAPE", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":793
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  __pyx_t_1 = PyDataType_HASSUBARRAY(__pyx_v_d);
  if (__pyx_t_1) {

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":794
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape             # <<<<<<<<<<<<<<
 *     else:
 *         return ()
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject*)__pyx_v_d->subarray->shape));
    __pyx_r = ((PyObject*)__pyx_v_d->subarray->shape);
    goto __pyx_L0;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":793
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):
 *     if PyDataType_HASSUBARRAY(d):             # <<<<<<<<<<<<<<
 *         return <tuple>d.subarray.shape
 *     else:
 */
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":796
 *         return <tuple>d.subarray.shape
 *     else:
 *         return ()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(__pyx_empty_tuple);
    __pyx_r = __pyx_empty_tuple;
    goto __pyx_L0;
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":792
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline tuple PyDataType_SHAPE(dtype d):             # <<<<<<<<<<<<<<
 *     if PyDataType_HASSUBARRAY(d):
 *         return <tuple>d.subarray.shape
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":971
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_array_base", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":972
 * 
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!             # <<<<<<<<<<<<<<
 *     PyArray_SetBaseObject(arr, base)
 * 
 */
  Py_INCREF(__pyx_v_base);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":973
 * cdef inline void set_array_base(ndarray arr, object base):
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  (void)(PyArray_SetBaseObject(__pyx_v_arr, __pyx_v_base));

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":971
 *     int _import_umath() except -1
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *     Py_INCREF(base) # important to do this before stealing the reference below!
 *     PyArray_SetBaseObject(arr, base)
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":975
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_v_base;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("get_array_base", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":976
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)             # <<<<<<<<<<<<<<
 *     if base is NULL:
 *         return None
 */
  __pyx_v_base = PyArray_BASE(__pyx_v_arr);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":977
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  __pyx_t_1 = (__pyx_v_base == NULL);
  if (__pyx_t_1) {

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":978
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     return <object>base
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":977
 * cdef inline object get_array_base(ndarray arr):
 *     base = PyArray_BASE(arr)
 *     if base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     return <object>base
 */
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":979
 *     if base is NULL:
 *         return None
 *     return <object>base             # <<<<<<<<<<<<<<
 * 
 * # Versions of the import_* functions which are more suitable for
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_base));
  __pyx_r = ((PyObject *)__pyx_v_base);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":975
 *     PyArray_SetBaseObject(arr, base)
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     base = PyArray_BASE(arr)
 *     if base is NULL:
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":983
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_array(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_array", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":984
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":985
 * cdef inline int import_array() except -1:
 *     try:
 *         __pyx_import_array()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")
 */
      __pyx_t_4 = _import_array(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(3, 985, __pyx_L3_error)

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":984
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":986
 *     try:
 *         __pyx_import_array()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(3, 986, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":987
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple_, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 987, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(3, 987, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":984
 * # Cython code.
 * cdef inline int import_array() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         __pyx_import_array()
 *     except Exception:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":983
 * # Versions of the import_* functions which are more suitable for
 * # Cython code.
 * cdef inline int import_array() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         __pyx_import_array()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_array", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":989
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_umath(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_umath", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":990
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":991
 * cdef inline int import_umath() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(3, 991, __pyx_L3_error)

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":990
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":992
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(3, 992, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":993
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 993, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(3, 993, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":990
 * 
 * cdef inline int import_umath() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":989
 *         raise ImportError("numpy.core.multiarray failed to import")
 * 
 * cdef inline int import_umath() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_umath", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":995
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

static CYTHON_INLINE int __pyx_f_5numpy_import_ufunc(void) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("import_ufunc", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":996
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
  {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ExceptionSave(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3);
    __Pyx_XGOTREF(__pyx_t_1);
    __Pyx_XGOTREF(__pyx_t_2);
    __Pyx_XGOTREF(__pyx_t_3);
    /*try:*/ {

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":997
 * cdef inline int import_ufunc() except -1:
 *     try:
 *         _import_umath()             # <<<<<<<<<<<<<<
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")
 */
      __pyx_t_4 = _import_umath(); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(3, 997, __pyx_L3_error)

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":996
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    }
    __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L8_try_end;
    __pyx_L3_error:;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":998
 *     try:
 *         _import_umath()
 *     except Exception:             # <<<<<<<<<<<<<<
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 */
    __pyx_t_4 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
    if (__pyx_t_4) {
      __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
      if (__Pyx_GetException(&__pyx_t_5, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(3, 998, __pyx_L5_except_error)
      __Pyx_XGOTREF(__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_6);
      __Pyx_XGOTREF(__pyx_t_7);

      /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":999
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * 
 */
      __pyx_t_8 = __Pyx_PyObject_Call(__pyx_builtin_ImportError, __pyx_tuple__2, NULL); if (unlikely(!__pyx_t_8)) __PYX_ERR(3, 999, __pyx_L5_except_error)
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      __PYX_ERR(3, 999, __pyx_L5_except_error)
    }
    goto __pyx_L5_except_error;

    /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":996
 * 
 * cdef inline int import_ufunc() except -1:
 *     try:             # <<<<<<<<<<<<<<
 *         _import_umath()
 *     except Exception:
 */
    __pyx_L5_except_error:;
    __Pyx_XGIVEREF(__pyx_t_1);
    __Pyx_XGIVEREF(__pyx_t_2);
    __Pyx_XGIVEREF(__pyx_t_3);
    __Pyx_ExceptionReset(__pyx_t_1, __pyx_t_2, __pyx_t_3);
    goto __pyx_L1_error;
    __pyx_L8_try_end:;
  }

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":995
 *         raise ImportError("numpy.core.umath failed to import")
 * 
 * cdef inline int import_ufunc() except -1:             # <<<<<<<<<<<<<<
 *     try:
 *         _import_umath()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.import_ufunc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1002
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_timedelta64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_timedelta64_object", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1014
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyTimedeltaArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyTimedeltaArrType_Type));
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1002
 * 
 * 
 * cdef inline bint is_timedelta64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.timedelta64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1017
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

static CYTHON_INLINE int __pyx_f_5numpy_is_datetime64_object(PyObject *__pyx_v_obj) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("is_datetime64_object", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1029
 *     bool
 *     """
 *     return PyObject_TypeCheck(obj, &PyDatetimeArrType_Type)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = PyObject_TypeCheck(__pyx_v_obj, (&PyDatetimeArrType_Type));
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1017
 * 
 * 
 * cdef inline bint is_datetime64_object(object obj):             # <<<<<<<<<<<<<<
 *     """
 *     Cython equivalent of `isinstance(obj, np.datetime64)`
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1032
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

static CYTHON_INLINE npy_datetime __pyx_f_5numpy_get_datetime64_value(PyObject *__pyx_v_obj) {
  npy_datetime __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1039
 *     also needed.  That can be found using `get_datetime64_unit`.
 *     """
 *     return (<PyDatetimeScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyDatetimeScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1032
 * 
 * 
 * cdef inline npy_datetime get_datetime64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy datetime64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1042
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

static CYTHON_INLINE npy_timedelta __pyx_f_5numpy_get_timedelta64_value(PyObject *__pyx_v_obj) {
  npy_timedelta __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1046
 *     returns the int64 value underlying scalar numpy timedelta64 object
 *     """
 *     return (<PyTimedeltaScalarObject*>obj).obval             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((PyTimedeltaScalarObject *)__pyx_v_obj)->obval;
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1042
 * 
 * 
 * cdef inline npy_timedelta get_timedelta64_value(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the int64 value underlying scalar numpy timedelta64 object
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1049
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

static CYTHON_INLINE NPY_DATETIMEUNIT __pyx_f_5numpy_get_datetime64_unit(PyObject *__pyx_v_obj) {
  NPY_DATETIMEUNIT __pyx_r;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1053
 *     returns the unit part of the dtype for a numpy datetime64 object.
 *     """
 *     return <NPY_DATETIMEUNIT>(<PyDatetimeScalarObject*>obj).obmeta.base             # <<<<<<<<<<<<<<
 */
  __pyx_r = ((NPY_DATETIMEUNIT)((PyDatetimeScalarObject *)__pyx_v_obj)->obmeta.base);
  goto __pyx_L0;

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":1049
 * 
 * 
 * cdef inline NPY_DATETIMEUNIT get_datetime64_unit(object obj) nogil:             # <<<<<<<<<<<<<<
 *     """
 *     returns the unit part of the dtype for a numpy datetime64 object.
 */

  /* function exit code */
  __pyx_L0:;
  return __pyx_r;
}

/* "cantera/reaction.pyx":28
 *     _reaction_rate_type = ""
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return f"<{type(self).__name__} at {id(self):0x}>"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate___repr__(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate___repr__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_UCS4 __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "cantera/reaction.pyx":29
 * 
 *     def __repr__(self):
 *         return f"<{type(self).__name__} at {id(self):0x}>"             # <<<<<<<<<<<<<<
 * 
 *     def __call__(self, double temperature):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 127;
  __Pyx_INCREF(__pyx_kp_u__3);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__3);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u__3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))), __pyx_n_s_name); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
  __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_kp_u_at);
  __pyx_t_2 += 4;
  __Pyx_GIVEREF(__pyx_kp_u_at);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u_at);
  __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_id, ((PyObject *)__pyx_v_self)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_Format(__pyx_t_5, __pyx_kp_u_0x); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u__4);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__4);
  PyTuple_SET_ITEM(__pyx_t_1, 4, __pyx_kp_u__4);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_1, 5, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 29, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":28
 *     _reaction_rate_type = ""
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return f"<{type(self).__name__} at {id(self):0x}>"
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":31
 *         return f"<{type(self).__name__} at {id(self):0x}>"
 * 
 *     def __call__(self, double temperature):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_12ReactionRate_2__call__, "\n        Evaluate rate expression based on temperature.\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_7cantera_8reaction_12ReactionRate_2__call__;
#endif
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_temperature;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temperature,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temperature)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 31, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__call__") < 0)) __PYX_ERR(0, 31, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_temperature = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_temperature == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 31, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__call__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 31, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_2__call__(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self), __pyx_v_temperature);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_2__call__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self, double __pyx_v_temperature) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "cantera/reaction.pyx":35
 *         Evaluate rate expression based on temperature.
 *         """
 *         return self.rate.eval(temperature)             # <<<<<<<<<<<<<<
 * 
 *     property type:
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->rate->eval(__pyx_v_temperature);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 35, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 35, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":31
 *         return f"<{type(self).__name__} at {id(self):0x}>"
 * 
 *     def __call__(self, double temperature):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":39
 *     property type:
 *         """ Get the C++ ReactionRate type """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.rate.type())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_4type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_4type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_4type___get__(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_4type___get__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":40
 *         """ Get the C++ ReactionRate type """
 *         def __get__(self):
 *             return pystr(self.rate.type())             # <<<<<<<<<<<<<<
 * 
 *     property sub_type:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->rate->type()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 40, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":39
 *     property type:
 *         """ Get the C++ ReactionRate type """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.rate.type())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":44
 *     property sub_type:
 *         """ Get the C++ ReactionRate sub-type """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.rate.subType())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_8sub_type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_8sub_type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_8sub_type___get__(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_8sub_type___get__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":45
 *         """ Get the C++ ReactionRate sub-type """
 *         def __get__(self):
 *             return pystr(self.rate.subType())             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->rate->subType()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 45, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":44
 *     property sub_type:
 *         """ Get the C++ ReactionRate sub-type """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.rate.subType())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.sub_type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":54
 *         # ensure all reaction types are registered
 *         if not _reaction_rate_class_registry:
 *             def register_subclasses(cls):             # <<<<<<<<<<<<<<
 *                 for c in cls.__subclasses__():
 *                     rate_type = getattr(c, "_reaction_rate_type")
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_4wrap_1register_subclasses(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_12ReactionRate_4wrap_1register_subclasses = {"register_subclasses", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_12ReactionRate_4wrap_1register_subclasses, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_4wrap_1register_subclasses(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_cls = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("register_subclasses (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_cls,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_cls)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 54, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "register_subclasses") < 0)) __PYX_ERR(0, 54, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_cls = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("register_subclasses", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 54, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.wrap.register_subclasses", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_4wrap_register_subclasses(__pyx_self, __pyx_v_cls);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_4wrap_register_subclasses(PyObject *__pyx_self, PyObject *__pyx_v_cls) {
  struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *__pyx_cur_scope;
  struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *__pyx_outer_scope;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_v_rate_type = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("register_subclasses", 0);
  __pyx_outer_scope = (struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *) __Pyx_CyFunction_GetClosure(__pyx_self);
  __pyx_cur_scope = __pyx_outer_scope;

  /* "cantera/reaction.pyx":55
 *         if not _reaction_rate_class_registry:
 *             def register_subclasses(cls):
 *                 for c in cls.__subclasses__():             # <<<<<<<<<<<<<<
 *                     rate_type = getattr(c, "_reaction_rate_type")
 *                     _reaction_rate_class_registry[rate_type] = c
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_cls, __pyx_n_s_subclasses); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 55, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = NULL;
  __pyx_t_4 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_3 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_3)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_4 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[1] = {__pyx_t_3, };
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_4, 0+__pyx_t_4);
    __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 55, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  if (likely(PyList_CheckExact(__pyx_t_1)) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 55, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 55, __pyx_L1_error)
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (likely(!__pyx_t_6)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 55, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 55, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      } else {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely((0 < 0))) __PYX_ERR(0, 55, __pyx_L1_error)
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 55, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        #endif
      }
    } else {
      __pyx_t_1 = __pyx_t_6(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 55, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":56
 *             def register_subclasses(cls):
 *                 for c in cls.__subclasses__():
 *                     rate_type = getattr(c, "_reaction_rate_type")             # <<<<<<<<<<<<<<
 *                     _reaction_rate_class_registry[rate_type] = c
 *                     register_subclasses(c)
 */
    __pyx_t_1 = __Pyx_GetAttr(__pyx_v_c, __pyx_n_u_reaction_rate_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 56, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF_SET(__pyx_v_rate_type, __pyx_t_1);
    __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":57
 *                 for c in cls.__subclasses__():
 *                     rate_type = getattr(c, "_reaction_rate_type")
 *                     _reaction_rate_class_registry[rate_type] = c             # <<<<<<<<<<<<<<
 *                     register_subclasses(c)
 * 
 */
    if (unlikely(__pyx_v_7cantera_8reaction__reaction_rate_class_registry == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(0, 57, __pyx_L1_error)
    }
    if (unlikely((PyDict_SetItem(__pyx_v_7cantera_8reaction__reaction_rate_class_registry, __pyx_v_rate_type, __pyx_v_c) < 0))) __PYX_ERR(0, 57, __pyx_L1_error)

    /* "cantera/reaction.pyx":58
 *                     rate_type = getattr(c, "_reaction_rate_type")
 *                     _reaction_rate_class_registry[rate_type] = c
 *                     register_subclasses(c)             # <<<<<<<<<<<<<<
 * 
 *             # update global reaction class registry
 */
    if (unlikely(!__pyx_cur_scope->__pyx_v_register_subclasses)) { __Pyx_RaiseClosureNameError("register_subclasses"); __PYX_ERR(0, 58, __pyx_L1_error) }
    __pyx_t_1 = __pyx_pf_7cantera_8reaction_12ReactionRate_4wrap_register_subclasses(__pyx_cur_scope->__pyx_v_register_subclasses, __pyx_v_c); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 58, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":55
 *         if not _reaction_rate_class_registry:
 *             def register_subclasses(cls):
 *                 for c in cls.__subclasses__():             # <<<<<<<<<<<<<<
 *                     rate_type = getattr(c, "_reaction_rate_type")
 *                     _reaction_rate_class_registry[rate_type] = c
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":54
 *         # ensure all reaction types are registered
 *         if not _reaction_rate_class_registry:
 *             def register_subclasses(cls):             # <<<<<<<<<<<<<<
 *                 for c in cls.__subclasses__():
 *                     rate_type = getattr(c, "_reaction_rate_type")
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.wrap.register_subclasses", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XDECREF(__pyx_v_rate_type);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":48
 * 
 *     @staticmethod
 *     cdef wrap(shared_ptr[CxxReactionRate] rate):             # <<<<<<<<<<<<<<
 *         """
 *         Wrap a C++ Reaction object with a Python object of the correct derived type.
 */

static PyObject *__pyx_f_7cantera_8reaction_12ReactionRate_wrap(std::shared_ptr<Cantera::ReactionRate>  __pyx_v_rate) {
  struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *__pyx_cur_scope;
  Cantera::Delegator *__pyx_v_drate;
  Cantera::PythonHandle *__pyx_v_handle;
  struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_py_rate = NULL;
  PyObject *__pyx_v_rate_type = NULL;
  PyObject *__pyx_v_cls = NULL;
  struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_rr = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  __pyx_t_7cantera_9delegator_CxxDelegatorPtr __pyx_t_4;
  std::string __pyx_t_5;
  PyObject *__pyx_t_6;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrap", 0);
  __pyx_cur_scope = (struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *)__pyx_tp_new_7cantera_8reaction___pyx_scope_struct__wrap(__pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap, __pyx_empty_tuple, NULL);
  if (unlikely(!__pyx_cur_scope)) {
    __pyx_cur_scope = ((struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *)Py_None);
    __Pyx_INCREF(Py_None);
    __PYX_ERR(0, 48, __pyx_L1_error)
  } else {
    __Pyx_GOTREF((PyObject *)__pyx_cur_scope);
  }

  /* "cantera/reaction.pyx":53
 *         """
 *         # ensure all reaction types are registered
 *         if not _reaction_rate_class_registry:             # <<<<<<<<<<<<<<
 *             def register_subclasses(cls):
 *                 for c in cls.__subclasses__():
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_7cantera_8reaction__reaction_rate_class_registry); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 53, __pyx_L1_error)
  __pyx_t_2 = (!__pyx_t_1);
  if (__pyx_t_2) {

    /* "cantera/reaction.pyx":54
 *         # ensure all reaction types are registered
 *         if not _reaction_rate_class_registry:
 *             def register_subclasses(cls):             # <<<<<<<<<<<<<<
 *                 for c in cls.__subclasses__():
 *                     rate_type = getattr(c, "_reaction_rate_type")
 */
    __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_12ReactionRate_4wrap_1register_subclasses, 0, __pyx_n_s_ReactionRate_wrap_locals_registe, ((PyObject*)__pyx_cur_scope), __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__6)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 54, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_cur_scope->__pyx_v_register_subclasses = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":61
 * 
 *             # update global reaction class registry
 *             register_subclasses(ReactionRate)             # <<<<<<<<<<<<<<
 * 
 *         # Check for delegated rate, which will already have a Python wrapper
 */
    __pyx_t_3 = __pyx_pf_7cantera_8reaction_12ReactionRate_4wrap_register_subclasses(__pyx_cur_scope->__pyx_v_register_subclasses, ((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 61, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":53
 *         """
 *         # ensure all reaction types are registered
 *         if not _reaction_rate_class_registry:             # <<<<<<<<<<<<<<
 *             def register_subclasses(cls):
 *                 for c in cls.__subclasses__():
 */
  }

  /* "cantera/reaction.pyx":64
 * 
 *         # Check for delegated rate, which will already have a Python wrapper
 *         cdef CxxDelegator* drate = dynamic_cast[CxxDelegatorPtr](rate.get())             # <<<<<<<<<<<<<<
 *         cdef CxxPythonHandle* handle
 * 
 */
  try {
    __pyx_t_4 = dynamic_cast<__pyx_t_7cantera_9delegator_CxxDelegatorPtr>(__pyx_v_rate.get());
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 64, __pyx_L1_error)
  }
  __pyx_v_drate = __pyx_t_4;

  /* "cantera/reaction.pyx":67
 *         cdef CxxPythonHandle* handle
 * 
 *         if drate != NULL:             # <<<<<<<<<<<<<<
 *             handle = dynamic_pointer_cast[CxxPythonHandle, CxxExternalHandle](
 *                 drate.getExternalHandle(stringify("python"))).get()
 */
  __pyx_t_2 = (__pyx_v_drate != NULL);
  if (__pyx_t_2) {

    /* "cantera/reaction.pyx":69
 *         if drate != NULL:
 *             handle = dynamic_pointer_cast[CxxPythonHandle, CxxExternalHandle](
 *                 drate.getExternalHandle(stringify("python"))).get()             # <<<<<<<<<<<<<<
 *             if handle != NULL and handle.get() != NULL:
 *                 py_rate = <ReactionRate>(<PyObject*>handle.get())
 */
    __pyx_t_5 = __pyx_f_7cantera_6_utils_stringify(__pyx_n_u_python); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 69, __pyx_L1_error)

    /* "cantera/reaction.pyx":68
 * 
 *         if drate != NULL:
 *             handle = dynamic_pointer_cast[CxxPythonHandle, CxxExternalHandle](             # <<<<<<<<<<<<<<
 *                 drate.getExternalHandle(stringify("python"))).get()
 *             if handle != NULL and handle.get() != NULL:
 */
    __pyx_v_handle = std::dynamic_pointer_cast<Cantera::PythonHandle,Cantera::ExternalHandle>(__pyx_v_drate->getExternalHandle(__pyx_t_5)).get();

    /* "cantera/reaction.pyx":70
 *             handle = dynamic_pointer_cast[CxxPythonHandle, CxxExternalHandle](
 *                 drate.getExternalHandle(stringify("python"))).get()
 *             if handle != NULL and handle.get() != NULL:             # <<<<<<<<<<<<<<
 *                 py_rate = <ReactionRate>(<PyObject*>handle.get())
 *                 py_rate._rate = rate
 */
    __pyx_t_1 = (__pyx_v_handle != NULL);
    if (__pyx_t_1) {
    } else {
      __pyx_t_2 = __pyx_t_1;
      goto __pyx_L6_bool_binop_done;
    }
    __pyx_t_1 = (__pyx_v_handle->get() != NULL);
    __pyx_t_2 = __pyx_t_1;
    __pyx_L6_bool_binop_done:;
    if (likely(__pyx_t_2)) {

      /* "cantera/reaction.pyx":71
 *                 drate.getExternalHandle(stringify("python"))).get()
 *             if handle != NULL and handle.get() != NULL:
 *                 py_rate = <ReactionRate>(<PyObject*>handle.get())             # <<<<<<<<<<<<<<
 *                 py_rate._rate = rate
 *                 return py_rate
 */
      __pyx_t_6 = ((PyObject *)__pyx_v_handle->get());
      __pyx_t_3 = ((PyObject *)__pyx_t_6);
      __Pyx_INCREF(__pyx_t_3);
      __pyx_v_py_rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_3);
      __pyx_t_3 = 0;

      /* "cantera/reaction.pyx":72
 *             if handle != NULL and handle.get() != NULL:
 *                 py_rate = <ReactionRate>(<PyObject*>handle.get())
 *                 py_rate._rate = rate             # <<<<<<<<<<<<<<
 *                 return py_rate
 *             else:
 */
      __pyx_v_py_rate->_rate = __pyx_v_rate;

      /* "cantera/reaction.pyx":73
 *                 py_rate = <ReactionRate>(<PyObject*>handle.get())
 *                 py_rate._rate = rate
 *                 return py_rate             # <<<<<<<<<<<<<<
 *             else:
 *                 raise CanteraError("Internal Error: Delegator does not have a "
 */
      __Pyx_XDECREF(__pyx_r);
      __Pyx_INCREF((PyObject *)__pyx_v_py_rate);
      __pyx_r = ((PyObject *)__pyx_v_py_rate);
      goto __pyx_L0;

      /* "cantera/reaction.pyx":70
 *             handle = dynamic_pointer_cast[CxxPythonHandle, CxxExternalHandle](
 *                 drate.getExternalHandle(stringify("python"))).get()
 *             if handle != NULL and handle.get() != NULL:             # <<<<<<<<<<<<<<
 *                 py_rate = <ReactionRate>(<PyObject*>handle.get())
 *                 py_rate._rate = rate
 */
    }

    /* "cantera/reaction.pyx":75
 *                 return py_rate
 *             else:
 *                 raise CanteraError("Internal Error: Delegator does not have a "             # <<<<<<<<<<<<<<
 *                                    "corresponding Python ExtensibleRate object")
 * 
 */
    /*else*/ {
      __Pyx_GetModuleGlobalName(__pyx_t_7, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 75, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_8 = NULL;
      __pyx_t_9 = 0;
      if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_7))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_7);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_7);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_7, function);
          __pyx_t_9 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_kp_u_Internal_Error_Delegator_does_no};
        __pyx_t_3 = __Pyx_PyObject_FastCall(__pyx_t_7, __pyx_callargs+1-__pyx_t_9, 1+__pyx_t_9);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 75, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __Pyx_Raise(__pyx_t_3, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __PYX_ERR(0, 75, __pyx_L1_error)
    }

    /* "cantera/reaction.pyx":67
 *         cdef CxxPythonHandle* handle
 * 
 *         if drate != NULL:             # <<<<<<<<<<<<<<
 *             handle = dynamic_pointer_cast[CxxPythonHandle, CxxExternalHandle](
 *                 drate.getExternalHandle(stringify("python"))).get()
 */
  }

  /* "cantera/reaction.pyx":79
 * 
 *         # identify class (either subType or type)
 *         rate_type = pystr(rate.get().subType())             # <<<<<<<<<<<<<<
 *         if rate_type == "":
 *             rate_type = pystr(rate.get().type())
 */
  __pyx_t_3 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_rate.get()->subType()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 79, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_rate_type = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":80
 *         # identify class (either subType or type)
 *         rate_type = pystr(rate.get().subType())
 *         if rate_type == "":             # <<<<<<<<<<<<<<
 *             rate_type = pystr(rate.get().type())
 *         cls = _reaction_rate_class_registry.get(rate_type, ReactionRate)
 */
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_v_rate_type, __pyx_kp_u__7, Py_EQ)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 80, __pyx_L1_error)
  if (__pyx_t_2) {

    /* "cantera/reaction.pyx":81
 *         rate_type = pystr(rate.get().subType())
 *         if rate_type == "":
 *             rate_type = pystr(rate.get().type())             # <<<<<<<<<<<<<<
 *         cls = _reaction_rate_class_registry.get(rate_type, ReactionRate)
 * 
 */
    __pyx_t_3 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_rate.get()->type()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 81, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF_SET(__pyx_v_rate_type, __pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":80
 *         # identify class (either subType or type)
 *         rate_type = pystr(rate.get().subType())
 *         if rate_type == "":             # <<<<<<<<<<<<<<
 *             rate_type = pystr(rate.get().type())
 *         cls = _reaction_rate_class_registry.get(rate_type, ReactionRate)
 */
  }

  /* "cantera/reaction.pyx":82
 *         if rate_type == "":
 *             rate_type = pystr(rate.get().type())
 *         cls = _reaction_rate_class_registry.get(rate_type, ReactionRate)             # <<<<<<<<<<<<<<
 * 
 *         # wrap C++ reaction rate
 */
  if (unlikely(__pyx_v_7cantera_8reaction__reaction_rate_class_registry == Py_None)) {
    PyErr_Format(PyExc_AttributeError, "'NoneType' object has no attribute '%.30s'", "get");
    __PYX_ERR(0, 82, __pyx_L1_error)
  }
  __pyx_t_3 = __Pyx_PyDict_GetItemDefault(__pyx_v_7cantera_8reaction__reaction_rate_class_registry, __pyx_v_rate_type, ((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 82, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_v_cls = __pyx_t_3;
  __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":86
 *         # wrap C++ reaction rate
 *         cdef ReactionRate rr
 *         rr = cls(init=False)             # <<<<<<<<<<<<<<
 *         rr._rate = rate
 *         rr.set_cxx_object()
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_init, Py_False) < 0) __PYX_ERR(0, 86, __pyx_L1_error)
  __pyx_t_7 = __Pyx_PyObject_Call(__pyx_v_cls, __pyx_empty_tuple, __pyx_t_3); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 86, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (!(likely(((__pyx_t_7) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_7, __pyx_ptype_7cantera_8reaction_ReactionRate))))) __PYX_ERR(0, 86, __pyx_L1_error)
  __pyx_v_rr = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_7);
  __pyx_t_7 = 0;

  /* "cantera/reaction.pyx":87
 *         cdef ReactionRate rr
 *         rr = cls(init=False)
 *         rr._rate = rate             # <<<<<<<<<<<<<<
 *         rr.set_cxx_object()
 *         return rr
 */
  __pyx_v_rr->_rate = __pyx_v_rate;

  /* "cantera/reaction.pyx":88
 *         rr = cls(init=False)
 *         rr._rate = rate
 *         rr.set_cxx_object()             # <<<<<<<<<<<<<<
 *         return rr
 * 
 */
  __pyx_t_7 = ((struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate *)__pyx_v_rr->__pyx_vtab)->set_cxx_object(__pyx_v_rr); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 88, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_7);
  __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

  /* "cantera/reaction.pyx":89
 *         rr._rate = rate
 *         rr.set_cxx_object()
 *         return rr             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_rr);
  __pyx_r = ((PyObject *)__pyx_v_rr);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":48
 * 
 *     @staticmethod
 *     cdef wrap(shared_ptr[CxxReactionRate] rate):             # <<<<<<<<<<<<<<
 *         """
 *         Wrap a C++ Reaction object with a Python object of the correct derived type.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.wrap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_py_rate);
  __Pyx_XDECREF(__pyx_v_rate_type);
  __Pyx_XDECREF(__pyx_v_cls);
  __Pyx_XDECREF((PyObject *)__pyx_v_rr);
  __Pyx_DECREF((PyObject *)__pyx_cur_scope);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":91
 *         return rr
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 * 
 */

static PyObject *__pyx_f_7cantera_8reaction_12ReactionRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":92
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __pyx_v_self->rate = __pyx_v_self->_rate.get();

  /* "cantera/reaction.pyx":91
 *         return rr
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":94
 *         self.rate = self._rate.get()
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, hyphenize=True):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_5from_dict(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_12ReactionRate_4from_dict, "\n        Create a `ReactionRate` object from a dictionary corresponding to its YAML\n        representation. By default, underscores in keys are replaced by hyphens.\n\n        An example for the creation of a `ReactionRate` from a dictionary is::\n\n            rate = ReactionRate.from_dict(\n                {\"rate-constant\": {\"A\": 38.7, \"b\": 2.7, \"Ea\": 26191840.0}})\n\n        :param data:\n            A dictionary corresponding to the YAML representation.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_12ReactionRate_5from_dict = {"from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_12ReactionRate_5from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_12ReactionRate_4from_dict};
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_5from_dict(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_data = 0;
  PyObject *__pyx_v_hyphenize = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_data,&__pyx_n_s_hyphenize,0};
    PyObject* values[2] = {0,0};

    /* "cantera/reaction.pyx":95
 * 
 *     @classmethod
 *     def from_dict(cls, data, hyphenize=True):             # <<<<<<<<<<<<<<
 *         """
 *         Create a `ReactionRate` object from a dictionary corresponding to its YAML
 */
    values[1] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 94, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_hyphenize);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 94, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "from_dict") < 0)) __PYX_ERR(0, 94, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_data = values[0];
    __pyx_v_hyphenize = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_dict", 0, 1, 2, __pyx_nargs); __PYX_ERR(0, 94, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_4from_dict(((PyTypeObject*)__pyx_v_cls), __pyx_v_data, __pyx_v_hyphenize);

  /* "cantera/reaction.pyx":94
 *         self.rate = self._rate.get()
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, hyphenize=True):
 *         """
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_4from_dict(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_data, PyObject *__pyx_v_hyphenize) {
  Cantera::AnyMap __pyx_v_any_map;
  std::shared_ptr<Cantera::ReactionRate>  __pyx_v_cxx_rate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_UCS4 __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  bool __pyx_t_7;
  Cantera::AnyMap __pyx_t_8;
  struct __pyx_opt_args_7cantera_6_utils_py_to_anymap __pyx_t_9;
  std::shared_ptr<Cantera::ReactionRate>  __pyx_t_10;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_dict", 0);

  /* "cantera/reaction.pyx":108
 *             A dictionary corresponding to the YAML representation.
 *         """
 *         if cls._reaction_rate_type != "":             # <<<<<<<<<<<<<<
 *             raise TypeError(
 *                 f"Class method 'from_dict' was invoked from '{cls.__name__}' but "
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_reaction_rate_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_kp_u__7, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 108, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_2)) {

    /* "cantera/reaction.pyx":110
 *         if cls._reaction_rate_type != "":
 *             raise TypeError(
 *                 f"Class method 'from_dict' was invoked from '{cls.__name__}' but "             # <<<<<<<<<<<<<<
 *                 "should be called from base class 'ReactionRate'")
 * 
 */
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = 0;
    __pyx_t_4 = 127;
    __Pyx_INCREF(__pyx_kp_u_Class_method_from_dict_was_invok);
    __pyx_t_3 += 43;
    __Pyx_GIVEREF(__pyx_kp_u_Class_method_from_dict_was_invok);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_Class_method_from_dict_was_invok);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_name); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_4 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_4) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_4;
    __pyx_t_3 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u_but_should_be_called_from_base);
    __pyx_t_3 += 53;
    __Pyx_GIVEREF(__pyx_kp_u_but_should_be_called_from_base);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u_but_should_be_called_from_base);
    __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 110, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":109
 *         """
 *         if cls._reaction_rate_type != "":
 *             raise TypeError(             # <<<<<<<<<<<<<<
 *                 f"Class method 'from_dict' was invoked from '{cls.__name__}' but "
 *                 "should be called from base class 'ReactionRate'")
 */
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 109, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 109, __pyx_L1_error)

    /* "cantera/reaction.pyx":108
 *             A dictionary corresponding to the YAML representation.
 *         """
 *         if cls._reaction_rate_type != "":             # <<<<<<<<<<<<<<
 *             raise TypeError(
 *                 f"Class method 'from_dict' was invoked from '{cls.__name__}' but "
 */
  }

  /* "cantera/reaction.pyx":113
 *                 "should be called from base class 'ReactionRate'")
 * 
 *         cdef CxxAnyMap any_map = py_to_anymap(data, hyphenize=hyphenize)             # <<<<<<<<<<<<<<
 *         cxx_rate = CxxNewReactionRate(any_map)
 *         return ReactionRate.wrap(cxx_rate)
 */
  __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_v_hyphenize); if (unlikely((__pyx_t_7 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 113, __pyx_L1_error)
  __pyx_t_9.__pyx_n = 1;
  __pyx_t_9.hyphenize = __pyx_t_7;
  __pyx_t_8 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_data, &__pyx_t_9); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 113, __pyx_L1_error)
  __pyx_v_any_map = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_8);

  /* "cantera/reaction.pyx":114
 * 
 *         cdef CxxAnyMap any_map = py_to_anymap(data, hyphenize=hyphenize)
 *         cxx_rate = CxxNewReactionRate(any_map)             # <<<<<<<<<<<<<<
 *         return ReactionRate.wrap(cxx_rate)
 * 
 */
  try {
    __pyx_t_10 = newReactionRate(__pyx_v_any_map);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 114, __pyx_L1_error)
  }
  __pyx_v_cxx_rate = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_10);

  /* "cantera/reaction.pyx":115
 *         cdef CxxAnyMap any_map = py_to_anymap(data, hyphenize=hyphenize)
 *         cxx_rate = CxxNewReactionRate(any_map)
 *         return ReactionRate.wrap(cxx_rate)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_8reaction_12ReactionRate_wrap(__pyx_v_cxx_rate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":94
 *         self.rate = self._rate.get()
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, hyphenize=True):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":117
 *         return ReactionRate.wrap(cxx_rate)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_yaml(cls, text):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_7from_yaml(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_12ReactionRate_6from_yaml, "\n        Create a `ReactionRate` object from its YAML string representation.\n\n        An example for the creation of a `ReactionRate` from a YAML string is::\n\n            rate = ReactionRate.from_yaml(\n                \"rate-constant: {A: 38.7, b: 2.7, Ea: 6260.0 cal/mol}\")\n\n        Units for ``A`` require a unit system with length in ``m`` and quantity in\n        ``kmol`` (standard Cantera units).\n\n        :param text:\n            The YAML reaction rate string.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_12ReactionRate_7from_yaml = {"from_yaml", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_12ReactionRate_7from_yaml, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_12ReactionRate_6from_yaml};
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_7from_yaml(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_text = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_yaml (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_text)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 117, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "from_yaml") < 0)) __PYX_ERR(0, 117, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_text = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_yaml", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 117, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.from_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_6from_yaml(((PyTypeObject*)__pyx_v_cls), __pyx_v_text);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_6from_yaml(PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_text) {
  Cantera::AnyMap __pyx_v_any_map;
  std::shared_ptr<Cantera::ReactionRate>  __pyx_v_cxx_rate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_UCS4 __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  std::string __pyx_t_7;
  Cantera::AnyMap __pyx_t_8;
  std::shared_ptr<Cantera::ReactionRate>  __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_yaml", 0);

  /* "cantera/reaction.pyx":133
 *             The YAML reaction rate string.
 *         """
 *         if cls._reaction_rate_type != "":             # <<<<<<<<<<<<<<
 *             raise TypeError(
 *                 f"Class method 'from_yaml' was invoked from '{cls.__name__}' but "
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_reaction_rate_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PyUnicode_Equals(__pyx_t_1, __pyx_kp_u__7, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 133, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_2)) {

    /* "cantera/reaction.pyx":135
 *         if cls._reaction_rate_type != "":
 *             raise TypeError(
 *                 f"Class method 'from_yaml' was invoked from '{cls.__name__}' but "             # <<<<<<<<<<<<<<
 *                 "should be called from base class 'ReactionRate'")
 * 
 */
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = 0;
    __pyx_t_4 = 127;
    __Pyx_INCREF(__pyx_kp_u_Class_method_from_yaml_was_invok);
    __pyx_t_3 += 43;
    __Pyx_GIVEREF(__pyx_kp_u_Class_method_from_yaml_was_invok);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_Class_method_from_yaml_was_invok);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_cls), __pyx_n_s_name); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_4 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) > __pyx_t_4) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_6) : __pyx_t_4;
    __pyx_t_3 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_6);
    __pyx_t_6 = 0;
    __Pyx_INCREF(__pyx_kp_u_but_should_be_called_from_base);
    __pyx_t_3 += 53;
    __Pyx_GIVEREF(__pyx_kp_u_but_should_be_called_from_base);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u_but_should_be_called_from_base);
    __pyx_t_6 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 135, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":134
 *         """
 *         if cls._reaction_rate_type != "":
 *             raise TypeError(             # <<<<<<<<<<<<<<
 *                 f"Class method 'from_yaml' was invoked from '{cls.__name__}' but "
 *                 "should be called from base class 'ReactionRate'")
 */
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 134, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 134, __pyx_L1_error)

    /* "cantera/reaction.pyx":133
 *             The YAML reaction rate string.
 *         """
 *         if cls._reaction_rate_type != "":             # <<<<<<<<<<<<<<
 *             raise TypeError(
 *                 f"Class method 'from_yaml' was invoked from '{cls.__name__}' but "
 */
  }

  /* "cantera/reaction.pyx":139
 * 
 *         cdef CxxAnyMap any_map
 *         any_map = AnyMapFromYamlString(stringify(text))             # <<<<<<<<<<<<<<
 *         cxx_rate = CxxNewReactionRate(any_map)
 *         return ReactionRate.wrap(cxx_rate)
 */
  __pyx_t_7 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_text); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 139, __pyx_L1_error)
  try {
    __pyx_t_8 = Cantera::AnyMap::fromYamlString(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_7));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 139, __pyx_L1_error)
  }
  __pyx_v_any_map = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_8);

  /* "cantera/reaction.pyx":140
 *         cdef CxxAnyMap any_map
 *         any_map = AnyMapFromYamlString(stringify(text))
 *         cxx_rate = CxxNewReactionRate(any_map)             # <<<<<<<<<<<<<<
 *         return ReactionRate.wrap(cxx_rate)
 * 
 */
  try {
    __pyx_t_9 = newReactionRate(__pyx_v_any_map);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 140, __pyx_L1_error)
  }
  __pyx_v_cxx_rate = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_9);

  /* "cantera/reaction.pyx":141
 *         any_map = AnyMapFromYamlString(stringify(text))
 *         cxx_rate = CxxNewReactionRate(any_map)
 *         return ReactionRate.wrap(cxx_rate)             # <<<<<<<<<<<<<<
 * 
 *     property input_data:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_8reaction_12ReactionRate_wrap(__pyx_v_cxx_rate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 141, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":117
 *         return ReactionRate.wrap(cxx_rate)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_yaml(cls, text):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.from_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":147
 *         Get input data for this reaction rate with its current parameter values.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return anymap_to_py(self.rate.parameters())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_10input_data_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_10input_data_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_10input_data___get__(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_10input_data___get__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":148
 *         """
 *         def __get__(self):
 *             return anymap_to_py(self.rate.parameters())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->rate->parameters();
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 148, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_7cantera_6_utils_anymap_to_py(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 148, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":147
 *         Get input data for this reaction rate with its current parameter values.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return anymap_to_py(self.rate.parameters())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.input_data.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":150
 *             return anymap_to_py(self.rate.parameters())
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def conversion_units(self) -> Units:
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_16conversion_units_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_16conversion_units_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_16conversion_units___get__(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_16conversion_units___get__(struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":156
 *         to different unit systems.
 *         """
 *         return Units.copy(self.rate.conversionUnits())             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((PyObject *)__pyx_vtabptr_7cantera_5units_Units->copy(__pyx_v_self->rate->conversionUnits())); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 156, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":150
 *             return anymap_to_py(self.rate.parameters())
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def conversion_units(self) -> Units:
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.conversion_units.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_12ReactionRate_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_12ReactionRate_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_8__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__rate_self_rate_cannot_be_c, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_12ReactionRate_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_12ReactionRate_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_12ReactionRate_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_12ReactionRate_10__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_12ReactionRate_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__rate_self_rate_cannot_be_c, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ReactionRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":167
 *     _reaction_rate_type = None
 * 
 *     def _cinit(self, input_data, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Helper function called by __cinit__. The method is used as a uniform interface
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_1_cinit(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_17ArrheniusRateBase__cinit, "\n        Helper function called by __cinit__. The method is used as a uniform interface\n        for object construction. A separate method is necessary as default argument\n        values to __cinit__ defined in derived classes are not available in the base\n        class's __cinit__ (which gets called first).\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_17ArrheniusRateBase_1_cinit = {"_cinit", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_1_cinit, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_17ArrheniusRateBase__cinit};
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_1_cinit(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_kwargs = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_cinit (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return NULL;
  __Pyx_GOTREF(__pyx_v_kwargs);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 167, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, kwd_pos_args, "_cinit") < 0)) __PYX_ERR(0, 167, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_cinit", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 167, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase._cinit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17ArrheniusRateBase__cinit(((struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *)__pyx_v_self), __pyx_v_input_data, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase__cinit(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self, PyObject *__pyx_v_input_data, PyObject *__pyx_v_kwargs) {
  PyObject *__pyx_v_par_list = NULL;
  PyObject *__pyx_v_par_string = NULL;
  PyObject *__pyx_7genexpr__pyx_v_k = NULL;
  PyObject *__pyx_8genexpr1__pyx_v_k = NULL;
  PyObject *__pyx_8genexpr2__pyx_v_k = NULL;
  PyObject *__pyx_8genexpr3__pyx_v_k = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_UCS4 __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  int __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_cinit", 0);

  /* "cantera/reaction.pyx":174
 *         class's __cinit__ (which gets called first).
 *         """
 *         if self._reaction_rate_type is None:             # <<<<<<<<<<<<<<
 *             raise TypeError(
 *                 f"Base class '{self.__class__.__name__}' cannot be instantiated "
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_reaction_rate_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 174, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__pyx_t_1 == Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_2)) {

    /* "cantera/reaction.pyx":176
 *         if self._reaction_rate_type is None:
 *             raise TypeError(
 *                 f"Base class '{self.__class__.__name__}' cannot be instantiated "             # <<<<<<<<<<<<<<
 *                 "by itself; use specialized rate constructors instead.")
 * 
 */
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = 0;
    __pyx_t_4 = 127;
    __Pyx_INCREF(__pyx_kp_u_Base_class);
    __pyx_t_3 += 12;
    __Pyx_GIVEREF(__pyx_kp_u_Base_class);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_Base_class);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_name); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_4 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_4) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_4;
    __pyx_t_3 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_INCREF(__pyx_kp_u_cannot_be_instantiated_by_itsel);
    __pyx_t_3 += 78;
    __Pyx_GIVEREF(__pyx_kp_u_cannot_be_instantiated_by_itsel);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u_cannot_be_instantiated_by_itsel);
    __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 176, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":175
 *         """
 *         if self._reaction_rate_type is None:
 *             raise TypeError(             # <<<<<<<<<<<<<<
 *                 f"Base class '{self.__class__.__name__}' cannot be instantiated "
 *                 "by itself; use specialized rate constructors instead.")
 */
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 175, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 175, __pyx_L1_error)

    /* "cantera/reaction.pyx":174
 *         class's __cinit__ (which gets called first).
 *         """
 *         if self._reaction_rate_type is None:             # <<<<<<<<<<<<<<
 *             raise TypeError(
 *                 f"Base class '{self.__class__.__name__}' cannot be instantiated "
 */
  }

  /* "cantera/reaction.pyx":179
 *                 "by itself; use specialized rate constructors instead.")
 * 
 *         if isinstance(input_data, dict):             # <<<<<<<<<<<<<<
 *             self._from_dict(input_data)
 *         elif all([kwargs[k] is not None for k in kwargs]):
 */
  __pyx_t_2 = PyDict_Check(__pyx_v_input_data); 
  if (__pyx_t_2) {

    /* "cantera/reaction.pyx":180
 * 
 *         if isinstance(input_data, dict):
 *             self._from_dict(input_data)             # <<<<<<<<<<<<<<
 *         elif all([kwargs[k] is not None for k in kwargs]):
 *             self._from_parameters(*[kwargs[k] for k in kwargs])
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_from_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 180, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
      __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
      if (likely(__pyx_t_6)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
        __Pyx_INCREF(__pyx_t_6);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_5, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_v_input_data};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 180, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":179
 *                 "by itself; use specialized rate constructors instead.")
 * 
 *         if isinstance(input_data, dict):             # <<<<<<<<<<<<<<
 *             self._from_dict(input_data)
 *         elif all([kwargs[k] is not None for k in kwargs]):
 */
    goto __pyx_L4;
  }

  /* "cantera/reaction.pyx":181
 *         if isinstance(input_data, dict):
 *             self._from_dict(input_data)
 *         elif all([kwargs[k] is not None for k in kwargs]):             # <<<<<<<<<<<<<<
 *             self._from_parameters(*[kwargs[k] for k in kwargs])
 *         elif all([kwargs[k] is None for k in kwargs]) and input_data is None:
 */
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 181, __pyx_L7_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = 0;
    __pyx_t_6 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, ((PyObject *)NULL), (&__pyx_t_8), (&__pyx_t_7)); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 181, __pyx_L7_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_5);
    __pyx_t_5 = __pyx_t_6;
    __pyx_t_6 = 0;
    while (1) {
      __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_5, __pyx_t_8, &__pyx_t_3, &__pyx_t_6, NULL, NULL, __pyx_t_7);
      if (unlikely(__pyx_t_9 == 0)) break;
      if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 181, __pyx_L7_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_XDECREF_SET(__pyx_7genexpr__pyx_v_k, __pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_7genexpr__pyx_v_k); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 181, __pyx_L7_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_2 = (__pyx_t_6 != Py_None);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = __Pyx_PyBool_FromLong(__pyx_t_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 181, __pyx_L7_error)
      __Pyx_GOTREF(__pyx_t_6);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_6))) __PYX_ERR(0, 181, __pyx_L7_error)
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_k); __pyx_7genexpr__pyx_v_k = 0;
    goto __pyx_L10_exit_scope;
    __pyx_L7_error:;
    __Pyx_XDECREF(__pyx_7genexpr__pyx_v_k); __pyx_7genexpr__pyx_v_k = 0;
    goto __pyx_L1_error;
    __pyx_L10_exit_scope:;
  } /* exit inner scope */
  __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_all, __pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 181, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 181, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  if (__pyx_t_2) {

    /* "cantera/reaction.pyx":182
 *             self._from_dict(input_data)
 *         elif all([kwargs[k] is not None for k in kwargs]):
 *             self._from_parameters(*[kwargs[k] for k in kwargs])             # <<<<<<<<<<<<<<
 *         elif all([kwargs[k] is None for k in kwargs]) and input_data is None:
 *             self._from_dict({})
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_from_parameters); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    { /* enter inner scope */
      __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 182, __pyx_L13_error)
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_8 = 0;
      __pyx_t_10 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, ((PyObject *)NULL), (&__pyx_t_3), (&__pyx_t_7)); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 182, __pyx_L13_error)
      __Pyx_GOTREF(__pyx_t_10);
      __Pyx_XDECREF(__pyx_t_6);
      __pyx_t_6 = __pyx_t_10;
      __pyx_t_10 = 0;
      while (1) {
        __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_6, __pyx_t_3, &__pyx_t_8, &__pyx_t_10, NULL, NULL, __pyx_t_7);
        if (unlikely(__pyx_t_9 == 0)) break;
        if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 182, __pyx_L13_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_XDECREF_SET(__pyx_8genexpr1__pyx_v_k, __pyx_t_10);
        __pyx_t_10 = 0;
        __pyx_t_10 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_8genexpr1__pyx_v_k); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 182, __pyx_L13_error)
        __Pyx_GOTREF(__pyx_t_10);
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_10))) __PYX_ERR(0, 182, __pyx_L13_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_k); __pyx_8genexpr1__pyx_v_k = 0;
      goto __pyx_L16_exit_scope;
      __pyx_L13_error:;
      __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_k); __pyx_8genexpr1__pyx_v_k = 0;
      goto __pyx_L1_error;
      __pyx_L16_exit_scope:;
    } /* exit inner scope */
    __pyx_t_6 = PySequence_Tuple(__pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_5, __pyx_t_6, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 182, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":181
 *         if isinstance(input_data, dict):
 *             self._from_dict(input_data)
 *         elif all([kwargs[k] is not None for k in kwargs]):             # <<<<<<<<<<<<<<
 *             self._from_parameters(*[kwargs[k] for k in kwargs])
 *         elif all([kwargs[k] is None for k in kwargs]) and input_data is None:
 */
    goto __pyx_L4;
  }

  /* "cantera/reaction.pyx":183
 *         elif all([kwargs[k] is not None for k in kwargs]):
 *             self._from_parameters(*[kwargs[k] for k in kwargs])
 *         elif all([kwargs[k] is None for k in kwargs]) and input_data is None:             # <<<<<<<<<<<<<<
 *             self._from_dict({})
 *         elif input_data:
 */
  { /* enter inner scope */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 183, __pyx_L21_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = 0;
    __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, ((PyObject *)NULL), (&__pyx_t_8), (&__pyx_t_7)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 183, __pyx_L21_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_6);
    __pyx_t_6 = __pyx_t_5;
    __pyx_t_5 = 0;
    while (1) {
      __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_6, __pyx_t_8, &__pyx_t_3, &__pyx_t_5, NULL, NULL, __pyx_t_7);
      if (unlikely(__pyx_t_9 == 0)) break;
      if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 183, __pyx_L21_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_XDECREF_SET(__pyx_8genexpr2__pyx_v_k, __pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyDict_GetItem(__pyx_v_kwargs, __pyx_8genexpr2__pyx_v_k); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 183, __pyx_L21_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_11 = (__pyx_t_5 == Py_None);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_5 = __Pyx_PyBool_FromLong(__pyx_t_11); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 183, __pyx_L21_error)
      __Pyx_GOTREF(__pyx_t_5);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_1, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 183, __pyx_L21_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_k); __pyx_8genexpr2__pyx_v_k = 0;
    goto __pyx_L24_exit_scope;
    __pyx_L21_error:;
    __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_k); __pyx_8genexpr2__pyx_v_k = 0;
    goto __pyx_L1_error;
    __pyx_L24_exit_scope:;
  } /* exit inner scope */
  __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_all, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_11 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely((__pyx_t_11 < 0))) __PYX_ERR(0, 183, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  if (__pyx_t_11) {
  } else {
    __pyx_t_2 = __pyx_t_11;
    goto __pyx_L17_bool_binop_done;
  }
  __pyx_t_11 = (__pyx_v_input_data == Py_None);
  __pyx_t_2 = __pyx_t_11;
  __pyx_L17_bool_binop_done:;
  if (likely(__pyx_t_2)) {

    /* "cantera/reaction.pyx":184
 *             self._from_parameters(*[kwargs[k] for k in kwargs])
 *         elif all([kwargs[k] is None for k in kwargs]) and input_data is None:
 *             self._from_dict({})             # <<<<<<<<<<<<<<
 *         elif input_data:
 *             raise TypeError("Invalid parameter 'input_data'")
 */
    __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_from_dict); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 184, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_10 = NULL;
    __pyx_t_7 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_1))) {
      __pyx_t_10 = PyMethod_GET_SELF(__pyx_t_1);
      if (likely(__pyx_t_10)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_1);
        __Pyx_INCREF(__pyx_t_10);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_1, function);
        __pyx_t_7 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_10, __pyx_t_5};
      __pyx_t_6 = __Pyx_PyObject_FastCall(__pyx_t_1, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
      __Pyx_XDECREF(__pyx_t_10); __pyx_t_10 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 184, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "cantera/reaction.pyx":183
 *         elif all([kwargs[k] is not None for k in kwargs]):
 *             self._from_parameters(*[kwargs[k] for k in kwargs])
 *         elif all([kwargs[k] is None for k in kwargs]) and input_data is None:             # <<<<<<<<<<<<<<
 *             self._from_dict({})
 *         elif input_data:
 */
    goto __pyx_L4;
  }

  /* "cantera/reaction.pyx":185
 *         elif all([kwargs[k] is None for k in kwargs]) and input_data is None:
 *             self._from_dict({})
 *         elif input_data:             # <<<<<<<<<<<<<<
 *             raise TypeError("Invalid parameter 'input_data'")
 *         else:
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_input_data); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 185, __pyx_L1_error)
  if (unlikely(__pyx_t_2)) {

    /* "cantera/reaction.pyx":186
 *             self._from_dict({})
 *         elif input_data:
 *             raise TypeError("Invalid parameter 'input_data'")             # <<<<<<<<<<<<<<
 *         else:
 *             par_list = [f"'{k}'" for k in kwargs]
 */
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 186, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_Raise(__pyx_t_6, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __PYX_ERR(0, 186, __pyx_L1_error)

    /* "cantera/reaction.pyx":185
 *         elif all([kwargs[k] is None for k in kwargs]) and input_data is None:
 *             self._from_dict({})
 *         elif input_data:             # <<<<<<<<<<<<<<
 *             raise TypeError("Invalid parameter 'input_data'")
 *         else:
 */
  }

  /* "cantera/reaction.pyx":188
 *             raise TypeError("Invalid parameter 'input_data'")
 *         else:
 *             par_list = [f"'{k}'" for k in kwargs]             # <<<<<<<<<<<<<<
 *             par_string = ", ".join(par_list[:-1])
 *             par_string += f" or {par_list[-1]}"
 */
  /*else*/ {
    { /* enter inner scope */
      __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 188, __pyx_L27_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = 0;
      __pyx_t_5 = __Pyx_dict_iterator(__pyx_v_kwargs, 1, ((PyObject *)NULL), (&__pyx_t_3), (&__pyx_t_7)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 188, __pyx_L27_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_1);
      __pyx_t_1 = __pyx_t_5;
      __pyx_t_5 = 0;
      while (1) {
        __pyx_t_9 = __Pyx_dict_iter_next(__pyx_t_1, __pyx_t_3, &__pyx_t_8, &__pyx_t_5, NULL, NULL, __pyx_t_7);
        if (unlikely(__pyx_t_9 == 0)) break;
        if (unlikely(__pyx_t_9 == -1)) __PYX_ERR(0, 188, __pyx_L27_error)
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_XDECREF_SET(__pyx_8genexpr3__pyx_v_k, __pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 188, __pyx_L27_error)
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_12 = 0;
        __pyx_t_4 = 127;
        __Pyx_INCREF(__pyx_kp_u__9);
        __pyx_t_12 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__9);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_kp_u__9);
        __pyx_t_10 = __Pyx_PyObject_FormatSimple(__pyx_8genexpr3__pyx_v_k, __pyx_empty_unicode); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 188, __pyx_L27_error)
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_4 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) > __pyx_t_4) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_10) : __pyx_t_4;
        __pyx_t_12 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_10);
        __Pyx_GIVEREF(__pyx_t_10);
        PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_t_10);
        __pyx_t_10 = 0;
        __Pyx_INCREF(__pyx_kp_u__9);
        __pyx_t_12 += 1;
        __Pyx_GIVEREF(__pyx_kp_u__9);
        PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_kp_u__9);
        __pyx_t_10 = __Pyx_PyUnicode_Join(__pyx_t_5, 3, __pyx_t_12, __pyx_t_4); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 188, __pyx_L27_error)
        __Pyx_GOTREF(__pyx_t_10);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_6, (PyObject*)__pyx_t_10))) __PYX_ERR(0, 188, __pyx_L27_error)
        __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_XDECREF(__pyx_8genexpr3__pyx_v_k); __pyx_8genexpr3__pyx_v_k = 0;
      goto __pyx_L30_exit_scope;
      __pyx_L27_error:;
      __Pyx_XDECREF(__pyx_8genexpr3__pyx_v_k); __pyx_8genexpr3__pyx_v_k = 0;
      goto __pyx_L1_error;
      __pyx_L30_exit_scope:;
    } /* exit inner scope */
    __pyx_v_par_list = ((PyObject*)__pyx_t_6);
    __pyx_t_6 = 0;

    /* "cantera/reaction.pyx":189
 *         else:
 *             par_list = [f"'{k}'" for k in kwargs]
 *             par_string = ", ".join(par_list[:-1])             # <<<<<<<<<<<<<<
 *             par_string += f" or {par_list[-1]}"
 *             raise TypeError(f"Invalid parameters {par_string}")
 */
    __pyx_t_6 = __Pyx_PyList_GetSlice(__pyx_v_par_list, 0, -1L); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = PyUnicode_Join(__pyx_kp_u__10, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 189, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_v_par_string = ((PyObject*)__pyx_t_1);
    __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":190
 *             par_list = [f"'{k}'" for k in kwargs]
 *             par_string = ", ".join(par_list[:-1])
 *             par_string += f" or {par_list[-1]}"             # <<<<<<<<<<<<<<
 *             raise TypeError(f"Invalid parameters {par_string}")
 *         self.set_cxx_object()
 */
    __pyx_t_1 = __Pyx_GetItemInt_List(__pyx_v_par_list, -1L, long, 1, __Pyx_PyInt_From_long, 1, 1, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = __Pyx_PyObject_FormatSimple(__pyx_t_1, __pyx_empty_unicode); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_PyUnicode_Concat(__pyx_kp_u_or, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_6 = __Pyx_PyUnicode_ConcatInPlaceSafe(__pyx_v_par_string, __pyx_t_1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 190, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_par_string, ((PyObject*)__pyx_t_6));
    __pyx_t_6 = 0;

    /* "cantera/reaction.pyx":191
 *             par_string = ", ".join(par_list[:-1])
 *             par_string += f" or {par_list[-1]}"
 *             raise TypeError(f"Invalid parameters {par_string}")             # <<<<<<<<<<<<<<
 *         self.set_cxx_object()
 * 
 */
    __pyx_t_6 = __Pyx_PyUnicode_Concat(__pyx_kp_u_Invalid_parameters, __pyx_v_par_string); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 191, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_6); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 191, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 191, __pyx_L1_error)
  }
  __pyx_L4:;

  /* "cantera/reaction.pyx":192
 *             par_string += f" or {par_list[-1]}"
 *             raise TypeError(f"Invalid parameters {par_string}")
 *         self.set_cxx_object()             # <<<<<<<<<<<<<<
 * 
 *     property pre_exponential_factor:
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRateBase *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_cxx_object(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 192, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":167
 *     _reaction_rate_type = None
 * 
 *     def _cinit(self, input_data, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Helper function called by __cinit__. The method is used as a uniform interface
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase._cinit", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_par_list);
  __Pyx_XDECREF(__pyx_v_par_string);
  __Pyx_XDECREF(__pyx_7genexpr__pyx_v_k);
  __Pyx_XDECREF(__pyx_8genexpr1__pyx_v_k);
  __Pyx_XDECREF(__pyx_8genexpr2__pyx_v_k);
  __Pyx_XDECREF(__pyx_8genexpr3__pyx_v_k);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":199
 *         powers depending on the reaction order.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.preExponentialFactor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_22pre_exponential_factor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_22pre_exponential_factor_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17ArrheniusRateBase_22pre_exponential_factor___get__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_22pre_exponential_factor___get__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":200
 *         """
 *         def __get__(self):
 *             return self.base.preExponentialFactor()             # <<<<<<<<<<<<<<
 * 
 *     property temperature_exponent:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->base->preExponentialFactor()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 200, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":199
 *         powers depending on the reaction order.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.preExponentialFactor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase.pre_exponential_factor.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":206
 *         The temperature exponent ``b``.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.temperatureExponent()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_20temperature_exponent_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_20temperature_exponent_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17ArrheniusRateBase_20temperature_exponent___get__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_20temperature_exponent___get__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":207
 *         """
 *         def __get__(self):
 *             return self.base.temperatureExponent()             # <<<<<<<<<<<<<<
 * 
 *     property activation_energy:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->base->temperatureExponent()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 207, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":206
 *         The temperature exponent ``b``.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.temperatureExponent()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase.temperature_exponent.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":213
 *         The activation energy ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.activationEnergy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_17activation_energy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_17activation_energy_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17ArrheniusRateBase_17activation_energy___get__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_17activation_energy___get__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":214
 *         """
 *         def __get__(self):
 *             return self.base.activationEnergy()             # <<<<<<<<<<<<<<
 * 
 *     property allow_negative_pre_exponential_factor:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->base->activationEnergy()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 214, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":213
 *         The activation energy ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.activationEnergy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase.activation_energy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":221
 *         pre-exponential factor.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor___get__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor___get__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":222
 *         """
 *         def __get__(self):
 *             return self.base.allowNegativePreExponentialFactor()             # <<<<<<<<<<<<<<
 *         def __set__(self, cbool allow):
 *             self.base.setAllowNegativePreExponentialFactor(allow)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->base->allowNegativePreExponentialFactor()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 222, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":221
 *         pre-exponential factor.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase.allow_negative_pre_exponential_factor.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":223
 *         def __get__(self):
 *             return self.base.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):             # <<<<<<<<<<<<<<
 *             self.base.setAllowNegativePreExponentialFactor(allow)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_allow); /*proto*/
static int __pyx_pw_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_allow) {
  bool __pyx_v_allow;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_allow); {
    __pyx_v_allow = __Pyx_PyObject_IsTrue(__pyx_arg_allow); if (unlikely((__pyx_v_allow == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 223, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase.allow_negative_pre_exponential_factor.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor_2__set__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *)__pyx_v_self), ((bool)__pyx_v_allow));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor_2__set__(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self, bool __pyx_v_allow) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":224
 *             return self.base.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):
 *             self.base.setAllowNegativePreExponentialFactor(allow)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_allow); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 224, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_self->base->setAllowNegativePreExponentialFactor(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":223
 *         def __get__(self):
 *             return self.base.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):             # <<<<<<<<<<<<<<
 *             self.base.setAllowNegativePreExponentialFactor(allow)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase.allow_negative_pre_exponential_factor.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17ArrheniusRateBase_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_17ArrheniusRateBase_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__rate_self_base_self_rate_c, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17ArrheniusRateBase_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17ArrheniusRateBase_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17ArrheniusRateBase_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__rate_self_base_self_rate_c, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRateBase.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":243
 *     _reaction_rate_type = "Arrhenius"
 * 
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_13ArrheniusRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_13ArrheniusRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 243, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 243, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea = values[2];
    __pyx_v_input_data = values[3];
    __pyx_v_init = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 243, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13ArrheniusRate___cinit__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea, __pyx_v_input_data, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_13ArrheniusRate___cinit__(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":245
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 245, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":246
 * 
 *         if init:
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cinit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_input_data);
    __Pyx_GIVEREF(__pyx_v_input_data);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_input_data);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_A, __pyx_v_A) < 0) __PYX_ERR(0, 246, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_b, __pyx_v_b) < 0) __PYX_ERR(0, 246, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_Ea, __pyx_v_Ea) < 0) __PYX_ERR(0, 246, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 246, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cantera/reaction.pyx":245
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 */
  }

  /* "cantera/reaction.pyx":243
 *     _reaction_rate_type = "Arrhenius"
 * 
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":248
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxArrheniusRate(py_to_anymap(input_data)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ArrheniusRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13ArrheniusRate_3_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ArrheniusRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13ArrheniusRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 248, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 248, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 248, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13ArrheniusRate_2_from_dict(((struct __pyx_obj_7cantera_8reaction_ArrheniusRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ArrheniusRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  Cantera::ArrheniusRate *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":249
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(new CxxArrheniusRate(py_to_anymap(input_data)))             # <<<<<<<<<<<<<<
 * 
 *     def _from_parameters(self, A, b, Ea):
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 249, __pyx_L1_error)
  try {
    __pyx_t_2 = new Cantera::ArrheniusRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 249, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(__pyx_t_2);

  /* "cantera/reaction.pyx":248
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxArrheniusRate(py_to_anymap(input_data)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":251
 *         self._rate.reset(new CxxArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxArrheniusRate(A, b, Ea))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ArrheniusRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13ArrheniusRate_5_from_parameters = {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ArrheniusRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13ArrheniusRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_parameters (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 251, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 251, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 3, 3, 1); __PYX_ERR(0, 251, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 251, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 3, 3, 2); __PYX_ERR(0, 251, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_parameters") < 0)) __PYX_ERR(0, 251, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 251, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13ArrheniusRate_4_from_parameters(((struct __pyx_obj_7cantera_8reaction_ArrheniusRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ArrheniusRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  Cantera::ArrheniusRate *__pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_parameters", 0);

  /* "cantera/reaction.pyx":252
 * 
 *     def _from_parameters(self, A, b, Ea):
 *         self._rate.reset(new CxxArrheniusRate(A, b, Ea))             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_A); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 252, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_b); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 252, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_Ea); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 252, __pyx_L1_error)
  __pyx_t_4 = new Cantera::ArrheniusRate(__pyx_t_1, __pyx_t_2, __pyx_t_3); 
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(__pyx_t_4);

  /* "cantera/reaction.pyx":251
 *         self._rate.reset(new CxxArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxArrheniusRate(A, b, Ea))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":254
 *         self._rate.reset(new CxxArrheniusRate(A, b, Ea))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_13ArrheniusRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":255
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.base = <CxxArrheniusRate*>self.rate
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":256
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxArrheniusRate* cxx_object(self):
 */
  __pyx_v_self->__pyx_base.base = ((Cantera::ArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":254
 *         self._rate.reset(new CxxArrheniusRate(A, b, Ea))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":258
 *         self.base = <CxxArrheniusRate*>self.rate
 * 
 *     cdef CxxArrheniusRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxArrheniusRate*>self.rate
 * 
 */

static Cantera::ArrheniusRate *__pyx_f_7cantera_8reaction_13ArrheniusRate_cxx_object(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self) {
  Cantera::ArrheniusRate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":259
 * 
 *     cdef CxxArrheniusRate* cxx_object(self):
 *         return <CxxArrheniusRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((Cantera::ArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":258
 *         self.base = <CxxArrheniusRate*>self.rate
 * 
 *     cdef CxxArrheniusRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxArrheniusRate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ArrheniusRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13ArrheniusRate_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ArrheniusRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13ArrheniusRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_13ArrheniusRate_6__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ArrheniusRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ArrheniusRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13ArrheniusRate_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ArrheniusRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13ArrheniusRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13ArrheniusRate_8__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_ArrheniusRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ArrheniusRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ArrheniusRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ArrheniusRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":270
 *     _reaction_rate_type = "Blowers-Masel"
 * 
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_16BlowersMaselRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_16BlowersMaselRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea0 = 0;
  PyObject *__pyx_v_w = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea0,&__pyx_n_s_w,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_None);
    values[5] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 270, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 270, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea0);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 270, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_w);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 270, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 270, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[5] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 270, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 270, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea0 = values[2];
    __pyx_v_w = values[3];
    __pyx_v_input_data = values[4];
    __pyx_v_init = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 6, __pyx_nargs); __PYX_ERR(0, 270, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_16BlowersMaselRate___cinit__(((struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea0, __pyx_v_w, __pyx_v_input_data, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_16BlowersMaselRate___cinit__(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":272
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 272, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":273
 * 
 *         if init:
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cinit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_input_data);
    __Pyx_GIVEREF(__pyx_v_input_data);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_input_data);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_A, __pyx_v_A) < 0) __PYX_ERR(0, 273, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_b, __pyx_v_b) < 0) __PYX_ERR(0, 273, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_Ea0, __pyx_v_Ea0) < 0) __PYX_ERR(0, 273, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_w, __pyx_v_w) < 0) __PYX_ERR(0, 273, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 273, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cantera/reaction.pyx":272
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 */
  }

  /* "cantera/reaction.pyx":270
 *     _reaction_rate_type = "Blowers-Masel"
 * 
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":275
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_16BlowersMaselRate_3_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_16BlowersMaselRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 275, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 275, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 275, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_16BlowersMaselRate_2_from_dict(((struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  Cantera::BlowersMaselRate *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":276
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(new CxxBlowersMaselRate(py_to_anymap(input_data)))             # <<<<<<<<<<<<<<
 * 
 *     def _from_parameters(self, A, b, Ea0, w):
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 276, __pyx_L1_error)
  try {
    __pyx_t_2 = new Cantera::BlowersMaselRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 276, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(__pyx_t_2);

  /* "cantera/reaction.pyx":275
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":278
 *         self._rate.reset(new CxxBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxBlowersMaselRate(A, b, Ea0, w))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_16BlowersMaselRate_5_from_parameters = {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_16BlowersMaselRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea0 = 0;
  PyObject *__pyx_v_w = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_parameters (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea0,&__pyx_n_s_w,0};
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 278, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 278, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 1); __PYX_ERR(0, 278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea0)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 278, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 2); __PYX_ERR(0, 278, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_w)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 278, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 3); __PYX_ERR(0, 278, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_parameters") < 0)) __PYX_ERR(0, 278, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea0 = values[2];
    __pyx_v_w = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 278, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_16BlowersMaselRate_4_from_parameters(((struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea0, __pyx_v_w);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_parameters", 0);

  /* "cantera/reaction.pyx":279
 * 
 *     def _from_parameters(self, A, b, Ea0, w):
 *         self._rate.reset(new CxxBlowersMaselRate(A, b, Ea0, w))             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_A); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_b); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_Ea0); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 279, __pyx_L1_error)
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(new Cantera::BlowersMaselRate(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4));

  /* "cantera/reaction.pyx":278
 *         self._rate.reset(new CxxBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxBlowersMaselRate(A, b, Ea0, w))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":281
 *         self._rate.reset(new CxxBlowersMaselRate(A, b, Ea0, w))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusBase*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_16BlowersMaselRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":282
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.base = <CxxArrheniusBase*>self.rate
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":283
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusBase*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxBlowersMaselRate* cxx_object(self):
 */
  __pyx_v_self->__pyx_base.base = ((Cantera::ArrheniusBase *)__pyx_v_self->__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":281
 *         self._rate.reset(new CxxBlowersMaselRate(A, b, Ea0, w))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusBase*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":285
 *         self.base = <CxxArrheniusBase*>self.rate
 * 
 *     cdef CxxBlowersMaselRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxBlowersMaselRate*>self.rate
 * 
 */

static Cantera::BlowersMaselRate *__pyx_f_7cantera_8reaction_16BlowersMaselRate_cxx_object(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self) {
  Cantera::BlowersMaselRate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":286
 * 
 *     cdef CxxBlowersMaselRate* cxx_object(self):
 *         return <CxxBlowersMaselRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     property bond_energy:
 */
  __pyx_r = ((Cantera::BlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":285
 *         self.base = <CxxArrheniusBase*>self.rate
 * 
 *     cdef CxxBlowersMaselRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxBlowersMaselRate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":293
 *         in the reaction ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().bondEnergy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_11bond_energy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_11bond_energy_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_16BlowersMaselRate_11bond_energy___get__(((struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_11bond_energy___get__(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::BlowersMaselRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":294
 *         """
 *         def __get__(self):
 *             return self.cxx_object().bondEnergy()             # <<<<<<<<<<<<<<
 * 
 *     property delta_enthalpy:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 294, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->bondEnergy()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 294, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":293
 *         in the reaction ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().bondEnergy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate.bond_energy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":310
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy___get__(((struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy___get__(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::BlowersMaselRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":311
 *         """
 *         def __get__(self):
 *             return self.cxx_object().deltaH()             # <<<<<<<<<<<<<<
 *         def __set__(self, double delta_H):
 *             self.cxx_object().setDeltaH(delta_H)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 311, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->deltaH()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 311, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":310
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate.delta_enthalpy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":312
 *         def __get__(self):
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):             # <<<<<<<<<<<<<<
 *             self.cxx_object().setDeltaH(delta_H)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_delta_H); /*proto*/
static int __pyx_pw_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_delta_H) {
  double __pyx_v_delta_H;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_delta_H); {
    __pyx_v_delta_H = __pyx_PyFloat_AsDouble(__pyx_arg_delta_H); if (unlikely((__pyx_v_delta_H == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 312, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate.delta_enthalpy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy_2__set__(((struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self), ((double)__pyx_v_delta_H));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy_2__set__(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, double __pyx_v_delta_H) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Cantera::BlowersMaselRate *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":313
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):
 *             self.cxx_object().setDeltaH(delta_H)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 313, __pyx_L1_error)
  __pyx_t_1->setDeltaH(__pyx_v_delta_H);

  /* "cantera/reaction.pyx":312
 *         def __get__(self):
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):             # <<<<<<<<<<<<<<
 *             self.cxx_object().setDeltaH(delta_H)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate.delta_enthalpy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_16BlowersMaselRate_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_16BlowersMaselRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_16BlowersMaselRate_6__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_16BlowersMaselRate_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_16BlowersMaselRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_16BlowersMaselRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_16BlowersMaselRate_8__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_16BlowersMaselRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.BlowersMaselRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":336
 *     _reaction_rate_type = "two-temperature-plasma"
 * 
 *     def __cinit__(self, A=None, b=None, Ea_gas=0.0, Ea_electron=0.0,             # <<<<<<<<<<<<<<
 *             input_data=None, init=True):
 *         if init:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea_gas = 0;
  PyObject *__pyx_v_Ea_electron = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea_gas,&__pyx_n_s_Ea_electron,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)__pyx_float_0_0);
    values[3] = ((PyObject *)__pyx_float_0_0);

    /* "cantera/reaction.pyx":337
 * 
 *     def __cinit__(self, A=None, b=None, Ea_gas=0.0, Ea_electron=0.0,
 *             input_data=None, init=True):             # <<<<<<<<<<<<<<
 *         if init:
 *             if A is None and b is None:
 */
    values[4] = ((PyObject *)Py_None);
    values[5] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 336, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 336, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea_gas);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 336, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea_electron);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 336, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 336, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[5] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 336, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 336, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea_gas = values[2];
    __pyx_v_Ea_electron = values[3];
    __pyx_v_input_data = values[4];
    __pyx_v_init = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 6, __pyx_nargs); __PYX_ERR(0, 336, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate___cinit__(((struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea_gas, __pyx_v_Ea_electron, __pyx_v_input_data, __pyx_v_init);

  /* "cantera/reaction.pyx":336
 *     _reaction_rate_type = "two-temperature-plasma"
 * 
 *     def __cinit__(self, A=None, b=None, Ea_gas=0.0, Ea_electron=0.0,             # <<<<<<<<<<<<<<
 *             input_data=None, init=True):
 *         if init:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate___cinit__(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea_gas, PyObject *__pyx_v_Ea_electron, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF(__pyx_v_Ea_gas);
  __Pyx_INCREF(__pyx_v_Ea_electron);

  /* "cantera/reaction.pyx":338
 *     def __cinit__(self, A=None, b=None, Ea_gas=0.0, Ea_electron=0.0,
 *             input_data=None, init=True):
 *         if init:             # <<<<<<<<<<<<<<
 *             if A is None and b is None:
 *                 Ea_gas = None
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 338, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":339
 *             input_data=None, init=True):
 *         if init:
 *             if A is None and b is None:             # <<<<<<<<<<<<<<
 *                 Ea_gas = None
 *                 Ea_electron = None
 */
    __pyx_t_2 = (__pyx_v_A == Py_None);
    if (__pyx_t_2) {
    } else {
      __pyx_t_1 = __pyx_t_2;
      goto __pyx_L5_bool_binop_done;
    }
    __pyx_t_2 = (__pyx_v_b == Py_None);
    __pyx_t_1 = __pyx_t_2;
    __pyx_L5_bool_binop_done:;
    if (__pyx_t_1) {

      /* "cantera/reaction.pyx":340
 *         if init:
 *             if A is None and b is None:
 *                 Ea_gas = None             # <<<<<<<<<<<<<<
 *                 Ea_electron = None
 *             self._cinit(input_data, A=A, b=b, Ea_gas=Ea_gas, Ea_electron=Ea_electron)
 */
      __Pyx_INCREF(Py_None);
      __Pyx_DECREF_SET(__pyx_v_Ea_gas, Py_None);

      /* "cantera/reaction.pyx":341
 *             if A is None and b is None:
 *                 Ea_gas = None
 *                 Ea_electron = None             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea_gas=Ea_gas, Ea_electron=Ea_electron)
 * 
 */
      __Pyx_INCREF(Py_None);
      __Pyx_DECREF_SET(__pyx_v_Ea_electron, Py_None);

      /* "cantera/reaction.pyx":339
 *             input_data=None, init=True):
 *         if init:
 *             if A is None and b is None:             # <<<<<<<<<<<<<<
 *                 Ea_gas = None
 *                 Ea_electron = None
 */
    }

    /* "cantera/reaction.pyx":342
 *                 Ea_gas = None
 *                 Ea_electron = None
 *             self._cinit(input_data, A=A, b=b, Ea_gas=Ea_gas, Ea_electron=Ea_electron)             # <<<<<<<<<<<<<<
 * 
 *     def __call__(self, double temperature, double elec_temp):
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cinit); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_input_data);
    __Pyx_GIVEREF(__pyx_v_input_data);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_input_data);
    __pyx_t_5 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_A, __pyx_v_A) < 0) __PYX_ERR(0, 342, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_b, __pyx_v_b) < 0) __PYX_ERR(0, 342, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_Ea_gas, __pyx_v_Ea_gas) < 0) __PYX_ERR(0, 342, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_5, __pyx_n_s_Ea_electron, __pyx_v_Ea_electron) < 0) __PYX_ERR(0, 342, __pyx_L1_error)
    __pyx_t_6 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 342, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "cantera/reaction.pyx":338
 *     def __cinit__(self, A=None, b=None, Ea_gas=0.0, Ea_electron=0.0,
 *             input_data=None, init=True):
 *         if init:             # <<<<<<<<<<<<<<
 *             if A is None and b is None:
 *                 Ea_gas = None
 */
  }

  /* "cantera/reaction.pyx":336
 *     _reaction_rate_type = "two-temperature-plasma"
 * 
 *     def __cinit__(self, A=None, b=None, Ea_gas=0.0, Ea_electron=0.0,             # <<<<<<<<<<<<<<
 *             input_data=None, init=True):
 *         if init:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_Ea_gas);
  __Pyx_XDECREF(__pyx_v_Ea_electron);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":344
 *             self._cinit(input_data, A=A, b=b, Ea_gas=Ea_gas, Ea_electron=Ea_electron)
 * 
 *     def __call__(self, double temperature, double elec_temp):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and enthalpy change of reaction.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_17TwoTempPlasmaRate_2__call__, "\n        Evaluate rate expression based on temperature and enthalpy change of reaction.\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_7cantera_8reaction_17TwoTempPlasmaRate_2__call__;
#endif
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_temperature;
  double __pyx_v_elec_temp;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temperature,&__pyx_n_s_elec_temp,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temperature)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_elec_temp)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, 1); __PYX_ERR(0, 344, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__call__") < 0)) __PYX_ERR(0, 344, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_temperature = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_temperature == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L3_error)
    __pyx_v_elec_temp = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_elec_temp == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 344, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 344, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_2__call__(((struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *)__pyx_v_self), __pyx_v_temperature, __pyx_v_elec_temp);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_2__call__(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_elec_temp) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "cantera/reaction.pyx":348
 *         Evaluate rate expression based on temperature and enthalpy change of reaction.
 *         """
 *         return self.rate.eval(temperature, elec_temp)             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->__pyx_base.__pyx_base.rate->eval(__pyx_v_temperature, __pyx_v_elec_temp);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 348, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 348, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":344
 *             self._cinit(input_data, A=A, b=b, Ea_gas=Ea_gas, Ea_electron=Ea_electron)
 * 
 *     def __call__(self, double temperature, double elec_temp):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and enthalpy change of reaction.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":350
 *         return self.rate.eval(temperature, elec_temp)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTwoTempPlasmaRate(py_to_anymap(input_data, hyphenize=True))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_5_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17TwoTempPlasmaRate_5_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_5_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_5_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 350, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 350, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 350, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_4_from_dict(((struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_4_from_dict(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  struct __pyx_opt_args_7cantera_6_utils_py_to_anymap __pyx_t_2;
  Cantera::TwoTempPlasmaRate *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":352
 *     def _from_dict(self, input_data):
 *         self._rate.reset(
 *             new CxxTwoTempPlasmaRate(py_to_anymap(input_data, hyphenize=True))             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.hyphenize = 1;
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, &__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 352, __pyx_L1_error)
  try {
    __pyx_t_3 = new Cantera::TwoTempPlasmaRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 352, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":351
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(             # <<<<<<<<<<<<<<
 *             new CxxTwoTempPlasmaRate(py_to_anymap(input_data, hyphenize=True))
 *         )
 */
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(__pyx_t_3);

  /* "cantera/reaction.pyx":350
 *         return self.rate.eval(temperature, elec_temp)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTwoTempPlasmaRate(py_to_anymap(input_data, hyphenize=True))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":355
 *         )
 * 
 *     def _from_parameters(self, A, b, Ea_gas, Ea_electron):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxTwoTempPlasmaRate(A, b, Ea_gas, Ea_electron))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_7_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17TwoTempPlasmaRate_7_from_parameters = {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_7_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_7_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea_gas = 0;
  PyObject *__pyx_v_Ea_electron = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_parameters (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea_gas,&__pyx_n_s_Ea_electron,0};
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 355, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 355, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 1); __PYX_ERR(0, 355, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea_gas)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 355, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 2); __PYX_ERR(0, 355, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea_electron)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 355, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 3); __PYX_ERR(0, 355, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_parameters") < 0)) __PYX_ERR(0, 355, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea_gas = values[2];
    __pyx_v_Ea_electron = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 355, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_6_from_parameters(((struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea_gas, __pyx_v_Ea_electron);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_6_from_parameters(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea_gas, PyObject *__pyx_v_Ea_electron) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_parameters", 0);

  /* "cantera/reaction.pyx":356
 * 
 *     def _from_parameters(self, A, b, Ea_gas, Ea_electron):
 *         self._rate.reset(new CxxTwoTempPlasmaRate(A, b, Ea_gas, Ea_electron))             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_A); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 356, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_b); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 356, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_Ea_gas); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 356, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_Ea_electron); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 356, __pyx_L1_error)
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(new Cantera::TwoTempPlasmaRate(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4));

  /* "cantera/reaction.pyx":355
 *         )
 * 
 *     def _from_parameters(self, A, b, Ea_gas, Ea_electron):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxTwoTempPlasmaRate(A, b, Ea_gas, Ea_electron))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":358
 *         self._rate.reset(new CxxTwoTempPlasmaRate(A, b, Ea_gas, Ea_electron))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusBase*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_17TwoTempPlasmaRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":359
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.base = <CxxArrheniusBase*>self.rate
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":360
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusBase*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxTwoTempPlasmaRate* cxx_object(self):
 */
  __pyx_v_self->__pyx_base.base = ((Cantera::ArrheniusBase *)__pyx_v_self->__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":358
 *         self._rate.reset(new CxxTwoTempPlasmaRate(A, b, Ea_gas, Ea_electron))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusBase*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":362
 *         self.base = <CxxArrheniusBase*>self.rate
 * 
 *     cdef CxxTwoTempPlasmaRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxTwoTempPlasmaRate*>self.rate
 * 
 */

static Cantera::TwoTempPlasmaRate *__pyx_f_7cantera_8reaction_17TwoTempPlasmaRate_cxx_object(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self) {
  Cantera::TwoTempPlasmaRate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":363
 * 
 *     cdef CxxTwoTempPlasmaRate* cxx_object(self):
 *         return <CxxTwoTempPlasmaRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     property activation_electron_energy:
 */
  __pyx_r = ((Cantera::TwoTempPlasmaRate *)__pyx_v_self->__pyx_base.__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":362
 *         self.base = <CxxArrheniusBase*>self.rate
 * 
 *     cdef CxxTwoTempPlasmaRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxTwoTempPlasmaRate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":369
 *         The activation electron energy :math:`E_{a,e}` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().activationElectronEnergy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_26activation_electron_energy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_26activation_electron_energy_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_26activation_electron_energy___get__(((struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_26activation_electron_energy___get__(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::TwoTempPlasmaRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":370
 *         """
 *         def __get__(self):
 *             return self.cxx_object().activationElectronEnergy()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_TwoTempPlasmaRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 370, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->activationElectronEnergy()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 370, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":369
 *         The activation electron energy :math:`E_{a,e}` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().activationElectronEnergy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate.activation_electron_energy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17TwoTempPlasmaRate_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_8__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17TwoTempPlasmaRate_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_10__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17TwoTempPlasmaRate_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TwoTempPlasmaRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":383
 *     _reaction_rate_type = None
 * 
 *     def __cinit__(self, low=None, high=None, falloff_coeffs=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if self._reaction_rate_type is None:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_11FalloffRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_11FalloffRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_low = 0;
  PyObject *__pyx_v_high = 0;
  PyObject *__pyx_v_falloff_coeffs = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_low,&__pyx_n_s_high,&__pyx_n_s_falloff_coeffs,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_low);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_high);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_falloff_coeffs);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 383, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 383, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 383, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_low = values[0];
    __pyx_v_high = values[1];
    __pyx_v_falloff_coeffs = values[2];
    __pyx_v_input_data = values[3];
    __pyx_v_init = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 383, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate___cinit__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self), __pyx_v_low, __pyx_v_high, __pyx_v_falloff_coeffs, __pyx_v_input_data, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_11FalloffRate___cinit__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, PyObject *__pyx_v_low, PyObject *__pyx_v_high, PyObject *__pyx_v_falloff_coeffs, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  Py_UCS4 __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF(__pyx_v_falloff_coeffs);

  /* "cantera/reaction.pyx":385
 *     def __cinit__(self, low=None, high=None, falloff_coeffs=None, input_data=None, init=True):
 * 
 *         if self._reaction_rate_type is None:             # <<<<<<<<<<<<<<
 *             raise TypeError(
 *                 f"Base class '{self.__class__.__name__}' cannot be instantiated "
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_reaction_rate_type); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 385, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__pyx_t_1 == Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_2)) {

    /* "cantera/reaction.pyx":387
 *         if self._reaction_rate_type is None:
 *             raise TypeError(
 *                 f"Base class '{self.__class__.__name__}' cannot be instantiated "             # <<<<<<<<<<<<<<
 *                 "by itself; use specialized fall-off rate instead.")
 * 
 */
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = 0;
    __pyx_t_4 = 127;
    __Pyx_INCREF(__pyx_kp_u_Base_class);
    __pyx_t_3 += 12;
    __Pyx_GIVEREF(__pyx_kp_u_Base_class);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_kp_u_Base_class);
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_name); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_6, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_4 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_4) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_4;
    __pyx_t_3 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_INCREF(__pyx_kp_u_cannot_be_instantiated_by_itsel_2);
    __pyx_t_3 += 74;
    __Pyx_GIVEREF(__pyx_kp_u_cannot_be_instantiated_by_itsel_2);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_kp_u_cannot_be_instantiated_by_itsel_2);
    __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_1, 3, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 387, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":386
 * 
 *         if self._reaction_rate_type is None:
 *             raise TypeError(             # <<<<<<<<<<<<<<
 *                 f"Base class '{self.__class__.__name__}' cannot be instantiated "
 *                 "by itself; use specialized fall-off rate instead.")
 */
    __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 386, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 386, __pyx_L1_error)

    /* "cantera/reaction.pyx":385
 *     def __cinit__(self, low=None, high=None, falloff_coeffs=None, input_data=None, init=True):
 * 
 *         if self._reaction_rate_type is None:             # <<<<<<<<<<<<<<
 *             raise TypeError(
 *                 f"Base class '{self.__class__.__name__}' cannot be instantiated "
 */
  }

  /* "cantera/reaction.pyx":390
 *                 "by itself; use specialized fall-off rate instead.")
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             if isinstance(input_data, dict):
 *                 self._from_dict(input_data)
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 390, __pyx_L1_error)
  if (__pyx_t_2) {

    /* "cantera/reaction.pyx":391
 * 
 *         if init:
 *             if isinstance(input_data, dict):             # <<<<<<<<<<<<<<
 *                 self._from_dict(input_data)
 *             elif input_data is None:
 */
    __pyx_t_2 = PyDict_Check(__pyx_v_input_data); 
    if (__pyx_t_2) {

      /* "cantera/reaction.pyx":392
 *         if init:
 *             if isinstance(input_data, dict):
 *                 self._from_dict(input_data)             # <<<<<<<<<<<<<<
 *             elif input_data is None:
 *                 self._from_dict({})
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_from_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 392, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_6)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_6);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_7 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_v_input_data};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 392, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "cantera/reaction.pyx":391
 * 
 *         if init:
 *             if isinstance(input_data, dict):             # <<<<<<<<<<<<<<
 *                 self._from_dict(input_data)
 *             elif input_data is None:
 */
      goto __pyx_L5;
    }

    /* "cantera/reaction.pyx":393
 *             if isinstance(input_data, dict):
 *                 self._from_dict(input_data)
 *             elif input_data is None:             # <<<<<<<<<<<<<<
 *                 self._from_dict({})
 *             else:
 */
    __pyx_t_2 = (__pyx_v_input_data == Py_None);
    if (likely(__pyx_t_2)) {

      /* "cantera/reaction.pyx":394
 *                 self._from_dict(input_data)
 *             elif input_data is None:
 *                 self._from_dict({})             # <<<<<<<<<<<<<<
 *             else:
 *                 raise TypeError("Invalid input parameters")
 */
      __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_from_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 394, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 394, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_8 = NULL;
      __pyx_t_7 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_5))) {
        __pyx_t_8 = PyMethod_GET_SELF(__pyx_t_5);
        if (likely(__pyx_t_8)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_5);
          __Pyx_INCREF(__pyx_t_8);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_5, function);
          __pyx_t_7 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_8, __pyx_t_6};
        __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_5, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 394, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "cantera/reaction.pyx":393
 *             if isinstance(input_data, dict):
 *                 self._from_dict(input_data)
 *             elif input_data is None:             # <<<<<<<<<<<<<<
 *                 self._from_dict({})
 *             else:
 */
      goto __pyx_L5;
    }

    /* "cantera/reaction.pyx":396
 *                 self._from_dict({})
 *             else:
 *                 raise TypeError("Invalid input parameters")             # <<<<<<<<<<<<<<
 *             self.set_cxx_object()
 * 
 */
    /*else*/ {
      __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__11, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 396, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_Raise(__pyx_t_1, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __PYX_ERR(0, 396, __pyx_L1_error)
    }
    __pyx_L5:;

    /* "cantera/reaction.pyx":397
 *             else:
 *                 raise TypeError("Invalid input parameters")
 *             self.set_cxx_object()             # <<<<<<<<<<<<<<
 * 
 *             if (low is not None) and (high is not None):
 */
    __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_FalloffRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_cxx_object(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 397, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "cantera/reaction.pyx":399
 *             self.set_cxx_object()
 * 
 *             if (low is not None) and (high is not None):             # <<<<<<<<<<<<<<
 *                 self.low_rate = low
 *                 self.high_rate = high
 */
    __pyx_t_9 = (__pyx_v_low != Py_None);
    if (__pyx_t_9) {
    } else {
      __pyx_t_2 = __pyx_t_9;
      goto __pyx_L7_bool_binop_done;
    }
    __pyx_t_9 = (__pyx_v_high != Py_None);
    __pyx_t_2 = __pyx_t_9;
    __pyx_L7_bool_binop_done:;
    if (__pyx_t_2) {

      /* "cantera/reaction.pyx":400
 * 
 *             if (low is not None) and (high is not None):
 *                 self.low_rate = low             # <<<<<<<<<<<<<<
 *                 self.high_rate = high
 *                 if falloff_coeffs is None:
 */
      if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_low_rate, __pyx_v_low) < 0) __PYX_ERR(0, 400, __pyx_L1_error)

      /* "cantera/reaction.pyx":401
 *             if (low is not None) and (high is not None):
 *                 self.low_rate = low
 *                 self.high_rate = high             # <<<<<<<<<<<<<<
 *                 if falloff_coeffs is None:
 *                     falloff_coeffs = ()
 */
      if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_high_rate, __pyx_v_high) < 0) __PYX_ERR(0, 401, __pyx_L1_error)

      /* "cantera/reaction.pyx":402
 *                 self.low_rate = low
 *                 self.high_rate = high
 *                 if falloff_coeffs is None:             # <<<<<<<<<<<<<<
 *                     falloff_coeffs = ()
 *                 self.falloff_coeffs = falloff_coeffs
 */
      __pyx_t_2 = (__pyx_v_falloff_coeffs == Py_None);
      if (__pyx_t_2) {

        /* "cantera/reaction.pyx":403
 *                 self.high_rate = high
 *                 if falloff_coeffs is None:
 *                     falloff_coeffs = ()             # <<<<<<<<<<<<<<
 *                 self.falloff_coeffs = falloff_coeffs
 * 
 */
        __Pyx_INCREF(__pyx_empty_tuple);
        __Pyx_DECREF_SET(__pyx_v_falloff_coeffs, __pyx_empty_tuple);

        /* "cantera/reaction.pyx":402
 *                 self.low_rate = low
 *                 self.high_rate = high
 *                 if falloff_coeffs is None:             # <<<<<<<<<<<<<<
 *                     falloff_coeffs = ()
 *                 self.falloff_coeffs = falloff_coeffs
 */
      }

      /* "cantera/reaction.pyx":404
 *                 if falloff_coeffs is None:
 *                     falloff_coeffs = ()
 *                 self.falloff_coeffs = falloff_coeffs             # <<<<<<<<<<<<<<
 * 
 *     def __call__(self, double temperature, double concm):
 */
      if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_falloff_coeffs, __pyx_v_falloff_coeffs) < 0) __PYX_ERR(0, 404, __pyx_L1_error)

      /* "cantera/reaction.pyx":399
 *             self.set_cxx_object()
 * 
 *             if (low is not None) and (high is not None):             # <<<<<<<<<<<<<<
 *                 self.low_rate = low
 *                 self.high_rate = high
 */
    }

    /* "cantera/reaction.pyx":390
 *                 "by itself; use specialized fall-off rate instead.")
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             if isinstance(input_data, dict):
 *                 self._from_dict(input_data)
 */
  }

  /* "cantera/reaction.pyx":383
 *     _reaction_rate_type = None
 * 
 *     def __cinit__(self, low=None, high=None, falloff_coeffs=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if self._reaction_rate_type is None:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_falloff_coeffs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":406
 *                 self.falloff_coeffs = falloff_coeffs
 * 
 *     def __call__(self, double temperature, double concm):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and third-body concentration.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_11FalloffRate_2__call__, "\n        Evaluate rate expression based on temperature and third-body concentration.\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_7cantera_8reaction_11FalloffRate_2__call__;
#endif
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_temperature;
  double __pyx_v_concm;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temperature,&__pyx_n_s_concm,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temperature)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 406, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_concm)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 406, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, 1); __PYX_ERR(0, 406, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__call__") < 0)) __PYX_ERR(0, 406, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_temperature = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_temperature == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 406, __pyx_L3_error)
    __pyx_v_concm = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_concm == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 406, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 406, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_2__call__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self), __pyx_v_temperature, __pyx_v_concm);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_2__call__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_concm) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "cantera/reaction.pyx":410
 *         Evaluate rate expression based on temperature and third-body concentration.
 *         """
 *         return self.rate.eval(temperature, concm)             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->__pyx_base.rate->eval(__pyx_v_temperature, __pyx_v_concm);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 410, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 410, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":406
 *                 self.falloff_coeffs = falloff_coeffs
 * 
 *     def __call__(self, double temperature, double concm):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and third-body concentration.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":412
 *         return self.rate.eval(temperature, concm)
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_11FalloffRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":413
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.falloff = <CxxFalloffRate*>self.rate
 * 
 */
  __pyx_v_self->__pyx_base.rate = __pyx_v_self->__pyx_base._rate.get();

  /* "cantera/reaction.pyx":414
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     property low_rate:
 */
  __pyx_v_self->falloff = ((Cantera::FalloffRate *)__pyx_v_self->__pyx_base.rate);

  /* "cantera/reaction.pyx":412
 *         return self.rate.eval(temperature, concm)
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":418
 *     property low_rate:
 *         """ Get/Set the `Arrhenius` rate constant in the low-pressure limit """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return Arrhenius.wrap(&(self.falloff.lowRate()))
 *         def __set__(self, Arrhenius rate):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_8low_rate_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_8low_rate_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_8low_rate___get__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_8low_rate___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":419
 *         """ Get/Set the `Arrhenius` rate constant in the low-pressure limit """
 *         def __get__(self):
 *             return Arrhenius.wrap(&(self.falloff.lowRate()))             # <<<<<<<<<<<<<<
 *         def __set__(self, Arrhenius rate):
 *             self.falloff.setLowRate(deref(rate.base))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_8reaction_9Arrhenius_wrap((&__pyx_v_self->falloff->lowRate())); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":418
 *     property low_rate:
 *         """ Get/Set the `Arrhenius` rate constant in the low-pressure limit """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return Arrhenius.wrap(&(self.falloff.lowRate()))
 *         def __set__(self, Arrhenius rate):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.low_rate.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":420
 *         def __get__(self):
 *             return Arrhenius.wrap(&(self.falloff.lowRate()))
 *         def __set__(self, Arrhenius rate):             # <<<<<<<<<<<<<<
 *             self.falloff.setLowRate(deref(rate.base))
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_11FalloffRate_8low_rate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rate); /*proto*/
static int __pyx_pw_7cantera_8reaction_11FalloffRate_8low_rate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rate) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rate), __pyx_ptype_7cantera_8reaction_Arrhenius, 1, "rate", 0))) __PYX_ERR(0, 420, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_8low_rate_2__set__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self), ((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_rate));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_11FalloffRate_8low_rate_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_rate) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":421
 *             return Arrhenius.wrap(&(self.falloff.lowRate()))
 *         def __set__(self, Arrhenius rate):
 *             self.falloff.setLowRate(deref(rate.base))             # <<<<<<<<<<<<<<
 * 
 *     property high_rate:
 */
  try {
    __pyx_v_self->falloff->setLowRate((*__pyx_v_rate->base));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 421, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":420
 *         def __get__(self):
 *             return Arrhenius.wrap(&(self.falloff.lowRate()))
 *         def __set__(self, Arrhenius rate):             # <<<<<<<<<<<<<<
 *             self.falloff.setLowRate(deref(rate.base))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.low_rate.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":425
 *     property high_rate:
 *         """ Get/Set the `Arrhenius` rate constant in the high-pressure limit """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return Arrhenius.wrap(&(self.falloff.highRate()))
 *         def __set__(self, Arrhenius rate):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_9high_rate_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_9high_rate_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_9high_rate___get__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_9high_rate___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":426
 *         """ Get/Set the `Arrhenius` rate constant in the high-pressure limit """
 *         def __get__(self):
 *             return Arrhenius.wrap(&(self.falloff.highRate()))             # <<<<<<<<<<<<<<
 *         def __set__(self, Arrhenius rate):
 *             self.falloff.setHighRate(deref(rate.base))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_8reaction_9Arrhenius_wrap((&__pyx_v_self->falloff->highRate())); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 426, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":425
 *     property high_rate:
 *         """ Get/Set the `Arrhenius` rate constant in the high-pressure limit """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return Arrhenius.wrap(&(self.falloff.highRate()))
 *         def __set__(self, Arrhenius rate):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.high_rate.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":427
 *         def __get__(self):
 *             return Arrhenius.wrap(&(self.falloff.highRate()))
 *         def __set__(self, Arrhenius rate):             # <<<<<<<<<<<<<<
 *             self.falloff.setHighRate(deref(rate.base))
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_11FalloffRate_9high_rate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rate); /*proto*/
static int __pyx_pw_7cantera_8reaction_11FalloffRate_9high_rate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rate) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rate), __pyx_ptype_7cantera_8reaction_Arrhenius, 1, "rate", 0))) __PYX_ERR(0, 427, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_9high_rate_2__set__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self), ((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_rate));

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_11FalloffRate_9high_rate_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_rate) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":428
 *             return Arrhenius.wrap(&(self.falloff.highRate()))
 *         def __set__(self, Arrhenius rate):
 *             self.falloff.setHighRate(deref(rate.base))             # <<<<<<<<<<<<<<
 * 
 *     property falloff_coeffs:
 */
  try {
    __pyx_v_self->falloff->setHighRate((*__pyx_v_rate->base));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 428, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":427
 *         def __get__(self):
 *             return Arrhenius.wrap(&(self.falloff.highRate()))
 *         def __set__(self, Arrhenius rate):             # <<<<<<<<<<<<<<
 *             self.falloff.setHighRate(deref(rate.base))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.high_rate.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":432
 *     property falloff_coeffs:
 *         """ The array of coefficients used to define this falloff function. """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef vector[double] cxxdata
 *             self.falloff.getFalloffCoeffs(cxxdata)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_14falloff_coeffs_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_14falloff_coeffs_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_14falloff_coeffs___get__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_14falloff_coeffs___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self) {
  std::vector<double>  __pyx_v_cxxdata;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":434
 *         def __get__(self):
 *             cdef vector[double] cxxdata
 *             self.falloff.getFalloffCoeffs(cxxdata)             # <<<<<<<<<<<<<<
 *             return np.fromiter(cxxdata, np.double)
 *         def __set__(self, data):
 */
  __pyx_v_self->falloff->getFalloffCoeffs(__pyx_v_cxxdata);

  /* "cantera/reaction.pyx":435
 *             cdef vector[double] cxxdata
 *             self.falloff.getFalloffCoeffs(cxxdata)
 *             return np.fromiter(cxxdata, np.double)             # <<<<<<<<<<<<<<
 *         def __set__(self, data):
 *             cdef vector[double] cxxdata
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_fromiter); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __pyx_convert_vector_to_py_double(__pyx_v_cxxdata); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_np); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(__pyx_t_4, __pyx_n_s_double); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 435, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_4 = NULL;
  __pyx_t_6 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_6 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_4, __pyx_t_2, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 435, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":432
 *     property falloff_coeffs:
 *         """ The array of coefficients used to define this falloff function. """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef vector[double] cxxdata
 *             self.falloff.getFalloffCoeffs(cxxdata)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.falloff_coeffs.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":436
 *             self.falloff.getFalloffCoeffs(cxxdata)
 *             return np.fromiter(cxxdata, np.double)
 *         def __set__(self, data):             # <<<<<<<<<<<<<<
 *             cdef vector[double] cxxdata
 *             for c in data:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_11FalloffRate_14falloff_coeffs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_data); /*proto*/
static int __pyx_pw_7cantera_8reaction_11FalloffRate_14falloff_coeffs_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_data) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_14falloff_coeffs_2__set__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self), ((PyObject *)__pyx_v_data));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_11FalloffRate_14falloff_coeffs_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, PyObject *__pyx_v_data) {
  std::vector<double>  __pyx_v_cxxdata;
  PyObject *__pyx_v_c = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":438
 *         def __set__(self, data):
 *             cdef vector[double] cxxdata
 *             for c in data:             # <<<<<<<<<<<<<<
 *                 cxxdata.push_back(c)
 *             self.falloff.setFalloffCoeffs(cxxdata)
 */
  if (likely(PyList_CheckExact(__pyx_v_data)) || PyTuple_CheckExact(__pyx_v_data)) {
    __pyx_t_1 = __pyx_v_data; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_data); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 438, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 438, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 438, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 438, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 438, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 438, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 438, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/reaction.pyx":439
 *             cdef vector[double] cxxdata
 *             for c in data:
 *                 cxxdata.push_back(c)             # <<<<<<<<<<<<<<
 *             self.falloff.setFalloffCoeffs(cxxdata)
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_c); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 439, __pyx_L1_error)
    try {
      __pyx_v_cxxdata.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 439, __pyx_L1_error)
    }

    /* "cantera/reaction.pyx":438
 *         def __set__(self, data):
 *             cdef vector[double] cxxdata
 *             for c in data:             # <<<<<<<<<<<<<<
 *                 cxxdata.push_back(c)
 *             self.falloff.setFalloffCoeffs(cxxdata)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":440
 *             for c in data:
 *                 cxxdata.push_back(c)
 *             self.falloff.setFalloffCoeffs(cxxdata)             # <<<<<<<<<<<<<<
 * 
 *     property allow_negative_pre_exponential_factor:
 */
  try {
    __pyx_v_self->falloff->setFalloffCoeffs(__pyx_v_cxxdata);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 440, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":436
 *             self.falloff.getFalloffCoeffs(cxxdata)
 *             return np.fromiter(cxxdata, np.double)
 *         def __set__(self, data):             # <<<<<<<<<<<<<<
 *             cdef vector[double] cxxdata
 *             for c in data:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.falloff_coeffs.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":447
 *         pre-exponential factor.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.falloff.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor___get__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":448
 *         """
 *         def __get__(self):
 *             return self.falloff.allowNegativePreExponentialFactor()             # <<<<<<<<<<<<<<
 *         def __set__(self, cbool allow):
 *             self.falloff.setAllowNegativePreExponentialFactor(allow)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->falloff->allowNegativePreExponentialFactor()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 448, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":447
 *         pre-exponential factor.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.falloff.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.allow_negative_pre_exponential_factor.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":449
 *         def __get__(self):
 *             return self.falloff.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):             # <<<<<<<<<<<<<<
 *             self.falloff.setAllowNegativePreExponentialFactor(allow)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_allow); /*proto*/
static int __pyx_pw_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_allow) {
  bool __pyx_v_allow;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_allow); {
    __pyx_v_allow = __Pyx_PyObject_IsTrue(__pyx_arg_allow); if (unlikely((__pyx_v_allow == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 449, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.allow_negative_pre_exponential_factor.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor_2__set__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self), ((bool)__pyx_v_allow));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, bool __pyx_v_allow) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":450
 *             return self.falloff.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):
 *             self.falloff.setAllowNegativePreExponentialFactor(allow)             # <<<<<<<<<<<<<<
 * 
 *     property chemically_activated:
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_allow); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 450, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_self->falloff->setAllowNegativePreExponentialFactor(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":449
 *         def __get__(self):
 *             return self.falloff.allowNegativePreExponentialFactor()
 *         def __set__(self, cbool allow):             # <<<<<<<<<<<<<<
 *             self.falloff.setAllowNegativePreExponentialFactor(allow)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.allow_negative_pre_exponential_factor.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":456
 *         Get whether the object is a chemically-activated reaction rate.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.falloff.chemicallyActivated()
 *         def __set__(self, cbool activated):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_20chemically_activated_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_20chemically_activated_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_20chemically_activated___get__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_20chemically_activated___get__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":457
 *         """
 *         def __get__(self):
 *             return self.falloff.chemicallyActivated()             # <<<<<<<<<<<<<<
 *         def __set__(self, cbool activated):
 *             self.falloff.setChemicallyActivated(activated)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->falloff->chemicallyActivated()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 457, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":456
 *         Get whether the object is a chemically-activated reaction rate.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.falloff.chemicallyActivated()
 *         def __set__(self, cbool activated):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.chemically_activated.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":458
 *         def __get__(self):
 *             return self.falloff.chemicallyActivated()
 *         def __set__(self, cbool activated):             # <<<<<<<<<<<<<<
 *             self.falloff.setChemicallyActivated(activated)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_11FalloffRate_20chemically_activated_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_activated); /*proto*/
static int __pyx_pw_7cantera_8reaction_11FalloffRate_20chemically_activated_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_activated) {
  bool __pyx_v_activated;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_activated); {
    __pyx_v_activated = __Pyx_PyObject_IsTrue(__pyx_arg_activated); if (unlikely((__pyx_v_activated == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 458, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.chemically_activated.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_20chemically_activated_2__set__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self), ((bool)__pyx_v_activated));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_11FalloffRate_20chemically_activated_2__set__(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, bool __pyx_v_activated) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":459
 *             return self.falloff.chemicallyActivated()
 *         def __set__(self, cbool activated):
 *             self.falloff.setChemicallyActivated(activated)             # <<<<<<<<<<<<<<
 * 
 *     def falloff_function(self, double temperature, double conc3b):
 */
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_activated); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 459, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_self->falloff->setChemicallyActivated(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":458
 *         def __get__(self):
 *             return self.falloff.chemicallyActivated()
 *         def __set__(self, cbool activated):             # <<<<<<<<<<<<<<
 *             self.falloff.setChemicallyActivated(activated)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.chemically_activated.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":461
 *             self.falloff.setChemicallyActivated(activated)
 * 
 *     def falloff_function(self, double temperature, double conc3b):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate the falloff function based on temperature and third-body
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_5falloff_function(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_11FalloffRate_4falloff_function, "\n        Evaluate the falloff function based on temperature and third-body\n        concentration.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_11FalloffRate_5falloff_function = {"falloff_function", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_11FalloffRate_5falloff_function, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_11FalloffRate_4falloff_function};
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_5falloff_function(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  double __pyx_v_temperature;
  double __pyx_v_conc3b;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("falloff_function (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temperature,&__pyx_n_s_conc3b,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temperature)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 461, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_conc3b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 461, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("falloff_function", 1, 2, 2, 1); __PYX_ERR(0, 461, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "falloff_function") < 0)) __PYX_ERR(0, 461, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_temperature = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_temperature == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 461, __pyx_L3_error)
    __pyx_v_conc3b = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_conc3b == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 461, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("falloff_function", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 461, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.falloff_function", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_4falloff_function(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self), __pyx_v_temperature, __pyx_v_conc3b);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_4falloff_function(struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_conc3b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("falloff_function", 0);

  /* "cantera/reaction.pyx":466
 *         concentration.
 *         """
 *         return self.falloff.evalF(temperature, conc3b)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->falloff->evalF(__pyx_v_temperature, __pyx_v_conc3b);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 466, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":461
 *             self.falloff.setChemicallyActivated(activated)
 * 
 *     def falloff_function(self, double temperature, double conc3b):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate the falloff function based on temperature and third-body
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.falloff_function", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_11FalloffRate_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_11FalloffRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_6__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_11FalloffRate_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_11FalloffRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_11FalloffRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_11FalloffRate_8__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_FalloffRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_11FalloffRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":477
 *     _reaction_rate_type = "Lindemann"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxLindemannRate(py_to_anymap(input_data, hyphenize=True))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13LindemannRate_1_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13LindemannRate_1_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13LindemannRate_1_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13LindemannRate_1_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 477, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 477, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 477, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.LindemannRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13LindemannRate__from_dict(((struct __pyx_obj_7cantera_8reaction_LindemannRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13LindemannRate__from_dict(struct __pyx_obj_7cantera_8reaction_LindemannRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  struct __pyx_opt_args_7cantera_6_utils_py_to_anymap __pyx_t_2;
  Cantera::LindemannRate *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":479
 *     def _from_dict(self, input_data):
 *         self._rate.reset(
 *             new CxxLindemannRate(py_to_anymap(input_data, hyphenize=True))             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.hyphenize = 1;
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, &__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 479, __pyx_L1_error)
  try {
    __pyx_t_3 = new Cantera::LindemannRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 479, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":478
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(             # <<<<<<<<<<<<<<
 *             new CxxLindemannRate(py_to_anymap(input_data, hyphenize=True))
 *         )
 */
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(__pyx_t_3);

  /* "cantera/reaction.pyx":477
 *     _reaction_rate_type = "Lindemann"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxLindemannRate(py_to_anymap(input_data, hyphenize=True))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.LindemannRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":482
 *         )
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_13LindemannRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_LindemannRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":483
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.falloff = <CxxFalloffRate*>self.rate
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":484
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.falloff = ((Cantera::FalloffRate *)__pyx_v_self->__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":482
 *         )
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13LindemannRate_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13LindemannRate_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13LindemannRate_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13LindemannRate_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_13LindemannRate_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_LindemannRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13LindemannRate_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_LindemannRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.LindemannRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13LindemannRate_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13LindemannRate_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13LindemannRate_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13LindemannRate_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.LindemannRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13LindemannRate_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_LindemannRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13LindemannRate_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_LindemannRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.LindemannRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":497
 *     _reaction_rate_type = "Troe"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTroeRate(py_to_anymap(input_data, hyphenize=True))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8TroeRate_1_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_8TroeRate_1_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8TroeRate_1_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_8TroeRate_1_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 497, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 497, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 497, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.TroeRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_8TroeRate__from_dict(((struct __pyx_obj_7cantera_8reaction_TroeRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8TroeRate__from_dict(struct __pyx_obj_7cantera_8reaction_TroeRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  struct __pyx_opt_args_7cantera_6_utils_py_to_anymap __pyx_t_2;
  Cantera::TroeRate *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":499
 *     def _from_dict(self, input_data):
 *         self._rate.reset(
 *             new CxxTroeRate(py_to_anymap(input_data, hyphenize=True))             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.hyphenize = 1;
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, &__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 499, __pyx_L1_error)
  try {
    __pyx_t_3 = new Cantera::TroeRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 499, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":498
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(             # <<<<<<<<<<<<<<
 *             new CxxTroeRate(py_to_anymap(input_data, hyphenize=True))
 *         )
 */
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(__pyx_t_3);

  /* "cantera/reaction.pyx":497
 *     _reaction_rate_type = "Troe"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTroeRate(py_to_anymap(input_data, hyphenize=True))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TroeRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":502
 *         )
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_8TroeRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_TroeRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":503
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.falloff = <CxxFalloffRate*>self.rate
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":504
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.falloff = ((Cantera::FalloffRate *)__pyx_v_self->__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":502
 *         )
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8TroeRate_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_8TroeRate_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8TroeRate_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_8TroeRate_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_8TroeRate_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_TroeRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8TroeRate_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TroeRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TroeRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8TroeRate_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_8TroeRate_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8TroeRate_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_8TroeRate_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.TroeRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_8TroeRate_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_TroeRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8TroeRate_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TroeRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TroeRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":517
 *     _reaction_rate_type = "SRI"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxSriRate(py_to_anymap(input_data, hyphenize=True))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_7SriRate_1_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_7SriRate_1_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_7SriRate_1_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_7SriRate_1_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 517, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 517, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 517, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.SriRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_7SriRate__from_dict(((struct __pyx_obj_7cantera_8reaction_SriRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_7SriRate__from_dict(struct __pyx_obj_7cantera_8reaction_SriRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  struct __pyx_opt_args_7cantera_6_utils_py_to_anymap __pyx_t_2;
  Cantera::SriRate *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":519
 *     def _from_dict(self, input_data):
 *         self._rate.reset(
 *             new CxxSriRate(py_to_anymap(input_data, hyphenize=True))             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.hyphenize = 1;
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, &__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 519, __pyx_L1_error)
  try {
    __pyx_t_3 = new Cantera::SriRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 519, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":518
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(             # <<<<<<<<<<<<<<
 *             new CxxSriRate(py_to_anymap(input_data, hyphenize=True))
 *         )
 */
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(__pyx_t_3);

  /* "cantera/reaction.pyx":517
 *     _reaction_rate_type = "SRI"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxSriRate(py_to_anymap(input_data, hyphenize=True))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.SriRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":522
 *         )
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_7SriRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_SriRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":523
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.falloff = <CxxFalloffRate*>self.rate
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":524
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.falloff = ((Cantera::FalloffRate *)__pyx_v_self->__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":522
 *         )
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_7SriRate_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_7SriRate_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_7SriRate_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_7SriRate_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_7SriRate_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_SriRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_7SriRate_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_SriRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.SriRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_7SriRate_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_7SriRate_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_7SriRate_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_7SriRate_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.SriRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_7SriRate_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_SriRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_7SriRate_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_SriRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.SriRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":533
 *     _reaction_rate_type = "Tsang"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTsangRate(py_to_anymap(input_data, hyphenize=True))
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9TsangRate_1_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_9TsangRate_1_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9TsangRate_1_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_9TsangRate_1_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 533, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 533, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 533, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.TsangRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_9TsangRate__from_dict(((struct __pyx_obj_7cantera_8reaction_TsangRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9TsangRate__from_dict(struct __pyx_obj_7cantera_8reaction_TsangRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  struct __pyx_opt_args_7cantera_6_utils_py_to_anymap __pyx_t_2;
  Cantera::TsangRate *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":535
 *     def _from_dict(self, input_data):
 *         self._rate.reset(
 *             new CxxTsangRate(py_to_anymap(input_data, hyphenize=True))             # <<<<<<<<<<<<<<
 *         )
 * 
 */
  __pyx_t_2.__pyx_n = 1;
  __pyx_t_2.hyphenize = 1;
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, &__pyx_t_2); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 535, __pyx_L1_error)
  try {
    __pyx_t_3 = new Cantera::TsangRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 535, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":534
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(             # <<<<<<<<<<<<<<
 *             new CxxTsangRate(py_to_anymap(input_data, hyphenize=True))
 *         )
 */
  __pyx_v_self->__pyx_base.__pyx_base._rate.reset(__pyx_t_3);

  /* "cantera/reaction.pyx":533
 *     _reaction_rate_type = "Tsang"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTsangRate(py_to_anymap(input_data, hyphenize=True))
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TsangRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":538
 *         )
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_9TsangRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_TsangRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":539
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.falloff = <CxxFalloffRate*>self.rate
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":540
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.falloff = ((Cantera::FalloffRate *)__pyx_v_self->__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":538
 *         )
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.falloff = <CxxFalloffRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9TsangRate_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_9TsangRate_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9TsangRate_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_9TsangRate_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_9TsangRate_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_TsangRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9TsangRate_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TsangRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TsangRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9TsangRate_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_9TsangRate_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9TsangRate_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_9TsangRate_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.TsangRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_9TsangRate_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_TsangRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9TsangRate_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_TsangRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.TsangRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":550
 *     _reaction_rate_type = "pressure-dependent-Arrhenius"
 * 
 *     def __cinit__(self, rates=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init and isinstance(rates, list):
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8PlogRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_8PlogRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_rates = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_rates,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[3] = {0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_rates);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 550, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 550, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 550, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 550, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_rates = values[0];
    __pyx_v_input_data = values[1];
    __pyx_v_init = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 550, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.PlogRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_8PlogRate___cinit__(((struct __pyx_obj_7cantera_8reaction_PlogRate *)__pyx_v_self), __pyx_v_rates, __pyx_v_input_data, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8PlogRate___cinit__(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self, PyObject *__pyx_v_rates, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  Cantera::AnyMap __pyx_t_3;
  Cantera::PlogRate *__pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":552
 *     def __cinit__(self, rates=None, input_data=None, init=True):
 * 
 *         if init and isinstance(rates, list):             # <<<<<<<<<<<<<<
 *             self.rates = rates
 * 
 */
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(0, 552, __pyx_L1_error)
  if (__pyx_t_2) {
  } else {
    __pyx_t_1 = __pyx_t_2;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_2 = PyList_Check(__pyx_v_rates); 
  __pyx_t_1 = __pyx_t_2;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":553
 * 
 *         if init and isinstance(rates, list):
 *             self.rates = rates             # <<<<<<<<<<<<<<
 * 
 *         elif init:
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_rates, __pyx_v_rates) < 0) __PYX_ERR(0, 553, __pyx_L1_error)

    /* "cantera/reaction.pyx":552
 *     def __cinit__(self, rates=None, input_data=None, init=True):
 * 
 *         if init and isinstance(rates, list):             # <<<<<<<<<<<<<<
 *             self.rates = rates
 * 
 */
    goto __pyx_L3;
  }

  /* "cantera/reaction.pyx":555
 *             self.rates = rates
 * 
 *         elif init:             # <<<<<<<<<<<<<<
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap(input_data)))
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 555, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":556
 * 
 *         elif init:
 *             if isinstance(input_data, dict):             # <<<<<<<<<<<<<<
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap(input_data)))
 *             elif rates is None:
 */
    __pyx_t_1 = PyDict_Check(__pyx_v_input_data); 
    if (__pyx_t_1) {

      /* "cantera/reaction.pyx":557
 *         elif init:
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap(input_data)))             # <<<<<<<<<<<<<<
 *             elif rates is None:
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap({})))
 */
      __pyx_t_3 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 557, __pyx_L1_error)
      try {
        __pyx_t_4 = new Cantera::PlogRate(__pyx_t_3);
      } catch(...) {
        translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
        __PYX_ERR(0, 557, __pyx_L1_error)
      }
      __pyx_v_self->__pyx_base._rate.reset(__pyx_t_4);

      /* "cantera/reaction.pyx":556
 * 
 *         elif init:
 *             if isinstance(input_data, dict):             # <<<<<<<<<<<<<<
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap(input_data)))
 *             elif rates is None:
 */
      goto __pyx_L6;
    }

    /* "cantera/reaction.pyx":558
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap(input_data)))
 *             elif rates is None:             # <<<<<<<<<<<<<<
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap({})))
 *             elif input_data:
 */
    __pyx_t_1 = (__pyx_v_rates == Py_None);
    if (likely(__pyx_t_1)) {

      /* "cantera/reaction.pyx":559
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap(input_data)))
 *             elif rates is None:
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap({})))             # <<<<<<<<<<<<<<
 *             elif input_data:
 *                 raise TypeError("Invalid parameter 'input_data'")
 */
      __pyx_t_5 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 559, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_t_5, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 559, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      try {
        __pyx_t_4 = new Cantera::PlogRate(__pyx_t_3);
      } catch(...) {
        translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
        __PYX_ERR(0, 559, __pyx_L1_error)
      }
      __pyx_v_self->__pyx_base._rate.reset(__pyx_t_4);

      /* "cantera/reaction.pyx":558
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap(input_data)))
 *             elif rates is None:             # <<<<<<<<<<<<<<
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap({})))
 *             elif input_data:
 */
      goto __pyx_L6;
    }

    /* "cantera/reaction.pyx":560
 *             elif rates is None:
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap({})))
 *             elif input_data:             # <<<<<<<<<<<<<<
 *                 raise TypeError("Invalid parameter 'input_data'")
 *             else:
 */
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_input_data); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 560, __pyx_L1_error)
    if (unlikely(__pyx_t_1)) {

      /* "cantera/reaction.pyx":561
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap({})))
 *             elif input_data:
 *                 raise TypeError("Invalid parameter 'input_data'")             # <<<<<<<<<<<<<<
 *             else:
 *                 raise TypeError("Invalid parameter 'rates'")
 */
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 561, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_ERR(0, 561, __pyx_L1_error)

      /* "cantera/reaction.pyx":560
 *             elif rates is None:
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap({})))
 *             elif input_data:             # <<<<<<<<<<<<<<
 *                 raise TypeError("Invalid parameter 'input_data'")
 *             else:
 */
    }

    /* "cantera/reaction.pyx":563
 *                 raise TypeError("Invalid parameter 'input_data'")
 *             else:
 *                 raise TypeError("Invalid parameter 'rates'")             # <<<<<<<<<<<<<<
 *             self.set_cxx_object()
 * 
 */
    /*else*/ {
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__12, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 563, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_ERR(0, 563, __pyx_L1_error)
    }
    __pyx_L6:;

    /* "cantera/reaction.pyx":564
 *             else:
 *                 raise TypeError("Invalid parameter 'rates'")
 *             self.set_cxx_object()             # <<<<<<<<<<<<<<
 * 
 *     def __call__(self, double temperature, double pressure):
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_7cantera_8reaction_PlogRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_cxx_object(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 564, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cantera/reaction.pyx":555
 *             self.rates = rates
 * 
 *         elif init:             # <<<<<<<<<<<<<<
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxPlogRate(py_to_anymap(input_data)))
 */
  }
  __pyx_L3:;

  /* "cantera/reaction.pyx":550
 *     _reaction_rate_type = "pressure-dependent-Arrhenius"
 * 
 *     def __cinit__(self, rates=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init and isinstance(rates, list):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.PlogRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":566
 *             self.set_cxx_object()
 * 
 *     def __call__(self, double temperature, double pressure):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and pressure.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8PlogRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_8PlogRate_2__call__, "\n        Evaluate rate expression based on temperature and pressure.\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_7cantera_8reaction_8PlogRate_2__call__;
#endif
static PyObject *__pyx_pw_7cantera_8reaction_8PlogRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_temperature;
  double __pyx_v_pressure;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temperature,&__pyx_n_s_pressure,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temperature)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 566, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pressure)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 566, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, 1); __PYX_ERR(0, 566, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__call__") < 0)) __PYX_ERR(0, 566, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_temperature = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_temperature == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 566, __pyx_L3_error)
    __pyx_v_pressure = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_pressure == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 566, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 566, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.PlogRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_8PlogRate_2__call__(((struct __pyx_obj_7cantera_8reaction_PlogRate *)__pyx_v_self), __pyx_v_temperature, __pyx_v_pressure);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8PlogRate_2__call__(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_pressure) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "cantera/reaction.pyx":570
 *         Evaluate rate expression based on temperature and pressure.
 *         """
 *         return self.rate.eval(temperature, pressure)             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxPlogRate* cxx_object(self):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->__pyx_base.rate->eval(__pyx_v_temperature, __pyx_v_pressure);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 570, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 570, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":566
 *             self.set_cxx_object()
 * 
 *     def __call__(self, double temperature, double pressure):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and pressure.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.PlogRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":572
 *         return self.rate.eval(temperature, pressure)
 * 
 *     cdef CxxPlogRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxPlogRate*>self.rate
 * 
 */

static Cantera::PlogRate *__pyx_f_7cantera_8reaction_8PlogRate_cxx_object(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self) {
  Cantera::PlogRate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":573
 * 
 *     cdef CxxPlogRate* cxx_object(self):
 *         return <CxxPlogRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     property rates:
 */
  __pyx_r = ((Cantera::PlogRate *)__pyx_v_self->__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":572
 *         return self.rate.eval(temperature, pressure)
 * 
 *     cdef CxxPlogRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxPlogRate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":580
 *         list of (pressure, `Arrhenius`) tuples.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             rates = []
 *             cdef multimap[double, CxxArrheniusRate] cxxrates
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8PlogRate_5rates_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8PlogRate_5rates_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8PlogRate_5rates___get__(((struct __pyx_obj_7cantera_8reaction_PlogRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8PlogRate_5rates___get__(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self) {
  PyObject *__pyx_v_rates = NULL;
  std::multimap<double,Cantera::ArrheniusRate>  __pyx_v_cxxrates;
  std::pair<double,Cantera::ArrheniusRate>  __pyx_v_p_rate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Cantera::PlogRate *__pyx_t_2;
  std::multimap<double,Cantera::ArrheniusRate> ::iterator __pyx_t_3;
  std::pair<double,Cantera::ArrheniusRate>  __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":581
 *         """
 *         def __get__(self):
 *             rates = []             # <<<<<<<<<<<<<<
 *             cdef multimap[double, CxxArrheniusRate] cxxrates
 *             cdef pair[double, CxxArrheniusRate] p_rate
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_rates = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":584
 *             cdef multimap[double, CxxArrheniusRate] cxxrates
 *             cdef pair[double, CxxArrheniusRate] p_rate
 *             cxxrates = self.cxx_object().getRates()             # <<<<<<<<<<<<<<
 *             for p_rate in cxxrates:
 *                 rates.append((p_rate.first, copyArrhenius(&p_rate.second)))
 */
  __pyx_t_2 = ((struct __pyx_vtabstruct_7cantera_8reaction_PlogRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 584, __pyx_L1_error)
  __pyx_v_cxxrates = __pyx_t_2->getRates();

  /* "cantera/reaction.pyx":585
 *             cdef pair[double, CxxArrheniusRate] p_rate
 *             cxxrates = self.cxx_object().getRates()
 *             for p_rate in cxxrates:             # <<<<<<<<<<<<<<
 *                 rates.append((p_rate.first, copyArrhenius(&p_rate.second)))
 *             return rates
 */
  __pyx_t_3 = __pyx_v_cxxrates.begin();
  for (;;) {
    if (!(__pyx_t_3 != __pyx_v_cxxrates.end())) break;
    __pyx_t_4 = *__pyx_t_3;
    ++__pyx_t_3;
    __pyx_v_p_rate = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_4);

    /* "cantera/reaction.pyx":586
 *             cxxrates = self.cxx_object().getRates()
 *             for p_rate in cxxrates:
 *                 rates.append((p_rate.first, copyArrhenius(&p_rate.second)))             # <<<<<<<<<<<<<<
 *             return rates
 * 
 */
    __pyx_t_1 = PyFloat_FromDouble(__pyx_v_p_rate.first); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = __pyx_f_7cantera_8reaction_copyArrhenius((&__pyx_v_p_rate.second)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 586, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_5);
    __pyx_t_1 = 0;
    __pyx_t_5 = 0;
    __pyx_t_7 = __Pyx_PyList_Append(__pyx_v_rates, __pyx_t_6); if (unlikely(__pyx_t_7 == ((int)-1))) __PYX_ERR(0, 586, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;

    /* "cantera/reaction.pyx":585
 *             cdef pair[double, CxxArrheniusRate] p_rate
 *             cxxrates = self.cxx_object().getRates()
 *             for p_rate in cxxrates:             # <<<<<<<<<<<<<<
 *                 rates.append((p_rate.first, copyArrhenius(&p_rate.second)))
 *             return rates
 */
  }

  /* "cantera/reaction.pyx":587
 *             for p_rate in cxxrates:
 *                 rates.append((p_rate.first, copyArrhenius(&p_rate.second)))
 *             return rates             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, rates):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_rates);
  __pyx_r = __pyx_v_rates;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":580
 *         list of (pressure, `Arrhenius`) tuples.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             rates = []
 *             cdef multimap[double, CxxArrheniusRate] cxxrates
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera.reaction.PlogRate.rates.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_rates);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":589
 *             return rates
 * 
 *         def __set__(self, rates):             # <<<<<<<<<<<<<<
 *             cdef multimap[double, CxxArrheniusRate] ratemap
 *             cdef Arrhenius rate
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8PlogRate_5rates_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rates); /*proto*/
static int __pyx_pw_7cantera_8reaction_8PlogRate_5rates_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rates) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8PlogRate_5rates_2__set__(((struct __pyx_obj_7cantera_8reaction_PlogRate *)__pyx_v_self), ((PyObject *)__pyx_v_rates));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8PlogRate_5rates_2__set__(struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self, PyObject *__pyx_v_rates) {
  std::multimap<double,Cantera::ArrheniusRate>  __pyx_v_ratemap;
  struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_rate = 0;
  std::pair<double,Cantera::ArrheniusRate>  __pyx_v_item;
  PyObject *__pyx_v_p = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *(*__pyx_t_8)(PyObject *);
  double __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":593
 *             cdef Arrhenius rate
 *             cdef pair[double, CxxArrheniusRate] item
 *             for p, rate in rates:             # <<<<<<<<<<<<<<
 *                 item.first = p
 *                 item.second = deref(rate.base)
 */
  if (likely(PyList_CheckExact(__pyx_v_rates)) || PyTuple_CheckExact(__pyx_v_rates)) {
    __pyx_t_1 = __pyx_v_rates; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_rates); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 593, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 593, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 593, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 593, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 593, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 593, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 593, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    if ((likely(PyTuple_CheckExact(__pyx_t_4))) || (PyList_CheckExact(__pyx_t_4))) {
      PyObject* sequence = __pyx_t_4;
      Py_ssize_t size = __Pyx_PySequence_SIZE(sequence);
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        __PYX_ERR(0, 593, __pyx_L1_error)
      }
      #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
      if (likely(PyTuple_CheckExact(sequence))) {
        __pyx_t_5 = PyTuple_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyTuple_GET_ITEM(sequence, 1); 
      } else {
        __pyx_t_5 = PyList_GET_ITEM(sequence, 0); 
        __pyx_t_6 = PyList_GET_ITEM(sequence, 1); 
      }
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_t_6);
      #else
      __pyx_t_5 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      #endif
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    } else {
      Py_ssize_t index = -1;
      __pyx_t_7 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_7)) __PYX_ERR(0, 593, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_7);
      index = 0; __pyx_t_5 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_5)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_5);
      index = 1; __pyx_t_6 = __pyx_t_8(__pyx_t_7); if (unlikely(!__pyx_t_6)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_6);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_8(__pyx_t_7), 2) < 0) __PYX_ERR(0, 593, __pyx_L1_error)
      __pyx_t_8 = NULL;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      __PYX_ERR(0, 593, __pyx_L1_error)
      __pyx_L6_unpacking_done:;
    }
    if (!(likely(((__pyx_t_6) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_6, __pyx_ptype_7cantera_8reaction_Arrhenius))))) __PYX_ERR(0, 593, __pyx_L1_error)
    __Pyx_XDECREF_SET(__pyx_v_p, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_XDECREF_SET(__pyx_v_rate, ((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_t_6));
    __pyx_t_6 = 0;

    /* "cantera/reaction.pyx":594
 *             cdef pair[double, CxxArrheniusRate] item
 *             for p, rate in rates:
 *                 item.first = p             # <<<<<<<<<<<<<<
 *                 item.second = deref(rate.base)
 *                 ratemap.insert(item)
 */
    __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_v_p); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 594, __pyx_L1_error)
    __pyx_v_item.first = __pyx_t_9;

    /* "cantera/reaction.pyx":595
 *             for p, rate in rates:
 *                 item.first = p
 *                 item.second = deref(rate.base)             # <<<<<<<<<<<<<<
 *                 ratemap.insert(item)
 * 
 */
    __pyx_v_item.second = (*__pyx_v_rate->base);

    /* "cantera/reaction.pyx":596
 *                 item.first = p
 *                 item.second = deref(rate.base)
 *                 ratemap.insert(item)             # <<<<<<<<<<<<<<
 * 
 *             self._rate.reset(new CxxPlogRate(ratemap))
 */
    (void)(__pyx_v_ratemap.insert(__pyx_v_item));

    /* "cantera/reaction.pyx":593
 *             cdef Arrhenius rate
 *             cdef pair[double, CxxArrheniusRate] item
 *             for p, rate in rates:             # <<<<<<<<<<<<<<
 *                 item.first = p
 *                 item.second = deref(rate.base)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":598
 *                 ratemap.insert(item)
 * 
 *             self._rate.reset(new CxxPlogRate(ratemap))             # <<<<<<<<<<<<<<
 *             self.rate = self._rate.get()
 * 
 */
  __pyx_v_self->__pyx_base._rate.reset(new Cantera::PlogRate(__pyx_v_ratemap));

  /* "cantera/reaction.pyx":599
 * 
 *             self._rate.reset(new CxxPlogRate(ratemap))
 *             self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->__pyx_base.rate = __pyx_v_self->__pyx_base._rate.get();

  /* "cantera/reaction.pyx":589
 *             return rates
 * 
 *         def __set__(self, rates):             # <<<<<<<<<<<<<<
 *             cdef multimap[double, CxxArrheniusRate] ratemap
 *             cdef Arrhenius rate
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cantera.reaction.PlogRate.rates.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_rate);
  __Pyx_XDECREF(__pyx_v_p);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8PlogRate_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_8PlogRate_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8PlogRate_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_8PlogRate_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_8PlogRate_4__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_PlogRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8PlogRate_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.PlogRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8PlogRate_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_8PlogRate_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8PlogRate_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_8PlogRate_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.PlogRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_8PlogRate_6__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_PlogRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8PlogRate_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_PlogRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.PlogRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":609
 *     _reaction_rate_type = "Chebyshev"
 * 
 *     def __cinit__(self, temperature_range=None, pressure_range=None, data=None,             # <<<<<<<<<<<<<<
 *                   input_data=None, init=True):
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_13ChebyshevRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_13ChebyshevRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_temperature_range = 0;
  PyObject *__pyx_v_pressure_range = 0;
  PyObject *__pyx_v_data = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temperature_range,&__pyx_n_s_pressure_range,&__pyx_n_s_data,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);

    /* "cantera/reaction.pyx":610
 * 
 *     def __cinit__(self, temperature_range=None, pressure_range=None, data=None,
 *                   input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temperature_range);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 609, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pressure_range);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 609, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_data);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 609, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 609, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 609, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 609, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_temperature_range = values[0];
    __pyx_v_pressure_range = values[1];
    __pyx_v_data = values[2];
    __pyx_v_input_data = values[3];
    __pyx_v_init = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 609, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13ChebyshevRate___cinit__(((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)__pyx_v_self), __pyx_v_temperature_range, __pyx_v_pressure_range, __pyx_v_data, __pyx_v_input_data, __pyx_v_init);

  /* "cantera/reaction.pyx":609
 *     _reaction_rate_type = "Chebyshev"
 * 
 *     def __cinit__(self, temperature_range=None, pressure_range=None, data=None,             # <<<<<<<<<<<<<<
 *                   input_data=None, init=True):
 * 
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_13ChebyshevRate___cinit__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self, PyObject *__pyx_v_temperature_range, PyObject *__pyx_v_pressure_range, PyObject *__pyx_v_data, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  PyObject *__pyx_v_Tmin = NULL;
  PyObject *__pyx_v_Tmax = NULL;
  PyObject *__pyx_v_Pmin = NULL;
  PyObject *__pyx_v_Pmax = NULL;
  PyObject *__pyx_8genexpr4__pyx_v_arg = NULL;
  PyObject *__pyx_8genexpr5__pyx_v_arg = NULL;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  Cantera::AnyMap __pyx_t_2;
  Cantera::ChebyshevRate *__pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  double __pyx_t_8;
  double __pyx_t_9;
  double __pyx_t_10;
  double __pyx_t_11;
  Cantera::Array2D __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":612
 *                   input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 612, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":613
 * 
 *         if init:
 *             if isinstance(input_data, dict):             # <<<<<<<<<<<<<<
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 *             elif all([arg is not None
 */
    __pyx_t_1 = PyDict_Check(__pyx_v_input_data); 
    if (__pyx_t_1) {

      /* "cantera/reaction.pyx":614
 *         if init:
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))             # <<<<<<<<<<<<<<
 *             elif all([arg is not None
 *                     for arg in [temperature_range, pressure_range, data]]):
 */
      __pyx_t_2 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 614, __pyx_L1_error)
      try {
        __pyx_t_3 = new Cantera::ChebyshevRate(__pyx_t_2);
      } catch(...) {
        translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
        __PYX_ERR(0, 614, __pyx_L1_error)
      }
      __pyx_v_self->__pyx_base._rate.reset(__pyx_t_3);

      /* "cantera/reaction.pyx":613
 * 
 *         if init:
 *             if isinstance(input_data, dict):             # <<<<<<<<<<<<<<
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 *             elif all([arg is not None
 */
      goto __pyx_L4;
    }

    /* "cantera/reaction.pyx":615
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 *             elif all([arg is not None             # <<<<<<<<<<<<<<
 *                     for arg in [temperature_range, pressure_range, data]]):
 *                 Tmin = temperature_range[0]
 */
    { /* enter inner scope */
      __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 615, __pyx_L7_error)
      __Pyx_GOTREF(__pyx_t_4);

      /* "cantera/reaction.pyx":616
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 *             elif all([arg is not None
 *                     for arg in [temperature_range, pressure_range, data]]):             # <<<<<<<<<<<<<<
 *                 Tmin = temperature_range[0]
 *                 Tmax = temperature_range[1]
 */
      __pyx_t_5 = PyTuple_New(3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 616, __pyx_L7_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_INCREF(__pyx_v_temperature_range);
      __Pyx_GIVEREF(__pyx_v_temperature_range);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_v_temperature_range);
      __Pyx_INCREF(__pyx_v_pressure_range);
      __Pyx_GIVEREF(__pyx_v_pressure_range);
      PyTuple_SET_ITEM(__pyx_t_5, 1, __pyx_v_pressure_range);
      __Pyx_INCREF(__pyx_v_data);
      __Pyx_GIVEREF(__pyx_v_data);
      PyTuple_SET_ITEM(__pyx_t_5, 2, __pyx_v_data);
      __pyx_t_6 = __pyx_t_5; __Pyx_INCREF(__pyx_t_6); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      for (;;) {
        if (__pyx_t_7 >= 3) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_5 = PyTuple_GET_ITEM(__pyx_t_6, __pyx_t_7); __Pyx_INCREF(__pyx_t_5); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 616, __pyx_L7_error)
        #else
        __pyx_t_5 = PySequence_ITEM(__pyx_t_6, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 616, __pyx_L7_error)
        __Pyx_GOTREF(__pyx_t_5);
        #endif
        __Pyx_XDECREF_SET(__pyx_8genexpr4__pyx_v_arg, __pyx_t_5);
        __pyx_t_5 = 0;

        /* "cantera/reaction.pyx":615
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 *             elif all([arg is not None             # <<<<<<<<<<<<<<
 *                     for arg in [temperature_range, pressure_range, data]]):
 *                 Tmin = temperature_range[0]
 */
        __pyx_t_1 = (__pyx_8genexpr4__pyx_v_arg != Py_None);
        __pyx_t_5 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 615, __pyx_L7_error)
        __Pyx_GOTREF(__pyx_t_5);
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_4, (PyObject*)__pyx_t_5))) __PYX_ERR(0, 615, __pyx_L7_error)
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "cantera/reaction.pyx":616
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 *             elif all([arg is not None
 *                     for arg in [temperature_range, pressure_range, data]]):             # <<<<<<<<<<<<<<
 *                 Tmin = temperature_range[0]
 *                 Tmax = temperature_range[1]
 */
      }
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_arg); __pyx_8genexpr4__pyx_v_arg = 0;
      goto __pyx_L11_exit_scope;
      __pyx_L7_error:;
      __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_arg); __pyx_8genexpr4__pyx_v_arg = 0;
      goto __pyx_L1_error;
      __pyx_L11_exit_scope:;
    } /* exit inner scope */

    /* "cantera/reaction.pyx":615
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 *             elif all([arg is not None             # <<<<<<<<<<<<<<
 *                     for arg in [temperature_range, pressure_range, data]]):
 *                 Tmin = temperature_range[0]
 */
    __pyx_t_6 = __Pyx_PyObject_CallOneArg(__pyx_builtin_all, __pyx_t_4); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 615, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_1) {

      /* "cantera/reaction.pyx":617
 *             elif all([arg is not None
 *                     for arg in [temperature_range, pressure_range, data]]):
 *                 Tmin = temperature_range[0]             # <<<<<<<<<<<<<<
 *                 Tmax = temperature_range[1]
 *                 Pmin = pressure_range[0]
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_temperature_range, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 617, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_v_Tmin = __pyx_t_6;
      __pyx_t_6 = 0;

      /* "cantera/reaction.pyx":618
 *                     for arg in [temperature_range, pressure_range, data]]):
 *                 Tmin = temperature_range[0]
 *                 Tmax = temperature_range[1]             # <<<<<<<<<<<<<<
 *                 Pmin = pressure_range[0]
 *                 Pmax = pressure_range[1]
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_temperature_range, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 618, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_v_Tmax = __pyx_t_6;
      __pyx_t_6 = 0;

      /* "cantera/reaction.pyx":619
 *                 Tmin = temperature_range[0]
 *                 Tmax = temperature_range[1]
 *                 Pmin = pressure_range[0]             # <<<<<<<<<<<<<<
 *                 Pmax = pressure_range[1]
 *                 self._rate.reset(
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_pressure_range, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 619, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_v_Pmin = __pyx_t_6;
      __pyx_t_6 = 0;

      /* "cantera/reaction.pyx":620
 *                 Tmax = temperature_range[1]
 *                 Pmin = pressure_range[0]
 *                 Pmax = pressure_range[1]             # <<<<<<<<<<<<<<
 *                 self._rate.reset(
 *                     new CxxChebyshevRate(Tmin, Tmax, Pmin, Pmax, self._cxxarray2d(data)))
 */
      __pyx_t_6 = __Pyx_GetItemInt(__pyx_v_pressure_range, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 620, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_v_Pmax = __pyx_t_6;
      __pyx_t_6 = 0;

      /* "cantera/reaction.pyx":622
 *                 Pmax = pressure_range[1]
 *                 self._rate.reset(
 *                     new CxxChebyshevRate(Tmin, Tmax, Pmin, Pmax, self._cxxarray2d(data)))             # <<<<<<<<<<<<<<
 *             elif all([arg is None
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):
 */
      __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_v_Tmin); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L1_error)
      __pyx_t_9 = __pyx_PyFloat_AsDouble(__pyx_v_Tmax); if (unlikely((__pyx_t_9 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L1_error)
      __pyx_t_10 = __pyx_PyFloat_AsDouble(__pyx_v_Pmin); if (unlikely((__pyx_t_10 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L1_error)
      __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_v_Pmax); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L1_error)
      __pyx_t_12 = ((struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->_cxxarray2d(__pyx_v_self, __pyx_v_data); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 622, __pyx_L1_error)

      /* "cantera/reaction.pyx":621
 *                 Pmin = pressure_range[0]
 *                 Pmax = pressure_range[1]
 *                 self._rate.reset(             # <<<<<<<<<<<<<<
 *                     new CxxChebyshevRate(Tmin, Tmax, Pmin, Pmax, self._cxxarray2d(data)))
 *             elif all([arg is None
 */
      __pyx_v_self->__pyx_base._rate.reset(new Cantera::ChebyshevRate(__pyx_t_8, __pyx_t_9, __pyx_t_10, __pyx_t_11, __pyx_t_12));

      /* "cantera/reaction.pyx":615
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 *             elif all([arg is not None             # <<<<<<<<<<<<<<
 *                     for arg in [temperature_range, pressure_range, data]]):
 *                 Tmin = temperature_range[0]
 */
      goto __pyx_L4;
    }

    /* "cantera/reaction.pyx":623
 *                 self._rate.reset(
 *                     new CxxChebyshevRate(Tmin, Tmax, Pmin, Pmax, self._cxxarray2d(data)))
 *             elif all([arg is None             # <<<<<<<<<<<<<<
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))
 */
    { /* enter inner scope */
      __pyx_t_6 = PyList_New(0); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 623, __pyx_L14_error)
      __Pyx_GOTREF(__pyx_t_6);

      /* "cantera/reaction.pyx":624
 *                     new CxxChebyshevRate(Tmin, Tmax, Pmin, Pmax, self._cxxarray2d(data)))
 *             elif all([arg is None
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):             # <<<<<<<<<<<<<<
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))
 *             elif input_data:
 */
      __pyx_t_4 = PyTuple_New(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 624, __pyx_L14_error)
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_temperature_range);
      __Pyx_GIVEREF(__pyx_v_temperature_range);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_temperature_range);
      __Pyx_INCREF(__pyx_v_pressure_range);
      __Pyx_GIVEREF(__pyx_v_pressure_range);
      PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_v_pressure_range);
      __Pyx_INCREF(__pyx_v_data);
      __Pyx_GIVEREF(__pyx_v_data);
      PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_data);
      __Pyx_INCREF(__pyx_v_input_data);
      __Pyx_GIVEREF(__pyx_v_input_data);
      PyTuple_SET_ITEM(__pyx_t_4, 3, __pyx_v_input_data);
      __pyx_t_5 = __pyx_t_4; __Pyx_INCREF(__pyx_t_5); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      for (;;) {
        if (__pyx_t_7 >= 4) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_7); __Pyx_INCREF(__pyx_t_4); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 624, __pyx_L14_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_5, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 624, __pyx_L14_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
        __Pyx_XDECREF_SET(__pyx_8genexpr5__pyx_v_arg, __pyx_t_4);
        __pyx_t_4 = 0;

        /* "cantera/reaction.pyx":623
 *                 self._rate.reset(
 *                     new CxxChebyshevRate(Tmin, Tmax, Pmin, Pmax, self._cxxarray2d(data)))
 *             elif all([arg is None             # <<<<<<<<<<<<<<
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))
 */
        __pyx_t_1 = (__pyx_8genexpr5__pyx_v_arg == Py_None);
        __pyx_t_4 = __Pyx_PyBool_FromLong(__pyx_t_1); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 623, __pyx_L14_error)
        __Pyx_GOTREF(__pyx_t_4);
        if (unlikely(__Pyx_ListComp_Append(__pyx_t_6, (PyObject*)__pyx_t_4))) __PYX_ERR(0, 623, __pyx_L14_error)
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

        /* "cantera/reaction.pyx":624
 *                     new CxxChebyshevRate(Tmin, Tmax, Pmin, Pmax, self._cxxarray2d(data)))
 *             elif all([arg is None
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):             # <<<<<<<<<<<<<<
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))
 *             elif input_data:
 */
      }
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_arg); __pyx_8genexpr5__pyx_v_arg = 0;
      goto __pyx_L18_exit_scope;
      __pyx_L14_error:;
      __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_arg); __pyx_8genexpr5__pyx_v_arg = 0;
      goto __pyx_L1_error;
      __pyx_L18_exit_scope:;
    } /* exit inner scope */

    /* "cantera/reaction.pyx":623
 *                 self._rate.reset(
 *                     new CxxChebyshevRate(Tmin, Tmax, Pmin, Pmax, self._cxxarray2d(data)))
 *             elif all([arg is None             # <<<<<<<<<<<<<<
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))
 */
    __pyx_t_5 = __Pyx_PyObject_CallOneArg(__pyx_builtin_all, __pyx_t_6); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 623, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 623, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (likely(__pyx_t_1)) {

      /* "cantera/reaction.pyx":625
 *             elif all([arg is None
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))             # <<<<<<<<<<<<<<
 *             elif input_data:
 *                 raise TypeError("Invalid parameter 'input_data'")
 */
      __pyx_t_5 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 625, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_2 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_t_5, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 625, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      try {
        __pyx_t_3 = new Cantera::ChebyshevRate(__pyx_t_2);
      } catch(...) {
        translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
        __PYX_ERR(0, 625, __pyx_L1_error)
      }
      __pyx_v_self->__pyx_base._rate.reset(__pyx_t_3);

      /* "cantera/reaction.pyx":623
 *                 self._rate.reset(
 *                     new CxxChebyshevRate(Tmin, Tmax, Pmin, Pmax, self._cxxarray2d(data)))
 *             elif all([arg is None             # <<<<<<<<<<<<<<
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))
 */
      goto __pyx_L4;
    }

    /* "cantera/reaction.pyx":626
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))
 *             elif input_data:             # <<<<<<<<<<<<<<
 *                 raise TypeError("Invalid parameter 'input_data'")
 *             else:
 */
    __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_input_data); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 626, __pyx_L1_error)
    if (unlikely(__pyx_t_1)) {

      /* "cantera/reaction.pyx":627
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))
 *             elif input_data:
 *                 raise TypeError("Invalid parameter 'input_data'")             # <<<<<<<<<<<<<<
 *             else:
 *                 raise TypeError("Invalid parameters")
 */
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__8, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 627, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_ERR(0, 627, __pyx_L1_error)

      /* "cantera/reaction.pyx":626
 *                     for arg in [temperature_range, pressure_range, data, input_data]]):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap({})))
 *             elif input_data:             # <<<<<<<<<<<<<<
 *                 raise TypeError("Invalid parameter 'input_data'")
 *             else:
 */
    }

    /* "cantera/reaction.pyx":629
 *                 raise TypeError("Invalid parameter 'input_data'")
 *             else:
 *                 raise TypeError("Invalid parameters")             # <<<<<<<<<<<<<<
 *             self.set_cxx_object()
 * 
 */
    /*else*/ {
      __pyx_t_5 = __Pyx_PyObject_Call(__pyx_builtin_TypeError, __pyx_tuple__13, NULL); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 629, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __PYX_ERR(0, 629, __pyx_L1_error)
    }
    __pyx_L4:;

    /* "cantera/reaction.pyx":630
 *             else:
 *                 raise TypeError("Invalid parameters")
 *             self.set_cxx_object()             # <<<<<<<<<<<<<<
 * 
 *     def __call__(self, double temperature, double pressure):
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_cxx_object(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self)); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 630, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cantera/reaction.pyx":612
 *                   input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             if isinstance(input_data, dict):
 *                 self._rate.reset(new CxxChebyshevRate(py_to_anymap(input_data)))
 */
  }

  /* "cantera/reaction.pyx":609
 *     _reaction_rate_type = "Chebyshev"
 * 
 *     def __cinit__(self, temperature_range=None, pressure_range=None, data=None,             # <<<<<<<<<<<<<<
 *                   input_data=None, init=True):
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_Tmin);
  __Pyx_XDECREF(__pyx_v_Tmax);
  __Pyx_XDECREF(__pyx_v_Pmin);
  __Pyx_XDECREF(__pyx_v_Pmax);
  __Pyx_XDECREF(__pyx_8genexpr4__pyx_v_arg);
  __Pyx_XDECREF(__pyx_8genexpr5__pyx_v_arg);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":632
 *             self.set_cxx_object()
 * 
 *     def __call__(self, double temperature, double pressure):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and pressure.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_13ChebyshevRate_2__call__, "\n        Evaluate rate expression based on temperature and pressure.\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_7cantera_8reaction_13ChebyshevRate_2__call__;
#endif
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_3__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_temperature;
  double __pyx_v_pressure;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temperature,&__pyx_n_s_pressure,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temperature)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 632, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pressure)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 632, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, 1); __PYX_ERR(0, 632, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__call__") < 0)) __PYX_ERR(0, 632, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_temperature = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_temperature == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 632, __pyx_L3_error)
    __pyx_v_pressure = __pyx_PyFloat_AsDouble(values[1]); if (unlikely((__pyx_v_pressure == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 632, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 632, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13ChebyshevRate_2__call__(((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)__pyx_v_self), __pyx_v_temperature, __pyx_v_pressure);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_2__call__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self, double __pyx_v_temperature, double __pyx_v_pressure) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "cantera/reaction.pyx":636
 *         Evaluate rate expression based on temperature and pressure.
 *         """
 *         return self.rate.eval(temperature, pressure)             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxArray2D _cxxarray2d(self, coeffs):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->__pyx_base.rate->eval(__pyx_v_temperature, __pyx_v_pressure);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 636, __pyx_L1_error)
  }
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 636, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":632
 *             self.set_cxx_object()
 * 
 *     def __call__(self, double temperature, double pressure):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and pressure.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":638
 *         return self.rate.eval(temperature, pressure)
 * 
 *     cdef CxxArray2D _cxxarray2d(self, coeffs):             # <<<<<<<<<<<<<<
 *         """ Internal function to assign coefficient matrix values """
 *         cdef CxxArray2D data
 */

static Cantera::Array2D __pyx_f_7cantera_8reaction_13ChebyshevRate__cxxarray2d(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self, PyObject *__pyx_v_coeffs) {
  Cantera::Array2D __pyx_v_data;
  double __pyx_v_value;
  int __pyx_v_i;
  int __pyx_v_j;
  PyObject *__pyx_v_row = NULL;
  Cantera::Array2D __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  PyObject *(*__pyx_t_8)(PyObject *);
  int __pyx_t_9;
  PyObject *(*__pyx_t_10)(PyObject *);
  double __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_cxxarray2d", 0);
  __Pyx_INCREF(__pyx_v_coeffs);

  /* "cantera/reaction.pyx":641
 *         """ Internal function to assign coefficient matrix values """
 *         cdef CxxArray2D data
 *         if isinstance(coeffs, np.ndarray):             # <<<<<<<<<<<<<<
 *             coeffs = coeffs.tolist()
 *         data.resize(len(coeffs), len(coeffs[0]))
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_coeffs, __pyx_ptype_5numpy_ndarray); 
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":642
 *         cdef CxxArray2D data
 *         if isinstance(coeffs, np.ndarray):
 *             coeffs = coeffs.tolist()             # <<<<<<<<<<<<<<
 *         data.resize(len(coeffs), len(coeffs[0]))
 *         cdef double value
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_coeffs, __pyx_n_s_tolist); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 642, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = NULL;
    __pyx_t_5 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_4)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_4);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_5 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[1] = {__pyx_t_4, };
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 0+__pyx_t_5);
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 642, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF_SET(__pyx_v_coeffs, __pyx_t_2);
    __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":641
 *         """ Internal function to assign coefficient matrix values """
 *         cdef CxxArray2D data
 *         if isinstance(coeffs, np.ndarray):             # <<<<<<<<<<<<<<
 *             coeffs = coeffs.tolist()
 *         data.resize(len(coeffs), len(coeffs[0]))
 */
  }

  /* "cantera/reaction.pyx":643
 *         if isinstance(coeffs, np.ndarray):
 *             coeffs = coeffs.tolist()
 *         data.resize(len(coeffs), len(coeffs[0]))             # <<<<<<<<<<<<<<
 *         cdef double value
 *         cdef int i
 */
  __pyx_t_6 = PyObject_Length(__pyx_v_coeffs); if (unlikely(__pyx_t_6 == ((Py_ssize_t)-1))) __PYX_ERR(0, 643, __pyx_L1_error)
  __pyx_t_2 = __Pyx_GetItemInt(__pyx_v_coeffs, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_7 = PyObject_Length(__pyx_t_2); if (unlikely(__pyx_t_7 == ((Py_ssize_t)-1))) __PYX_ERR(0, 643, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_data.resize(__pyx_t_6, __pyx_t_7);

  /* "cantera/reaction.pyx":647
 *         cdef int i
 *         cdef int j
 *         for i,row in enumerate(coeffs):             # <<<<<<<<<<<<<<
 *             for j,value in enumerate(row):
 *                 CxxArray2D_set(data, i, j, value)
 */
  __pyx_t_5 = 0;
  if (likely(PyList_CheckExact(__pyx_v_coeffs)) || PyTuple_CheckExact(__pyx_v_coeffs)) {
    __pyx_t_2 = __pyx_v_coeffs; __Pyx_INCREF(__pyx_t_2); __pyx_t_7 = 0;
    __pyx_t_8 = NULL;
  } else {
    __pyx_t_7 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_coeffs); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 647, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_2); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 647, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_8)) {
      if (likely(PyList_CheckExact(__pyx_t_2))) {
        if (__pyx_t_7 >= PyList_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 647, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 647, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      } else {
        if (__pyx_t_7 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_7); __Pyx_INCREF(__pyx_t_3); __pyx_t_7++; if (unlikely((0 < 0))) __PYX_ERR(0, 647, __pyx_L1_error)
        #else
        __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_7); __pyx_t_7++; if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 647, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        #endif
      }
    } else {
      __pyx_t_3 = __pyx_t_8(__pyx_t_2);
      if (unlikely(!__pyx_t_3)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 647, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_3);
    }
    __Pyx_XDECREF_SET(__pyx_v_row, __pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_v_i = __pyx_t_5;
    __pyx_t_5 = (__pyx_t_5 + 1);

    /* "cantera/reaction.pyx":648
 *         cdef int j
 *         for i,row in enumerate(coeffs):
 *             for j,value in enumerate(row):             # <<<<<<<<<<<<<<
 *                 CxxArray2D_set(data, i, j, value)
 * 
 */
    __pyx_t_9 = 0;
    if (likely(PyList_CheckExact(__pyx_v_row)) || PyTuple_CheckExact(__pyx_v_row)) {
      __pyx_t_3 = __pyx_v_row; __Pyx_INCREF(__pyx_t_3); __pyx_t_6 = 0;
      __pyx_t_10 = NULL;
    } else {
      __pyx_t_6 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_v_row); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 648, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_10 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_3); if (unlikely(!__pyx_t_10)) __PYX_ERR(0, 648, __pyx_L1_error)
    }
    for (;;) {
      if (likely(!__pyx_t_10)) {
        if (likely(PyList_CheckExact(__pyx_t_3))) {
          if (__pyx_t_6 >= PyList_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 648, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        } else {
          if (__pyx_t_6 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
          #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_6); __Pyx_INCREF(__pyx_t_4); __pyx_t_6++; if (unlikely((0 < 0))) __PYX_ERR(0, 648, __pyx_L1_error)
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_3, __pyx_t_6); __pyx_t_6++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 648, __pyx_L1_error)
          __Pyx_GOTREF(__pyx_t_4);
          #endif
        }
      } else {
        __pyx_t_4 = __pyx_t_10(__pyx_t_3);
        if (unlikely(!__pyx_t_4)) {
          PyObject* exc_type = PyErr_Occurred();
          if (exc_type) {
            if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
            else __PYX_ERR(0, 648, __pyx_L1_error)
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __pyx_t_11 = __pyx_PyFloat_AsDouble(__pyx_t_4); if (unlikely((__pyx_t_11 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 648, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_v_value = __pyx_t_11;
      __pyx_v_j = __pyx_t_9;
      __pyx_t_9 = (__pyx_t_9 + 1);

      /* "cantera/reaction.pyx":649
 *         for i,row in enumerate(coeffs):
 *             for j,value in enumerate(row):
 *                 CxxArray2D_set(data, i, j, value)             # <<<<<<<<<<<<<<
 * 
 *         return data
 */
      CxxArray2D_set(__pyx_v_data, __pyx_v_i, __pyx_v_j, __pyx_v_value);

      /* "cantera/reaction.pyx":648
 *         cdef int j
 *         for i,row in enumerate(coeffs):
 *             for j,value in enumerate(row):             # <<<<<<<<<<<<<<
 *                 CxxArray2D_set(data, i, j, value)
 * 
 */
    }
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":647
 *         cdef int i
 *         cdef int j
 *         for i,row in enumerate(coeffs):             # <<<<<<<<<<<<<<
 *             for j,value in enumerate(row):
 *                 CxxArray2D_set(data, i, j, value)
 */
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":651
 *                 CxxArray2D_set(data, i, j, value)
 * 
 *         return data             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxChebyshevRate* cxx_object(self):
 */
  __pyx_r = __pyx_v_data;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":638
 *         return self.rate.eval(temperature, pressure)
 * 
 *     cdef CxxArray2D _cxxarray2d(self, coeffs):             # <<<<<<<<<<<<<<
 *         """ Internal function to assign coefficient matrix values """
 *         cdef CxxArray2D data
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate._cxxarray2d", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_pretend_to_initialize(&__pyx_r);
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_row);
  __Pyx_XDECREF(__pyx_v_coeffs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":653
 *         return data
 * 
 *     cdef CxxChebyshevRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxChebyshevRate*>self.rate
 * 
 */

static Cantera::ChebyshevRate *__pyx_f_7cantera_8reaction_13ChebyshevRate_cxx_object(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self) {
  Cantera::ChebyshevRate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":654
 * 
 *     cdef CxxChebyshevRate* cxx_object(self):
 *         return <CxxChebyshevRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     property temperature_range:
 */
  __pyx_r = ((Cantera::ChebyshevRate *)__pyx_v_self->__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":653
 *         return data
 * 
 *     cdef CxxChebyshevRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxChebyshevRate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":658
 *     property temperature_range:
 *         """ Valid temperature range [K] for the Chebyshev fit """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().Tmin(), self.cxx_object().Tmax()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_17temperature_range_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_17temperature_range_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13ChebyshevRate_17temperature_range___get__(((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_17temperature_range___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::ChebyshevRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":659
 *         """ Valid temperature range [K] for the Chebyshev fit """
 *         def __get__(self):
 *             return self.cxx_object().Tmin(), self.cxx_object().Tmax()             # <<<<<<<<<<<<<<
 * 
 *     property pressure_range:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 659, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->Tmin()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 659, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->Tmax()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 659, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":658
 *     property temperature_range:
 *         """ Valid temperature range [K] for the Chebyshev fit """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().Tmin(), self.cxx_object().Tmax()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.temperature_range.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":663
 *     property pressure_range:
 *         """ Valid pressure range [Pa] for the Chebyshev fit """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().Pmin(), self.cxx_object().Pmax()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_14pressure_range_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_14pressure_range_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13ChebyshevRate_14pressure_range___get__(((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_14pressure_range___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::ChebyshevRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":664
 *         """ Valid pressure range [Pa] for the Chebyshev fit """
 *         def __get__(self):
 *             return self.cxx_object().Pmin(), self.cxx_object().Pmax()             # <<<<<<<<<<<<<<
 * 
 *     property n_temperature:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 664, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->Pmin()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 664, __pyx_L1_error)
  __pyx_t_3 = PyFloat_FromDouble(__pyx_t_1->Pmax()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 664, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":663
 *     property pressure_range:
 *         """ Valid pressure range [Pa] for the Chebyshev fit """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().Pmin(), self.cxx_object().Pmax()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.pressure_range.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":671
 *         (same as number of rows of `data` property).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().nTemperature()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_13n_temperature_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_13n_temperature_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13ChebyshevRate_13n_temperature___get__(((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_13n_temperature___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::ChebyshevRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":672
 *         """
 *         def __get__(self):
 *             return self.cxx_object().nTemperature()             # <<<<<<<<<<<<<<
 * 
 *     property n_pressure:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 672, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(__pyx_t_1->nTemperature()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":671
 *         (same as number of rows of `data` property).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().nTemperature()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.n_temperature.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":679
 *         (same as number of columns of `data` property).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().nPressure()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_10n_pressure_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_10n_pressure_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13ChebyshevRate_10n_pressure___get__(((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_10n_pressure___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::ChebyshevRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":680
 *         """
 *         def __get__(self):
 *             return self.cxx_object().nPressure()             # <<<<<<<<<<<<<<
 * 
 *     property data:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 680, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyInt_FromSize_t(__pyx_t_1->nPressure()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 680, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":679
 *         (same as number of columns of `data` property).
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().nPressure()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.n_pressure.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":687
 *         temperature and pressure dimensions over which the Chebyshev fit is computed.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef CxxArray2D cxxcoeffs = self.cxx_object().data()
 *             c = np.fromiter(cxxcoeffs.data(), np.double)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_4data_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_4data_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13ChebyshevRate_4data___get__(((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_4data___get__(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self) {
  Cantera::Array2D __pyx_v_cxxcoeffs;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::ChebyshevRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":688
 *         """
 *         def __get__(self):
 *             cdef CxxArray2D cxxcoeffs = self.cxx_object().data()             # <<<<<<<<<<<<<<
 *             c = np.fromiter(cxxcoeffs.data(), np.double)
 *             return c.reshape(cxxcoeffs.nRows(), cxxcoeffs.nColumns(), order="F")
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 688, __pyx_L1_error)
  __pyx_v_cxxcoeffs = __pyx_t_1->data();

  /* "cantera/reaction.pyx":689
 *         def __get__(self):
 *             cdef CxxArray2D cxxcoeffs = self.cxx_object().data()
 *             c = np.fromiter(cxxcoeffs.data(), np.double)             # <<<<<<<<<<<<<<
 *             return c.reshape(cxxcoeffs.nRows(), cxxcoeffs.nColumns(), order="F")
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_np); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_fromiter); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __pyx_convert_vector_to_py_double(__pyx_v_cxxcoeffs.data()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GetModuleGlobalName(__pyx_t_5, __pyx_n_s_np); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_double); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 689, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_5 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_5)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_5);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_t_3, __pyx_t_6};
    __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 2+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 689, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_v_c = __pyx_t_2;
  __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":690
 *             cdef CxxArray2D cxxcoeffs = self.cxx_object().data()
 *             c = np.fromiter(cxxcoeffs.data(), np.double)
 *             return c.reshape(cxxcoeffs.nRows(), cxxcoeffs.nColumns(), order="F")             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_v_c, __pyx_n_s_reshape); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyInt_FromSize_t(__pyx_v_cxxcoeffs.nRows()); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_6 = __Pyx_PyInt_FromSize_t(__pyx_v_cxxcoeffs.nColumns()); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_6);
  PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_6);
  __pyx_t_4 = 0;
  __pyx_t_6 = 0;
  __pyx_t_6 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_6);
  if (PyDict_SetItem(__pyx_t_6, __pyx_n_s_order, __pyx_n_u_F) < 0) __PYX_ERR(0, 690, __pyx_L1_error)
  __pyx_t_4 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_6); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 690, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":687
 *         temperature and pressure dimensions over which the Chebyshev fit is computed.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef CxxArray2D cxxcoeffs = self.cxx_object().data()
 *             c = np.fromiter(cxxcoeffs.data(), np.double)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.data.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13ChebyshevRate_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ChebyshevRate_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_13ChebyshevRate_4__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13ChebyshevRate_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ChebyshevRate_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13ChebyshevRate_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13ChebyshevRate_6__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13ChebyshevRate_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChebyshevRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ChebyshevRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":709
 *     _reaction_rate_type = "custom-rate-function"
 * 
 *     def __cinit__(self, k=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_10CustomRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_10CustomRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_k = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_k,&__pyx_n_s_init,0};
    PyObject* values[2] = {0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_k);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 709, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 709, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 709, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_k = values[0];
    __pyx_v_init = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 2, __pyx_nargs); __PYX_ERR(0, 709, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.CustomRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_10CustomRate___cinit__(((struct __pyx_obj_7cantera_8reaction_CustomRate *)__pyx_v_self), __pyx_v_k, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_10CustomRate___cinit__(struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self, PyObject *__pyx_v_k, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  Py_UCS4 __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":711
 *     def __cinit__(self, k=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._rate.reset(new CxxCustomFunc1Rate())
 *             self.set_cxx_object()
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 711, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":712
 * 
 *         if init:
 *             self._rate.reset(new CxxCustomFunc1Rate())             # <<<<<<<<<<<<<<
 *             self.set_cxx_object()
 *             try:
 */
    __pyx_v_self->__pyx_base._rate.reset(new Cantera::CustomFunc1Rate());

    /* "cantera/reaction.pyx":713
 *         if init:
 *             self._rate.reset(new CxxCustomFunc1Rate())
 *             self.set_cxx_object()             # <<<<<<<<<<<<<<
 *             try:
 *                 self.set_rate_function(k)
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_7cantera_8reaction_CustomRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->__pyx_base.set_cxx_object(((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_v_self)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 713, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":714
 *             self._rate.reset(new CxxCustomFunc1Rate())
 *             self.set_cxx_object()
 *             try:             # <<<<<<<<<<<<<<
 *                 self.set_rate_function(k)
 *             except Exception:
 */
    {
      __Pyx_PyThreadState_declare
      __Pyx_PyThreadState_assign
      __Pyx_ExceptionSave(&__pyx_t_3, &__pyx_t_4, &__pyx_t_5);
      __Pyx_XGOTREF(__pyx_t_3);
      __Pyx_XGOTREF(__pyx_t_4);
      __Pyx_XGOTREF(__pyx_t_5);
      /*try:*/ {

        /* "cantera/reaction.pyx":715
 *             self.set_cxx_object()
 *             try:
 *                 self.set_rate_function(k)             # <<<<<<<<<<<<<<
 *             except Exception:
 *                 raise TypeError(
 */
        __pyx_t_6 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_rate_function); if (unlikely(!__pyx_t_6)) __PYX_ERR(0, 715, __pyx_L4_error)
        __Pyx_GOTREF(__pyx_t_6);
        __pyx_t_7 = NULL;
        __pyx_t_8 = 0;
        if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
          __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
          if (likely(__pyx_t_7)) {
            PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
            __Pyx_INCREF(__pyx_t_7);
            __Pyx_INCREF(function);
            __Pyx_DECREF_SET(__pyx_t_6, function);
            __pyx_t_8 = 1;
          }
        }
        {
          PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_v_k};
          __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
          __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
          if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 715, __pyx_L4_error)
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        }
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "cantera/reaction.pyx":714
 *             self._rate.reset(new CxxCustomFunc1Rate())
 *             self.set_cxx_object()
 *             try:             # <<<<<<<<<<<<<<
 *                 self.set_rate_function(k)
 *             except Exception:
 */
      }
      __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L9_try_end;
      __pyx_L4_error:;
      __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;

      /* "cantera/reaction.pyx":716
 *             try:
 *                 self.set_rate_function(k)
 *             except Exception:             # <<<<<<<<<<<<<<
 *                 raise TypeError(
 *                     f"Cannot convert input with type '{type(k)}' to rate expression.")
 */
      __pyx_t_8 = __Pyx_PyErr_ExceptionMatches(((PyObject *)(&((PyTypeObject*)PyExc_Exception)[0])));
      if (__pyx_t_8) {
        __Pyx_AddTraceback("cantera.reaction.CustomRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
        if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_6, &__pyx_t_7) < 0) __PYX_ERR(0, 716, __pyx_L6_except_error)
        __Pyx_XGOTREF(__pyx_t_2);
        __Pyx_XGOTREF(__pyx_t_6);
        __Pyx_XGOTREF(__pyx_t_7);

        /* "cantera/reaction.pyx":718
 *             except Exception:
 *                 raise TypeError(
 *                     f"Cannot convert input with type '{type(k)}' to rate expression.")             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxCustomFunc1Rate* cxx_object(self):
 */
        __pyx_t_9 = PyTuple_New(3); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 718, __pyx_L6_except_error)
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_10 = 0;
        __pyx_t_11 = 127;
        __Pyx_INCREF(__pyx_kp_u_Cannot_convert_input_with_type);
        __pyx_t_10 += 32;
        __Pyx_GIVEREF(__pyx_kp_u_Cannot_convert_input_with_type);
        PyTuple_SET_ITEM(__pyx_t_9, 0, __pyx_kp_u_Cannot_convert_input_with_type);
        __pyx_t_12 = __Pyx_PyObject_FormatSimple(((PyObject *)Py_TYPE(__pyx_v_k)), __pyx_empty_unicode); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 718, __pyx_L6_except_error)
        __Pyx_GOTREF(__pyx_t_12);
        __pyx_t_11 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) > __pyx_t_11) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_12) : __pyx_t_11;
        __pyx_t_10 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_12);
        __Pyx_GIVEREF(__pyx_t_12);
        PyTuple_SET_ITEM(__pyx_t_9, 1, __pyx_t_12);
        __pyx_t_12 = 0;
        __Pyx_INCREF(__pyx_kp_u_to_rate_expression);
        __pyx_t_10 += 21;
        __Pyx_GIVEREF(__pyx_kp_u_to_rate_expression);
        PyTuple_SET_ITEM(__pyx_t_9, 2, __pyx_kp_u_to_rate_expression);
        __pyx_t_12 = __Pyx_PyUnicode_Join(__pyx_t_9, 3, __pyx_t_10, __pyx_t_11); if (unlikely(!__pyx_t_12)) __PYX_ERR(0, 718, __pyx_L6_except_error)
        __Pyx_GOTREF(__pyx_t_12);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;

        /* "cantera/reaction.pyx":717
 *                 self.set_rate_function(k)
 *             except Exception:
 *                 raise TypeError(             # <<<<<<<<<<<<<<
 *                     f"Cannot convert input with type '{type(k)}' to rate expression.")
 * 
 */
        __pyx_t_9 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_12); if (unlikely(!__pyx_t_9)) __PYX_ERR(0, 717, __pyx_L6_except_error)
        __Pyx_GOTREF(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_Raise(__pyx_t_9, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        __PYX_ERR(0, 717, __pyx_L6_except_error)
      }
      goto __pyx_L6_except_error;

      /* "cantera/reaction.pyx":714
 *             self._rate.reset(new CxxCustomFunc1Rate())
 *             self.set_cxx_object()
 *             try:             # <<<<<<<<<<<<<<
 *                 self.set_rate_function(k)
 *             except Exception:
 */
      __pyx_L6_except_error:;
      __Pyx_XGIVEREF(__pyx_t_3);
      __Pyx_XGIVEREF(__pyx_t_4);
      __Pyx_XGIVEREF(__pyx_t_5);
      __Pyx_ExceptionReset(__pyx_t_3, __pyx_t_4, __pyx_t_5);
      goto __pyx_L1_error;
      __pyx_L9_try_end:;
    }

    /* "cantera/reaction.pyx":711
 *     def __cinit__(self, k=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._rate.reset(new CxxCustomFunc1Rate())
 *             self.set_cxx_object()
 */
  }

  /* "cantera/reaction.pyx":709
 *     _reaction_rate_type = "custom-rate-function"
 * 
 *     def __cinit__(self, k=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("cantera.reaction.CustomRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":720
 *                     f"Cannot convert input with type '{type(k)}' to rate expression.")
 * 
 *     cdef CxxCustomFunc1Rate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxCustomFunc1Rate*>self.rate
 * 
 */

static Cantera::CustomFunc1Rate *__pyx_f_7cantera_8reaction_10CustomRate_cxx_object(struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self) {
  Cantera::CustomFunc1Rate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":721
 * 
 *     cdef CxxCustomFunc1Rate* cxx_object(self):
 *         return <CxxCustomFunc1Rate*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     def set_rate_function(self, k):
 */
  __pyx_r = ((Cantera::CustomFunc1Rate *)__pyx_v_self->__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":720
 *                     f"Cannot convert input with type '{type(k)}' to rate expression.")
 * 
 *     cdef CxxCustomFunc1Rate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxCustomFunc1Rate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":723
 *         return <CxxCustomFunc1Rate*>self.rate
 * 
 *     def set_rate_function(self, k):             # <<<<<<<<<<<<<<
 *         r"""
 *         Set the function describing a custom reaction rate::
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_10CustomRate_3set_rate_function(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_10CustomRate_2set_rate_function, "\n        Set the function describing a custom reaction rate::\n\n            rr = CustomRate()\n            rr.set_rate_function(lambda T: 38.7 * T**2.7 * exp(-3150.15/T))\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_10CustomRate_3set_rate_function = {"set_rate_function", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_10CustomRate_3set_rate_function, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_10CustomRate_2set_rate_function};
static PyObject *__pyx_pw_7cantera_8reaction_10CustomRate_3set_rate_function(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_k = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_rate_function (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_k,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_k)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 723, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_rate_function") < 0)) __PYX_ERR(0, 723, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_k = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_rate_function", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 723, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.CustomRate.set_rate_function", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_10CustomRate_2set_rate_function(((struct __pyx_obj_7cantera_8reaction_CustomRate *)__pyx_v_self), __pyx_v_k);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_10CustomRate_2set_rate_function(struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self, PyObject *__pyx_v_k) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Cantera::CustomFunc1Rate *__pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_rate_function", 0);

  /* "cantera/reaction.pyx":730
 *             rr.set_rate_function(lambda T: 38.7 * T**2.7 * exp(-3150.15/T))
 *         """
 *         if k is None:             # <<<<<<<<<<<<<<
 *             self._rate_func = None
 *             return
 */
  __pyx_t_1 = (__pyx_v_k == Py_None);
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":731
 *         """
 *         if k is None:
 *             self._rate_func = None             # <<<<<<<<<<<<<<
 *             return
 * 
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->_rate_func);
    __Pyx_DECREF((PyObject *)__pyx_v_self->_rate_func);
    __pyx_v_self->_rate_func = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None);

    /* "cantera/reaction.pyx":732
 *         if k is None:
 *             self._rate_func = None
 *             return             # <<<<<<<<<<<<<<
 * 
 *         if isinstance(k, Func1):
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;

    /* "cantera/reaction.pyx":730
 *             rr.set_rate_function(lambda T: 38.7 * T**2.7 * exp(-3150.15/T))
 *         """
 *         if k is None:             # <<<<<<<<<<<<<<
 *             self._rate_func = None
 *             return
 */
  }

  /* "cantera/reaction.pyx":734
 *             return
 * 
 *         if isinstance(k, Func1):             # <<<<<<<<<<<<<<
 *             self._rate_func = k
 *         else:
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_k, __pyx_ptype_7cantera_5func1_Func1); 
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":735
 * 
 *         if isinstance(k, Func1):
 *             self._rate_func = k             # <<<<<<<<<<<<<<
 *         else:
 *             self._rate_func = Func1(k)
 */
    if (!(likely(((__pyx_v_k) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_k, __pyx_ptype_7cantera_5func1_Func1))))) __PYX_ERR(0, 735, __pyx_L1_error)
    __pyx_t_2 = __pyx_v_k;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->_rate_func);
    __Pyx_DECREF((PyObject *)__pyx_v_self->_rate_func);
    __pyx_v_self->_rate_func = ((struct __pyx_obj_7cantera_5func1_Func1 *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":734
 *             return
 * 
 *         if isinstance(k, Func1):             # <<<<<<<<<<<<<<
 *             self._rate_func = k
 *         else:
 */
    goto __pyx_L4;
  }

  /* "cantera/reaction.pyx":737
 *             self._rate_func = k
 *         else:
 *             self._rate_func = Func1(k)             # <<<<<<<<<<<<<<
 * 
 *         self.cxx_object().setRateFunction(self._rate_func._func)
 */
  /*else*/ {
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_7cantera_5func1_Func1), __pyx_v_k); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 737, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->_rate_func);
    __Pyx_DECREF((PyObject *)__pyx_v_self->_rate_func);
    __pyx_v_self->_rate_func = ((struct __pyx_obj_7cantera_5func1_Func1 *)__pyx_t_2);
    __pyx_t_2 = 0;
  }
  __pyx_L4:;

  /* "cantera/reaction.pyx":739
 *             self._rate_func = Func1(k)
 * 
 *         self.cxx_object().setRateFunction(self._rate_func._func)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_7cantera_8reaction_CustomRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 739, __pyx_L1_error)
  try {
    __pyx_t_3->setRateFunction(__pyx_v_self->_rate_func->_func);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 739, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":723
 *         return <CxxCustomFunc1Rate*>self.rate
 * 
 *     def set_rate_function(self, k):             # <<<<<<<<<<<<<<
 *         r"""
 *         Set the function describing a custom reaction rate::
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.CustomRate.set_rate_function", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_10CustomRate_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_10CustomRate_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_10CustomRate_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_10CustomRate_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_10CustomRate_4__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_CustomRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_10CustomRate_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.CustomRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_10CustomRate_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_10CustomRate_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_10CustomRate_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_10CustomRate_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.CustomRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_10CustomRate_6__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_CustomRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_10CustomRate_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.CustomRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":770
 *     }
 * 
 *     def __cinit__(self, *args, init=True, **kwargs):             # <<<<<<<<<<<<<<
 *         if init:
 *             self.set_cxx_object()
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_14ExtensibleRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_14ExtensibleRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_init,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 770, __pyx_L3_error)
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, 0, "__cinit__") < 0)) __PYX_ERR(0, 770, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 0)) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_init = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 0, __pyx_nargs); __PYX_ERR(0, 770, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate___cinit__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self), __pyx_v_init, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_14ExtensibleRate___cinit__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, PyObject *__pyx_v_init, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":771
 * 
 *     def __cinit__(self, *args, init=True, **kwargs):
 *         if init:             # <<<<<<<<<<<<<<
 *             self.set_cxx_object()
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 771, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":772
 *     def __cinit__(self, *args, init=True, **kwargs):
 *         if init:
 *             self.set_cxx_object()             # <<<<<<<<<<<<<<
 * 
 *     def __init__(self, *args, input_data=None, **kwargs):
 */
    __pyx_t_2 = ((struct __pyx_vtabstruct_7cantera_8reaction_ExtensibleRate *)__pyx_v_self->__pyx_base.__pyx_vtab)->set_cxx_object(__pyx_v_self, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 772, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":771
 * 
 *     def __cinit__(self, *args, init=True, **kwargs):
 *         if init:             # <<<<<<<<<<<<<<
 *             self.set_cxx_object()
 * 
 */
  }

  /* "cantera/reaction.pyx":770
 *     }
 * 
 *     def __cinit__(self, *args, init=True, **kwargs):             # <<<<<<<<<<<<<<
 *         if init:
 *             self.set_cxx_object()
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":774
 *             self.set_cxx_object()
 * 
 *     def __init__(self, *args, input_data=None, **kwargs):             # <<<<<<<<<<<<<<
 *         # ReactionRate does not define __init__, so it does not need to be called
 *         if input_data is not None:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_14ExtensibleRate_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_14ExtensibleRate_3__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_input_data = 0;
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  __pyx_v_kwargs = PyDict_New(); if (unlikely(!__pyx_v_kwargs)) return -1;
  __Pyx_GOTREF(__pyx_v_kwargs);
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    values[0] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        default:
        case  0: break;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      if (kw_args == 1) {
        const Py_ssize_t index = 0;
        PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
        if (value) { values[index] = value; kw_args--; }
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 774, __pyx_L3_error)
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, __pyx_v_kwargs, values + 0, 0, "__init__") < 0)) __PYX_ERR(0, 774, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs < 0)) {
      goto __pyx_L5_argtuple_error;
    } else {
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__init__", 0, 0, 0, __pyx_nargs); __PYX_ERR(0, 774, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_DECREF(__pyx_v_args); __pyx_v_args = 0;
  __Pyx_DECREF(__pyx_v_kwargs); __pyx_v_kwargs = 0;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_2__init__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self), __pyx_v_input_data, __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_DECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_14ExtensibleRate_2__init__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, PyObject *__pyx_v_input_data, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/reaction.pyx":776
 *     def __init__(self, *args, input_data=None, **kwargs):
 *         # ReactionRate does not define __init__, so it does not need to be called
 *         if input_data is not None:             # <<<<<<<<<<<<<<
 *             self.set_parameters(input_data, UnitStack())
 * 
 */
  __pyx_t_1 = (__pyx_v_input_data != Py_None);
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":777
 *         # ReactionRate does not define __init__, so it does not need to be called
 *         if input_data is not None:
 *             self.set_parameters(input_data, UnitStack())             # <<<<<<<<<<<<<<
 * 
 *     def set_parameters(self, params: AnyMap, rate_coeff_units: UnitStack) -> None:
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_set_parameters); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 777, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = __Pyx_PyObject_CallNoArg(((PyObject *)__pyx_ptype_7cantera_5units_UnitStack)); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 777, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_5 = NULL;
    __pyx_t_6 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
      __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
      if (likely(__pyx_t_5)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
        __Pyx_INCREF(__pyx_t_5);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_3, function);
        __pyx_t_6 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[3] = {__pyx_t_5, __pyx_v_input_data, __pyx_t_4};
      __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 2+__pyx_t_6);
      __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 777, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    }
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":776
 *     def __init__(self, *args, input_data=None, **kwargs):
 *         # ReactionRate does not define __init__, so it does not need to be called
 *         if input_data is not None:             # <<<<<<<<<<<<<<
 *             self.set_parameters(input_data, UnitStack())
 * 
 */
  }

  /* "cantera/reaction.pyx":774
 *             self.set_cxx_object()
 * 
 *     def __init__(self, *args, input_data=None, **kwargs):             # <<<<<<<<<<<<<<
 *         # ReactionRate does not define __init__, so it does not need to be called
 *         if input_data is not None:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":779
 *             self.set_parameters(input_data, UnitStack())
 * 
 *     def set_parameters(self, params: AnyMap, rate_coeff_units: UnitStack) -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for setting rate parameters based on the input data. For example,
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_5set_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_14ExtensibleRate_4set_parameters, "\n        Responsible for setting rate parameters based on the input data. For example,\n        for reactions created from YAML, ``params`` is the YAML reaction entry converted\n        to an ``AnyMap``. ``rate_coeff_units`` specifies the units of the rate\n        coefficient.\n\n        Input values contained in ``params`` may be in non-default unit systems,\n        specified in the user-provided input file. To convert them to Cantera's native\n        mks+kmol unit system, use the functions `AnyMap.convert`,\n        `AnyMap.convert_activation_energy`, and `AnyMap.convert_rate_coeff` as needed.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_14ExtensibleRate_5set_parameters = {"set_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_5set_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_14ExtensibleRate_4set_parameters};
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_5set_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED struct __pyx_obj_7cantera_6_utils_AnyMap *__pyx_v_params = 0;
  CYTHON_UNUSED struct __pyx_obj_7cantera_5units_UnitStack *__pyx_v_rate_coeff_units = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_parameters (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_params,&__pyx_n_s_rate_coeff_units,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_params)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 779, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_rate_coeff_units)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 779, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("set_parameters", 1, 2, 2, 1); __PYX_ERR(0, 779, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_parameters") < 0)) __PYX_ERR(0, 779, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_params = ((struct __pyx_obj_7cantera_6_utils_AnyMap *)values[0]);
    __pyx_v_rate_coeff_units = ((struct __pyx_obj_7cantera_5units_UnitStack *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_parameters", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 779, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.set_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_params), __pyx_ptype_7cantera_6_utils_AnyMap, 0, "params", 0))) __PYX_ERR(0, 779, __pyx_L1_error)
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_rate_coeff_units), __pyx_ptype_7cantera_5units_UnitStack, 0, "rate_coeff_units", 0))) __PYX_ERR(0, 779, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_4set_parameters(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self), __pyx_v_params, __pyx_v_rate_coeff_units);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_4set_parameters(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_7cantera_6_utils_AnyMap *__pyx_v_params, CYTHON_UNUSED struct __pyx_obj_7cantera_5units_UnitStack *__pyx_v_rate_coeff_units) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_parameters", 0);

  /* "cantera/reaction.pyx":791
 *         `AnyMap.convert_activation_energy`, and `AnyMap.convert_rate_coeff` as needed.
 *         """
 *         raise NotImplementedError(f"{self.__class__.__name__}.set_parameters")             # <<<<<<<<<<<<<<
 * 
 *     def get_parameters(self, params: AnyMap) -> None:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 791, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 791, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 791, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_ConcatInPlace(__pyx_t_1, __pyx_kp_u_set_parameters_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 791, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_NotImplementedError, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 791, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 791, __pyx_L1_error)

  /* "cantera/reaction.pyx":779
 *             self.set_parameters(input_data, UnitStack())
 * 
 *     def set_parameters(self, params: AnyMap, rate_coeff_units: UnitStack) -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for setting rate parameters based on the input data. For example,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.set_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":793
 *         raise NotImplementedError(f"{self.__class__.__name__}.set_parameters")
 * 
 *     def get_parameters(self, params: AnyMap) -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for serializing the state of the ExtensibleRate object, using the
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_7get_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_14ExtensibleRate_6get_parameters, "\n        Responsible for serializing the state of the ExtensibleRate object, using the\n        same format as a YAML reaction entry. This is the inverse of `set_parameters`.\n\n        Serialization methods may request output in unit systems other than Cantera's\n        native mks+kmol system. To enable conversions to the user-specified unit system,\n        dimensional values should be added to ``params`` using the methods\n        `AnyMap.set_quantity` and `AnyMap.set_activation_energy`.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_14ExtensibleRate_7get_parameters = {"get_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_7get_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_14ExtensibleRate_6get_parameters};
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_7get_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED struct __pyx_obj_7cantera_6_utils_AnyMap *__pyx_v_params = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_parameters (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_params,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_params)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 793, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "get_parameters") < 0)) __PYX_ERR(0, 793, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_params = ((struct __pyx_obj_7cantera_6_utils_AnyMap *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("get_parameters", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 793, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.get_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_params), __pyx_ptype_7cantera_6_utils_AnyMap, 0, "params", 0))) __PYX_ERR(0, 793, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_6get_parameters(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self), __pyx_v_params);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_6get_parameters(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_7cantera_6_utils_AnyMap *__pyx_v_params) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("get_parameters", 0);

  /* "cantera/reaction.pyx":803
 *         `AnyMap.set_quantity` and `AnyMap.set_activation_energy`.
 *         """
 *         raise NotImplementedError(f"{self.__class__.__name__}.get_parameters")             # <<<<<<<<<<<<<<
 * 
 *     def eval(self, data: ExtensibleRateData) -> float:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_ConcatInPlace(__pyx_t_1, __pyx_kp_u_get_parameters); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_NotImplementedError, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 803, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 803, __pyx_L1_error)

  /* "cantera/reaction.pyx":793
 *         raise NotImplementedError(f"{self.__class__.__name__}.set_parameters")
 * 
 *     def get_parameters(self, params: AnyMap) -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for serializing the state of the ExtensibleRate object, using the
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.get_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":805
 *         raise NotImplementedError(f"{self.__class__.__name__}.get_parameters")
 * 
 *     def eval(self, data: ExtensibleRateData) -> float:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for calculating the forward rate constant based on the current state
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_9eval(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_14ExtensibleRate_8eval, "\n        Responsible for calculating the forward rate constant based on the current state\n        of the phase, stored in an instance of a class derived from\n        `ExtensibleRateData`.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_14ExtensibleRate_9eval = {"eval", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_9eval, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_14ExtensibleRate_8eval};
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_9eval(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("eval (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 805, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "eval") < 0)) __PYX_ERR(0, 805, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_data = ((struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)values[0]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("eval", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 805, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.eval", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_data), __pyx_ptype_7cantera_8reaction_ExtensibleRateData, 0, "data", 0))) __PYX_ERR(0, 805, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_8eval(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self), __pyx_v_data);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_8eval(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("eval", 0);

  /* "cantera/reaction.pyx":811
 *         `ExtensibleRateData`.
 *         """
 *         raise NotImplementedError(f"{self.__class__.__name__}.eval")             # <<<<<<<<<<<<<<
 * 
 *     def validate(self, equation: str, soln: "Solution") -> None:
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_ConcatInPlace(__pyx_t_1, __pyx_kp_u_eval); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_NotImplementedError, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 811, __pyx_L1_error)

  /* "cantera/reaction.pyx":805
 *         raise NotImplementedError(f"{self.__class__.__name__}.get_parameters")
 * 
 *     def eval(self, data: ExtensibleRateData) -> float:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for calculating the forward rate constant based on the current state
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.eval", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":813
 *         raise NotImplementedError(f"{self.__class__.__name__}.eval")
 * 
 *     def validate(self, equation: str, soln: "Solution") -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for validating that the rate expression is configured with valid
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_11validate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_14ExtensibleRate_10validate, "\n        Responsible for validating that the rate expression is configured with valid\n        parameters. This may depend on properties of the Solution, for example\n        temperature ranges over which the rate expression can be evaluated. Raises an\n        exception if any validation fails.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_14ExtensibleRate_11validate = {"validate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_11validate, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_14ExtensibleRate_10validate};
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_11validate(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_equation = 0;
  CYTHON_UNUSED PyObject *__pyx_v_soln = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validate (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_equation,&__pyx_n_s_soln,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_equation)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 813, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_soln)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 813, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("validate", 1, 2, 2, 1); __PYX_ERR(0, 813, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "validate") < 0)) __PYX_ERR(0, 813, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_equation = ((PyObject*)values[0]);
    __pyx_v_soln = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("validate", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 813, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.validate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_equation), (&PyUnicode_Type), 0, "equation", 1))) __PYX_ERR(0, 813, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_10validate(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self), __pyx_v_equation, __pyx_v_soln);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_10validate(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_equation, CYTHON_UNUSED PyObject *__pyx_v_soln) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("validate", 0);

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":822
 *         pass
 * 
 *     cdef set_cxx_object(self, CxxReactionRate* rate=NULL):             # <<<<<<<<<<<<<<
 *         cdef CxxDelegator* drate
 *         cdef shared_ptr[CxxExternalHandle] handle
 */

PyObject *__pyx_f_7cantera_8reaction_14ExtensibleRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, struct __pyx_opt_args_7cantera_8reaction_14ExtensibleRate_set_cxx_object *__pyx_optional_args) {
  Cantera::ReactionRate *__pyx_v_rate = ((Cantera::ReactionRate *)NULL);
  Cantera::Delegator *__pyx_v_drate;
  std::shared_ptr<Cantera::ExternalHandle>  __pyx_v_handle;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __pyx_t_7cantera_9delegator_CxxDelegatorPtr __pyx_t_2;
  std::string __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_cxx_object", 0);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_rate = __pyx_optional_args->rate;
    }
  }

  /* "cantera/reaction.pyx":826
 *         cdef shared_ptr[CxxExternalHandle] handle
 * 
 *         if rate is NULL:             # <<<<<<<<<<<<<<
 *             # Started with Python object first. Create the C++ object and attach to it.
 *             # In this case, the Python object owns the C++ object, via self._rate
 */
  __pyx_t_1 = (__pyx_v_rate == NULL);
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":829
 *             # Started with Python object first. Create the C++ object and attach to it.
 *             # In this case, the Python object owns the C++ object, via self._rate
 *             self._rate.reset(new CxxReactionRateDelegator())             # <<<<<<<<<<<<<<
 *             self.rate = self._rate.get()
 *             drate = dynamic_cast[CxxDelegatorPtr](self.rate)
 */
    __pyx_v_self->__pyx_base._rate.reset(new Cantera::ReactionRateDelegator());

    /* "cantera/reaction.pyx":830
 *             # In this case, the Python object owns the C++ object, via self._rate
 *             self._rate.reset(new CxxReactionRateDelegator())
 *             self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *             drate = dynamic_cast[CxxDelegatorPtr](self.rate)
 *             handle.reset(new CxxPythonHandle(<PyObject*>self, True))
 */
    __pyx_v_self->__pyx_base.rate = __pyx_v_self->__pyx_base._rate.get();

    /* "cantera/reaction.pyx":831
 *             self._rate.reset(new CxxReactionRateDelegator())
 *             self.rate = self._rate.get()
 *             drate = dynamic_cast[CxxDelegatorPtr](self.rate)             # <<<<<<<<<<<<<<
 *             handle.reset(new CxxPythonHandle(<PyObject*>self, True))
 *             drate.holdExternalHandle(stringify('python'), handle)
 */
    try {
      __pyx_t_2 = dynamic_cast<__pyx_t_7cantera_9delegator_CxxDelegatorPtr>(__pyx_v_self->__pyx_base.rate);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 831, __pyx_L1_error)
    }
    __pyx_v_drate = __pyx_t_2;

    /* "cantera/reaction.pyx":832
 *             self.rate = self._rate.get()
 *             drate = dynamic_cast[CxxDelegatorPtr](self.rate)
 *             handle.reset(new CxxPythonHandle(<PyObject*>self, True))             # <<<<<<<<<<<<<<
 *             drate.holdExternalHandle(stringify('python'), handle)
 *         else:
 */
    __pyx_v_handle.reset(new Cantera::PythonHandle(((PyObject *)__pyx_v_self), 1));

    /* "cantera/reaction.pyx":833
 *             drate = dynamic_cast[CxxDelegatorPtr](self.rate)
 *             handle.reset(new CxxPythonHandle(<PyObject*>self, True))
 *             drate.holdExternalHandle(stringify('python'), handle)             # <<<<<<<<<<<<<<
 *         else:
 *             # Set up Python object from a C++ object that was created first. In this
 */
    __pyx_t_3 = __pyx_f_7cantera_6_utils_stringify(__pyx_n_u_python); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 833, __pyx_L1_error)
    __pyx_v_drate->holdExternalHandle(__pyx_t_3, __pyx_v_handle);

    /* "cantera/reaction.pyx":826
 *         cdef shared_ptr[CxxExternalHandle] handle
 * 
 *         if rate is NULL:             # <<<<<<<<<<<<<<
 *             # Started with Python object first. Create the C++ object and attach to it.
 *             # In this case, the Python object owns the C++ object, via self._rate
 */
    goto __pyx_L3;
  }

  /* "cantera/reaction.pyx":838
 *             # case, the C++ object owns the Python object, and self._rate is empty to
 *             # avoid creating a circular dependency.
 *             self._rate.reset()             # <<<<<<<<<<<<<<
 *             self.rate = rate
 * 
 */
  /*else*/ {
    __pyx_v_self->__pyx_base._rate.reset();

    /* "cantera/reaction.pyx":839
 *             # avoid creating a circular dependency.
 *             self._rate.reset()
 *             self.rate = rate             # <<<<<<<<<<<<<<
 * 
 *         assign_delegates(self, dynamic_cast[CxxDelegatorPtr](self.rate))
 */
    __pyx_v_self->__pyx_base.rate = __pyx_v_rate;
  }
  __pyx_L3:;

  /* "cantera/reaction.pyx":841
 *             self.rate = rate
 * 
 *         assign_delegates(self, dynamic_cast[CxxDelegatorPtr](self.rate))             # <<<<<<<<<<<<<<
 *         (<CxxReactionRateDelegator*>self.rate).setType(
 *             stringify(self._reaction_rate_type))
 */
  try {
    __pyx_t_2 = dynamic_cast<__pyx_t_7cantera_9delegator_CxxDelegatorPtr>(__pyx_v_self->__pyx_base.rate);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 841, __pyx_L1_error)
  }
  __pyx_t_4 = __pyx_f_7cantera_9delegator_assign_delegates(((PyObject *)__pyx_v_self), __pyx_t_2); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 841, __pyx_L1_error)

  /* "cantera/reaction.pyx":843
 *         assign_delegates(self, dynamic_cast[CxxDelegatorPtr](self.rate))
 *         (<CxxReactionRateDelegator*>self.rate).setType(
 *             stringify(self._reaction_rate_type))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_reaction_rate_type); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_3 = __pyx_f_7cantera_6_utils_stringify(__pyx_t_5); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 843, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

  /* "cantera/reaction.pyx":842
 * 
 *         assign_delegates(self, dynamic_cast[CxxDelegatorPtr](self.rate))
 *         (<CxxReactionRateDelegator*>self.rate).setType(             # <<<<<<<<<<<<<<
 *             stringify(self._reaction_rate_type))
 * 
 */
  ((Cantera::ReactionRateDelegator *)__pyx_v_self->__pyx_base.rate)->setType(__pyx_t_3);

  /* "cantera/reaction.pyx":822
 *         pass
 * 
 *     cdef set_cxx_object(self, CxxReactionRate* rate=NULL):             # <<<<<<<<<<<<<<
 *         cdef CxxDelegator* drate
 *         cdef shared_ptr[CxxExternalHandle] handle
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.set_cxx_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

PyObject *__pyx_f_7cantera_8reaction_14ExtensibleRate_set_cxx_object__pyx_wrap_1(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self) {
  return __pyx_f_7cantera_8reaction_14ExtensibleRate_set_cxx_object(__pyx_v_self, NULL);
}

/* "cantera/reaction.pxd":263
 * 
 * cdef class ExtensibleRate(ReactionRate):
 *     cdef public list _delegates             # <<<<<<<<<<<<<<
 *     cdef set_cxx_object(self, CxxReactionRate* rate=*)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_10_delegates_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_10_delegates_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_10_delegates___get__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_10_delegates___get__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_delegates);
  __pyx_r = __pyx_v_self->_delegates;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_14ExtensibleRate_10_delegates_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cantera_8reaction_14ExtensibleRate_10_delegates_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_10_delegates_2__set__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_14ExtensibleRate_10_delegates_2__set__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None) || __Pyx_RaiseUnexpectedTypeError("list", __pyx_v_value))) __PYX_ERR(4, 263, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_delegates);
  __Pyx_DECREF(__pyx_v_self->_delegates);
  __pyx_v_self->_delegates = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate._delegates.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_14ExtensibleRate_10_delegates_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7cantera_8reaction_14ExtensibleRate_10_delegates_5__del__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_10_delegates_4__del__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_14ExtensibleRate_10_delegates_4__del__(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_delegates);
  __Pyx_DECREF(__pyx_v_self->_delegates);
  __pyx_v_self->_delegates = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_14ExtensibleRate_13__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_13__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_12__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_12__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_14ExtensibleRate_15__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_14ExtensibleRate_15__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_14ExtensibleRate_14__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_14ExtensibleRate_14__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ExtensibleRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":862
 *     }
 * 
 *     def update(self, soln):             # <<<<<<<<<<<<<<
 *         """
 *         This method takes a `Solution` object and stores any thermodynamic data (for
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_18ExtensibleRateData_1update(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_18ExtensibleRateData_update, "\n        This method takes a `Solution` object and stores any thermodynamic data (for\n        example, temperature and pressure) needed to evaluate all reactions of the\n        corresponding ReactionRate type.\n\n        If this state data has changed since the last time `update` was called and the\n        reaction rates need to be updated, this method should return `True`. Otherwise,\n        it should return `False`.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_18ExtensibleRateData_1update = {"update", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_18ExtensibleRateData_1update, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_18ExtensibleRateData_update};
static PyObject *__pyx_pw_7cantera_8reaction_18ExtensibleRateData_1update(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v_soln = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_soln,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_soln)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 862, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "update") < 0)) __PYX_ERR(0, 862, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_soln = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 862, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRateData.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_18ExtensibleRateData_update(((struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)__pyx_v_self), __pyx_v_soln);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_18ExtensibleRateData_update(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_soln) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update", 0);

  /* "cantera/reaction.pyx":872
 *         it should return `False`.
 *         """
 *         raise NotImplementedError(f"{self.__class__.__name__}.update")             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self, CxxReactionDataDelegator* data):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_class); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_name); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_FormatSimple(__pyx_t_2, __pyx_empty_unicode); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_PyUnicode_ConcatInPlace(__pyx_t_1, __pyx_kp_u_update); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = __Pyx_PyObject_CallOneArg(__pyx_builtin_NotImplementedError, __pyx_t_2); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_Raise(__pyx_t_1, 0, 0, 0);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __PYX_ERR(0, 872, __pyx_L1_error)

  /* "cantera/reaction.pyx":862
 *     }
 * 
 *     def update(self, soln):             # <<<<<<<<<<<<<<
 *         """
 *         This method takes a `Solution` object and stores any thermodynamic data (for
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRateData.update", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":874
 *         raise NotImplementedError(f"{self.__class__.__name__}.update")
 * 
 *     cdef set_cxx_object(self, CxxReactionDataDelegator* data):             # <<<<<<<<<<<<<<
 *         assign_delegates(self, dynamic_cast[CxxDelegatorPtr](data))
 * 
 */

static PyObject *__pyx_f_7cantera_8reaction_18ExtensibleRateData_set_cxx_object(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self, Cantera::ReactionDataDelegator *__pyx_v_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __pyx_t_7cantera_9delegator_CxxDelegatorPtr __pyx_t_1;
  int __pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":875
 * 
 *     cdef set_cxx_object(self, CxxReactionDataDelegator* data):
 *         assign_delegates(self, dynamic_cast[CxxDelegatorPtr](data))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  try {
    __pyx_t_1 = dynamic_cast<__pyx_t_7cantera_9delegator_CxxDelegatorPtr>(__pyx_v_data);
  } catch(...) {
    __Pyx_CppExn2PyErr();
    __PYX_ERR(0, 875, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_7cantera_9delegator_assign_delegates(((PyObject *)__pyx_v_self), __pyx_t_1); if (unlikely(__pyx_t_2 == ((int)-1))) __PYX_ERR(0, 875, __pyx_L1_error)

  /* "cantera/reaction.pyx":874
 *         raise NotImplementedError(f"{self.__class__.__name__}.update")
 * 
 *     cdef set_cxx_object(self, CxxReactionDataDelegator* data):             # <<<<<<<<<<<<<<
 *         assign_delegates(self, dynamic_cast[CxxDelegatorPtr](data))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRateData.set_cxx_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pxd":267
 * 
 * cdef class ExtensibleRateData:
 *     cdef public list _delegates             # <<<<<<<<<<<<<<
 *     cdef set_cxx_object(self, CxxReactionDataDelegator* rate)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_18ExtensibleRateData_10_delegates_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_18ExtensibleRateData_10_delegates_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_18ExtensibleRateData_10_delegates___get__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_18ExtensibleRateData_10_delegates___get__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_self->_delegates);
  __pyx_r = __pyx_v_self->_delegates;
  goto __pyx_L0;

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_18ExtensibleRateData_10_delegates_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value); /*proto*/
static int __pyx_pw_7cantera_8reaction_18ExtensibleRateData_10_delegates_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_value) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_18ExtensibleRateData_10_delegates_2__set__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)__pyx_v_self), ((PyObject *)__pyx_v_value));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_18ExtensibleRateData_10_delegates_2__set__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self, PyObject *__pyx_v_value) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);
  if (!(likely(PyList_CheckExact(__pyx_v_value))||((__pyx_v_value) == Py_None) || __Pyx_RaiseUnexpectedTypeError("list", __pyx_v_value))) __PYX_ERR(4, 267, __pyx_L1_error)
  __pyx_t_1 = __pyx_v_value;
  __Pyx_INCREF(__pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v_self->_delegates);
  __Pyx_DECREF(__pyx_v_self->_delegates);
  __pyx_v_self->_delegates = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRateData._delegates.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_18ExtensibleRateData_10_delegates_5__del__(PyObject *__pyx_v_self); /*proto*/
static int __pyx_pw_7cantera_8reaction_18ExtensibleRateData_10_delegates_5__del__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_18ExtensibleRateData_10_delegates_4__del__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_18ExtensibleRateData_10_delegates_4__del__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__del__", 0);
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF(__pyx_v_self->_delegates);
  __Pyx_DECREF(__pyx_v_self->_delegates);
  __pyx_v_self->_delegates = ((PyObject*)Py_None);

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_18ExtensibleRateData_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_18ExtensibleRateData_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_18ExtensibleRateData_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_18ExtensibleRateData_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_18ExtensibleRateData_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_18ExtensibleRateData_2__reduce_cython__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self) {
  PyObject *__pyx_v_state = 0;
  PyObject *__pyx_v__dict = 0;
  int __pyx_v_use_setstate;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":5
 *     cdef object _dict
 *     cdef bint use_setstate
 *     state = (self._delegates,)             # <<<<<<<<<<<<<<
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 */
  __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(__pyx_v_self->_delegates);
  __Pyx_GIVEREF(__pyx_v_self->_delegates);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_self->_delegates);
  __pyx_v_state = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":6
 *     cdef bint use_setstate
 *     state = (self._delegates,)
 *     _dict = getattr(self, '__dict__', None)             # <<<<<<<<<<<<<<
 *     if _dict is not None:
 *         state += (_dict,)
 */
  __pyx_t_1 = __Pyx_GetAttr3(((PyObject *)__pyx_v_self), __pyx_n_s_dict, Py_None); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v__dict = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":7
 *     state = (self._delegates,)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
  __pyx_t_2 = (__pyx_v__dict != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":8
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:
 *         state += (_dict,)             # <<<<<<<<<<<<<<
 *         use_setstate = True
 *     else:
 */
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v__dict);
    __Pyx_GIVEREF(__pyx_v__dict);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v__dict);
    __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_state, __pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 8, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF_SET(__pyx_v_state, ((PyObject*)__pyx_t_3));
    __pyx_t_3 = 0;

    /* "(tree fragment)":9
 *     if _dict is not None:
 *         state += (_dict,)
 *         use_setstate = True             # <<<<<<<<<<<<<<
 *     else:
 *         use_setstate = self._delegates is not None
 */
    __pyx_v_use_setstate = 1;

    /* "(tree fragment)":7
 *     state = (self._delegates,)
 *     _dict = getattr(self, '__dict__', None)
 *     if _dict is not None:             # <<<<<<<<<<<<<<
 *         state += (_dict,)
 *         use_setstate = True
 */
    goto __pyx_L3;
  }

  /* "(tree fragment)":11
 *         use_setstate = True
 *     else:
 *         use_setstate = self._delegates is not None             # <<<<<<<<<<<<<<
 *     if use_setstate:
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, None), state
 */
  /*else*/ {
    __pyx_t_2 = (__pyx_v_self->_delegates != ((PyObject*)Py_None));
    __pyx_v_use_setstate = __pyx_t_2;
  }
  __pyx_L3:;

  /* "(tree fragment)":12
 *     else:
 *         use_setstate = self._delegates is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, None), state
 *     else:
 */
  if (__pyx_v_use_setstate) {

    /* "(tree fragment)":13
 *         use_setstate = self._delegates is not None
 *     if use_setstate:
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, None), state             # <<<<<<<<<<<<<<
 *     else:
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, state)
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_pyx_unpickle_ExtensibleRateDat); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_130344318);
    __Pyx_GIVEREF(__pyx_int_130344318);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_130344318);
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    PyTuple_SET_ITEM(__pyx_t_1, 2, Py_None);
    __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 13, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_3);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_1);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_v_state);
    __pyx_t_3 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L0;

    /* "(tree fragment)":12
 *     else:
 *         use_setstate = self._delegates is not None
 *     if use_setstate:             # <<<<<<<<<<<<<<
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, None), state
 *     else:
 */
  }

  /* "(tree fragment)":15
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, None), state
 *     else:
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, state)             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_ExtensibleRateData__set_state(self, __pyx_state)
 */
  /*else*/ {
    __Pyx_XDECREF(__pyx_r);
    __Pyx_GetModuleGlobalName(__pyx_t_4, __pyx_n_s_pyx_unpickle_ExtensibleRateDat); if (unlikely(!__pyx_t_4)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_GIVEREF(((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)Py_TYPE(((PyObject *)__pyx_v_self))));
    __Pyx_INCREF(__pyx_int_130344318);
    __Pyx_GIVEREF(__pyx_int_130344318);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_130344318);
    __Pyx_INCREF(__pyx_v_state);
    __Pyx_GIVEREF(__pyx_v_state);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_v_state);
    __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 15, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_1);
    __pyx_t_4 = 0;
    __pyx_t_1 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;
  }

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRateData.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_state);
  __Pyx_XDECREF(__pyx_v__dict);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_ExtensibleRateData__set_state(self, __pyx_state)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_18ExtensibleRateData_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_18ExtensibleRateData_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_18ExtensibleRateData_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_18ExtensibleRateData_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 16, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 16, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 16, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRateData.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_18ExtensibleRateData_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_18ExtensibleRateData_4__setstate_cython__(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v_self, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":17
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, state)
 * def __setstate_cython__(self, __pyx_state):
 *     __pyx_unpickle_ExtensibleRateData__set_state(self, __pyx_state)             # <<<<<<<<<<<<<<
 */
  if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 17, __pyx_L1_error)
  __pyx_t_1 = __pyx_f_7cantera_8reaction___pyx_unpickle_ExtensibleRateData__set_state(__pyx_v_self, ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 17, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_ExtensibleRateData__set_state(self, __pyx_state)
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ExtensibleRateData.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":884
 *     """
 * 
 *     def __call__(self, double temperature, np.ndarray coverages):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and surface coverages.
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_1__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_17InterfaceRateBase___call__, "\n        Evaluate rate expression based on temperature and surface coverages.\n\n        .. warning::\n\n            This method is an experimental part of the Cantera API and\n            may be changed or removed without notice.\n        ");
#if CYTHON_UPDATE_DESCRIPTOR_DOC
struct wrapperbase __pyx_wrapperbase_7cantera_8reaction_17InterfaceRateBase___call__;
#endif
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_1__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  double __pyx_v_temperature;
  PyArrayObject *__pyx_v_coverages = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_temperature,&__pyx_n_s_coverages,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_temperature)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 884, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_coverages)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 884, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, 1); __PYX_ERR(0, 884, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__call__") < 0)) __PYX_ERR(0, 884, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
      values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
    }
    __pyx_v_temperature = __pyx_PyFloat_AsDouble(values[0]); if (unlikely((__pyx_v_temperature == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 884, __pyx_L3_error)
    __pyx_v_coverages = ((PyArrayObject *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__call__", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 884, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_coverages), __pyx_ptype_5numpy_ndarray, 1, "coverages", 0))) __PYX_ERR(0, 884, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase___call__(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self), __pyx_v_temperature, __pyx_v_coverages);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase___call__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, double __pyx_v_temperature, PyArrayObject *__pyx_v_coverages) {
  std::vector<double>  __pyx_v_cxxdata;
  PyObject *__pyx_v_c = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  double __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "cantera/reaction.pyx":894
 *         """
 *         cdef vector[double] cxxdata
 *         for c in coverages:             # <<<<<<<<<<<<<<
 *             cxxdata.push_back(c)
 *         return self.rate.eval(temperature, cxxdata)
 */
  if (likely(PyList_CheckExact(((PyObject *)__pyx_v_coverages))) || PyTuple_CheckExact(((PyObject *)__pyx_v_coverages))) {
    __pyx_t_1 = ((PyObject *)__pyx_v_coverages); __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(((PyObject *)__pyx_v_coverages)); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 894, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 894, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 894, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 894, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 894, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 894, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_c, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/reaction.pyx":895
 *         cdef vector[double] cxxdata
 *         for c in coverages:
 *             cxxdata.push_back(c)             # <<<<<<<<<<<<<<
 *         return self.rate.eval(temperature, cxxdata)
 * 
 */
    __pyx_t_5 = __pyx_PyFloat_AsDouble(__pyx_v_c); if (unlikely((__pyx_t_5 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 895, __pyx_L1_error)
    try {
      __pyx_v_cxxdata.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 895, __pyx_L1_error)
    }

    /* "cantera/reaction.pyx":894
 *         """
 *         cdef vector[double] cxxdata
 *         for c in coverages:             # <<<<<<<<<<<<<<
 *             cxxdata.push_back(c)
 *         return self.rate.eval(temperature, cxxdata)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":896
 *         for c in coverages:
 *             cxxdata.push_back(c)
 *         return self.rate.eval(temperature, cxxdata)             # <<<<<<<<<<<<<<
 * 
 *     property coverage_dependencies:
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_5 = __pyx_v_self->__pyx_base.__pyx_base.rate->eval(__pyx_v_temperature, __pyx_v_cxxdata);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 896, __pyx_L1_error)
  }
  __pyx_t_1 = PyFloat_FromDouble(__pyx_t_5); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 896, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":884
 *     """
 * 
 *     def __call__(self, double temperature, np.ndarray coverages):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate rate expression based on temperature and surface coverages.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_c);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":907
 *         and the activation energy [J/kmol], respectively.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef CxxAnyMap cxx_deps
 *             self.interface.getCoverageDependencies(cxx_deps)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies___get__(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies___get__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self) {
  Cantera::AnyMap __pyx_v_cxx_deps;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":909
 *         def __get__(self):
 *             cdef CxxAnyMap cxx_deps
 *             self.interface.getCoverageDependencies(cxx_deps)             # <<<<<<<<<<<<<<
 *             return anymap_to_py(cxx_deps)
 *         def __set__(self, deps):
 */
  __pyx_v_self->interface->getCoverageDependencies(__pyx_v_cxx_deps);

  /* "cantera/reaction.pyx":910
 *             cdef CxxAnyMap cxx_deps
 *             self.interface.getCoverageDependencies(cxx_deps)
 *             return anymap_to_py(cxx_deps)             # <<<<<<<<<<<<<<
 *         def __set__(self, deps):
 *             cdef CxxAnyMap cxx_deps = py_to_anymap(deps)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_anymap_to_py(__pyx_v_cxx_deps); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 910, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":907
 *         and the activation energy [J/kmol], respectively.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef CxxAnyMap cxx_deps
 *             self.interface.getCoverageDependencies(cxx_deps)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.coverage_dependencies.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":911
 *             self.interface.getCoverageDependencies(cxx_deps)
 *             return anymap_to_py(cxx_deps)
 *         def __set__(self, deps):             # <<<<<<<<<<<<<<
 *             cdef CxxAnyMap cxx_deps = py_to_anymap(deps)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_deps); /*proto*/
static int __pyx_pw_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_deps) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies_2__set__(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self), ((PyObject *)__pyx_v_deps));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies_2__set__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, PyObject *__pyx_v_deps) {
  Cantera::AnyMap __pyx_v_cxx_deps;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":912
 *             return anymap_to_py(cxx_deps)
 *         def __set__(self, deps):
 *             cdef CxxAnyMap cxx_deps = py_to_anymap(deps)             # <<<<<<<<<<<<<<
 * 
 *             self.interface.setCoverageDependencies(cxx_deps)
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_deps, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 912, __pyx_L1_error)
  __pyx_v_cxx_deps = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1);

  /* "cantera/reaction.pyx":914
 *             cdef CxxAnyMap cxx_deps = py_to_anymap(deps)
 * 
 *             self.interface.setCoverageDependencies(cxx_deps)             # <<<<<<<<<<<<<<
 * 
 *     def set_species(self, species):
 */
  try {
    __pyx_v_self->interface->setCoverageDependencies(__pyx_v_cxx_deps);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 914, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":911
 *             self.interface.getCoverageDependencies(cxx_deps)
 *             return anymap_to_py(cxx_deps)
 *         def __set__(self, deps):             # <<<<<<<<<<<<<<
 *             cdef CxxAnyMap cxx_deps = py_to_anymap(deps)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.coverage_dependencies.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":916
 *             self.interface.setCoverageDependencies(cxx_deps)
 * 
 *     def set_species(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Set association with an ordered list of all species associated with an
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_3set_species(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_17InterfaceRateBase_2set_species, "\n        Set association with an ordered list of all species associated with an\n        `InterfaceKinetics` object.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_17InterfaceRateBase_3set_species = {"set_species", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17InterfaceRateBase_3set_species, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_17InterfaceRateBase_2set_species};
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_3set_species(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_species = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_species (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_species,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_species)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 916, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "set_species") < 0)) __PYX_ERR(0, 916, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_species = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_species", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 916, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.set_species", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase_2set_species(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self), __pyx_v_species);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_2set_species(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, PyObject *__pyx_v_species) {
  std::vector<std::string>  __pyx_v_cxxvector;
  PyObject *__pyx_v_s = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *(*__pyx_t_3)(PyObject *);
  PyObject *__pyx_t_4 = NULL;
  std::string __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_species", 0);

  /* "cantera/reaction.pyx":922
 *         """
 *         cdef vector[string] cxxvector
 *         for s in species:             # <<<<<<<<<<<<<<
 *             cxxvector.push_back(stringify(s))
 *         self.interface.setSpecies(cxxvector)
 */
  if (likely(PyList_CheckExact(__pyx_v_species)) || PyTuple_CheckExact(__pyx_v_species)) {
    __pyx_t_1 = __pyx_v_species; __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
    __pyx_t_3 = NULL;
  } else {
    __pyx_t_2 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_v_species); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 922, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = __Pyx_PyObject_GetIterNextFunc(__pyx_t_1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 922, __pyx_L1_error)
  }
  for (;;) {
    if (likely(!__pyx_t_3)) {
      if (likely(PyList_CheckExact(__pyx_t_1))) {
        if (__pyx_t_2 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 922, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      } else {
        if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_4); __pyx_t_2++; if (unlikely((0 < 0))) __PYX_ERR(0, 922, __pyx_L1_error)
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 922, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_4);
        #endif
      }
    } else {
      __pyx_t_4 = __pyx_t_3(__pyx_t_1);
      if (unlikely(!__pyx_t_4)) {
        PyObject* exc_type = PyErr_Occurred();
        if (exc_type) {
          if (likely(__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration))) PyErr_Clear();
          else __PYX_ERR(0, 922, __pyx_L1_error)
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_4);
    }
    __Pyx_XDECREF_SET(__pyx_v_s, __pyx_t_4);
    __pyx_t_4 = 0;

    /* "cantera/reaction.pyx":923
 *         cdef vector[string] cxxvector
 *         for s in species:
 *             cxxvector.push_back(stringify(s))             # <<<<<<<<<<<<<<
 *         self.interface.setSpecies(cxxvector)
 * 
 */
    __pyx_t_5 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_s); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 923, __pyx_L1_error)
    try {
      __pyx_v_cxxvector.push_back(__pyx_t_5);
    } catch(...) {
      __Pyx_CppExn2PyErr();
      __PYX_ERR(0, 923, __pyx_L1_error)
    }

    /* "cantera/reaction.pyx":922
 *         """
 *         cdef vector[string] cxxvector
 *         for s in species:             # <<<<<<<<<<<<<<
 *             cxxvector.push_back(stringify(s))
 *         self.interface.setSpecies(cxxvector)
 */
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":924
 *         for s in species:
 *             cxxvector.push_back(stringify(s))
 *         self.interface.setSpecies(cxxvector)             # <<<<<<<<<<<<<<
 * 
 *     property site_density:
 */
  try {
    __pyx_v_self->interface->setSpecies(__pyx_v_cxxvector);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 924, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":916
 *             self.interface.setCoverageDependencies(cxx_deps)
 * 
 *     def set_species(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Set association with an ordered list of all species associated with an
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.set_species", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_s);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":940
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.interface.siteDensity()
 *         def __set__(self, double site_density):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_12site_density_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_12site_density_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase_12site_density___get__(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_12site_density___get__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":941
 *         """
 *         def __get__(self):
 *             return self.interface.siteDensity()             # <<<<<<<<<<<<<<
 *         def __set__(self, double site_density):
 *             self.interface.setSiteDensity(site_density)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->interface->siteDensity()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 941, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":940
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.interface.siteDensity()
 *         def __set__(self, double site_density):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.site_density.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":942
 *         def __get__(self):
 *             return self.interface.siteDensity()
 *         def __set__(self, double site_density):             # <<<<<<<<<<<<<<
 *             self.interface.setSiteDensity(site_density)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_17InterfaceRateBase_12site_density_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_site_density); /*proto*/
static int __pyx_pw_7cantera_8reaction_17InterfaceRateBase_12site_density_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_site_density) {
  double __pyx_v_site_density;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_site_density); {
    __pyx_v_site_density = __pyx_PyFloat_AsDouble(__pyx_arg_site_density); if (unlikely((__pyx_v_site_density == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 942, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.site_density.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase_12site_density_2__set__(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self), ((double)__pyx_v_site_density));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_17InterfaceRateBase_12site_density_2__set__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, double __pyx_v_site_density) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":943
 *             return self.interface.siteDensity()
 *         def __set__(self, double site_density):
 *             self.interface.setSiteDensity(site_density)             # <<<<<<<<<<<<<<
 * 
 *     property uses_electrochemistry:
 */
  __pyx_v_self->interface->setSiteDensity(__pyx_v_site_density);

  /* "cantera/reaction.pyx":942
 *         def __get__(self):
 *             return self.interface.siteDensity()
 *         def __set__(self, double site_density):             # <<<<<<<<<<<<<<
 *             self.interface.setSiteDensity(site_density)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":949
 *         Return boolean flag indicating whether rate involves a charge transfer.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.interface.usesElectrochemistry()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_21uses_electrochemistry_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_21uses_electrochemistry_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase_21uses_electrochemistry___get__(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_21uses_electrochemistry___get__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":950
 *         """
 *         def __get__(self):
 *             return self.interface.usesElectrochemistry()             # <<<<<<<<<<<<<<
 * 
 *     property beta:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->interface->usesElectrochemistry()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 950, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":949
 *         Return boolean flag indicating whether rate involves a charge transfer.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.interface.usesElectrochemistry()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.uses_electrochemistry.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":956
 *         Return the charge transfer beta parameter
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.interface.beta()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_4beta_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_4beta_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase_4beta___get__(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_4beta___get__(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":957
 *         """
 *         def __get__(self):
 *             return self.interface.beta()             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->interface->beta()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 957, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":956
 *         Return the charge transfer beta parameter
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.interface.beta()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.beta.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17InterfaceRateBase_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17InterfaceRateBase_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase_4__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__rate_self_base_self_interf, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17InterfaceRateBase_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17InterfaceRateBase_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17InterfaceRateBase_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17InterfaceRateBase_6__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17InterfaceRateBase_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__rate_self_base_self_interf, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceRateBase.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":966
 *     _reaction_rate_type = "interface-Arrhenius"
 * 
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 966, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 966, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 966, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea = values[2];
    __pyx_v_input_data = values[3];
    __pyx_v_init = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 966, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate___cinit__(((struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea, __pyx_v_input_data, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate___cinit__(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":968
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 968, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":969
 * 
 *         if init:
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cinit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_input_data);
    __Pyx_GIVEREF(__pyx_v_input_data);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_input_data);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_A, __pyx_v_A) < 0) __PYX_ERR(0, 969, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_b, __pyx_v_b) < 0) __PYX_ERR(0, 969, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_Ea, __pyx_v_Ea) < 0) __PYX_ERR(0, 969, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 969, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cantera/reaction.pyx":968
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 */
  }

  /* "cantera/reaction.pyx":966
 *     _reaction_rate_type = "interface-Arrhenius"
 * 
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":971
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceArrheniusRate(py_to_anymap(input_data)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_22InterfaceArrheniusRate_3_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 971, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 971, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 971, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_2_from_dict(((struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  Cantera::InterfaceArrheniusRate *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":972
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(new CxxInterfaceArrheniusRate(py_to_anymap(input_data)))             # <<<<<<<<<<<<<<
 * 
 *     def _from_parameters(self, A, b, Ea):
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 972, __pyx_L1_error)
  try {
    __pyx_t_2 = new Cantera::InterfaceArrheniusRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 972, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._rate.reset(__pyx_t_2);

  /* "cantera/reaction.pyx":971
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceArrheniusRate(py_to_anymap(input_data)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":974
 *         self._rate.reset(new CxxInterfaceArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceArrheniusRate(A, b, Ea))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_22InterfaceArrheniusRate_5_from_parameters = {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_parameters (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 974, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 974, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 3, 3, 1); __PYX_ERR(0, 974, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 974, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 3, 3, 2); __PYX_ERR(0, 974, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_parameters") < 0)) __PYX_ERR(0, 974, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 974, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_4_from_parameters(((struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_parameters", 0);

  /* "cantera/reaction.pyx":975
 * 
 *     def _from_parameters(self, A, b, Ea):
 *         self._rate.reset(new CxxInterfaceArrheniusRate(A, b, Ea))             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_A); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 975, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_b); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 975, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_Ea); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 975, __pyx_L1_error)
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._rate.reset(new Cantera::InterfaceArrheniusRate(__pyx_t_1, __pyx_t_2, __pyx_t_3));

  /* "cantera/reaction.pyx":974
 *         self._rate.reset(new CxxInterfaceArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceArrheniusRate(A, b, Ea))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":977
 *         self._rate.reset(new CxxInterfaceArrheniusRate(A, b, Ea))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_22InterfaceArrheniusRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::InterfaceArrheniusRate *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":978
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()
 */
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":979
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate             # <<<<<<<<<<<<<<
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.base = ((Cantera::ArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":980
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxInterfaceArrheniusRate* cxx_object(self):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_InterfaceArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 980, __pyx_L1_error)
  __pyx_v_self->__pyx_base.interface = ((Cantera::InterfaceRateBase *)__pyx_t_1);

  /* "cantera/reaction.pyx":977
 *         self._rate.reset(new CxxInterfaceArrheniusRate(A, b, Ea))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate.set_cxx_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":982
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()
 * 
 *     cdef CxxInterfaceArrheniusRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxInterfaceArrheniusRate*>self.rate
 * 
 */

static Cantera::InterfaceArrheniusRate *__pyx_f_7cantera_8reaction_22InterfaceArrheniusRate_cxx_object(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self) {
  Cantera::InterfaceArrheniusRate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":983
 * 
 *     cdef CxxInterfaceArrheniusRate* cxx_object(self):
 *         return <CxxInterfaceArrheniusRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((Cantera::InterfaceArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":982
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()
 * 
 *     cdef CxxInterfaceArrheniusRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxInterfaceArrheniusRate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_22InterfaceArrheniusRate_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_6__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_22InterfaceArrheniusRate_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_8__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_22InterfaceArrheniusRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceArrheniusRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":994
 *     _reaction_rate_type = "interface-Blowers-Masel"
 * 
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea0 = 0;
  PyObject *__pyx_v_w = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea0,&__pyx_n_s_w,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_None);
    values[5] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 994, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 994, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea0);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 994, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_w);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 994, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 994, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[5] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 994, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 994, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea0 = values[2];
    __pyx_v_w = values[3];
    __pyx_v_input_data = values[4];
    __pyx_v_init = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 6, __pyx_nargs); __PYX_ERR(0, 994, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate___cinit__(((struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea0, __pyx_v_w, __pyx_v_input_data, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate___cinit__(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":996
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 996, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":997
 * 
 *         if init:
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cinit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 997, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 997, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_input_data);
    __Pyx_GIVEREF(__pyx_v_input_data);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_input_data);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 997, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_A, __pyx_v_A) < 0) __PYX_ERR(0, 997, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_b, __pyx_v_b) < 0) __PYX_ERR(0, 997, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_Ea0, __pyx_v_Ea0) < 0) __PYX_ERR(0, 997, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_w, __pyx_v_w) < 0) __PYX_ERR(0, 997, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 997, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cantera/reaction.pyx":996
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 */
  }

  /* "cantera/reaction.pyx":994
 *     _reaction_rate_type = "interface-Blowers-Masel"
 * 
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":999
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_25InterfaceBlowersMaselRate_3_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 999, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 999, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 999, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_2_from_dict(((struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  Cantera::InterfaceBlowersMaselRate *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":1000
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(py_to_anymap(input_data)))             # <<<<<<<<<<<<<<
 * 
 *     def _from_parameters(self, A, b, Ea0, w):
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1000, __pyx_L1_error)
  try {
    __pyx_t_2 = new Cantera::InterfaceBlowersMaselRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1000, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._rate.reset(__pyx_t_2);

  /* "cantera/reaction.pyx":999
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1002
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(A, b, Ea0, w))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_25InterfaceBlowersMaselRate_5_from_parameters = {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea0 = 0;
  PyObject *__pyx_v_w = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_parameters (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea0,&__pyx_n_s_w,0};
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1002, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1002, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 1); __PYX_ERR(0, 1002, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea0)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1002, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 2); __PYX_ERR(0, 1002, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_w)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1002, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 3); __PYX_ERR(0, 1002, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_parameters") < 0)) __PYX_ERR(0, 1002, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea0 = values[2];
    __pyx_v_w = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1002, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_4_from_parameters(((struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea0, __pyx_v_w);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_parameters", 0);

  /* "cantera/reaction.pyx":1003
 * 
 *     def _from_parameters(self, A, b, Ea0, w):
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(A, b, Ea0, w))             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_A); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1003, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_b); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1003, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_Ea0); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1003, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1003, __pyx_L1_error)
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._rate.reset(new Cantera::InterfaceBlowersMaselRate(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4));

  /* "cantera/reaction.pyx":1002
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(A, b, Ea0, w))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1005
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(A, b, Ea0, w))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_25InterfaceBlowersMaselRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::InterfaceBlowersMaselRate *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":1006
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()
 */
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":1007
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate             # <<<<<<<<<<<<<<
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()
 * 
 */
  __pyx_v_self->__pyx_base.__pyx_base.base = ((Cantera::ArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":1008
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxInterfaceBlowersMaselRate* cxx_object(self):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1008, __pyx_L1_error)
  __pyx_v_self->__pyx_base.interface = ((Cantera::InterfaceRateBase *)__pyx_t_1);

  /* "cantera/reaction.pyx":1005
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(A, b, Ea0, w))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.set_cxx_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1010
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()
 * 
 *     cdef CxxInterfaceBlowersMaselRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxInterfaceBlowersMaselRate*>self.rate
 * 
 */

static Cantera::InterfaceBlowersMaselRate *__pyx_f_7cantera_8reaction_25InterfaceBlowersMaselRate_cxx_object(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self) {
  Cantera::InterfaceBlowersMaselRate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":1011
 * 
 *     cdef CxxInterfaceBlowersMaselRate* cxx_object(self):
 *         return <CxxInterfaceBlowersMaselRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     property bond_energy:
 */
  __pyx_r = ((Cantera::InterfaceBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1010
 *         self.interface = <CxxInterfaceRateBase*>self.cxx_object()
 * 
 *     cdef CxxInterfaceBlowersMaselRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxInterfaceBlowersMaselRate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1018
 *         in the reaction ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().bondEnergy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_11bond_energy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_11bond_energy_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_11bond_energy___get__(((struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_11bond_energy___get__(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::InterfaceBlowersMaselRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1019
 *         """
 *         def __get__(self):
 *             return self.cxx_object().bondEnergy()             # <<<<<<<<<<<<<<
 * 
 *     property delta_enthalpy:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1019, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->bondEnergy()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1019, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1018
 *         in the reaction ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().bondEnergy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.bond_energy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1035
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy___get__(((struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy___get__(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::InterfaceBlowersMaselRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1036
 *         """
 *         def __get__(self):
 *             return self.cxx_object().deltaH()             # <<<<<<<<<<<<<<
 *         def __set__(self, double delta_H):
 *             self.cxx_object().setDeltaH(delta_H)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1036, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->deltaH()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1036, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1035
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.delta_enthalpy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1037
 *         def __get__(self):
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):             # <<<<<<<<<<<<<<
 *             self.cxx_object().setDeltaH(delta_H)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_delta_H); /*proto*/
static int __pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_delta_H) {
  double __pyx_v_delta_H;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_delta_H); {
    __pyx_v_delta_H = __pyx_PyFloat_AsDouble(__pyx_arg_delta_H); if (unlikely((__pyx_v_delta_H == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1037, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.delta_enthalpy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy_2__set__(((struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self), ((double)__pyx_v_delta_H));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy_2__set__(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, double __pyx_v_delta_H) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Cantera::InterfaceBlowersMaselRate *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1038
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):
 *             self.cxx_object().setDeltaH(delta_H)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1038, __pyx_L1_error)
  __pyx_t_1->setDeltaH(__pyx_v_delta_H);

  /* "cantera/reaction.pyx":1037
 *         def __get__(self):
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):             # <<<<<<<<<<<<<<
 *             self.cxx_object().setDeltaH(delta_H)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.delta_enthalpy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_25InterfaceBlowersMaselRate_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_6__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_25InterfaceBlowersMaselRate_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_8__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_25InterfaceBlowersMaselRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.InterfaceBlowersMaselRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1053
 *         converting the sticking coefficient to a rate coefficient.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.stick.motzWiseCorrection()
 *         def __set__(self, cbool motz_wise):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_20motz_wise_correction_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_20motz_wise_correction_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase_20motz_wise_correction___get__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_20motz_wise_correction___get__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1054
 *         """
 *         def __get__(self):
 *             return self.stick.motzWiseCorrection()             # <<<<<<<<<<<<<<
 *         def __set__(self, cbool motz_wise):
 *             self.stick.setMotzWiseCorrection(motz_wise)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->stick->motzWiseCorrection()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1054, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1053
 *         converting the sticking coefficient to a rate coefficient.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.stick.motzWiseCorrection()
 *         def __set__(self, cbool motz_wise):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.motz_wise_correction.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1055
 *         def __get__(self):
 *             return self.stick.motzWiseCorrection()
 *         def __set__(self, cbool motz_wise):             # <<<<<<<<<<<<<<
 *             self.stick.setMotzWiseCorrection(motz_wise)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_13StickRateBase_20motz_wise_correction_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_motz_wise); /*proto*/
static int __pyx_pw_7cantera_8reaction_13StickRateBase_20motz_wise_correction_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_motz_wise) {
  bool __pyx_v_motz_wise;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_motz_wise); {
    __pyx_v_motz_wise = __Pyx_PyObject_IsTrue(__pyx_arg_motz_wise); if (unlikely((__pyx_v_motz_wise == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1055, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.motz_wise_correction.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase_20motz_wise_correction_2__set__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self), ((bool)__pyx_v_motz_wise));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_13StickRateBase_20motz_wise_correction_2__set__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, bool __pyx_v_motz_wise) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1056
 *             return self.stick.motzWiseCorrection()
 *         def __set__(self, cbool motz_wise):
 *             self.stick.setMotzWiseCorrection(motz_wise)             # <<<<<<<<<<<<<<
 * 
 *     property sticking_species:
 */
  __pyx_v_self->stick->setMotzWiseCorrection(__pyx_v_motz_wise);

  /* "cantera/reaction.pyx":1055
 *         def __get__(self):
 *             return self.stick.motzWiseCorrection()
 *         def __set__(self, cbool motz_wise):             # <<<<<<<<<<<<<<
 *             self.stick.setMotzWiseCorrection(motz_wise)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1064
 *         ambiguous.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.stick.stickingSpecies())
 *         def __set__(self, species):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_16sticking_species_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_16sticking_species_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase_16sticking_species___get__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_16sticking_species___get__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1065
 *         """
 *         def __get__(self):
 *             return pystr(self.stick.stickingSpecies())             # <<<<<<<<<<<<<<
 *         def __set__(self, species):
 *             self.stick.setStickingSpecies(stringify(species))
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->stick->stickingSpecies()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1065, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1064
 *         ambiguous.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.stick.stickingSpecies())
 *         def __set__(self, species):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.sticking_species.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1066
 *         def __get__(self):
 *             return pystr(self.stick.stickingSpecies())
 *         def __set__(self, species):             # <<<<<<<<<<<<<<
 *             self.stick.setStickingSpecies(stringify(species))
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_13StickRateBase_16sticking_species_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_species); /*proto*/
static int __pyx_pw_7cantera_8reaction_13StickRateBase_16sticking_species_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_species) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase_16sticking_species_2__set__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self), ((PyObject *)__pyx_v_species));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_13StickRateBase_16sticking_species_2__set__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, PyObject *__pyx_v_species) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1067
 *             return pystr(self.stick.stickingSpecies())
 *         def __set__(self, species):
 *             self.stick.setStickingSpecies(stringify(species))             # <<<<<<<<<<<<<<
 * 
 *     property sticking_order:
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_species); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1067, __pyx_L1_error)
  __pyx_v_self->stick->setStickingSpecies(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1));

  /* "cantera/reaction.pyx":1066
 *         def __get__(self):
 *             return pystr(self.stick.stickingSpecies())
 *         def __set__(self, species):             # <<<<<<<<<<<<<<
 *             self.stick.setStickingSpecies(stringify(species))
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.sticking_species.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1081
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.stick.stickingOrder()
 *         def __set__(self, double order):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_14sticking_order_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_14sticking_order_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase_14sticking_order___get__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_14sticking_order___get__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1082
 *         """
 *         def __get__(self):
 *             return self.stick.stickingOrder()             # <<<<<<<<<<<<<<
 *         def __set__(self, double order):
 *             self.stick.setStickingOrder(order)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->stick->stickingOrder()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1082, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1081
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.stick.stickingOrder()
 *         def __set__(self, double order):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.sticking_order.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1083
 *         def __get__(self):
 *             return self.stick.stickingOrder()
 *         def __set__(self, double order):             # <<<<<<<<<<<<<<
 *             self.stick.setStickingOrder(order)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_13StickRateBase_14sticking_order_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_order); /*proto*/
static int __pyx_pw_7cantera_8reaction_13StickRateBase_14sticking_order_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_order) {
  double __pyx_v_order;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_order); {
    __pyx_v_order = __pyx_PyFloat_AsDouble(__pyx_arg_order); if (unlikely((__pyx_v_order == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1083, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.sticking_order.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase_14sticking_order_2__set__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self), ((double)__pyx_v_order));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_13StickRateBase_14sticking_order_2__set__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, double __pyx_v_order) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1084
 *             return self.stick.stickingOrder()
 *         def __set__(self, double order):
 *             self.stick.setStickingOrder(order)             # <<<<<<<<<<<<<<
 * 
 *     property sticking_weight:
 */
  __pyx_v_self->stick->setStickingOrder(__pyx_v_order);

  /* "cantera/reaction.pyx":1083
 *         def __get__(self):
 *             return self.stick.stickingOrder()
 *         def __set__(self, double order):             # <<<<<<<<<<<<<<
 *             self.stick.setStickingOrder(order)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1098
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.stick.stickingWeight()
 *         def __set__(self, double weight):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_15sticking_weight_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_15sticking_weight_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase_15sticking_weight___get__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_15sticking_weight___get__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1099
 *         """
 *         def __get__(self):
 *             return self.stick.stickingWeight()             # <<<<<<<<<<<<<<
 *         def __set__(self, double weight):
 *             self.stick.setStickingWeight(weight)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->stick->stickingWeight()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1099, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1098
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.stick.stickingWeight()
 *         def __set__(self, double weight):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.sticking_weight.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1100
 *         def __get__(self):
 *             return self.stick.stickingWeight()
 *         def __set__(self, double weight):             # <<<<<<<<<<<<<<
 *             self.stick.setStickingWeight(weight)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_13StickRateBase_15sticking_weight_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_weight); /*proto*/
static int __pyx_pw_7cantera_8reaction_13StickRateBase_15sticking_weight_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_weight) {
  double __pyx_v_weight;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_weight); {
    __pyx_v_weight = __pyx_PyFloat_AsDouble(__pyx_arg_weight); if (unlikely((__pyx_v_weight == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1100, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.sticking_weight.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase_15sticking_weight_2__set__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self), ((double)__pyx_v_weight));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_13StickRateBase_15sticking_weight_2__set__(struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, double __pyx_v_weight) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1101
 *             return self.stick.stickingWeight()
 *         def __set__(self, double weight):
 *             self.stick.setStickingWeight(weight)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_v_self->stick->setStickingWeight(__pyx_v_weight);

  /* "cantera/reaction.pyx":1100
 *         def __get__(self):
 *             return self.stick.stickingWeight()
 *         def __set__(self, double weight):             # <<<<<<<<<<<<<<
 *             self.stick.setStickingWeight(weight)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_1__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13StickRateBase_1__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13StickRateBase_1__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_1__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase___reduce_cython__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase___reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__rate_self_base_self_interf_2, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_3__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_13StickRateBase_3__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13StickRateBase_3__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_13StickRateBase_3__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_13StickRateBase_2__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_StickRateBase *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_13StickRateBase_2__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickRateBase *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_self__rate_self_base_self_interf_2, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickRateBase.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1110
 *     _reaction_rate_type = "sticking-Arrhenius"
 * 
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_21StickingArrheniusRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_21StickingArrheniusRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[5] = {0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1110, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1110, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1110, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1110, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1110, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1110, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea = values[2];
    __pyx_v_input_data = values[3];
    __pyx_v_init = values[4];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 5, __pyx_nargs); __PYX_ERR(0, 1110, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_21StickingArrheniusRate___cinit__(((struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea, __pyx_v_input_data, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_21StickingArrheniusRate___cinit__(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":1112
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1112, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":1113
 * 
 *         if init:
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cinit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_input_data);
    __Pyx_GIVEREF(__pyx_v_input_data);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_input_data);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_A, __pyx_v_A) < 0) __PYX_ERR(0, 1113, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_b, __pyx_v_b) < 0) __PYX_ERR(0, 1113, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_Ea, __pyx_v_Ea) < 0) __PYX_ERR(0, 1113, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1113, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cantera/reaction.pyx":1112
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 */
  }

  /* "cantera/reaction.pyx":1110
 *     _reaction_rate_type = "sticking-Arrhenius"
 * 
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1115
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingArrheniusRate(py_to_anymap(input_data)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_21StickingArrheniusRate_3_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1115, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 1115, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1115, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_21StickingArrheniusRate_2_from_dict(((struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_21StickingArrheniusRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  Cantera::StickingArrheniusRate *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":1116
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(new CxxStickingArrheniusRate(py_to_anymap(input_data)))             # <<<<<<<<<<<<<<
 * 
 *     def _from_parameters(self, A, b, Ea):
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1116, __pyx_L1_error)
  try {
    __pyx_t_2 = new Cantera::StickingArrheniusRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1116, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base._rate.reset(__pyx_t_2);

  /* "cantera/reaction.pyx":1115
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingArrheniusRate(py_to_anymap(input_data)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1118
 *         self._rate.reset(new CxxStickingArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingArrheniusRate(A, b, Ea))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_21StickingArrheniusRate_5_from_parameters = {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_parameters (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1118, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1118, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 3, 3, 1); __PYX_ERR(0, 1118, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1118, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 3, 3, 2); __PYX_ERR(0, 1118, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_parameters") < 0)) __PYX_ERR(0, 1118, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 3, 3, __pyx_nargs); __PYX_ERR(0, 1118, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_21StickingArrheniusRate_4_from_parameters(((struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_21StickingArrheniusRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_parameters", 0);

  /* "cantera/reaction.pyx":1119
 * 
 *     def _from_parameters(self, A, b, Ea):
 *         self._rate.reset(new CxxStickingArrheniusRate(A, b, Ea))             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_A); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1119, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_b); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1119, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_Ea); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1119, __pyx_L1_error)
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base._rate.reset(new Cantera::StickingArrheniusRate(__pyx_t_1, __pyx_t_2, __pyx_t_3));

  /* "cantera/reaction.pyx":1118
 *         self._rate.reset(new CxxStickingArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingArrheniusRate(A, b, Ea))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1121
 *         self._rate.reset(new CxxStickingArrheniusRate(A, b, Ea))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_21StickingArrheniusRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::StickingArrheniusRate *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":1122
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.stick = <CxxStickingCoverage*>self.cxx_object()
 */
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":1123
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate             # <<<<<<<<<<<<<<
 *         self.stick = <CxxStickingCoverage*>self.cxx_object()
 *         self.interface = <CxxInterfaceRateBase*>self.stick
 */
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.base = ((Cantera::ArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":1124
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.stick = <CxxStickingCoverage*>self.cxx_object()             # <<<<<<<<<<<<<<
 *         self.interface = <CxxInterfaceRateBase*>self.stick
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_StickingArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1124, __pyx_L1_error)
  __pyx_v_self->__pyx_base.stick = ((Cantera::StickingCoverage *)__pyx_t_1);

  /* "cantera/reaction.pyx":1125
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.stick = <CxxStickingCoverage*>self.cxx_object()
 *         self.interface = <CxxInterfaceRateBase*>self.stick             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxStickingArrheniusRate* cxx_object(self):
 */
  __pyx_v_self->__pyx_base.__pyx_base.interface = ((Cantera::InterfaceRateBase *)__pyx_v_self->__pyx_base.stick);

  /* "cantera/reaction.pyx":1121
 *         self._rate.reset(new CxxStickingArrheniusRate(A, b, Ea))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate.set_cxx_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1127
 *         self.interface = <CxxInterfaceRateBase*>self.stick
 * 
 *     cdef CxxStickingArrheniusRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxStickingArrheniusRate*>self.rate
 * 
 */

static Cantera::StickingArrheniusRate *__pyx_f_7cantera_8reaction_21StickingArrheniusRate_cxx_object(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self) {
  Cantera::StickingArrheniusRate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":1128
 * 
 *     cdef CxxStickingArrheniusRate* cxx_object(self):
 *         return <CxxStickingArrheniusRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = ((Cantera::StickingArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1127
 *         self.interface = <CxxInterfaceRateBase*>self.stick
 * 
 *     cdef CxxStickingArrheniusRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxStickingArrheniusRate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_21StickingArrheniusRate_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_21StickingArrheniusRate_6__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_21StickingArrheniusRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_21StickingArrheniusRate_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_21StickingArrheniusRate_8__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_21StickingArrheniusRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingArrheniusRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1137
 *     _reaction_rate_type = "sticking-Blowers-Masel"
 * 
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea0 = 0;
  PyObject *__pyx_v_w = 0;
  PyObject *__pyx_v_input_data = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea0,&__pyx_n_s_w,&__pyx_n_s_input_data,&__pyx_n_s_init,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_None);
    values[5] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea0);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_w);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  4:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data);
          if (value) { values[4] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1137, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  5:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[5] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1137, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1137, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  6: values[5] = __Pyx_Arg_VARARGS(__pyx_args, 5);
        CYTHON_FALLTHROUGH;
        case  5: values[4] = __Pyx_Arg_VARARGS(__pyx_args, 4);
        CYTHON_FALLTHROUGH;
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea0 = values[2];
    __pyx_v_w = values[3];
    __pyx_v_input_data = values[4];
    __pyx_v_init = values[5];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 6, __pyx_nargs); __PYX_ERR(0, 1137, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate___cinit__(((struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea0, __pyx_v_w, __pyx_v_input_data, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate___cinit__(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w, PyObject *__pyx_v_input_data, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":1139
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1139, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":1140
 * 
 *         if init:
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_cinit); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_input_data);
    __Pyx_GIVEREF(__pyx_v_input_data);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_input_data);
    __pyx_t_4 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_4);
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_A, __pyx_v_A) < 0) __PYX_ERR(0, 1140, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_b, __pyx_v_b) < 0) __PYX_ERR(0, 1140, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_Ea0, __pyx_v_Ea0) < 0) __PYX_ERR(0, 1140, __pyx_L1_error)
    if (PyDict_SetItem(__pyx_t_4, __pyx_n_s_w, __pyx_v_w) < 0) __PYX_ERR(0, 1140, __pyx_L1_error)
    __pyx_t_5 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1140, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "cantera/reaction.pyx":1139
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):
 * 
 *         if init:             # <<<<<<<<<<<<<<
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 */
  }

  /* "cantera/reaction.pyx":1137
 *     _reaction_rate_type = "sticking-Blowers-Masel"
 * 
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):             # <<<<<<<<<<<<<<
 * 
 *         if init:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1142
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_24StickingBlowersMaselRate_3_from_dict = {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_3_from_dict(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_input_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_input_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_input_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1142, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_dict") < 0)) __PYX_ERR(0, 1142, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_input_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_dict", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1142, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_2_from_dict(((struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self), __pyx_v_input_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_2_from_dict(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_input_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  Cantera::StickingBlowersMaselRate *__pyx_t_2;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_dict", 0);

  /* "cantera/reaction.pyx":1143
 * 
 *     def _from_dict(self, input_data):
 *         self._rate.reset(new CxxStickingBlowersMaselRate(py_to_anymap(input_data)))             # <<<<<<<<<<<<<<
 * 
 *     def _from_parameters(self, A, b, Ea0, w):
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_input_data, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1143, __pyx_L1_error)
  try {
    __pyx_t_2 = new Cantera::StickingBlowersMaselRate(__pyx_t_1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1143, __pyx_L1_error)
  }
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base._rate.reset(__pyx_t_2);

  /* "cantera/reaction.pyx":1142
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate._from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1145
 *         self._rate.reset(new CxxStickingBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingBlowersMaselRate(A, b, Ea0, w))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_24StickingBlowersMaselRate_5_from_parameters = {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_5_from_parameters(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_Ea0 = 0;
  PyObject *__pyx_v_w = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("_from_parameters (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_Ea0,&__pyx_n_s_w,0};
    PyObject* values[4] = {0,0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 1); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_Ea0)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 2); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (likely((values[3] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_w)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1145, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, 3); __PYX_ERR(0, 1145, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "_from_parameters") < 0)) __PYX_ERR(0, 1145, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 4)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
      values[3] = __Pyx_Arg_FASTCALL(__pyx_args, 3);
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_Ea0 = values[2];
    __pyx_v_w = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("_from_parameters", 1, 4, 4, __pyx_nargs); __PYX_ERR(0, 1145, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_4_from_parameters(((struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_Ea0, __pyx_v_w);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_4_from_parameters(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_Ea0, PyObject *__pyx_v_w) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("_from_parameters", 0);

  /* "cantera/reaction.pyx":1146
 * 
 *     def _from_parameters(self, A, b, Ea0, w):
 *         self._rate.reset(new CxxStickingBlowersMaselRate(A, b, Ea0, w))             # <<<<<<<<<<<<<<
 * 
 *     cdef set_cxx_object(self):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_A); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1146, __pyx_L1_error)
  __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_b); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1146, __pyx_L1_error)
  __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_Ea0); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1146, __pyx_L1_error)
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_w); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1146, __pyx_L1_error)
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base._rate.reset(new Cantera::StickingBlowersMaselRate(__pyx_t_1, __pyx_t_2, __pyx_t_3, __pyx_t_4));

  /* "cantera/reaction.pyx":1145
 *         self._rate.reset(new CxxStickingBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingBlowersMaselRate(A, b, Ea0, w))
 * 
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate._from_parameters", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1148
 *         self._rate.reset(new CxxStickingBlowersMaselRate(A, b, Ea0, w))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

static PyObject *__pyx_f_7cantera_8reaction_24StickingBlowersMaselRate_set_cxx_object(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::StickingBlowersMaselRate *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("set_cxx_object", 0);

  /* "cantera/reaction.pyx":1149
 * 
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()             # <<<<<<<<<<<<<<
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.stick = <CxxStickingCoverage*>self.cxx_object()
 */
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.rate = __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base._rate.get();

  /* "cantera/reaction.pyx":1150
 *     cdef set_cxx_object(self):
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate             # <<<<<<<<<<<<<<
 *         self.stick = <CxxStickingCoverage*>self.cxx_object()
 *         self.interface = <CxxInterfaceRateBase*>self.stick
 */
  __pyx_v_self->__pyx_base.__pyx_base.__pyx_base.base = ((Cantera::ArrheniusRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.rate);

  /* "cantera/reaction.pyx":1151
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.stick = <CxxStickingCoverage*>self.cxx_object()             # <<<<<<<<<<<<<<
 *         self.interface = <CxxInterfaceRateBase*>self.stick
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1151, __pyx_L1_error)
  __pyx_v_self->__pyx_base.stick = ((Cantera::StickingCoverage *)__pyx_t_1);

  /* "cantera/reaction.pyx":1152
 *         self.base = <CxxArrheniusRate*>self.rate
 *         self.stick = <CxxStickingCoverage*>self.cxx_object()
 *         self.interface = <CxxInterfaceRateBase*>self.stick             # <<<<<<<<<<<<<<
 * 
 *     cdef CxxStickingBlowersMaselRate* cxx_object(self):
 */
  __pyx_v_self->__pyx_base.__pyx_base.interface = ((Cantera::InterfaceRateBase *)__pyx_v_self->__pyx_base.stick);

  /* "cantera/reaction.pyx":1148
 *         self._rate.reset(new CxxStickingBlowersMaselRate(A, b, Ea0, w))
 * 
 *     cdef set_cxx_object(self):             # <<<<<<<<<<<<<<
 *         self.rate = self._rate.get()
 *         self.base = <CxxArrheniusRate*>self.rate
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.set_cxx_object", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1154
 *         self.interface = <CxxInterfaceRateBase*>self.stick
 * 
 *     cdef CxxStickingBlowersMaselRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxStickingBlowersMaselRate*>self.rate
 * 
 */

static Cantera::StickingBlowersMaselRate *__pyx_f_7cantera_8reaction_24StickingBlowersMaselRate_cxx_object(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self) {
  Cantera::StickingBlowersMaselRate *__pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("cxx_object", 0);

  /* "cantera/reaction.pyx":1155
 * 
 *     cdef CxxStickingBlowersMaselRate* cxx_object(self):
 *         return <CxxStickingBlowersMaselRate*>self.rate             # <<<<<<<<<<<<<<
 * 
 *     property bond_energy:
 */
  __pyx_r = ((Cantera::StickingBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1154
 *         self.interface = <CxxInterfaceRateBase*>self.stick
 * 
 *     cdef CxxStickingBlowersMaselRate* cxx_object(self):             # <<<<<<<<<<<<<<
 *         return <CxxStickingBlowersMaselRate*>self.rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1162
 *         in the reaction ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().bondEnergy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_11bond_energy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_11bond_energy_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_11bond_energy___get__(((struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_11bond_energy___get__(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::StickingBlowersMaselRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1163
 *         """
 *         def __get__(self):
 *             return self.cxx_object().bondEnergy()             # <<<<<<<<<<<<<<
 * 
 *     property delta_enthalpy:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1163, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->bondEnergy()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1163, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1162
 *         in the reaction ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().bondEnergy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.bond_energy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1179
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy___get__(((struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy___get__(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::StickingBlowersMaselRate *__pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1180
 *         """
 *         def __get__(self):
 *             return self.cxx_object().deltaH()             # <<<<<<<<<<<<<<
 *         def __set__(self, double delta_H):
 *             self.cxx_object().setDeltaH(delta_H)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1180, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_t_1->deltaH()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1180, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1179
 *             may be changed or removed without notice.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.delta_enthalpy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1181
 *         def __get__(self):
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):             # <<<<<<<<<<<<<<
 *             self.cxx_object().setDeltaH(delta_H)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_delta_H); /*proto*/
static int __pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_arg_delta_H) {
  double __pyx_v_delta_H;
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  assert(__pyx_arg_delta_H); {
    __pyx_v_delta_H = __pyx_PyFloat_AsDouble(__pyx_arg_delta_H); if (unlikely((__pyx_v_delta_H == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1181, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.delta_enthalpy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy_2__set__(((struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self), ((double)__pyx_v_delta_H));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy_2__set__(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, double __pyx_v_delta_H) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  Cantera::StickingBlowersMaselRate *__pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1182
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):
 *             self.cxx_object().setDeltaH(delta_H)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab)->cxx_object(__pyx_v_self); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1182, __pyx_L1_error)
  __pyx_t_1->setDeltaH(__pyx_v_delta_H);

  /* "cantera/reaction.pyx":1181
 *         def __get__(self):
 *             return self.cxx_object().deltaH()
 *         def __set__(self, double delta_H):             # <<<<<<<<<<<<<<
 *             self.cxx_object().setDeltaH(delta_H)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.delta_enthalpy.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_24StickingBlowersMaselRate_7__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_7__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_6__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_6__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_24StickingBlowersMaselRate_9__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_9__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_8__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_24StickingBlowersMaselRate_8__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.StickingBlowersMaselRate.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1203
 *     .. versionadded:: 3.0
 *     """
 *     def __cinit__(self, collider="M", *,             # <<<<<<<<<<<<<<
 *                   efficiencies=None, default_efficiency=None, init=True):
 *         if not init:
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_9ThirdBody_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_9ThirdBody_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_collider = 0;
  PyObject *__pyx_v_efficiencies = 0;
  PyObject *__pyx_v_default_efficiency = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_collider,&__pyx_n_s_efficiencies,&__pyx_n_s_default_efficiency,&__pyx_n_s_init,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)__pyx_n_u_M);

    /* "cantera/reaction.pyx":1204
 *     """
 *     def __cinit__(self, collider="M", *,
 *                   efficiencies=None, default_efficiency=None, init=True):             # <<<<<<<<<<<<<<
 *         if not init:
 *             return
 */
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);
    values[3] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_collider);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1203, __pyx_L3_error)
        }
      }
      if (kw_args > 0 && likely(kw_args <= 3)) {
        Py_ssize_t index;
        for (index = 1; index < 4 && kw_args > 0; index++) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
          if (value) { values[index] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1203, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1203, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_collider = values[0];
    __pyx_v_efficiencies = values[1];
    __pyx_v_default_efficiency = values[2];
    __pyx_v_init = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 1, __pyx_nargs); __PYX_ERR(0, 1203, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody___cinit__(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self), __pyx_v_collider, __pyx_v_efficiencies, __pyx_v_default_efficiency, __pyx_v_init);

  /* "cantera/reaction.pyx":1203
 *     .. versionadded:: 3.0
 *     """
 *     def __cinit__(self, collider="M", *,             # <<<<<<<<<<<<<<
 *                   efficiencies=None, default_efficiency=None, init=True):
 *         if not init:
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_9ThirdBody___cinit__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, PyObject *__pyx_v_collider, PyObject *__pyx_v_efficiencies, PyObject *__pyx_v_default_efficiency, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  std::string __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":1205
 *     def __cinit__(self, collider="M", *,
 *                   efficiencies=None, default_efficiency=None, init=True):
 *         if not init:             # <<<<<<<<<<<<<<
 *             return
 *         self._third_body.reset(new CxxThirdBody(stringify(collider)))
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1205, __pyx_L1_error)
  __pyx_t_2 = (!__pyx_t_1);
  if (__pyx_t_2) {

    /* "cantera/reaction.pyx":1206
 *                   efficiencies=None, default_efficiency=None, init=True):
 *         if not init:
 *             return             # <<<<<<<<<<<<<<
 *         self._third_body.reset(new CxxThirdBody(stringify(collider)))
 *         self.third_body = self._third_body.get()
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "cantera/reaction.pyx":1205
 *     def __cinit__(self, collider="M", *,
 *                   efficiencies=None, default_efficiency=None, init=True):
 *         if not init:             # <<<<<<<<<<<<<<
 *             return
 *         self._third_body.reset(new CxxThirdBody(stringify(collider)))
 */
  }

  /* "cantera/reaction.pyx":1207
 *         if not init:
 *             return
 *         self._third_body.reset(new CxxThirdBody(stringify(collider)))             # <<<<<<<<<<<<<<
 *         self.third_body = self._third_body.get()
 * 
 */
  __pyx_t_3 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_collider); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1207, __pyx_L1_error)
  __pyx_v_self->_third_body.reset(new Cantera::ThirdBody(__pyx_t_3));

  /* "cantera/reaction.pyx":1208
 *             return
 *         self._third_body.reset(new CxxThirdBody(stringify(collider)))
 *         self.third_body = self._third_body.get()             # <<<<<<<<<<<<<<
 * 
 *         if efficiencies is not None:
 */
  __pyx_v_self->third_body = __pyx_v_self->_third_body.get();

  /* "cantera/reaction.pyx":1210
 *         self.third_body = self._third_body.get()
 * 
 *         if efficiencies is not None:             # <<<<<<<<<<<<<<
 *             self.efficiencies = efficiencies
 * 
 */
  __pyx_t_2 = (__pyx_v_efficiencies != Py_None);
  if (__pyx_t_2) {

    /* "cantera/reaction.pyx":1211
 * 
 *         if efficiencies is not None:
 *             self.efficiencies = efficiencies             # <<<<<<<<<<<<<<
 * 
 *         if default_efficiency is not None:
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_efficiencies, __pyx_v_efficiencies) < 0) __PYX_ERR(0, 1211, __pyx_L1_error)

    /* "cantera/reaction.pyx":1210
 *         self.third_body = self._third_body.get()
 * 
 *         if efficiencies is not None:             # <<<<<<<<<<<<<<
 *             self.efficiencies = efficiencies
 * 
 */
  }

  /* "cantera/reaction.pyx":1213
 *             self.efficiencies = efficiencies
 * 
 *         if default_efficiency is not None:             # <<<<<<<<<<<<<<
 *             self.default_efficiency = default_efficiency
 * 
 */
  __pyx_t_2 = (__pyx_v_default_efficiency != Py_None);
  if (__pyx_t_2) {

    /* "cantera/reaction.pyx":1214
 * 
 *         if default_efficiency is not None:
 *             self.default_efficiency = default_efficiency             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_default_efficiency, __pyx_v_default_efficiency) < 0) __PYX_ERR(0, 1214, __pyx_L1_error)

    /* "cantera/reaction.pyx":1213
 *             self.efficiencies = efficiencies
 * 
 *         if default_efficiency is not None:             # <<<<<<<<<<<<<<
 *             self.default_efficiency = default_efficiency
 * 
 */
  }

  /* "cantera/reaction.pyx":1203
 *     .. versionadded:: 3.0
 *     """
 *     def __cinit__(self, collider="M", *,             # <<<<<<<<<<<<<<
 *                   efficiencies=None, default_efficiency=None, init=True):
 *         if not init:
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1217
 * 
 *     @staticmethod
 *     cdef wrap(shared_ptr[CxxThirdBody] third_body):             # <<<<<<<<<<<<<<
 *         tb = ThirdBody(init=False)
 *         tb._third_body = third_body
 */

static PyObject *__pyx_f_7cantera_8reaction_9ThirdBody_wrap(std::shared_ptr<Cantera::ThirdBody>  __pyx_v_third_body) {
  struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_tb = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrap", 0);

  /* "cantera/reaction.pyx":1218
 *     @staticmethod
 *     cdef wrap(shared_ptr[CxxThirdBody] third_body):
 *         tb = ThirdBody(init=False)             # <<<<<<<<<<<<<<
 *         tb._third_body = third_body
 *         tb.third_body = tb._third_body.get()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_init, Py_False) < 0) __PYX_ERR(0, 1218, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cantera_8reaction_ThirdBody), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1218, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_tb = ((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":1219
 *     cdef wrap(shared_ptr[CxxThirdBody] third_body):
 *         tb = ThirdBody(init=False)
 *         tb._third_body = third_body             # <<<<<<<<<<<<<<
 *         tb.third_body = tb._third_body.get()
 *         return tb
 */
  __pyx_v_tb->_third_body = __pyx_v_third_body;

  /* "cantera/reaction.pyx":1220
 *         tb = ThirdBody(init=False)
 *         tb._third_body = third_body
 *         tb.third_body = tb._third_body.get()             # <<<<<<<<<<<<<<
 *         return tb
 * 
 */
  __pyx_v_tb->third_body = __pyx_v_tb->_third_body.get();

  /* "cantera/reaction.pyx":1221
 *         tb._third_body = third_body
 *         tb.third_body = tb._third_body.get()
 *         return tb             # <<<<<<<<<<<<<<
 * 
 *     property name:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_tb);
  __pyx_r = ((PyObject *)__pyx_v_tb);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1217
 * 
 *     @staticmethod
 *     cdef wrap(shared_ptr[CxxThirdBody] third_body):             # <<<<<<<<<<<<<<
 *         tb = ThirdBody(init=False)
 *         tb._third_body = third_body
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.wrap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_tb);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1227
 *         Get the name of the third-body collider used in the reaction equation.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.third_body.name())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_4name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_4name_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody_4name___get__(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_4name___get__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1228
 *         """
 *         def __get__(self):
 *             return pystr(self.third_body.name())             # <<<<<<<<<<<<<<
 * 
 *     property mass_action:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->third_body->name()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1228, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1227
 *         Get the name of the third-body collider used in the reaction equation.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.third_body.name())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.name.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1235
 *         in the law of mass action.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.third_body.mass_action
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_11mass_action_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_11mass_action_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody_11mass_action___get__(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_11mass_action___get__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1236
 *         """
 *         def __get__(self):
 *             return self.third_body.mass_action             # <<<<<<<<<<<<<<
 * 
 *     property efficiencies:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->third_body->mass_action); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1236, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1235
 *         in the law of mass action.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.third_body.mass_action
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.mass_action.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1243
 *         where the keys are the species names and the values are the efficiencies.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return comp_map_to_dict(self.third_body.efficiencies)
 *         def __set__(self, eff):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_12efficiencies_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_12efficiencies_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody_12efficiencies___get__(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_12efficiencies___get__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1244
 *         """
 *         def __get__(self):
 *             return comp_map_to_dict(self.third_body.efficiencies)             # <<<<<<<<<<<<<<
 *         def __set__(self, eff):
 *             self.third_body.efficiencies = comp_map(eff)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_comp_map_to_dict(__pyx_v_self->third_body->efficiencies); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1244, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1243
 *         where the keys are the species names and the values are the efficiencies.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return comp_map_to_dict(self.third_body.efficiencies)
 *         def __set__(self, eff):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.efficiencies.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1245
 *         def __get__(self):
 *             return comp_map_to_dict(self.third_body.efficiencies)
 *         def __set__(self, eff):             # <<<<<<<<<<<<<<
 *             self.third_body.efficiencies = comp_map(eff)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_9ThirdBody_12efficiencies_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_eff); /*proto*/
static int __pyx_pw_7cantera_8reaction_9ThirdBody_12efficiencies_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_eff) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody_12efficiencies_2__set__(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self), ((PyObject *)__pyx_v_eff));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_9ThirdBody_12efficiencies_2__set__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, PyObject *__pyx_v_eff) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __pyx_t_7cantera_5ctcxx_Composition __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1246
 *             return comp_map_to_dict(self.third_body.efficiencies)
 *         def __set__(self, eff):
 *             self.third_body.efficiencies = comp_map(eff)             # <<<<<<<<<<<<<<
 * 
 *     property default_efficiency:
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_comp_map(__pyx_v_eff); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1246, __pyx_L1_error)
  __pyx_v_self->third_body->efficiencies = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1);

  /* "cantera/reaction.pyx":1245
 *         def __get__(self):
 *             return comp_map_to_dict(self.third_body.efficiencies)
 *         def __set__(self, eff):             # <<<<<<<<<<<<<<
 *             self.third_body.efficiencies = comp_map(eff)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.efficiencies.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1253
 *         not in `efficiencies`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_18default_efficiency_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_18default_efficiency_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody_18default_efficiency___get__(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_18default_efficiency___get__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1254
 *         """
 *         def __get__(self):
 *             return self.third_body.default_efficiency             # <<<<<<<<<<<<<<
 *         def __set__(self, default_eff):
 *             self.third_body.default_efficiency = default_eff
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->third_body->default_efficiency); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1254, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1253
 *         not in `efficiencies`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.default_efficiency.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1255
 *         def __get__(self):
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):             # <<<<<<<<<<<<<<
 *             self.third_body.default_efficiency = default_eff
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_9ThirdBody_18default_efficiency_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_default_eff); /*proto*/
static int __pyx_pw_7cantera_8reaction_9ThirdBody_18default_efficiency_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_default_eff) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody_18default_efficiency_2__set__(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self), ((PyObject *)__pyx_v_default_eff));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_9ThirdBody_18default_efficiency_2__set__(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, PyObject *__pyx_v_default_eff) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  double __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1256
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):
 *             self.third_body.default_efficiency = default_eff             # <<<<<<<<<<<<<<
 * 
 *     def efficiency(self, species):
 */
  __pyx_t_1 = __pyx_PyFloat_AsDouble(__pyx_v_default_eff); if (unlikely((__pyx_t_1 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1256, __pyx_L1_error)
  __pyx_v_self->third_body->default_efficiency = __pyx_t_1;

  /* "cantera/reaction.pyx":1255
 *         def __get__(self):
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):             # <<<<<<<<<<<<<<
 *             self.third_body.default_efficiency = default_eff
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.default_efficiency.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1258
 *             self.third_body.default_efficiency = default_eff
 * 
 *     def efficiency(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Get the efficiency of the third body named ``species`` considering both
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_3efficiency(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_9ThirdBody_2efficiency, "\n        Get the efficiency of the third body named ``species`` considering both\n        the default efficiency and species-specific efficiencies.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_9ThirdBody_3efficiency = {"efficiency", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9ThirdBody_3efficiency, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_9ThirdBody_2efficiency};
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_3efficiency(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_species = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("efficiency (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_species,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_species)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1258, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "efficiency") < 0)) __PYX_ERR(0, 1258, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_species = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("efficiency", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1258, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.efficiency", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody_2efficiency(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self), __pyx_v_species);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_2efficiency(struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, PyObject *__pyx_v_species) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("efficiency", 0);

  /* "cantera/reaction.pyx":1263
 *         the default efficiency and species-specific efficiencies.
 *         """
 *         return self.third_body.efficiency(stringify(species))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_species); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1263, __pyx_L1_error)
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_self->third_body->efficiency(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1))); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1263, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1258
 *             self.third_body.default_efficiency = default_eff
 * 
 *     def efficiency(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Get the efficiency of the third body named ``species`` considering both
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.efficiency", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_9ThirdBody_5__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9ThirdBody_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_5__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody_4__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_4__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_9ThirdBody_7__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9ThirdBody_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_9ThirdBody_7__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_9ThirdBody_6__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9ThirdBody_6__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ThirdBody.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1324
 *     """
 * 
 *     def __cinit__(self, reactants=None, products=None, rate=None, *,             # <<<<<<<<<<<<<<
 *                   equation=None, init=True, efficiencies=None,
 *                   Kinetics kinetics=None, third_body=None):
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_reactants = 0;
  PyObject *__pyx_v_products = 0;
  PyObject *__pyx_v_rate = 0;
  PyObject *__pyx_v_equation = 0;
  PyObject *__pyx_v_init = 0;
  PyObject *__pyx_v_efficiencies = 0;
  struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics = 0;
  PyObject *__pyx_v_third_body = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_reactants,&__pyx_n_s_products,&__pyx_n_s_rate,&__pyx_n_s_equation,&__pyx_n_s_init,&__pyx_n_s_efficiencies,&__pyx_n_s_kinetics,&__pyx_n_s_third_body,0};
    PyObject* values[8] = {0,0,0,0,0,0,0,0};
    values[0] = ((PyObject *)Py_None);
    values[1] = ((PyObject *)Py_None);
    values[2] = ((PyObject *)Py_None);

    /* "cantera/reaction.pyx":1325
 * 
 *     def __cinit__(self, reactants=None, products=None, rate=None, *,
 *                   equation=None, init=True, efficiencies=None,             # <<<<<<<<<<<<<<
 *                   Kinetics kinetics=None, third_body=None):
 *         if kinetics:
 */
    values[3] = ((PyObject *)Py_None);
    values[4] = ((PyObject *)Py_True);
    values[5] = ((PyObject *)Py_None);

    /* "cantera/reaction.pyx":1326
 *     def __cinit__(self, reactants=None, products=None, rate=None, *,
 *                   equation=None, init=True, efficiencies=None,
 *                   Kinetics kinetics=None, third_body=None):             # <<<<<<<<<<<<<<
 *         if kinetics:
 *             warnings.warn("Reaction: Parameter 'kinetics' is no longer used and will "
 */
    values[6] = (PyObject *)((struct __pyx_obj_7cantera_8kinetics_Kinetics *)Py_None);
    values[7] = ((PyObject *)Py_None);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_reactants);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1324, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_products);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1324, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_rate);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1324, __pyx_L3_error)
        }
      }
      if (kw_args > 0 && likely(kw_args <= 5)) {
        Py_ssize_t index;
        for (index = 3; index < 8 && kw_args > 0; index++) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, *__pyx_pyargnames[index]);
          if (value) { values[index] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1324, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1324, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_reactants = values[0];
    __pyx_v_products = values[1];
    __pyx_v_rate = values[2];
    __pyx_v_equation = values[3];
    __pyx_v_init = values[4];
    __pyx_v_efficiencies = values[5];
    __pyx_v_kinetics = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)values[6]);
    __pyx_v_third_body = values[7];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 3, __pyx_nargs); __PYX_ERR(0, 1324, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kinetics), __pyx_ptype_7cantera_8kinetics_Kinetics, 1, "kinetics", 0))) __PYX_ERR(0, 1326, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction___cinit__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), __pyx_v_reactants, __pyx_v_products, __pyx_v_rate, __pyx_v_equation, __pyx_v_init, __pyx_v_efficiencies, __pyx_v_kinetics, __pyx_v_third_body);

  /* "cantera/reaction.pyx":1324
 *     """
 * 
 *     def __cinit__(self, reactants=None, products=None, rate=None, *,             # <<<<<<<<<<<<<<
 *                   equation=None, init=True, efficiencies=None,
 *                   Kinetics kinetics=None, third_body=None):
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction___cinit__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_reactants, PyObject *__pyx_v_products, PyObject *__pyx_v_rate, PyObject *__pyx_v_equation, PyObject *__pyx_v_init, PyObject *__pyx_v_efficiencies, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics, PyObject *__pyx_v_third_body) {
  struct __pyx_obj_7cantera_8reaction_ReactionRate *__pyx_v__rate = 0;
  PyObject *__pyx_v_args = NULL;
  struct __pyx_obj_7cantera_8reaction_ThirdBody *__pyx_v__third_body = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  Py_UCS4 __pyx_t_8;
  __pyx_t_7cantera_5ctcxx_Composition __pyx_t_9;
  __pyx_t_7cantera_5ctcxx_Composition __pyx_t_10;
  Cantera::Reaction *__pyx_t_11;
  std::string __pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_INCREF(__pyx_v_third_body);

  /* "cantera/reaction.pyx":1327
 *                   equation=None, init=True, efficiencies=None,
 *                   Kinetics kinetics=None, third_body=None):
 *         if kinetics:             # <<<<<<<<<<<<<<
 *             warnings.warn("Reaction: Parameter 'kinetics' is no longer used and will "
 *                           "be removed after Cantera 3.0.", DeprecationWarning)
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(((PyObject *)__pyx_v_kinetics)); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1327, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":1328
 *                   Kinetics kinetics=None, third_body=None):
 *         if kinetics:
 *             warnings.warn("Reaction: Parameter 'kinetics' is no longer used and will "             # <<<<<<<<<<<<<<
 *                           "be removed after Cantera 3.0.", DeprecationWarning)
 * 
 */
    __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_warnings); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_warn); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":1329
 *         if kinetics:
 *             warnings.warn("Reaction: Parameter 'kinetics' is no longer used and will "
 *                           "be removed after Cantera 3.0.", DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 *         if not init:
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_t_3, __pyx_tuple__14, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1328, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":1327
 *                   equation=None, init=True, efficiencies=None,
 *                   Kinetics kinetics=None, third_body=None):
 *         if kinetics:             # <<<<<<<<<<<<<<
 *             warnings.warn("Reaction: Parameter 'kinetics' is no longer used and will "
 *                           "be removed after Cantera 3.0.", DeprecationWarning)
 */
  }

  /* "cantera/reaction.pyx":1331
 *                           "be removed after Cantera 3.0.", DeprecationWarning)
 * 
 *         if not init:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1331, __pyx_L1_error)
  __pyx_t_4 = (!__pyx_t_1);
  if (__pyx_t_4) {

    /* "cantera/reaction.pyx":1332
 * 
 *         if not init:
 *             return             # <<<<<<<<<<<<<<
 * 
 *         cdef ReactionRate _rate
 */
    __pyx_r = 0;
    goto __pyx_L0;

    /* "cantera/reaction.pyx":1331
 *                           "be removed after Cantera 3.0.", DeprecationWarning)
 * 
 *         if not init:             # <<<<<<<<<<<<<<
 *             return
 * 
 */
  }

  /* "cantera/reaction.pyx":1335
 * 
 *         cdef ReactionRate _rate
 *         if isinstance(rate, ReactionRate):             # <<<<<<<<<<<<<<
 *             _rate = rate
 *         elif rate is None:
 */
  __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_rate, __pyx_ptype_7cantera_8reaction_ReactionRate); 
  if (__pyx_t_4) {

    /* "cantera/reaction.pyx":1336
 *         cdef ReactionRate _rate
 *         if isinstance(rate, ReactionRate):
 *             _rate = rate             # <<<<<<<<<<<<<<
 *         elif rate is None:
 *             # default to Arrhenius expression
 */
    if (!(likely(((__pyx_v_rate) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_rate, __pyx_ptype_7cantera_8reaction_ReactionRate))))) __PYX_ERR(0, 1336, __pyx_L1_error)
    __pyx_t_2 = __pyx_v_rate;
    __Pyx_INCREF(__pyx_t_2);
    __pyx_v__rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":1335
 * 
 *         cdef ReactionRate _rate
 *         if isinstance(rate, ReactionRate):             # <<<<<<<<<<<<<<
 *             _rate = rate
 *         elif rate is None:
 */
    goto __pyx_L5;
  }

  /* "cantera/reaction.pyx":1337
 *         if isinstance(rate, ReactionRate):
 *             _rate = rate
 *         elif rate is None:             # <<<<<<<<<<<<<<
 *             # default to Arrhenius expression
 *             raise ValueError("Missing reaction rate information.")
 */
  __pyx_t_4 = (__pyx_v_rate == Py_None);
  if (unlikely(__pyx_t_4)) {

    /* "cantera/reaction.pyx":1339
 *         elif rate is None:
 *             # default to Arrhenius expression
 *             raise ValueError("Missing reaction rate information.")             # <<<<<<<<<<<<<<
 *         elif isinstance(rate, dict):
 *             if {"A", "b"} - set(rate) == set():
 */
    __pyx_t_2 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__15, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1339, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1339, __pyx_L1_error)

    /* "cantera/reaction.pyx":1337
 *         if isinstance(rate, ReactionRate):
 *             _rate = rate
 *         elif rate is None:             # <<<<<<<<<<<<<<
 *             # default to Arrhenius expression
 *             raise ValueError("Missing reaction rate information.")
 */
  }

  /* "cantera/reaction.pyx":1340
 *             # default to Arrhenius expression
 *             raise ValueError("Missing reaction rate information.")
 *         elif isinstance(rate, dict):             # <<<<<<<<<<<<<<
 *             if {"A", "b"} - set(rate) == set():
 *                 # Allow simple syntax for Arrhenius-type rates
 */
  __pyx_t_4 = PyDict_Check(__pyx_v_rate); 
  if (__pyx_t_4) {

    /* "cantera/reaction.pyx":1341
 *             raise ValueError("Missing reaction rate information.")
 *         elif isinstance(rate, dict):
 *             if {"A", "b"} - set(rate) == set():             # <<<<<<<<<<<<<<
 *                 # Allow simple syntax for Arrhenius-type rates
 *                 args = {"rate-constant": rate}
 */
    __pyx_t_2 = PySet_New(0); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    if (PySet_Add(__pyx_t_2, __pyx_n_u_A) < 0) __PYX_ERR(0, 1341, __pyx_L1_error)
    if (PySet_Add(__pyx_t_2, __pyx_n_u_b) < 0) __PYX_ERR(0, 1341, __pyx_L1_error)
    __pyx_t_3 = PySet_New(__pyx_v_rate); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyNumber_Subtract(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PySet_New(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyObject_RichCompare(__pyx_t_5, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 1341, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (__pyx_t_4) {

      /* "cantera/reaction.pyx":1343
 *             if {"A", "b"} - set(rate) == set():
 *                 # Allow simple syntax for Arrhenius-type rates
 *                 args = {"rate-constant": rate}             # <<<<<<<<<<<<<<
 *                 if "Ea0" in rate:
 *                     args.update({"type": "Blowers-Masel"})
 */
      __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1343, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_2);
      if (PyDict_SetItem(__pyx_t_2, __pyx_kp_u_rate_constant, __pyx_v_rate) < 0) __PYX_ERR(0, 1343, __pyx_L1_error)
      __pyx_v_args = ((PyObject*)__pyx_t_2);
      __pyx_t_2 = 0;

      /* "cantera/reaction.pyx":1344
 *                 # Allow simple syntax for Arrhenius-type rates
 *                 args = {"rate-constant": rate}
 *                 if "Ea0" in rate:             # <<<<<<<<<<<<<<
 *                     args.update({"type": "Blowers-Masel"})
 *                 elif "Ea_gas" in rate:
 */
      __pyx_t_4 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_Ea0, __pyx_v_rate, Py_EQ)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 1344, __pyx_L1_error)
      if (__pyx_t_4) {

        /* "cantera/reaction.pyx":1345
 *                 args = {"rate-constant": rate}
 *                 if "Ea0" in rate:
 *                     args.update({"type": "Blowers-Masel"})             # <<<<<<<<<<<<<<
 *                 elif "Ea_gas" in rate:
 *                     args.update({"type": "two-temperature-plasma"})
 */
        __pyx_t_2 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1345, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        if (PyDict_SetItem(__pyx_t_2, __pyx_n_u_type, __pyx_kp_u_Blowers_Masel) < 0) __PYX_ERR(0, 1345, __pyx_L1_error)
        __pyx_t_3 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_update, __pyx_v_args, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1345, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

        /* "cantera/reaction.pyx":1344
 *                 # Allow simple syntax for Arrhenius-type rates
 *                 args = {"rate-constant": rate}
 *                 if "Ea0" in rate:             # <<<<<<<<<<<<<<
 *                     args.update({"type": "Blowers-Masel"})
 *                 elif "Ea_gas" in rate:
 */
        goto __pyx_L7;
      }

      /* "cantera/reaction.pyx":1346
 *                 if "Ea0" in rate:
 *                     args.update({"type": "Blowers-Masel"})
 *                 elif "Ea_gas" in rate:             # <<<<<<<<<<<<<<
 *                     args.update({"type": "two-temperature-plasma"})
 *                 _rate = ReactionRate.from_dict(args)
 */
      __pyx_t_4 = (__Pyx_PySequence_ContainsTF(__pyx_n_u_Ea_gas, __pyx_v_rate, Py_EQ)); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 1346, __pyx_L1_error)
      if (__pyx_t_4) {

        /* "cantera/reaction.pyx":1347
 *                     args.update({"type": "Blowers-Masel"})
 *                 elif "Ea_gas" in rate:
 *                     args.update({"type": "two-temperature-plasma"})             # <<<<<<<<<<<<<<
 *                 _rate = ReactionRate.from_dict(args)
 *             else:
 */
        __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1347, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_3);
        if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_type, __pyx_kp_u_two_temperature_plasma) < 0) __PYX_ERR(0, 1347, __pyx_L1_error)
        __pyx_t_2 = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_update, __pyx_v_args, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1347, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "cantera/reaction.pyx":1346
 *                 if "Ea0" in rate:
 *                     args.update({"type": "Blowers-Masel"})
 *                 elif "Ea_gas" in rate:             # <<<<<<<<<<<<<<
 *                     args.update({"type": "two-temperature-plasma"})
 *                 _rate = ReactionRate.from_dict(args)
 */
      }
      __pyx_L7:;

      /* "cantera/reaction.pyx":1348
 *                 elif "Ea_gas" in rate:
 *                     args.update({"type": "two-temperature-plasma"})
 *                 _rate = ReactionRate.from_dict(args)             # <<<<<<<<<<<<<<
 *             else:
 *                 _rate = ReactionRate.from_dict(rate)
 */
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate), __pyx_n_s_from_dict_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1348, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_v_args};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1348, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_7cantera_8reaction_ReactionRate))))) __PYX_ERR(0, 1348, __pyx_L1_error)
      __pyx_v__rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_2);
      __pyx_t_2 = 0;

      /* "cantera/reaction.pyx":1341
 *             raise ValueError("Missing reaction rate information.")
 *         elif isinstance(rate, dict):
 *             if {"A", "b"} - set(rate) == set():             # <<<<<<<<<<<<<<
 *                 # Allow simple syntax for Arrhenius-type rates
 *                 args = {"rate-constant": rate}
 */
      goto __pyx_L6;
    }

    /* "cantera/reaction.pyx":1350
 *                 _rate = ReactionRate.from_dict(args)
 *             else:
 *                 _rate = ReactionRate.from_dict(rate)             # <<<<<<<<<<<<<<
 *         elif isinstance(rate, Arrhenius):
 *             _rate = ArrheniusRate(
 */
    /*else*/ {
      __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate), __pyx_n_s_from_dict_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1350, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = NULL;
      __pyx_t_6 = 0;
      if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
        __pyx_t_5 = PyMethod_GET_SELF(__pyx_t_3);
        if (likely(__pyx_t_5)) {
          PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_5);
          __Pyx_INCREF(function);
          __Pyx_DECREF_SET(__pyx_t_3, function);
          __pyx_t_6 = 1;
        }
      }
      {
        PyObject *__pyx_callargs[2] = {__pyx_t_5, __pyx_v_rate};
        __pyx_t_2 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_6, 1+__pyx_t_6);
        __Pyx_XDECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1350, __pyx_L1_error)
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_7cantera_8reaction_ReactionRate))))) __PYX_ERR(0, 1350, __pyx_L1_error)
      __pyx_v__rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_2);
      __pyx_t_2 = 0;
    }
    __pyx_L6:;

    /* "cantera/reaction.pyx":1340
 *             # default to Arrhenius expression
 *             raise ValueError("Missing reaction rate information.")
 *         elif isinstance(rate, dict):             # <<<<<<<<<<<<<<
 *             if {"A", "b"} - set(rate) == set():
 *                 # Allow simple syntax for Arrhenius-type rates
 */
    goto __pyx_L5;
  }

  /* "cantera/reaction.pyx":1351
 *             else:
 *                 _rate = ReactionRate.from_dict(rate)
 *         elif isinstance(rate, Arrhenius):             # <<<<<<<<<<<<<<
 *             _rate = ArrheniusRate(
 *                 A=rate.pre_exponential_factor,
 */
  __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_rate, __pyx_ptype_7cantera_8reaction_Arrhenius); 
  if (__pyx_t_4) {

    /* "cantera/reaction.pyx":1353
 *         elif isinstance(rate, Arrhenius):
 *             _rate = ArrheniusRate(
 *                 A=rate.pre_exponential_factor,             # <<<<<<<<<<<<<<
 *                 b=rate.temperature_exponent,
 *                 Ea=rate.activation_energy
 */
    __pyx_t_2 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_rate, __pyx_n_s_pre_exponential_factor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1353, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_A, __pyx_t_3) < 0) __PYX_ERR(0, 1353, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1354
 *             _rate = ArrheniusRate(
 *                 A=rate.pre_exponential_factor,
 *                 b=rate.temperature_exponent,             # <<<<<<<<<<<<<<
 *                 Ea=rate.activation_energy
 *             )
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_rate, __pyx_n_s_temperature_exponent); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1354, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_b, __pyx_t_3) < 0) __PYX_ERR(0, 1353, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1355
 *                 A=rate.pre_exponential_factor,
 *                 b=rate.temperature_exponent,
 *                 Ea=rate.activation_energy             # <<<<<<<<<<<<<<
 *             )
 *         elif callable(rate):
 */
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_v_rate, __pyx_n_s_activation_energy); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1355, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_Ea, __pyx_t_3) < 0) __PYX_ERR(0, 1353, __pyx_L1_error)
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1352
 *                 _rate = ReactionRate.from_dict(rate)
 *         elif isinstance(rate, Arrhenius):
 *             _rate = ArrheniusRate(             # <<<<<<<<<<<<<<
 *                 A=rate.pre_exponential_factor,
 *                 b=rate.temperature_exponent,
 */
    __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRate), __pyx_empty_tuple, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1352, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_v__rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1351
 *             else:
 *                 _rate = ReactionRate.from_dict(rate)
 *         elif isinstance(rate, Arrhenius):             # <<<<<<<<<<<<<<
 *             _rate = ArrheniusRate(
 *                 A=rate.pre_exponential_factor,
 */
    goto __pyx_L5;
  }

  /* "cantera/reaction.pyx":1357
 *                 Ea=rate.activation_energy
 *             )
 *         elif callable(rate):             # <<<<<<<<<<<<<<
 *             _rate = CustomRate(rate)
 *         else:
 */
  __pyx_t_4 = __Pyx_PyCallable_Check(__pyx_v_rate); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(0, 1357, __pyx_L1_error)
  if (likely(__pyx_t_4)) {

    /* "cantera/reaction.pyx":1358
 *             )
 *         elif callable(rate):
 *             _rate = CustomRate(rate)             # <<<<<<<<<<<<<<
 *         else:
 *             raise TypeError(f"Invalid rate definition with type '{type(rate)}'")
 */
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_7cantera_8reaction_CustomRate), __pyx_v_rate); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1358, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v__rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1357
 *                 Ea=rate.activation_energy
 *             )
 *         elif callable(rate):             # <<<<<<<<<<<<<<
 *             _rate = CustomRate(rate)
 *         else:
 */
    goto __pyx_L5;
  }

  /* "cantera/reaction.pyx":1360
 *             _rate = CustomRate(rate)
 *         else:
 *             raise TypeError(f"Invalid rate definition with type '{type(rate)}'")             # <<<<<<<<<<<<<<
 * 
 *         cdef ThirdBody _third_body
 */
  /*else*/ {
    __pyx_t_3 = PyTuple_New(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_7 = 0;
    __pyx_t_8 = 127;
    __Pyx_INCREF(__pyx_kp_u_Invalid_rate_definition_with_typ);
    __pyx_t_7 += 35;
    __Pyx_GIVEREF(__pyx_kp_u_Invalid_rate_definition_with_typ);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_kp_u_Invalid_rate_definition_with_typ);
    __pyx_t_2 = __Pyx_PyObject_FormatSimple(((PyObject *)Py_TYPE(__pyx_v_rate)), __pyx_empty_unicode); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_8 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) > __pyx_t_8) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_2) : __pyx_t_8;
    __pyx_t_7 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
    __pyx_t_2 = 0;
    __Pyx_INCREF(__pyx_kp_u__9);
    __pyx_t_7 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__9);
    PyTuple_SET_ITEM(__pyx_t_3, 2, __pyx_kp_u__9);
    __pyx_t_2 = __Pyx_PyUnicode_Join(__pyx_t_3, 3, __pyx_t_7, __pyx_t_8); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1360, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1360, __pyx_L1_error)
  }
  __pyx_L5:;

  /* "cantera/reaction.pyx":1363
 * 
 *         cdef ThirdBody _third_body
 *         if isinstance(third_body, ThirdBody):             # <<<<<<<<<<<<<<
 *             _third_body = third_body
 *         elif isinstance(third_body, str):
 */
  __pyx_t_4 = __Pyx_TypeCheck(__pyx_v_third_body, __pyx_ptype_7cantera_8reaction_ThirdBody); 
  if (__pyx_t_4) {

    /* "cantera/reaction.pyx":1364
 *         cdef ThirdBody _third_body
 *         if isinstance(third_body, ThirdBody):
 *             _third_body = third_body             # <<<<<<<<<<<<<<
 *         elif isinstance(third_body, str):
 *             _third_body = ThirdBody(third_body)
 */
    if (!(likely(((__pyx_v_third_body) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_third_body, __pyx_ptype_7cantera_8reaction_ThirdBody))))) __PYX_ERR(0, 1364, __pyx_L1_error)
    __pyx_t_3 = __pyx_v_third_body;
    __Pyx_INCREF(__pyx_t_3);
    __pyx_v__third_body = ((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1363
 * 
 *         cdef ThirdBody _third_body
 *         if isinstance(third_body, ThirdBody):             # <<<<<<<<<<<<<<
 *             _third_body = third_body
 *         elif isinstance(third_body, str):
 */
    goto __pyx_L8;
  }

  /* "cantera/reaction.pyx":1365
 *         if isinstance(third_body, ThirdBody):
 *             _third_body = third_body
 *         elif isinstance(third_body, str):             # <<<<<<<<<<<<<<
 *             _third_body = ThirdBody(third_body)
 *         elif efficiencies:
 */
  __pyx_t_4 = PyUnicode_Check(__pyx_v_third_body); 
  if (__pyx_t_4) {

    /* "cantera/reaction.pyx":1366
 *             _third_body = third_body
 *         elif isinstance(third_body, str):
 *             _third_body = ThirdBody(third_body)             # <<<<<<<<<<<<<<
 *         elif efficiencies:
 *             warnings.warn(
 */
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_7cantera_8reaction_ThirdBody), __pyx_v_third_body); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1366, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v__third_body = ((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1365
 *         if isinstance(third_body, ThirdBody):
 *             _third_body = third_body
 *         elif isinstance(third_body, str):             # <<<<<<<<<<<<<<
 *             _third_body = ThirdBody(third_body)
 *         elif efficiencies:
 */
    goto __pyx_L8;
  }

  /* "cantera/reaction.pyx":1367
 *         elif isinstance(third_body, str):
 *             _third_body = ThirdBody(third_body)
 *         elif efficiencies:             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction: Argument 'efficiencies' is deprecated and will be removed "
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_efficiencies); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 1367, __pyx_L1_error)
  if (__pyx_t_4) {

    /* "cantera/reaction.pyx":1368
 *             _third_body = ThirdBody(third_body)
 *         elif efficiencies:
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction: Argument 'efficiencies' is deprecated and will be removed "
 *                 "after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 */
    __Pyx_GetModuleGlobalName(__pyx_t_3, __pyx_n_s_warnings); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_3, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1370
 *             warnings.warn(
 *                 "Reaction: Argument 'efficiencies' is deprecated and will be removed "
 *                 "after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *             third_body = "M"
 *             _third_body = ThirdBody(third_body)
 */
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__16, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1368, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1371
 *                 "Reaction: Argument 'efficiencies' is deprecated and will be removed "
 *                 "after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *             third_body = "M"             # <<<<<<<<<<<<<<
 *             _third_body = ThirdBody(third_body)
 *             _third_body.efficiencies = efficiencies
 */
    __Pyx_INCREF(__pyx_n_u_M);
    __Pyx_DECREF_SET(__pyx_v_third_body, __pyx_n_u_M);

    /* "cantera/reaction.pyx":1372
 *                 "after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *             third_body = "M"
 *             _third_body = ThirdBody(third_body)             # <<<<<<<<<<<<<<
 *             _third_body.efficiencies = efficiencies
 * 
 */
    __pyx_t_3 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_7cantera_8reaction_ThirdBody), __pyx_v_third_body); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1372, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_v__third_body = ((struct __pyx_obj_7cantera_8reaction_ThirdBody *)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "cantera/reaction.pyx":1373
 *             third_body = "M"
 *             _third_body = ThirdBody(third_body)
 *             _third_body.efficiencies = efficiencies             # <<<<<<<<<<<<<<
 * 
 *         if reactants and products:
 */
    if (__Pyx_PyObject_SetAttrStr(((PyObject *)__pyx_v__third_body), __pyx_n_s_efficiencies, __pyx_v_efficiencies) < 0) __PYX_ERR(0, 1373, __pyx_L1_error)

    /* "cantera/reaction.pyx":1367
 *         elif isinstance(third_body, str):
 *             _third_body = ThirdBody(third_body)
 *         elif efficiencies:             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction: Argument 'efficiencies' is deprecated and will be removed "
 */
  }
  __pyx_L8:;

  /* "cantera/reaction.pyx":1375
 *             _third_body.efficiencies = efficiencies
 * 
 *         if reactants and products:             # <<<<<<<<<<<<<<
 *             # create from reactant and product compositions
 *             if third_body:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_reactants); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1375, __pyx_L1_error)
  if (__pyx_t_1) {
  } else {
    __pyx_t_4 = __pyx_t_1;
    goto __pyx_L10_bool_binop_done;
  }
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_products); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1375, __pyx_L1_error)
  __pyx_t_4 = __pyx_t_1;
  __pyx_L10_bool_binop_done:;
  if (__pyx_t_4) {

    /* "cantera/reaction.pyx":1377
 *         if reactants and products:
 *             # create from reactant and product compositions
 *             if third_body:             # <<<<<<<<<<<<<<
 *                 self._reaction.reset(
 *                     new CxxReaction(comp_map(reactants), comp_map(products),
 */
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_third_body); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 1377, __pyx_L1_error)
    if (__pyx_t_4) {

      /* "cantera/reaction.pyx":1379
 *             if third_body:
 *                 self._reaction.reset(
 *                     new CxxReaction(comp_map(reactants), comp_map(products),             # <<<<<<<<<<<<<<
 *                     _rate._rate, _third_body._third_body)
 *                 )
 */
      __pyx_t_9 = __pyx_f_7cantera_6_utils_comp_map(__pyx_v_reactants); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1379, __pyx_L1_error)
      __pyx_t_10 = __pyx_f_7cantera_6_utils_comp_map(__pyx_v_products); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1379, __pyx_L1_error)

      /* "cantera/reaction.pyx":1380
 *                 self._reaction.reset(
 *                     new CxxReaction(comp_map(reactants), comp_map(products),
 *                     _rate._rate, _third_body._third_body)             # <<<<<<<<<<<<<<
 *                 )
 *             else:
 */
      if (unlikely(!__pyx_v__third_body)) { __Pyx_RaiseUnboundLocalError("_third_body"); __PYX_ERR(0, 1380, __pyx_L1_error) }

      /* "cantera/reaction.pyx":1379
 *             if third_body:
 *                 self._reaction.reset(
 *                     new CxxReaction(comp_map(reactants), comp_map(products),             # <<<<<<<<<<<<<<
 *                     _rate._rate, _third_body._third_body)
 *                 )
 */
      try {
        __pyx_t_11 = new Cantera::Reaction(__pyx_t_9, __pyx_t_10, __pyx_v__rate->_rate, __pyx_v__third_body->_third_body);
      } catch(...) {
        translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
        __PYX_ERR(0, 1379, __pyx_L1_error)
      }

      /* "cantera/reaction.pyx":1378
 *             # create from reactant and product compositions
 *             if third_body:
 *                 self._reaction.reset(             # <<<<<<<<<<<<<<
 *                     new CxxReaction(comp_map(reactants), comp_map(products),
 *                     _rate._rate, _third_body._third_body)
 */
      __pyx_v_self->_reaction.reset(__pyx_t_11);

      /* "cantera/reaction.pyx":1377
 *         if reactants and products:
 *             # create from reactant and product compositions
 *             if third_body:             # <<<<<<<<<<<<<<
 *                 self._reaction.reset(
 *                     new CxxReaction(comp_map(reactants), comp_map(products),
 */
      goto __pyx_L12;
    }

    /* "cantera/reaction.pyx":1383
 *                 )
 *             else:
 *                 self._reaction.reset(             # <<<<<<<<<<<<<<
 *                     new CxxReaction(comp_map(reactants), comp_map(products),
 *                     _rate._rate)
 */
    /*else*/ {

      /* "cantera/reaction.pyx":1384
 *             else:
 *                 self._reaction.reset(
 *                     new CxxReaction(comp_map(reactants), comp_map(products),             # <<<<<<<<<<<<<<
 *                     _rate._rate)
 *                 )
 */
      __pyx_t_10 = __pyx_f_7cantera_6_utils_comp_map(__pyx_v_reactants); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1384, __pyx_L1_error)
      __pyx_t_9 = __pyx_f_7cantera_6_utils_comp_map(__pyx_v_products); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1384, __pyx_L1_error)

      /* "cantera/reaction.pyx":1385
 *                 self._reaction.reset(
 *                     new CxxReaction(comp_map(reactants), comp_map(products),
 *                     _rate._rate)             # <<<<<<<<<<<<<<
 *                 )
 *         elif equation:
 */
      try {
        __pyx_t_11 = new Cantera::Reaction(__pyx_t_10, __pyx_t_9, __pyx_v__rate->_rate);
      } catch(...) {
        translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
        __PYX_ERR(0, 1384, __pyx_L1_error)
      }

      /* "cantera/reaction.pyx":1383
 *                 )
 *             else:
 *                 self._reaction.reset(             # <<<<<<<<<<<<<<
 *                     new CxxReaction(comp_map(reactants), comp_map(products),
 *                     _rate._rate)
 */
      __pyx_v_self->_reaction.reset(__pyx_t_11);
    }
    __pyx_L12:;

    /* "cantera/reaction.pyx":1375
 *             _third_body.efficiencies = efficiencies
 * 
 *         if reactants and products:             # <<<<<<<<<<<<<<
 *             # create from reactant and product compositions
 *             if third_body:
 */
    goto __pyx_L9;
  }

  /* "cantera/reaction.pyx":1387
 *                     _rate._rate)
 *                 )
 *         elif equation:             # <<<<<<<<<<<<<<
 *             # create from reaction equation
 *             if third_body:
 */
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_equation); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 1387, __pyx_L1_error)
  if (likely(__pyx_t_4)) {

    /* "cantera/reaction.pyx":1389
 *         elif equation:
 *             # create from reaction equation
 *             if third_body:             # <<<<<<<<<<<<<<
 *                 self._reaction.reset(
 *                     new CxxReaction(stringify(equation),
 */
    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_v_third_body); if (unlikely((__pyx_t_4 < 0))) __PYX_ERR(0, 1389, __pyx_L1_error)
    if (__pyx_t_4) {

      /* "cantera/reaction.pyx":1391
 *             if third_body:
 *                 self._reaction.reset(
 *                     new CxxReaction(stringify(equation),             # <<<<<<<<<<<<<<
 *                     _rate._rate, _third_body._third_body)
 *                 )
 */
      __pyx_t_12 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_equation); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1391, __pyx_L1_error)

      /* "cantera/reaction.pyx":1392
 *                 self._reaction.reset(
 *                     new CxxReaction(stringify(equation),
 *                     _rate._rate, _third_body._third_body)             # <<<<<<<<<<<<<<
 *                 )
 *             else:
 */
      if (unlikely(!__pyx_v__third_body)) { __Pyx_RaiseUnboundLocalError("_third_body"); __PYX_ERR(0, 1392, __pyx_L1_error) }

      /* "cantera/reaction.pyx":1391
 *             if third_body:
 *                 self._reaction.reset(
 *                     new CxxReaction(stringify(equation),             # <<<<<<<<<<<<<<
 *                     _rate._rate, _third_body._third_body)
 *                 )
 */
      try {
        __pyx_t_11 = new Cantera::Reaction(__pyx_t_12, __pyx_v__rate->_rate, __pyx_v__third_body->_third_body);
      } catch(...) {
        translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
        __PYX_ERR(0, 1391, __pyx_L1_error)
      }

      /* "cantera/reaction.pyx":1390
 *             # create from reaction equation
 *             if third_body:
 *                 self._reaction.reset(             # <<<<<<<<<<<<<<
 *                     new CxxReaction(stringify(equation),
 *                     _rate._rate, _third_body._third_body)
 */
      __pyx_v_self->_reaction.reset(__pyx_t_11);

      /* "cantera/reaction.pyx":1389
 *         elif equation:
 *             # create from reaction equation
 *             if third_body:             # <<<<<<<<<<<<<<
 *                 self._reaction.reset(
 *                     new CxxReaction(stringify(equation),
 */
      goto __pyx_L13;
    }

    /* "cantera/reaction.pyx":1395
 *                 )
 *             else:
 *                 self._reaction.reset(             # <<<<<<<<<<<<<<
 *                     new CxxReaction(stringify(equation),
 *                     _rate._rate)
 */
    /*else*/ {

      /* "cantera/reaction.pyx":1396
 *             else:
 *                 self._reaction.reset(
 *                     new CxxReaction(stringify(equation),             # <<<<<<<<<<<<<<
 *                     _rate._rate)
 *                 )
 */
      __pyx_t_12 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_equation); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1396, __pyx_L1_error)

      /* "cantera/reaction.pyx":1397
 *                 self._reaction.reset(
 *                     new CxxReaction(stringify(equation),
 *                     _rate._rate)             # <<<<<<<<<<<<<<
 *                 )
 *         else:
 */
      try {
        __pyx_t_11 = new Cantera::Reaction(__pyx_t_12, __pyx_v__rate->_rate);
      } catch(...) {
        translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
        __PYX_ERR(0, 1396, __pyx_L1_error)
      }

      /* "cantera/reaction.pyx":1395
 *                 )
 *             else:
 *                 self._reaction.reset(             # <<<<<<<<<<<<<<
 *                     new CxxReaction(stringify(equation),
 *                     _rate._rate)
 */
      __pyx_v_self->_reaction.reset(__pyx_t_11);
    }
    __pyx_L13:;

    /* "cantera/reaction.pyx":1387
 *                     _rate._rate)
 *                 )
 *         elif equation:             # <<<<<<<<<<<<<<
 *             # create from reaction equation
 *             if third_body:
 */
    goto __pyx_L9;
  }

  /* "cantera/reaction.pyx":1401
 *         else:
 *             # create default object
 *             raise ValueError("Missing reactant and/or product information.")             # <<<<<<<<<<<<<<
 * 
 *         self.reaction = self._reaction.get()
 */
  /*else*/ {
    __pyx_t_3 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__17, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1401, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_Raise(__pyx_t_3, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __PYX_ERR(0, 1401, __pyx_L1_error)
  }
  __pyx_L9:;

  /* "cantera/reaction.pyx":1403
 *             raise ValueError("Missing reactant and/or product information.")
 * 
 *         self.reaction = self._reaction.get()             # <<<<<<<<<<<<<<
 *         self._rate = _rate
 * 
 */
  __pyx_v_self->reaction = __pyx_v_self->_reaction.get();

  /* "cantera/reaction.pyx":1404
 * 
 *         self.reaction = self._reaction.get()
 *         self._rate = _rate             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_INCREF((PyObject *)__pyx_v__rate);
  __Pyx_GIVEREF((PyObject *)__pyx_v__rate);
  __Pyx_GOTREF((PyObject *)__pyx_v_self->_rate);
  __Pyx_DECREF((PyObject *)__pyx_v_self->_rate);
  __pyx_v_self->_rate = __pyx_v__rate;

  /* "cantera/reaction.pyx":1324
 *     """
 * 
 *     def __cinit__(self, reactants=None, products=None, rate=None, *,             # <<<<<<<<<<<<<<
 *                   equation=None, init=True, efficiencies=None,
 *                   Kinetics kinetics=None, third_body=None):
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.Reaction.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v__rate);
  __Pyx_XDECREF(__pyx_v_args);
  __Pyx_XDECREF((PyObject *)__pyx_v__third_body);
  __Pyx_XDECREF(__pyx_v_third_body);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1407
 * 
 *     @staticmethod
 *     cdef wrap(shared_ptr[CxxReaction] reaction):             # <<<<<<<<<<<<<<
 *         """
 *         Wrap a C++ Reaction object with a Python object of the correct derived type.
 */

static PyObject *__pyx_f_7cantera_8reaction_8Reaction_wrap(std::shared_ptr<Cantera::Reaction>  __pyx_v_reaction) {
  struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_R = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrap", 0);

  /* "cantera/reaction.pyx":1413
 *         # wrap C++ reaction
 *         cdef Reaction R
 *         R = Reaction(init=False)             # <<<<<<<<<<<<<<
 *         R._reaction = reaction
 *         R.reaction = R._reaction.get()
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_init, Py_False) < 0) __PYX_ERR(0, 1413, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1413, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_R = ((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":1414
 *         cdef Reaction R
 *         R = Reaction(init=False)
 *         R._reaction = reaction             # <<<<<<<<<<<<<<
 *         R.reaction = R._reaction.get()
 *         R._rate = ReactionRate.wrap(R.reaction.rate())
 */
  __pyx_v_R->_reaction = __pyx_v_reaction;

  /* "cantera/reaction.pyx":1415
 *         R = Reaction(init=False)
 *         R._reaction = reaction
 *         R.reaction = R._reaction.get()             # <<<<<<<<<<<<<<
 *         R._rate = ReactionRate.wrap(R.reaction.rate())
 *         return R
 */
  __pyx_v_R->reaction = __pyx_v_R->_reaction.get();

  /* "cantera/reaction.pyx":1416
 *         R._reaction = reaction
 *         R.reaction = R._reaction.get()
 *         R._rate = ReactionRate.wrap(R.reaction.rate())             # <<<<<<<<<<<<<<
 *         return R
 * 
 */
  __pyx_t_2 = __pyx_f_7cantera_8reaction_12ReactionRate_wrap(__pyx_v_R->reaction->rate()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (!(likely(((__pyx_t_2) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_2, __pyx_ptype_7cantera_8reaction_ReactionRate))))) __PYX_ERR(0, 1416, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_2);
  __Pyx_GOTREF((PyObject *)__pyx_v_R->_rate);
  __Pyx_DECREF((PyObject *)__pyx_v_R->_rate);
  __pyx_v_R->_rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":1417
 *         R.reaction = R._reaction.get()
 *         R._rate = ReactionRate.wrap(R.reaction.rate())
 *         return R             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_R);
  __pyx_r = ((PyObject *)__pyx_v_R);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1407
 * 
 *     @staticmethod
 *     cdef wrap(shared_ptr[CxxReaction] reaction):             # <<<<<<<<<<<<<<
 *         """
 *         Wrap a C++ Reaction object with a Python object of the correct derived type.
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.wrap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_R);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1419
 *         return R
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, Kinetics kinetics, hyphenize=True):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_3from_dict(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_8Reaction_2from_dict, "\n        Create a `Reaction` object from a dictionary corresponding to its YAML\n        representation. By default, underscores in keys are replaced by hyphens.\n\n        An example for the creation of a Reaction from a dictionary is::\n\n            rxn = Reaction.from_dict(\n                {\"equation\": \"O + H2 <=> H + OH\",\n                 \"rate-constant\": {\"A\": 38.7, \"b\": 2.7, \"Ea\": 26191840.0}},\n                kinetics=gas)\n\n        In the example, ``gas`` is a Kinetics (or Solution) object.\n\n        :param data:\n            A dictionary corresponding to the YAML representation.\n        :param kinetics:\n            A `Kinetics` object whose associated phase(s) contain the species\n            involved in the reaction.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_8Reaction_3from_dict = {"from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_3from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_2from_dict};
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_3from_dict(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_data = 0;
  struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics = 0;
  PyObject *__pyx_v_hyphenize = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_dict (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_data,&__pyx_n_s_kinetics,&__pyx_n_s_hyphenize,0};
    PyObject* values[3] = {0,0,0};

    /* "cantera/reaction.pyx":1420
 * 
 *     @classmethod
 *     def from_dict(cls, data, Kinetics kinetics, hyphenize=True):             # <<<<<<<<<<<<<<
 *         """
 *         Create a `Reaction` object from a dictionary corresponding to its YAML
 */
    values[2] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1419, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_kinetics)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1419, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("from_dict", 0, 2, 3, 1); __PYX_ERR(0, 1419, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_hyphenize);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1419, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "from_dict") < 0)) __PYX_ERR(0, 1419, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_data = values[0];
    __pyx_v_kinetics = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)values[1]);
    __pyx_v_hyphenize = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_dict", 0, 2, 3, __pyx_nargs); __PYX_ERR(0, 1419, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kinetics), __pyx_ptype_7cantera_8kinetics_Kinetics, 1, "kinetics", 0))) __PYX_ERR(0, 1420, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_2from_dict(((PyTypeObject*)__pyx_v_cls), __pyx_v_data, __pyx_v_kinetics, __pyx_v_hyphenize);

  /* "cantera/reaction.pyx":1419
 *         return R
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, Kinetics kinetics, hyphenize=True):
 *         """
 */

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_2from_dict(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_data, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics, PyObject *__pyx_v_hyphenize) {
  Cantera::AnyMap __pyx_v_any_map;
  std::shared_ptr<Cantera::Reaction>  __pyx_v_cxx_reaction;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  Cantera::AnyMap __pyx_t_2;
  struct __pyx_opt_args_7cantera_6_utils_py_to_anymap __pyx_t_3;
  std::shared_ptr<Cantera::Reaction>  __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_dict", 0);

  /* "cantera/reaction.pyx":1440
 *             involved in the reaction.
 *         """
 *         cdef CxxAnyMap any_map = py_to_anymap(data, hyphenize=hyphenize)             # <<<<<<<<<<<<<<
 *         cxx_reaction = CxxNewReaction(any_map, deref(kinetics.kinetics))
 *         return Reaction.wrap(cxx_reaction)
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_hyphenize); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1440, __pyx_L1_error)
  __pyx_t_3.__pyx_n = 1;
  __pyx_t_3.hyphenize = __pyx_t_1;
  __pyx_t_2 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_data, &__pyx_t_3); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1440, __pyx_L1_error)
  __pyx_v_any_map = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_2);

  /* "cantera/reaction.pyx":1441
 *         """
 *         cdef CxxAnyMap any_map = py_to_anymap(data, hyphenize=hyphenize)
 *         cxx_reaction = CxxNewReaction(any_map, deref(kinetics.kinetics))             # <<<<<<<<<<<<<<
 *         return Reaction.wrap(cxx_reaction)
 * 
 */
  try {
    __pyx_t_4 = newReaction(__pyx_v_any_map, ((Cantera::Kinetics &)(*__pyx_v_kinetics->__pyx_base.kinetics)));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1441, __pyx_L1_error)
  }
  __pyx_v_cxx_reaction = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_4);

  /* "cantera/reaction.pyx":1442
 *         cdef CxxAnyMap any_map = py_to_anymap(data, hyphenize=hyphenize)
 *         cxx_reaction = CxxNewReaction(any_map, deref(kinetics.kinetics))
 *         return Reaction.wrap(cxx_reaction)             # <<<<<<<<<<<<<<
 * 
 *     @classmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_5 = __pyx_f_7cantera_8reaction_8Reaction_wrap(__pyx_v_cxx_reaction); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1442, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1419
 *         return R
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, Kinetics kinetics, hyphenize=True):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.Reaction.from_dict", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1444
 *         return Reaction.wrap(cxx_reaction)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_yaml(cls, text, Kinetics kinetics):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_5from_yaml(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_8Reaction_4from_yaml, "\n        Create a `Reaction` object from its YAML string representation.\n\n        An example for the creation of a Reaction from a YAML string is::\n\n            rxn = Reaction.from_yaml('''\n                equation: O + H2 <=> H + OH\n                rate-constant: {A: 38.7, b: 2.7, Ea: 6260.0 cal/mol}\n                ''', kinetics=gas)\n\n        In the example, ``gas`` is a Kinetics (or Solution) object.\n\n        :param text:\n            The YAML reaction string.\n        :param kinetics:\n            A `Kinetics` object whose associated phase(s) contain the species\n            involved in the reaction.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_8Reaction_5from_yaml = {"from_yaml", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_5from_yaml, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_4from_yaml};
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_5from_yaml(PyObject *__pyx_v_cls, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_text = 0;
  struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("from_yaml (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,&__pyx_n_s_kinetics,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_text)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_kinetics)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1444, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("from_yaml", 1, 2, 2, 1); __PYX_ERR(0, 1444, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "from_yaml") < 0)) __PYX_ERR(0, 1444, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_text = values[0];
    __pyx_v_kinetics = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("from_yaml", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1444, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.from_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kinetics), __pyx_ptype_7cantera_8kinetics_Kinetics, 1, "kinetics", 0))) __PYX_ERR(0, 1445, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_4from_yaml(((PyTypeObject*)__pyx_v_cls), __pyx_v_text, __pyx_v_kinetics);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_4from_yaml(CYTHON_UNUSED PyTypeObject *__pyx_v_cls, PyObject *__pyx_v_text, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics) {
  Cantera::AnyMap __pyx_v_any_map;
  std::shared_ptr<Cantera::Reaction>  __pyx_v_cxx_reaction;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  Cantera::AnyMap __pyx_t_2;
  std::shared_ptr<Cantera::Reaction>  __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("from_yaml", 0);

  /* "cantera/reaction.pyx":1464
 *             involved in the reaction.
 *         """
 *         cdef CxxAnyMap any_map = AnyMapFromYamlString(stringify(text))             # <<<<<<<<<<<<<<
 *         cxx_reaction = CxxNewReaction(any_map, deref(kinetics.kinetics))
 *         return Reaction.wrap(cxx_reaction)
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_text); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1464, __pyx_L1_error)
  try {
    __pyx_t_2 = Cantera::AnyMap::fromYamlString(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1464, __pyx_L1_error)
  }
  __pyx_v_any_map = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_2);

  /* "cantera/reaction.pyx":1465
 *         """
 *         cdef CxxAnyMap any_map = AnyMapFromYamlString(stringify(text))
 *         cxx_reaction = CxxNewReaction(any_map, deref(kinetics.kinetics))             # <<<<<<<<<<<<<<
 *         return Reaction.wrap(cxx_reaction)
 * 
 */
  try {
    __pyx_t_3 = newReaction(__pyx_v_any_map, ((Cantera::Kinetics &)(*__pyx_v_kinetics->__pyx_base.kinetics)));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1465, __pyx_L1_error)
  }
  __pyx_v_cxx_reaction = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "cantera/reaction.pyx":1466
 *         cdef CxxAnyMap any_map = AnyMapFromYamlString(stringify(text))
 *         cxx_reaction = CxxNewReaction(any_map, deref(kinetics.kinetics))
 *         return Reaction.wrap(cxx_reaction)             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_4 = __pyx_f_7cantera_8reaction_8Reaction_wrap(__pyx_v_cxx_reaction); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1466, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1444
 *         return Reaction.wrap(cxx_reaction)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_yaml(cls, text, Kinetics kinetics):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.Reaction.from_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1468
 *         return Reaction.wrap(cxx_reaction)
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def list_from_file(filename, Kinetics kinetics, section="reactions"):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_7list_from_file(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_8Reaction_6list_from_file, "\n        Create a list of Reaction objects from all of the reactions defined in a\n        YAML file. Reactions from the section ``section`` will be returned.\n\n        Directories on Cantera's input file path will be searched for the\n        specified file.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_8Reaction_7list_from_file = {"list_from_file", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_7list_from_file, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_6list_from_file};
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_7list_from_file(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_filename = 0;
  struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics = 0;
  PyObject *__pyx_v_section = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("list_from_file (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_filename,&__pyx_n_s_kinetics,&__pyx_n_s_section,0};
    PyObject* values[3] = {0,0,0};
    values[2] = ((PyObject *)__pyx_n_u_reactions);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_filename)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_kinetics)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("list_from_file", 0, 2, 3, 1); __PYX_ERR(0, 1468, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_section);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1468, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "list_from_file") < 0)) __PYX_ERR(0, 1468, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_filename = values[0];
    __pyx_v_kinetics = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)values[1]);
    __pyx_v_section = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("list_from_file", 0, 2, 3, __pyx_nargs); __PYX_ERR(0, 1468, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.list_from_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kinetics), __pyx_ptype_7cantera_8kinetics_Kinetics, 1, "kinetics", 0))) __PYX_ERR(0, 1469, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_6list_from_file(__pyx_v_filename, __pyx_v_kinetics, __pyx_v_section);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_6list_from_file(PyObject *__pyx_v_filename, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics, PyObject *__pyx_v_section) {
  Cantera::AnyMap __pyx_v_root;
  std::vector<std::shared_ptr<Cantera::Reaction> >  __pyx_v_cxx_reactions;
  std::shared_ptr<Cantera::Reaction>  __pyx_8genexpr6__pyx_v_r;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  Cantera::AnyMap __pyx_t_2;
  Cantera::AnyValue __pyx_t_3;
  std::vector<std::shared_ptr<Cantera::Reaction> >  __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  std::vector<std::shared_ptr<Cantera::Reaction> > ::iterator __pyx_t_6;
  std::shared_ptr<Cantera::Reaction>  __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("list_from_file", 0);

  /* "cantera/reaction.pyx":1477
 *         specified file.
 *         """
 *         root = AnyMapFromYamlFile(stringify(filename))             # <<<<<<<<<<<<<<
 *         cxx_reactions = CxxGetReactions(root[stringify(section)],
 *                                         deref(kinetics.kinetics))
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_filename); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1477, __pyx_L1_error)
  try {
    __pyx_t_2 = Cantera::AnyMap::fromYamlFile(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1477, __pyx_L1_error)
  }
  __pyx_v_root = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_2);

  /* "cantera/reaction.pyx":1478
 *         """
 *         root = AnyMapFromYamlFile(stringify(filename))
 *         cxx_reactions = CxxGetReactions(root[stringify(section)],             # <<<<<<<<<<<<<<
 *                                         deref(kinetics.kinetics))
 *         return [Reaction.wrap(r) for r in cxx_reactions]
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_section); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1478, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_v_root[__pyx_t_1];
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1478, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":1479
 *         root = AnyMapFromYamlFile(stringify(filename))
 *         cxx_reactions = CxxGetReactions(root[stringify(section)],
 *                                         deref(kinetics.kinetics))             # <<<<<<<<<<<<<<
 *         return [Reaction.wrap(r) for r in cxx_reactions]
 * 
 */
  try {
    __pyx_t_4 = getReactions(__pyx_t_3, ((Cantera::Kinetics &)(*__pyx_v_kinetics->__pyx_base.kinetics)));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1478, __pyx_L1_error)
  }
  __pyx_v_cxx_reactions = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_4);

  /* "cantera/reaction.pyx":1480
 *         cxx_reactions = CxxGetReactions(root[stringify(section)],
 *                                         deref(kinetics.kinetics))
 *         return [Reaction.wrap(r) for r in cxx_reactions]             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
  __Pyx_XDECREF(__pyx_r);
  { /* enter inner scope */
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1480, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __pyx_v_cxx_reactions.begin();
    for (;;) {
      if (!(__pyx_t_6 != __pyx_v_cxx_reactions.end())) break;
      __pyx_t_7 = *__pyx_t_6;
      ++__pyx_t_6;
      __pyx_8genexpr6__pyx_v_r = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_7);
      __pyx_t_8 = __pyx_f_7cantera_8reaction_8Reaction_wrap(__pyx_8genexpr6__pyx_v_r); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1480, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_5, (PyObject*)__pyx_t_8))) __PYX_ERR(0, 1480, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
  } /* exit inner scope */
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1468
 *         return Reaction.wrap(cxx_reaction)
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def list_from_file(filename, Kinetics kinetics, section="reactions"):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("cantera.reaction.Reaction.list_from_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1482
 *         return [Reaction.wrap(r) for r in cxx_reactions]
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def list_from_yaml(text, Kinetics kinetics):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_9list_from_yaml(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_8Reaction_8list_from_yaml, "\n        Create a list of `Reaction` objects from all the reactions defined in a\n        YAML string.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_8Reaction_9list_from_yaml = {"list_from_yaml", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_9list_from_yaml, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_8list_from_yaml};
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_9list_from_yaml(CYTHON_UNUSED PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_text = 0;
  struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("list_from_yaml (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_text,&__pyx_n_s_kinetics,0};
    PyObject* values[2] = {0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_text)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1482, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_kinetics)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1482, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("list_from_yaml", 1, 2, 2, 1); __PYX_ERR(0, 1482, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "list_from_yaml") < 0)) __PYX_ERR(0, 1482, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 2)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
    }
    __pyx_v_text = values[0];
    __pyx_v_kinetics = ((struct __pyx_obj_7cantera_8kinetics_Kinetics *)values[1]);
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("list_from_yaml", 1, 2, 2, __pyx_nargs); __PYX_ERR(0, 1482, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.list_from_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  if (unlikely(!__Pyx_ArgTypeTest(((PyObject *)__pyx_v_kinetics), __pyx_ptype_7cantera_8kinetics_Kinetics, 1, "kinetics", 0))) __PYX_ERR(0, 1483, __pyx_L1_error)
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_8list_from_yaml(__pyx_v_text, __pyx_v_kinetics);

  /* function exit code */
  goto __pyx_L0;
  __pyx_L1_error:;
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_8list_from_yaml(PyObject *__pyx_v_text, struct __pyx_obj_7cantera_8kinetics_Kinetics *__pyx_v_kinetics) {
  Cantera::AnyMap __pyx_v_root;
  std::vector<std::shared_ptr<Cantera::Reaction> >  __pyx_v_cxx_reactions;
  std::shared_ptr<Cantera::Reaction>  __pyx_8genexpr7__pyx_v_r;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  Cantera::AnyMap __pyx_t_2;
  Cantera::AnyValue __pyx_t_3;
  std::vector<std::shared_ptr<Cantera::Reaction> >  __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  std::vector<std::shared_ptr<Cantera::Reaction> > ::iterator __pyx_t_6;
  std::shared_ptr<Cantera::Reaction>  __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("list_from_yaml", 0);

  /* "cantera/reaction.pyx":1488
 *         YAML string.
 *         """
 *         root = AnyMapFromYamlString(stringify(text))             # <<<<<<<<<<<<<<
 *         cxx_reactions = CxxGetReactions(root[stringify("items")],
 *                                         deref(kinetics.kinetics))
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_text); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1488, __pyx_L1_error)
  try {
    __pyx_t_2 = Cantera::AnyMap::fromYamlString(__PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1488, __pyx_L1_error)
  }
  __pyx_v_root = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_2);

  /* "cantera/reaction.pyx":1489
 *         """
 *         root = AnyMapFromYamlString(stringify(text))
 *         cxx_reactions = CxxGetReactions(root[stringify("items")],             # <<<<<<<<<<<<<<
 *                                         deref(kinetics.kinetics))
 *         return [Reaction.wrap(r) for r in cxx_reactions]
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_n_u_items); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1489, __pyx_L1_error)
  try {
    __pyx_t_3 = __pyx_v_root[__pyx_t_1];
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1489, __pyx_L1_error)
  }

  /* "cantera/reaction.pyx":1490
 *         root = AnyMapFromYamlString(stringify(text))
 *         cxx_reactions = CxxGetReactions(root[stringify("items")],
 *                                         deref(kinetics.kinetics))             # <<<<<<<<<<<<<<
 *         return [Reaction.wrap(r) for r in cxx_reactions]
 * 
 */
  try {
    __pyx_t_4 = getReactions(__pyx_t_3, ((Cantera::Kinetics &)(*__pyx_v_kinetics->__pyx_base.kinetics)));
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1489, __pyx_L1_error)
  }
  __pyx_v_cxx_reactions = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_4);

  /* "cantera/reaction.pyx":1491
 *         cxx_reactions = CxxGetReactions(root[stringify("items")],
 *                                         deref(kinetics.kinetics))
 *         return [Reaction.wrap(r) for r in cxx_reactions]             # <<<<<<<<<<<<<<
 * 
 *     property reactant_string:
 */
  __Pyx_XDECREF(__pyx_r);
  { /* enter inner scope */
    __pyx_t_5 = PyList_New(0); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1491, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __pyx_v_cxx_reactions.begin();
    for (;;) {
      if (!(__pyx_t_6 != __pyx_v_cxx_reactions.end())) break;
      __pyx_t_7 = *__pyx_t_6;
      ++__pyx_t_6;
      __pyx_8genexpr7__pyx_v_r = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_7);
      __pyx_t_8 = __pyx_f_7cantera_8reaction_8Reaction_wrap(__pyx_8genexpr7__pyx_v_r); if (unlikely(!__pyx_t_8)) __PYX_ERR(0, 1491, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_8);
      if (unlikely(__Pyx_ListComp_Append(__pyx_t_5, (PyObject*)__pyx_t_8))) __PYX_ERR(0, 1491, __pyx_L1_error)
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
    }
  } /* exit inner scope */
  __pyx_r = __pyx_t_5;
  __pyx_t_5 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1482
 *         return [Reaction.wrap(r) for r in cxx_reactions]
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def list_from_yaml(text, Kinetics kinetics):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("cantera.reaction.Reaction.list_from_yaml", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1498
 *         this reaction. Determined automatically based on `reactants`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.reactantString())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_15reactant_string_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_15reactant_string_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_15reactant_string___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_15reactant_string___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1499
 *         """
 *         def __get__(self):
 *             return pystr(self.reaction.reactantString())             # <<<<<<<<<<<<<<
 * 
 *     property product_string:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->reaction->reactantString()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1499, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1498
 *         this reaction. Determined automatically based on `reactants`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.reactantString())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.reactant_string.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1506
 *         this reaction. Determined automatically based on `products`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.productString())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_14product_string_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_14product_string_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_14product_string___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_14product_string___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1507
 *         """
 *         def __get__(self):
 *             return pystr(self.reaction.productString())             # <<<<<<<<<<<<<<
 * 
 *     property equation:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->reaction->productString()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1506
 *         this reaction. Determined automatically based on `products`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.productString())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.product_string.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1514
 *         automatically based on `reactants` and `products`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.equation())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_8equation_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_8equation_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_8equation___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_8equation___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1515
 *         """
 *         def __get__(self):
 *             return pystr(self.reaction.equation())             # <<<<<<<<<<<<<<
 * 
 *     property reactants:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->reaction->equation()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1515, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1514
 *         automatically based on `reactants` and `products`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.equation())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.equation.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1529
 *             Use constructor instead.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return comp_map_to_dict(self.reaction.reactants)
 *         def __set__(self, reactants):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_9reactants_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_9reactants_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_9reactants___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_9reactants___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1530
 *         """
 *         def __get__(self):
 *             return comp_map_to_dict(self.reaction.reactants)             # <<<<<<<<<<<<<<
 *         def __set__(self, reactants):
 *             warnings.warn(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_comp_map_to_dict(__pyx_v_self->reaction->reactants); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1530, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1529
 *             Use constructor instead.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return comp_map_to_dict(self.reaction.reactants)
 *         def __set__(self, reactants):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.reactants.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1531
 *         def __get__(self):
 *             return comp_map_to_dict(self.reaction.reactants)
 *         def __set__(self, reactants):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "'Reaction.reactants' setter is deprecated and will be removed after "
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_9reactants_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reactants); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_9reactants_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reactants) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_9reactants_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_reactants));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_9reactants_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_reactants) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __pyx_t_7cantera_5ctcxx_Composition __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1532
 *             return comp_map_to_dict(self.reaction.reactants)
 *         def __set__(self, reactants):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "'Reaction.reactants' setter is deprecated and will be removed after "
 *                 "Cantera 3.0.\nInstantiate using constructor instead.",
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1535
 *                 "'Reaction.reactants' setter is deprecated and will be removed after "
 *                 "Cantera 3.0.\nInstantiate using constructor instead.",
 *                 DeprecationWarning)             # <<<<<<<<<<<<<<
 *             self.reaction.reactants = comp_map(reactants)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__18, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1536
 *                 "Cantera 3.0.\nInstantiate using constructor instead.",
 *                 DeprecationWarning)
 *             self.reaction.reactants = comp_map(reactants)             # <<<<<<<<<<<<<<
 * 
 *     property products:
 */
  __pyx_t_3 = __pyx_f_7cantera_6_utils_comp_map(__pyx_v_reactants); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1536, __pyx_L1_error)
  __pyx_v_self->reaction->reactants = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "cantera/reaction.pyx":1531
 *         def __get__(self):
 *             return comp_map_to_dict(self.reaction.reactants)
 *         def __set__(self, reactants):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "'Reaction.reactants' setter is deprecated and will be removed after "
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.reactants.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1550
 *             Use constructor instead.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return comp_map_to_dict(self.reaction.products)
 *         def __set__(self, products):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_8products_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_8products_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_8products___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_8products___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1551
 *         """
 *         def __get__(self):
 *             return comp_map_to_dict(self.reaction.products)             # <<<<<<<<<<<<<<
 *         def __set__(self, products):
 *             warnings.warn(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_comp_map_to_dict(__pyx_v_self->reaction->products); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1551, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1550
 *             Use constructor instead.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return comp_map_to_dict(self.reaction.products)
 *         def __set__(self, products):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.products.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1552
 *         def __get__(self):
 *             return comp_map_to_dict(self.reaction.products)
 *         def __set__(self, products):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "'Reaction.products' setter is deprecated and will be removed after "
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_8products_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_products); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_8products_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_products) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_8products_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_products));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_8products_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_products) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __pyx_t_7cantera_5ctcxx_Composition __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1553
 *             return comp_map_to_dict(self.reaction.products)
 *         def __set__(self, products):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "'Reaction.products' setter is deprecated and will be removed after "
 *                 "Cantera 3.0.\nInstantiate using constructor instead.",
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1556
 *                 "'Reaction.products' setter is deprecated and will be removed after "
 *                 "Cantera 3.0.\nInstantiate using constructor instead.",
 *                 DeprecationWarning)             # <<<<<<<<<<<<<<
 *             self.reaction.products = comp_map(products)
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__19, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1557
 *                 "Cantera 3.0.\nInstantiate using constructor instead.",
 *                 DeprecationWarning)
 *             self.reaction.products = comp_map(products)             # <<<<<<<<<<<<<<
 * 
 *     def __contains__(self, species):
 */
  __pyx_t_3 = __pyx_f_7cantera_6_utils_comp_map(__pyx_v_products); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1557, __pyx_L1_error)
  __pyx_v_self->reaction->products = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_3);

  /* "cantera/reaction.pyx":1552
 *         def __get__(self):
 *             return comp_map_to_dict(self.reaction.products)
 *         def __set__(self, products):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "'Reaction.products' setter is deprecated and will be removed after "
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.products.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1559
 *             self.reaction.products = comp_map(products)
 * 
 *     def __contains__(self, species):             # <<<<<<<<<<<<<<
 *         return species in self.reactants or species in self.products
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_11__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_species); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_11__contains__(PyObject *__pyx_v_self, PyObject *__pyx_v_species) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__contains__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_10__contains__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_species));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_10__contains__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_species) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__contains__", 0);

  /* "cantera/reaction.pyx":1560
 * 
 *     def __contains__(self, species):
 *         return species in self.reactants or species in self.products             # <<<<<<<<<<<<<<
 * 
 *     property orders:
 */
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_reactants); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_v_species, __pyx_t_2, Py_EQ)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!__pyx_t_3) {
  } else {
    __pyx_t_1 = __pyx_t_3;
    goto __pyx_L3_bool_binop_done;
  }
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_products); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = (__Pyx_PySequence_ContainsTF(__pyx_v_species, __pyx_t_2, Py_EQ)); if (unlikely((__pyx_t_3 < 0))) __PYX_ERR(0, 1560, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_1 = __pyx_t_3;
  __pyx_L3_bool_binop_done:;
  __pyx_r = __pyx_t_1;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1559
 *             self.reaction.products = comp_map(products)
 * 
 *     def __contains__(self, species):             # <<<<<<<<<<<<<<
 *         return species in self.reactants or species in self.products
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.__contains__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1570
 *         stoichiometric coefficient.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return comp_map_to_dict(self.reaction.orders)
 *         def __set__(self, orders):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_6orders_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_6orders_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_6orders___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_6orders___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1571
 *         """
 *         def __get__(self):
 *             return comp_map_to_dict(self.reaction.orders)             # <<<<<<<<<<<<<<
 *         def __set__(self, orders):
 *             self.reaction.orders = comp_map(orders)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_comp_map_to_dict(__pyx_v_self->reaction->orders); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1571, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1570
 *         stoichiometric coefficient.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return comp_map_to_dict(self.reaction.orders)
 *         def __set__(self, orders):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.orders.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1572
 *         def __get__(self):
 *             return comp_map_to_dict(self.reaction.orders)
 *         def __set__(self, orders):             # <<<<<<<<<<<<<<
 *             self.reaction.orders = comp_map(orders)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_6orders_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_orders); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_6orders_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_orders) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_6orders_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_orders));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_6orders_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_orders) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __pyx_t_7cantera_5ctcxx_Composition __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1573
 *             return comp_map_to_dict(self.reaction.orders)
 *         def __set__(self, orders):
 *             self.reaction.orders = comp_map(orders)             # <<<<<<<<<<<<<<
 * 
 *     property ID:
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_comp_map(__pyx_v_orders); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1573, __pyx_L1_error)
  __pyx_v_self->reaction->orders = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1);

  /* "cantera/reaction.pyx":1572
 *         def __get__(self):
 *             return comp_map_to_dict(self.reaction.orders)
 *         def __set__(self, orders):             # <<<<<<<<<<<<<<
 *             self.reaction.orders = comp_map(orders)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.orders.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1580
 *         filtering operations.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.id)
 *         def __set__(self, ID):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_2ID_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_2ID_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_2ID___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_2ID___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1581
 *         """
 *         def __get__(self):
 *             return pystr(self.reaction.id)             # <<<<<<<<<<<<<<
 *         def __set__(self, ID):
 *             self.reaction.id = stringify(ID)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->reaction->id); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1581, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1580
 *         filtering operations.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.id)
 *         def __set__(self, ID):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.ID.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1582
 *         def __get__(self):
 *             return pystr(self.reaction.id)
 *         def __set__(self, ID):             # <<<<<<<<<<<<<<
 *             self.reaction.id = stringify(ID)
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_2ID_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ID); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_2ID_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_ID) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_2ID_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_ID));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_2ID_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_ID) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  std::string __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1583
 *             return pystr(self.reaction.id)
 *         def __set__(self, ID):
 *             self.reaction.id = stringify(ID)             # <<<<<<<<<<<<<<
 * 
 *     property reaction_type:
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_ID); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1583, __pyx_L1_error)
  __pyx_v_self->reaction->id = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1);

  /* "cantera/reaction.pyx":1582
 *         def __get__(self):
 *             return pystr(self.reaction.id)
 *         def __set__(self, ID):             # <<<<<<<<<<<<<<
 *             self.reaction.id = stringify(ID)
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.ID.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1589
 *         Retrieve the native type name of the reaction.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.type())
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_13reaction_type_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_13reaction_type_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_13reaction_type___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_13reaction_type___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1590
 *         """
 *         def __get__(self):
 *             return pystr(self.reaction.type())             # <<<<<<<<<<<<<<
 * 
 *     property rate:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __pyx_f_7cantera_6_utils_pystr(__pyx_v_self->reaction->type()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1590, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1589
 *         Retrieve the native type name of the reaction.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return pystr(self.reaction.type())
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.reaction_type.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1594
 *     property rate:
 *         """ Get/Set the reaction rate evaluator for this reaction. """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._rate
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_4rate_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_4rate_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_4rate___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_4rate___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1595
 *         """ Get/Set the reaction rate evaluator for this reaction. """
 *         def __get__(self):
 *             return self._rate             # <<<<<<<<<<<<<<
 * 
 *         def __set__(self, rate):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_self->_rate);
  __pyx_r = ((PyObject *)__pyx_v_self->_rate);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1594
 *     property rate:
 *         """ Get/Set the reaction rate evaluator for this reaction. """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self._rate
 * 
 */

  /* function exit code */
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1597
 *             return self._rate
 * 
 *         def __set__(self, rate):             # <<<<<<<<<<<<<<
 *             if isinstance(rate, ReactionRate):
 *                 self._rate = rate
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_4rate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rate); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_4rate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_rate) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_4rate_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_rate));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_4rate_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_rate) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  Py_ssize_t __pyx_t_3;
  Py_UCS4 __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1598
 * 
 *         def __set__(self, rate):
 *             if isinstance(rate, ReactionRate):             # <<<<<<<<<<<<<<
 *                 self._rate = rate
 *             elif callable(rate):
 */
  __pyx_t_1 = __Pyx_TypeCheck(__pyx_v_rate, __pyx_ptype_7cantera_8reaction_ReactionRate); 
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":1599
 *         def __set__(self, rate):
 *             if isinstance(rate, ReactionRate):
 *                 self._rate = rate             # <<<<<<<<<<<<<<
 *             elif callable(rate):
 *                 self._rate = CustomRate(rate)
 */
    if (!(likely(((__pyx_v_rate) == Py_None) || likely(__Pyx_TypeTest(__pyx_v_rate, __pyx_ptype_7cantera_8reaction_ReactionRate))))) __PYX_ERR(0, 1599, __pyx_L1_error)
    __pyx_t_2 = __pyx_v_rate;
    __Pyx_INCREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->_rate);
    __Pyx_DECREF((PyObject *)__pyx_v_self->_rate);
    __pyx_v_self->_rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":1598
 * 
 *         def __set__(self, rate):
 *             if isinstance(rate, ReactionRate):             # <<<<<<<<<<<<<<
 *                 self._rate = rate
 *             elif callable(rate):
 */
    goto __pyx_L3;
  }

  /* "cantera/reaction.pyx":1600
 *             if isinstance(rate, ReactionRate):
 *                 self._rate = rate
 *             elif callable(rate):             # <<<<<<<<<<<<<<
 *                 self._rate = CustomRate(rate)
 *             else:
 */
  __pyx_t_1 = __Pyx_PyCallable_Check(__pyx_v_rate); if (unlikely(__pyx_t_1 == ((int)-1))) __PYX_ERR(0, 1600, __pyx_L1_error)
  if (likely(__pyx_t_1)) {

    /* "cantera/reaction.pyx":1601
 *                 self._rate = rate
 *             elif callable(rate):
 *                 self._rate = CustomRate(rate)             # <<<<<<<<<<<<<<
 *             else:
 *                 raise TypeError(f"Invalid rate definition with type '{type(rate)}'")
 */
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(((PyObject *)__pyx_ptype_7cantera_8reaction_CustomRate), __pyx_v_rate); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1601, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->_rate);
    __Pyx_DECREF((PyObject *)__pyx_v_self->_rate);
    __pyx_v_self->_rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)__pyx_t_2);
    __pyx_t_2 = 0;

    /* "cantera/reaction.pyx":1600
 *             if isinstance(rate, ReactionRate):
 *                 self._rate = rate
 *             elif callable(rate):             # <<<<<<<<<<<<<<
 *                 self._rate = CustomRate(rate)
 *             else:
 */
    goto __pyx_L3;
  }

  /* "cantera/reaction.pyx":1603
 *                 self._rate = CustomRate(rate)
 *             else:
 *                 raise TypeError(f"Invalid rate definition with type '{type(rate)}'")             # <<<<<<<<<<<<<<
 *             self.reaction.setRate(self._rate._rate)
 * 
 */
  /*else*/ {
    __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = 0;
    __pyx_t_4 = 127;
    __Pyx_INCREF(__pyx_kp_u_Invalid_rate_definition_with_typ);
    __pyx_t_3 += 35;
    __Pyx_GIVEREF(__pyx_kp_u_Invalid_rate_definition_with_typ);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_kp_u_Invalid_rate_definition_with_typ);
    __pyx_t_5 = __Pyx_PyObject_FormatSimple(((PyObject *)Py_TYPE(__pyx_v_rate)), __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_4 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_4) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_4;
    __pyx_t_3 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_5);
    __pyx_t_5 = 0;
    __Pyx_INCREF(__pyx_kp_u__9);
    __pyx_t_3 += 1;
    __Pyx_GIVEREF(__pyx_kp_u__9);
    PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_kp_u__9);
    __pyx_t_5 = __Pyx_PyUnicode_Join(__pyx_t_2, 3, __pyx_t_3, __pyx_t_4); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_TypeError, __pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1603, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_Raise(__pyx_t_2, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __PYX_ERR(0, 1603, __pyx_L1_error)
  }
  __pyx_L3:;

  /* "cantera/reaction.pyx":1604
 *             else:
 *                 raise TypeError(f"Invalid rate definition with type '{type(rate)}'")
 *             self.reaction.setRate(self._rate._rate)             # <<<<<<<<<<<<<<
 * 
 *     property reversible:
 */
  __pyx_v_self->reaction->setRate(__pyx_v_self->_rate->_rate);

  /* "cantera/reaction.pyx":1597
 *             return self._rate
 * 
 *         def __set__(self, rate):             # <<<<<<<<<<<<<<
 *             if isinstance(rate, ReactionRate):
 *                 self._rate = rate
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.Reaction.rate.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1611
 *         otherwise.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.reaction.reversible
 *         def __set__(self, reversible):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_10reversible_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_10reversible_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_10reversible___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_10reversible___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1612
 *         """
 *         def __get__(self):
 *             return self.reaction.reversible             # <<<<<<<<<<<<<<
 *         def __set__(self, reversible):
 *             self.reaction.reversible = reversible
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->reaction->reversible); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1612, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1611
 *         otherwise.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.reaction.reversible
 *         def __set__(self, reversible):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.reversible.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1613
 *         def __get__(self):
 *             return self.reaction.reversible
 *         def __set__(self, reversible):             # <<<<<<<<<<<<<<
 *             self.reaction.reversible = reversible
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_10reversible_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reversible); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_10reversible_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_reversible) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_10reversible_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_reversible));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_10reversible_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_reversible) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1614
 *             return self.reaction.reversible
 *         def __set__(self, reversible):
 *             self.reaction.reversible = reversible             # <<<<<<<<<<<<<<
 * 
 *     property duplicate:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_reversible); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1614, __pyx_L1_error)
  __pyx_v_self->reaction->reversible = __pyx_t_1;

  /* "cantera/reaction.pyx":1613
 *         def __get__(self):
 *             return self.reaction.reversible
 *         def __set__(self, reversible):             # <<<<<<<<<<<<<<
 *             self.reaction.reversible = reversible
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.reversible.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1621
 *         or `False` otherwise.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.reaction.duplicate
 *         def __set__(self, duplicate):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_9duplicate_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_9duplicate_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_9duplicate___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_9duplicate___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1622
 *         """
 *         def __get__(self):
 *             return self.reaction.duplicate             # <<<<<<<<<<<<<<
 *         def __set__(self, duplicate):
 *              self.reaction.duplicate = duplicate
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->reaction->duplicate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1622, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1621
 *         or `False` otherwise.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.reaction.duplicate
 *         def __set__(self, duplicate):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.duplicate.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1623
 *         def __get__(self):
 *             return self.reaction.duplicate
 *         def __set__(self, duplicate):             # <<<<<<<<<<<<<<
 *              self.reaction.duplicate = duplicate
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_9duplicate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_duplicate); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_9duplicate_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_duplicate) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_9duplicate_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_duplicate));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_9duplicate_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_duplicate) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1624
 *             return self.reaction.duplicate
 *         def __set__(self, duplicate):
 *              self.reaction.duplicate = duplicate             # <<<<<<<<<<<<<<
 * 
 *     property allow_nonreactant_orders:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_duplicate); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1624, __pyx_L1_error)
  __pyx_v_self->reaction->duplicate = __pyx_t_1;

  /* "cantera/reaction.pyx":1623
 *         def __get__(self):
 *             return self.reaction.duplicate
 *         def __set__(self, duplicate):             # <<<<<<<<<<<<<<
 *              self.reaction.duplicate = duplicate
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.duplicate.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1631
 *         non-reactant species. Default is `False`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.reaction.allow_nonreactant_orders
 *         def __set__(self, allow):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_24allow_nonreactant_orders_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_24allow_nonreactant_orders_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_24allow_nonreactant_orders___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_24allow_nonreactant_orders___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1632
 *         """
 *         def __get__(self):
 *             return self.reaction.allow_nonreactant_orders             # <<<<<<<<<<<<<<
 *         def __set__(self, allow):
 *             self.reaction.allow_nonreactant_orders = allow
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->reaction->allow_nonreactant_orders); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1632, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1631
 *         non-reactant species. Default is `False`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.reaction.allow_nonreactant_orders
 *         def __set__(self, allow):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.allow_nonreactant_orders.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1633
 *         def __get__(self):
 *             return self.reaction.allow_nonreactant_orders
 *         def __set__(self, allow):             # <<<<<<<<<<<<<<
 *             self.reaction.allow_nonreactant_orders = allow
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_24allow_nonreactant_orders_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_allow); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_24allow_nonreactant_orders_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_allow) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_24allow_nonreactant_orders_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_allow));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_24allow_nonreactant_orders_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_allow) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1634
 *             return self.reaction.allow_nonreactant_orders
 *         def __set__(self, allow):
 *             self.reaction.allow_nonreactant_orders = allow             # <<<<<<<<<<<<<<
 * 
 *     property allow_negative_orders:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_allow); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1634, __pyx_L1_error)
  __pyx_v_self->reaction->allow_nonreactant_orders = __pyx_t_1;

  /* "cantera/reaction.pyx":1633
 *         def __get__(self):
 *             return self.reaction.allow_nonreactant_orders
 *         def __set__(self, allow):             # <<<<<<<<<<<<<<
 *             self.reaction.allow_nonreactant_orders = allow
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.allow_nonreactant_orders.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1641
 *         Default is `False`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.reaction.allow_negative_orders
 *         def __set__(self, allow):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_21allow_negative_orders_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_21allow_negative_orders_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_21allow_negative_orders___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_21allow_negative_orders___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1642
 *         """
 *         def __get__(self):
 *             return self.reaction.allow_negative_orders             # <<<<<<<<<<<<<<
 *         def __set__(self, allow):
 *             self.reaction.allow_negative_orders = allow
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyBool_FromLong(__pyx_v_self->reaction->allow_negative_orders); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1642, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1641
 *         Default is `False`.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.reaction.allow_negative_orders
 *         def __set__(self, allow):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.allow_negative_orders.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1643
 *         def __get__(self):
 *             return self.reaction.allow_negative_orders
 *         def __set__(self, allow):             # <<<<<<<<<<<<<<
 *             self.reaction.allow_negative_orders = allow
 * 
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_21allow_negative_orders_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_allow); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_21allow_negative_orders_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_allow) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_21allow_negative_orders_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_allow));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_21allow_negative_orders_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_allow) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  bool __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1644
 *             return self.reaction.allow_negative_orders
 *         def __set__(self, allow):
 *             self.reaction.allow_negative_orders = allow             # <<<<<<<<<<<<<<
 * 
 *     property input_data:
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_allow); if (unlikely((__pyx_t_1 == ((bool)-1)) && PyErr_Occurred())) __PYX_ERR(0, 1644, __pyx_L1_error)
  __pyx_v_self->reaction->allow_negative_orders = __pyx_t_1;

  /* "cantera/reaction.pyx":1643
 *         def __get__(self):
 *             return self.reaction.allow_negative_orders
 *         def __set__(self, allow):             # <<<<<<<<<<<<<<
 *             self.reaction.allow_negative_orders = allow
 * 
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.allow_negative_orders.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1652
 *         definition.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return anymap_to_py(self.reaction.parameters(True))
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_10input_data_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_10input_data_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_10input_data___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_10input_data___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1653
 *         """
 *         def __get__(self):
 *             return anymap_to_py(self.reaction.parameters(True))             # <<<<<<<<<<<<<<
 * 
 *     def update_user_data(self, data):
 */
  __Pyx_XDECREF(__pyx_r);
  try {
    __pyx_t_1 = __pyx_v_self->reaction->parameters(1);
  } catch(...) {
    translate_exception(); if (!PyErr_Occurred())PyErr_SetString(PyExc_RuntimeError, "Error converting c++ exception.");
    __PYX_ERR(0, 1653, __pyx_L1_error)
  }
  __pyx_t_2 = __pyx_f_7cantera_6_utils_anymap_to_py(__pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1653, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1652
 *         definition.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return anymap_to_py(self.reaction.parameters(True))
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.input_data.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1655
 *             return anymap_to_py(self.reaction.parameters(True))
 * 
 *     def update_user_data(self, data):             # <<<<<<<<<<<<<<
 *         """
 *         Add the contents of the provided `dict` as additional fields when generating
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_13update_user_data(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_8Reaction_12update_user_data, "\n        Add the contents of the provided `dict` as additional fields when generating\n        YAML phase definition files with `Solution.write_yaml` or in the data returned\n        by `input_data`. Existing keys with matching names are overwritten.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_8Reaction_13update_user_data = {"update_user_data", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_13update_user_data, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_12update_user_data};
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_13update_user_data(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_data = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("update_user_data (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_data,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_data)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1655, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "update_user_data") < 0)) __PYX_ERR(0, 1655, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_data = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("update_user_data", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1655, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.update_user_data", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_12update_user_data(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), __pyx_v_data);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_12update_user_data(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_data) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::AnyMap __pyx_t_1;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("update_user_data", 0);

  /* "cantera/reaction.pyx":1661
 *         by `input_data`. Existing keys with matching names are overwritten.
 *         """
 *         self.reaction.input.update(py_to_anymap(data), False)             # <<<<<<<<<<<<<<
 * 
 *     def clear_user_data(self):
 */
  __pyx_t_1 = __pyx_f_7cantera_6_utils_py_to_anymap(__pyx_v_data, NULL); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1661, __pyx_L1_error)
  __pyx_v_self->reaction->input.update(__pyx_t_1, 0);

  /* "cantera/reaction.pyx":1655
 *             return anymap_to_py(self.reaction.parameters(True))
 * 
 *     def update_user_data(self, data):             # <<<<<<<<<<<<<<
 *         """
 *         Add the contents of the provided `dict` as additional fields when generating
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.update_user_data", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1663
 *         self.reaction.input.update(py_to_anymap(data), False)
 * 
 *     def clear_user_data(self):             # <<<<<<<<<<<<<<
 *         """
 *         Clear all saved input data, so that the data given by `input_data` or
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_15clear_user_data(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_8Reaction_14clear_user_data, "\n        Clear all saved input data, so that the data given by `input_data` or\n        `Solution.write_yaml` will only include values generated by Cantera based on\n        the current object state.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_8Reaction_15clear_user_data = {"clear_user_data", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_15clear_user_data, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_14clear_user_data};
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_15clear_user_data(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear_user_data (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("clear_user_data", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "clear_user_data", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_14clear_user_data(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_14clear_user_data(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("clear_user_data", 0);

  /* "cantera/reaction.pyx":1669
 *         the current object state.
 *         """
 *         self.reaction.input.clear()             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __pyx_v_self->reaction->input.clear();

  /* "cantera/reaction.pyx":1663
 *         self.reaction.input.update(py_to_anymap(data), False)
 * 
 *     def clear_user_data(self):             # <<<<<<<<<<<<<<
 *         """
 *         Clear all saved input data, so that the data given by `input_data` or
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1671
 *         self.reaction.input.clear()
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return f"{self.equation}    <{self.reaction_type}>"
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_17__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_17__repr__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_16__repr__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_16__repr__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  Py_UCS4 __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "cantera/reaction.pyx":1672
 * 
 *     def __repr__(self):
 *         return f"{self.equation}    <{self.reaction_type}>"             # <<<<<<<<<<<<<<
 * 
 *     def __str__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = 0;
  __pyx_t_3 = 127;
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_equation); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __pyx_t_5 = __Pyx_PyObject_FormatSimple(__pyx_t_4, __pyx_empty_unicode); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_5) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_5);
  __Pyx_GIVEREF(__pyx_t_5);
  PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
  __pyx_t_5 = 0;
  __Pyx_INCREF(__pyx_kp_u__20);
  __pyx_t_2 += 5;
  __Pyx_GIVEREF(__pyx_kp_u__20);
  PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_kp_u__20);
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_reaction_type); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_4 = __Pyx_PyObject_FormatSimple(__pyx_t_5, __pyx_empty_unicode); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
  __pyx_t_3 = (__Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) > __pyx_t_3) ? __Pyx_PyUnicode_MAX_CHAR_VALUE(__pyx_t_4) : __pyx_t_3;
  __pyx_t_2 += __Pyx_PyUnicode_GET_LENGTH(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_4);
  PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_4);
  __pyx_t_4 = 0;
  __Pyx_INCREF(__pyx_kp_u__4);
  __pyx_t_2 += 1;
  __Pyx_GIVEREF(__pyx_kp_u__4);
  PyTuple_SET_ITEM(__pyx_t_1, 3, __pyx_kp_u__4);
  __pyx_t_4 = __Pyx_PyUnicode_Join(__pyx_t_1, 4, __pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1672, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_4;
  __pyx_t_4 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1671
 *         self.reaction.input.clear()
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return f"{self.equation}    <{self.reaction_type}>"
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("cantera.reaction.Reaction.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1674
 *         return f"{self.equation}    <{self.reaction_type}>"
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return self.equation
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_19__str__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_19__str__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__str__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_18__str__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_18__str__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__str__", 0);

  /* "cantera/reaction.pyx":1675
 * 
 *     def __str__(self):
 *         return self.equation             # <<<<<<<<<<<<<<
 * 
 *     property rate_coeff_units:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_equation); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1675, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1674
 *         return f"{self.equation}    <{self.reaction_type}>"
 * 
 *     def __str__(self):             # <<<<<<<<<<<<<<
 *         return self.equation
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Reaction.__str__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1679
 *     property rate_coeff_units:
 *         """Get reaction rate coefficient units"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef CxxUnits rate_units = self.reaction.rate_units
 *             return Units.copy(rate_units)
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_16rate_coeff_units_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_16rate_coeff_units_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_16rate_coeff_units___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_16rate_coeff_units___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  Cantera::Units __pyx_v_rate_units;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Cantera::Units __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1680
 *         """Get reaction rate coefficient units"""
 *         def __get__(self):
 *             cdef CxxUnits rate_units = self.reaction.rate_units             # <<<<<<<<<<<<<<
 *             return Units.copy(rate_units)
 * 
 */
  __pyx_t_1 = __pyx_v_self->reaction->rate_units;
  __pyx_v_rate_units = __PYX_STD_MOVE_IF_SUPPORTED(__pyx_t_1);

  /* "cantera/reaction.pyx":1681
 *         def __get__(self):
 *             cdef CxxUnits rate_units = self.reaction.rate_units
 *             return Units.copy(rate_units)             # <<<<<<<<<<<<<<
 * 
 *     property third_body:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = ((PyObject *)__pyx_vtabptr_7cantera_5units_Units->copy(__pyx_v_rate_units)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1681, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1679
 *     property rate_coeff_units:
 *         """Get reaction rate coefficient units"""
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             cdef CxxUnits rate_units = self.reaction.rate_units
 *             return Units.copy(rate_units)
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.rate_coeff_units.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1690
 *         .. versionadded:: 3.0
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.reaction.usesThirdBody():
 *                 return ThirdBody.wrap(self.reaction.thirdBody())
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_10third_body_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_10third_body_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_10third_body___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_10third_body___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1691
 *         """
 *         def __get__(self):
 *             if self.reaction.usesThirdBody():             # <<<<<<<<<<<<<<
 *                 return ThirdBody.wrap(self.reaction.thirdBody())
 * 
 */
  __pyx_t_1 = (__pyx_v_self->reaction->usesThirdBody() != 0);
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":1692
 *         def __get__(self):
 *             if self.reaction.usesThirdBody():
 *                 return ThirdBody.wrap(self.reaction.thirdBody())             # <<<<<<<<<<<<<<
 * 
 *     @property
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_f_7cantera_8reaction_9ThirdBody_wrap(__pyx_v_self->reaction->thirdBody()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1692, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_r = __pyx_t_2;
    __pyx_t_2 = 0;
    goto __pyx_L0;

    /* "cantera/reaction.pyx":1691
 *         """
 *         def __get__(self):
 *             if self.reaction.usesThirdBody():             # <<<<<<<<<<<<<<
 *                 return ThirdBody.wrap(self.reaction.thirdBody())
 * 
 */
  }

  /* "cantera/reaction.pyx":1690
 *         .. versionadded:: 3.0
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             if self.reaction.usesThirdBody():
 *                 return ThirdBody.wrap(self.reaction.thirdBody())
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.third_body.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1694
 *                 return ThirdBody.wrap(self.reaction.thirdBody())
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def third_body_name(self):
 *         """
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_15third_body_name_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_15third_body_name_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_15third_body_name___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_15third_body_name___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1702
 *         .. versionadded:: 3.0
 *         """
 *         if self.reaction.usesThirdBody():             # <<<<<<<<<<<<<<
 *             return ThirdBody.wrap(self.reaction.thirdBody()).name
 *         return None
 */
  __pyx_t_1 = (__pyx_v_self->reaction->usesThirdBody() != 0);
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":1703
 *         """
 *         if self.reaction.usesThirdBody():
 *             return ThirdBody.wrap(self.reaction.thirdBody()).name             # <<<<<<<<<<<<<<
 *         return None
 * 
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_t_2 = __pyx_f_7cantera_8reaction_9ThirdBody_wrap(__pyx_v_self->reaction->thirdBody()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_name_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1703, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_r = __pyx_t_3;
    __pyx_t_3 = 0;
    goto __pyx_L0;

    /* "cantera/reaction.pyx":1702
 *         .. versionadded:: 3.0
 *         """
 *         if self.reaction.usesThirdBody():             # <<<<<<<<<<<<<<
 *             return ThirdBody.wrap(self.reaction.thirdBody()).name
 *         return None
 */
  }

  /* "cantera/reaction.pyx":1704
 *         if self.reaction.usesThirdBody():
 *             return ThirdBody.wrap(self.reaction.thirdBody()).name
 *         return None             # <<<<<<<<<<<<<<
 * 
 *     property efficiencies:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1694
 *                 return ThirdBody.wrap(self.reaction.thirdBody())
 * 
 *     @property             # <<<<<<<<<<<<<<
 *     def third_body_name(self):
 *         """
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("cantera.reaction.Reaction.third_body_name.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1716
 *             `ThirdBody` object instead.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_12efficiencies_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_12efficiencies_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_12efficiencies___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_12efficiencies___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1717
 *         """
 *         def __get__(self):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1719
 *             warnings.warn(
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__21, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1720
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.efficiencies
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1720, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_1 == Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_3)) {

    /* "cantera/reaction.pyx":1721
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")             # <<<<<<<<<<<<<<
 *             return self.third_body.efficiencies
 *         def __set__(self, eff):
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1721, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1721, __pyx_L1_error)

    /* "cantera/reaction.pyx":1720
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.efficiencies
 */
  }

  /* "cantera/reaction.pyx":1722
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.efficiencies             # <<<<<<<<<<<<<<
 *         def __set__(self, eff):
 *             warnings.warn(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_efficiencies); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1722, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1716
 *             `ThirdBody` object instead.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.efficiencies.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1723
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.efficiencies
 *         def __set__(self, eff):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_12efficiencies_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_eff); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_12efficiencies_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_eff) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_12efficiencies_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_eff));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_12efficiencies_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_eff) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  __pyx_t_7cantera_5ctcxx_Composition __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1724
 *             return self.third_body.efficiencies
 *         def __set__(self, eff):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1726
 *             warnings.warn(
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__23, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1727
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Reaction does not involve third body collider")
 *             self.third_body.efficiencies = comp_map(eff)
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1727, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_1 == Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_3)) {

    /* "cantera/reaction.pyx":1728
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")             # <<<<<<<<<<<<<<
 *             self.third_body.efficiencies = comp_map(eff)
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1728, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1728, __pyx_L1_error)

    /* "cantera/reaction.pyx":1727
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Reaction does not involve third body collider")
 *             self.third_body.efficiencies = comp_map(eff)
 */
  }

  /* "cantera/reaction.pyx":1729
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")
 *             self.third_body.efficiencies = comp_map(eff)             # <<<<<<<<<<<<<<
 * 
 *     property default_efficiency:
 */
  __pyx_t_4 = __pyx_f_7cantera_6_utils_comp_map(__pyx_v_eff); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1729, __pyx_L1_error)
  __pyx_t_1 = __pyx_convert_map_to_py_std_3a__3a_string____double(__pyx_t_4); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1729, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1729, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PyObject_SetAttrStr(__pyx_t_2, __pyx_n_s_efficiencies, __pyx_t_1) < 0) __PYX_ERR(0, 1729, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":1723
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.efficiencies
 *         def __set__(self, eff):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.efficiencies.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1741
 *             `ThirdBody` object instead.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_18default_efficiency_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_18default_efficiency_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_18default_efficiency___get__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_18default_efficiency___get__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1742
 *         """
 *         def __get__(self):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1744
 *             warnings.warn(
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__24, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1745
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.default_efficiency
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1745, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_1 == Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_3)) {

    /* "cantera/reaction.pyx":1746
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")             # <<<<<<<<<<<<<<
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1746, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1746, __pyx_L1_error)

    /* "cantera/reaction.pyx":1745
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.default_efficiency
 */
  }

  /* "cantera/reaction.pyx":1747
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.default_efficiency             # <<<<<<<<<<<<<<
 *         def __set__(self, default_eff):
 *             warnings.warn(
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_default_efficiency); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1747, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_r = __pyx_t_2;
  __pyx_t_2 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1741
 *             `ThirdBody` object instead.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.default_efficiency.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1748
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_8Reaction_18default_efficiency_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_default_eff); /*proto*/
static int __pyx_pw_7cantera_8reaction_8Reaction_18default_efficiency_3__set__(PyObject *__pyx_v_self, PyObject *__pyx_v_default_eff) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__set__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_18default_efficiency_2__set__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), ((PyObject *)__pyx_v_default_eff));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_8Reaction_18default_efficiency_2__set__(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_default_eff) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__set__", 0);

  /* "cantera/reaction.pyx":1749
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1751
 *             warnings.warn(
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__25, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1752
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Reaction does not involve third body collider")
 *             self.third_body.default_efficiency = default_eff
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1752, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_1 == Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_3)) {

    /* "cantera/reaction.pyx":1753
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")             # <<<<<<<<<<<<<<
 *             self.third_body.default_efficiency = default_eff
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1753, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1753, __pyx_L1_error)

    /* "cantera/reaction.pyx":1752
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:             # <<<<<<<<<<<<<<
 *                 raise ValueError("Reaction does not involve third body collider")
 *             self.third_body.default_efficiency = default_eff
 */
  }

  /* "cantera/reaction.pyx":1754
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")
 *             self.third_body.default_efficiency = default_eff             # <<<<<<<<<<<<<<
 * 
 *     def efficiency(self, species):
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1754, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_PyObject_SetAttrStr(__pyx_t_1, __pyx_n_s_default_efficiency, __pyx_v_default_eff) < 0) __PYX_ERR(0, 1754, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1748
 *                 raise ValueError("Reaction does not involve third body collider")
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):             # <<<<<<<<<<<<<<
 *             warnings.warn(
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Reaction.default_efficiency.__set__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1756
 *             self.third_body.default_efficiency = default_eff
 * 
 *     def efficiency(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Get the efficiency of the third body named ``species`` considering both
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_21efficiency(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
PyDoc_STRVAR(__pyx_doc_7cantera_8reaction_8Reaction_20efficiency, "\n        Get the efficiency of the third body named ``species`` considering both\n        the default efficiency and species-specific efficiencies.\n\n        .. deprecated:: 3.0\n\n            To be removed after Cantera 3.0. Access via `third_body` property and\n            `ThirdBody` object instead.\n        ");
static PyMethodDef __pyx_mdef_7cantera_8reaction_8Reaction_21efficiency = {"efficiency", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_21efficiency, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_20efficiency};
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_21efficiency(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v_species = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("efficiency (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_species,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_species)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1756, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "efficiency") < 0)) __PYX_ERR(0, 1756, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v_species = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("efficiency", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1756, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.efficiency", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_20efficiency(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), __pyx_v_species);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_20efficiency(struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, PyObject *__pyx_v_species) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  std::string __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("efficiency", 0);

  /* "cantera/reaction.pyx":1766
 *             `ThirdBody` object instead.
 *         """
 *         warnings.warn(             # <<<<<<<<<<<<<<
 *             "Reaction.efficiency: Method is deprecated and will be removed after "
 *             "Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1768
 *         warnings.warn(
 *             "Reaction.efficiency: Method is deprecated and will be removed after "
 *             "Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)             # <<<<<<<<<<<<<<
 *         if self.third_body is None:
 *             raise ValueError("Reaction does not involve third body collider")
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__26, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1769
 *             "Reaction.efficiency: Method is deprecated and will be removed after "
 *             "Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *         if self.third_body is None:             # <<<<<<<<<<<<<<
 *             raise ValueError("Reaction does not involve third body collider")
 *         return self.third_body.efficiency(stringify(species))
 */
  __pyx_t_1 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1769, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_3 = (__pyx_t_1 == Py_None);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_t_3)) {

    /* "cantera/reaction.pyx":1770
 *             "Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *         if self.third_body is None:
 *             raise ValueError("Reaction does not involve third body collider")             # <<<<<<<<<<<<<<
 *         return self.third_body.efficiency(stringify(species))
 * 
 */
    __pyx_t_1 = __Pyx_PyObject_Call(__pyx_builtin_ValueError, __pyx_tuple__22, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1770, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_Raise(__pyx_t_1, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(0, 1770, __pyx_L1_error)

    /* "cantera/reaction.pyx":1769
 *             "Reaction.efficiency: Method is deprecated and will be removed after "
 *             "Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 *         if self.third_body is None:             # <<<<<<<<<<<<<<
 *             raise ValueError("Reaction does not involve third body collider")
 *         return self.third_body.efficiency(stringify(species))
 */
  }

  /* "cantera/reaction.pyx":1771
 *         if self.third_body is None:
 *             raise ValueError("Reaction does not involve third body collider")
 *         return self.third_body.efficiency(stringify(species))             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_third_body); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_efficiency); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_5 = __pyx_f_7cantera_6_utils_stringify(__pyx_v_species); if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1771, __pyx_L1_error)
  __pyx_t_2 = __pyx_convert_PyBytes_string_to_py_std__in_string(__pyx_t_5); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1771, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_4))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_4);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_4);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_4, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_6, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_4, __pyx_callargs+1-__pyx_t_7, 1+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1771, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1756
 *             self.third_body.default_efficiency = default_eff
 * 
 *     def efficiency(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Get the efficiency of the third body named ``species`` considering both
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera.reaction.Reaction.efficiency", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_23__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_8Reaction_23__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_23__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_23__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_22__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_22__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_25__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_8Reaction_25__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_25__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_8Reaction_25__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_8Reaction_24__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_Reaction *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_8Reaction_24__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_Reaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Reaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1786
 *     and ``E`` is the `activation_energy`.
 *     """
 *     def __cinit__(self, A=0, b=0, E=0, init=True):             # <<<<<<<<<<<<<<
 *         if init:
 *             self.base = new CxxArrheniusRate(A, b, E)
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_9Arrhenius_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_9Arrhenius_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_A = 0;
  PyObject *__pyx_v_b = 0;
  PyObject *__pyx_v_E = 0;
  PyObject *__pyx_v_init = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_A,&__pyx_n_s_b,&__pyx_n_s_E,&__pyx_n_s_init,0};
    PyObject* values[4] = {0,0,0,0};
    values[0] = ((PyObject *)__pyx_int_0);
    values[1] = ((PyObject *)__pyx_int_0);
    values[2] = ((PyObject *)__pyx_int_0);
    values[3] = ((PyObject *)Py_True);
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_A);
          if (value) { values[0] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1786, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  1:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_b);
          if (value) { values[1] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1786, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_E);
          if (value) { values[2] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1786, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  3:
        if (kw_args > 0) {
          PyObject* value = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_init);
          if (value) { values[3] = value; kw_args--; }
          else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1786, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__cinit__") < 0)) __PYX_ERR(0, 1786, __pyx_L3_error)
      }
    } else {
      switch (__pyx_nargs) {
        case  4: values[3] = __Pyx_Arg_VARARGS(__pyx_args, 3);
        CYTHON_FALLTHROUGH;
        case  3: values[2] = __Pyx_Arg_VARARGS(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_VARARGS(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_A = values[0];
    __pyx_v_b = values[1];
    __pyx_v_E = values[2];
    __pyx_v_init = values[3];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 0, 4, __pyx_nargs); __PYX_ERR(0, 1786, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_9Arrhenius___cinit__(((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_self), __pyx_v_A, __pyx_v_b, __pyx_v_E, __pyx_v_init);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_9Arrhenius___cinit__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self, PyObject *__pyx_v_A, PyObject *__pyx_v_b, PyObject *__pyx_v_E, PyObject *__pyx_v_init) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  double __pyx_t_2;
  double __pyx_t_3;
  double __pyx_t_4;
  Cantera::ArrheniusRate *__pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__cinit__", 0);

  /* "cantera/reaction.pyx":1787
 *     """
 *     def __cinit__(self, A=0, b=0, E=0, init=True):
 *         if init:             # <<<<<<<<<<<<<<
 *             self.base = new CxxArrheniusRate(A, b, E)
 *             self.own_rate = True
 */
  __pyx_t_1 = __Pyx_PyObject_IsTrue(__pyx_v_init); if (unlikely((__pyx_t_1 < 0))) __PYX_ERR(0, 1787, __pyx_L1_error)
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":1788
 *     def __cinit__(self, A=0, b=0, E=0, init=True):
 *         if init:
 *             self.base = new CxxArrheniusRate(A, b, E)             # <<<<<<<<<<<<<<
 *             self.own_rate = True
 *             self.reaction = None
 */
    __pyx_t_2 = __pyx_PyFloat_AsDouble(__pyx_v_A); if (unlikely((__pyx_t_2 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1788, __pyx_L1_error)
    __pyx_t_3 = __pyx_PyFloat_AsDouble(__pyx_v_b); if (unlikely((__pyx_t_3 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1788, __pyx_L1_error)
    __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_E); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1788, __pyx_L1_error)
    __pyx_t_5 = new Cantera::ArrheniusRate(__pyx_t_2, __pyx_t_3, __pyx_t_4); 
    __pyx_v_self->base = __pyx_t_5;

    /* "cantera/reaction.pyx":1789
 *         if init:
 *             self.base = new CxxArrheniusRate(A, b, E)
 *             self.own_rate = True             # <<<<<<<<<<<<<<
 *             self.reaction = None
 *         else:
 */
    __pyx_v_self->own_rate = 1;

    /* "cantera/reaction.pyx":1790
 *             self.base = new CxxArrheniusRate(A, b, E)
 *             self.own_rate = True
 *             self.reaction = None             # <<<<<<<<<<<<<<
 *         else:
 *             self.own_rate = False
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF((PyObject *)__pyx_v_self->reaction);
    __Pyx_DECREF((PyObject *)__pyx_v_self->reaction);
    __pyx_v_self->reaction = ((struct __pyx_obj_7cantera_8reaction_Reaction *)Py_None);

    /* "cantera/reaction.pyx":1787
 *     """
 *     def __cinit__(self, A=0, b=0, E=0, init=True):
 *         if init:             # <<<<<<<<<<<<<<
 *             self.base = new CxxArrheniusRate(A, b, E)
 *             self.own_rate = True
 */
    goto __pyx_L3;
  }

  /* "cantera/reaction.pyx":1792
 *             self.reaction = None
 *         else:
 *             self.own_rate = False             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  /*else*/ {
    __pyx_v_self->own_rate = 0;
  }
  __pyx_L3:;

  /* "cantera/reaction.pyx":1786
 *     and ``E`` is the `activation_energy`.
 *     """
 *     def __cinit__(self, A=0, b=0, E=0, init=True):             # <<<<<<<<<<<<<<
 *         if init:
 *             self.base = new CxxArrheniusRate(A, b, E)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1794
 *             self.own_rate = False
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.own_rate:
 *             del self.base
 */

/* Python wrapper */
static void __pyx_pw_7cantera_8reaction_9Arrhenius_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_7cantera_8reaction_9Arrhenius_3__dealloc__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_7cantera_8reaction_9Arrhenius_2__dealloc__(((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

static void __pyx_pf_7cantera_8reaction_9Arrhenius_2__dealloc__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_RefNannySetupContext("__dealloc__", 0);

  /* "cantera/reaction.pyx":1795
 * 
 *     def __dealloc__(self):
 *         if self.own_rate:             # <<<<<<<<<<<<<<
 *             del self.base
 * 
 */
  __pyx_t_1 = (__pyx_v_self->own_rate != 0);
  if (__pyx_t_1) {

    /* "cantera/reaction.pyx":1796
 *     def __dealloc__(self):
 *         if self.own_rate:
 *             del self.base             # <<<<<<<<<<<<<<
 * 
 *     @staticmethod
 */
    delete __pyx_v_self->base;

    /* "cantera/reaction.pyx":1795
 * 
 *     def __dealloc__(self):
 *         if self.own_rate:             # <<<<<<<<<<<<<<
 *             del self.base
 * 
 */
  }

  /* "cantera/reaction.pyx":1794
 *             self.own_rate = False
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self.own_rate:
 *             del self.base
 */

  /* function exit code */
  __Pyx_RefNannyFinishContext();
}

/* "cantera/reaction.pyx":1799
 * 
 *     @staticmethod
 *     cdef wrap(CxxArrheniusRate* rate):             # <<<<<<<<<<<<<<
 *         r = Arrhenius(init=False)
 *         r.base = rate
 */

static PyObject *__pyx_f_7cantera_8reaction_9Arrhenius_wrap(Cantera::ArrheniusRate *__pyx_v_rate) {
  struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_r = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("wrap", 0);

  /* "cantera/reaction.pyx":1800
 *     @staticmethod
 *     cdef wrap(CxxArrheniusRate* rate):
 *         r = Arrhenius(init=False)             # <<<<<<<<<<<<<<
 *         r.base = rate
 *         r.reaction = None
 */
  __pyx_t_1 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (PyDict_SetItem(__pyx_t_1, __pyx_n_s_init, Py_False) < 0) __PYX_ERR(0, 1800, __pyx_L1_error)
  __pyx_t_2 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cantera_8reaction_Arrhenius), __pyx_empty_tuple, __pyx_t_1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1800, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_v_r = ((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":1801
 *     cdef wrap(CxxArrheniusRate* rate):
 *         r = Arrhenius(init=False)
 *         r.base = rate             # <<<<<<<<<<<<<<
 *         r.reaction = None
 *         return r
 */
  __pyx_v_r->base = __pyx_v_rate;

  /* "cantera/reaction.pyx":1802
 *         r = Arrhenius(init=False)
 *         r.base = rate
 *         r.reaction = None             # <<<<<<<<<<<<<<
 *         return r
 * 
 */
  __Pyx_INCREF(Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GOTREF((PyObject *)__pyx_v_r->reaction);
  __Pyx_DECREF((PyObject *)__pyx_v_r->reaction);
  __pyx_v_r->reaction = ((struct __pyx_obj_7cantera_8reaction_Reaction *)Py_None);

  /* "cantera/reaction.pyx":1803
 *         r.base = rate
 *         r.reaction = None
 *         return r             # <<<<<<<<<<<<<<
 * 
 *     property pre_exponential_factor:
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_r);
  __pyx_r = ((PyObject *)__pyx_v_r);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1799
 * 
 *     @staticmethod
 *     cdef wrap(CxxArrheniusRate* rate):             # <<<<<<<<<<<<<<
 *         r = Arrhenius(init=False)
 *         r.base = rate
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.wrap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1810
 *         powers depending on the reaction order.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.preExponentialFactor()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_22pre_exponential_factor_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_22pre_exponential_factor_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9Arrhenius_22pre_exponential_factor___get__(((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_22pre_exponential_factor___get__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1811
 *         """
 *         def __get__(self):
 *             return self.base.preExponentialFactor()             # <<<<<<<<<<<<<<
 * 
 *     property temperature_exponent:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->base->preExponentialFactor()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1811, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1810
 *         powers depending on the reaction order.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.preExponentialFactor()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.pre_exponential_factor.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1817
 *         The temperature exponent ``b``.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.temperatureExponent()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_20temperature_exponent_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_20temperature_exponent_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9Arrhenius_20temperature_exponent___get__(((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_20temperature_exponent___get__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1818
 *         """
 *         def __get__(self):
 *             return self.base.temperatureExponent()             # <<<<<<<<<<<<<<
 * 
 *     property activation_energy:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->base->temperatureExponent()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1818, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1817
 *         The temperature exponent ``b``.
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.temperatureExponent()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.temperature_exponent.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1824
 *         The activation energy ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.activationEnergy()
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_17activation_energy_1__get__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_17activation_energy_1__get__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__get__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9Arrhenius_17activation_energy___get__(((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_17activation_energy___get__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__get__", 0);

  /* "cantera/reaction.pyx":1825
 *         """
 *         def __get__(self):
 *             return self.base.activationEnergy()             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->base->activationEnergy()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1825, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1824
 *         The activation energy ``E`` [J/kmol].
 *         """
 *         def __get__(self):             # <<<<<<<<<<<<<<
 *             return self.base.activationEnergy()
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.activation_energy.__get__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1827
 *             return self.base.activationEnergy()
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'Arrhenius(A={:g}, b={:g}, E={:g})'.format(
 *             self.pre_exponential_factor, self.temperature_exponent,
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_5__repr__(PyObject *__pyx_v_self); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_5__repr__(PyObject *__pyx_v_self) {
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__repr__ (wrapper)", 0);
  __pyx_r = __pyx_pf_7cantera_8reaction_9Arrhenius_4__repr__(((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_4__repr__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__repr__", 0);

  /* "cantera/reaction.pyx":1828
 * 
 *     def __repr__(self):
 *         return 'Arrhenius(A={:g}, b={:g}, E={:g})'.format(             # <<<<<<<<<<<<<<
 *             self.pre_exponential_factor, self.temperature_exponent,
 *             self.activation_energy)
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_kp_u_Arrhenius_A_g_b_g_E_g, __pyx_n_s_format); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1828, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cantera/reaction.pyx":1829
 *     def __repr__(self):
 *         return 'Arrhenius(A={:g}, b={:g}, E={:g})'.format(
 *             self.pre_exponential_factor, self.temperature_exponent,             # <<<<<<<<<<<<<<
 *             self.activation_energy)
 * 
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_pre_exponential_factor); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1829, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_temperature_exponent); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1829, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);

  /* "cantera/reaction.pyx":1830
 *         return 'Arrhenius(A={:g}, b={:g}, E={:g})'.format(
 *             self.pre_exponential_factor, self.temperature_exponent,
 *             self.activation_energy)             # <<<<<<<<<<<<<<
 * 
 *     def __call__(self, float T):
 */
  __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v_self), __pyx_n_s_activation_energy); if (unlikely(!__pyx_t_5)) __PYX_ERR(0, 1830, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_5);
  __pyx_t_6 = NULL;
  __pyx_t_7 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_2))) {
    __pyx_t_6 = PyMethod_GET_SELF(__pyx_t_2);
    if (likely(__pyx_t_6)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_2);
      __Pyx_INCREF(__pyx_t_6);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_2, function);
      __pyx_t_7 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[4] = {__pyx_t_6, __pyx_t_3, __pyx_t_4, __pyx_t_5};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_2, __pyx_callargs+1-__pyx_t_7, 3+__pyx_t_7);
    __Pyx_XDECREF(__pyx_t_6); __pyx_t_6 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1828, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1827
 *             return self.base.activationEnergy()
 * 
 *     def __repr__(self):             # <<<<<<<<<<<<<<
 *         return 'Arrhenius(A={:g}, b={:g}, E={:g})'.format(
 *             self.pre_exponential_factor, self.temperature_exponent,
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.__repr__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1832
 *             self.activation_energy)
 * 
 *     def __call__(self, float T):             # <<<<<<<<<<<<<<
 *         return self.base.evalRate(np.log(T), 1/T)
 * 
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_7__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_7__call__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  float __pyx_v_T;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__call__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_T,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_VARARGS(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_VARARGS(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_T)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1832, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__call__") < 0)) __PYX_ERR(0, 1832, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_VARARGS(__pyx_args, 0);
    }
    __pyx_v_T = __pyx_PyFloat_AsFloat(values[0]); if (unlikely((__pyx_v_T == (float)-1) && PyErr_Occurred())) __PYX_ERR(0, 1832, __pyx_L3_error)
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__call__", 1, 1, 1, __pyx_nargs); __PYX_ERR(0, 1832, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_9Arrhenius_6__call__(((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_self), __pyx_v_T);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_6__call__(struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self, float __pyx_v_T) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  double __pyx_t_6;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__call__", 0);

  /* "cantera/reaction.pyx":1833
 * 
 *     def __call__(self, float T):
 *         return self.base.evalRate(np.log(T), 1/T)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_GetModuleGlobalName(__pyx_t_2, __pyx_n_s_np); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(__pyx_t_2, __pyx_n_s_log); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_T); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && unlikely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_t_2};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1833, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_t_6 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_6 == (double)-1) && PyErr_Occurred())) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(__pyx_v_T == 0)) {
    PyErr_SetString(PyExc_ZeroDivisionError, "float division");
    __PYX_ERR(0, 1833, __pyx_L1_error)
  }
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_self->base->evalRate(__pyx_t_6, (1.0 / __pyx_v_T))); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1833, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1832
 *             self.activation_energy)
 * 
 *     def __call__(self, float T):             # <<<<<<<<<<<<<<
 *         return self.base.evalRate(np.log(T), 1/T)
 * 
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.__call__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_9Arrhenius_9__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9Arrhenius_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_9__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_9Arrhenius_8__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_8__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_9Arrhenius_11__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9Arrhenius_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_9Arrhenius_11__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_9Arrhenius_10__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_9Arrhenius_10__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.Arrhenius.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1836
 * 
 * 
 * cdef copyArrhenius(CxxArrheniusRate* rate):             # <<<<<<<<<<<<<<
 *     r = Arrhenius(rate.preExponentialFactor(), rate.temperatureExponent(),
 *                   rate.activationEnergy())
 */

static PyObject *__pyx_f_7cantera_8reaction_copyArrhenius(Cantera::ArrheniusRate *__pyx_v_rate) {
  struct __pyx_obj_7cantera_8reaction_Arrhenius *__pyx_v_r = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("copyArrhenius", 0);

  /* "cantera/reaction.pyx":1837
 * 
 * cdef copyArrhenius(CxxArrheniusRate* rate):
 *     r = Arrhenius(rate.preExponentialFactor(), rate.temperatureExponent(),             # <<<<<<<<<<<<<<
 *                   rate.activationEnergy())
 *     return r
 */
  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_rate->preExponentialFactor()); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_rate->temperatureExponent()); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);

  /* "cantera/reaction.pyx":1838
 * cdef copyArrhenius(CxxArrheniusRate* rate):
 *     r = Arrhenius(rate.preExponentialFactor(), rate.temperatureExponent(),
 *                   rate.activationEnergy())             # <<<<<<<<<<<<<<
 *     return r
 * 
 */
  __pyx_t_3 = PyFloat_FromDouble(__pyx_v_rate->activationEnergy()); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1838, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);

  /* "cantera/reaction.pyx":1837
 * 
 * cdef copyArrhenius(CxxArrheniusRate* rate):
 *     r = Arrhenius(rate.preExponentialFactor(), rate.temperatureExponent(),             # <<<<<<<<<<<<<<
 *                   rate.activationEnergy())
 *     return r
 */
  __pyx_t_4 = PyTuple_New(3); if (unlikely(!__pyx_t_4)) __PYX_ERR(0, 1837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_4);
  __Pyx_GIVEREF(__pyx_t_1);
  PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_2);
  __Pyx_GIVEREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_4, 2, __pyx_t_3);
  __pyx_t_1 = 0;
  __pyx_t_2 = 0;
  __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_PyObject_Call(((PyObject *)__pyx_ptype_7cantera_8reaction_Arrhenius), __pyx_t_4, NULL); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1837, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
  __pyx_v_r = ((struct __pyx_obj_7cantera_8reaction_Arrhenius *)__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":1839
 *     r = Arrhenius(rate.preExponentialFactor(), rate.temperatureExponent(),
 *                   rate.activationEnergy())
 *     return r             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF((PyObject *)__pyx_v_r);
  __pyx_r = ((PyObject *)__pyx_v_r);
  goto __pyx_L0;

  /* "cantera/reaction.pyx":1836
 * 
 * 
 * cdef copyArrhenius(CxxArrheniusRate* rate):             # <<<<<<<<<<<<<<
 *     r = Arrhenius(rate.preExponentialFactor(), rate.temperatureExponent(),
 *                   rate.activationEnergy())
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.copyArrhenius", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_r);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1867
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("ThreeBodyReaction: Class to be removed after Cantera 3.0; "
 *                       "no specialization necessary.", DeprecationWarning)
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_17ThreeBodyReaction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_17ThreeBodyReaction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cantera_8reaction_17ThreeBodyReaction___init__(((struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_17ThreeBodyReaction___init__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/reaction.pyx":1868
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("ThreeBodyReaction: Class to be removed after Cantera 3.0; "             # <<<<<<<<<<<<<<
 *                       "no specialization necessary.", DeprecationWarning)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1869
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("ThreeBodyReaction: Class to be removed after Cantera 3.0; "
 *                       "no specialization necessary.", DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__27, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1867
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("ThreeBodyReaction: Class to be removed after Cantera 3.0; "
 *                       "no specialization necessary.", DeprecationWarning)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ThreeBodyReaction.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17ThreeBodyReaction_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17ThreeBodyReaction_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ThreeBodyReaction_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17ThreeBodyReaction_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_17ThreeBodyReaction_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17ThreeBodyReaction_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ThreeBodyReaction.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_17ThreeBodyReaction_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_17ThreeBodyReaction_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ThreeBodyReaction_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_17ThreeBodyReaction_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ThreeBodyReaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_17ThreeBodyReaction_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_17ThreeBodyReaction_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ThreeBodyReaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1901
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("FalloffReaction: Class to be removed after Cantera 3.0; "
 *                       "no specialization necessary.", DeprecationWarning)
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_15FalloffReaction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_15FalloffReaction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cantera_8reaction_15FalloffReaction___init__(((struct __pyx_obj_7cantera_8reaction_FalloffReaction *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_15FalloffReaction___init__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/reaction.pyx":1902
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("FalloffReaction: Class to be removed after Cantera 3.0; "             # <<<<<<<<<<<<<<
 *                       "no specialization necessary.", DeprecationWarning)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1903
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("FalloffReaction: Class to be removed after Cantera 3.0; "
 *                       "no specialization necessary.", DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 * cdef class ChemicallyActivatedReaction(FalloffReaction):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__28, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1901
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("FalloffReaction: Class to be removed after Cantera 3.0; "
 *                       "no specialization necessary.", DeprecationWarning)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.FalloffReaction.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_15FalloffReaction_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_15FalloffReaction_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_15FalloffReaction_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_15FalloffReaction_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_15FalloffReaction_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_FalloffReaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_15FalloffReaction_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffReaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffReaction.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_15FalloffReaction_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_15FalloffReaction_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_15FalloffReaction_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_15FalloffReaction_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffReaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_15FalloffReaction_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_FalloffReaction *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_15FalloffReaction_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_FalloffReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.FalloffReaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1913
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("ChemicallyActivatedReaction: Class to be removed after Cantera "
 *                       "3.0; no specialization necessary.", DeprecationWarning)
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cantera_8reaction_27ChemicallyActivatedReaction___init__(((struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_27ChemicallyActivatedReaction___init__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/reaction.pyx":1914
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("ChemicallyActivatedReaction: Class to be removed after Cantera "             # <<<<<<<<<<<<<<
 *                       "3.0; no specialization necessary.", DeprecationWarning)
 * 
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1915
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("ChemicallyActivatedReaction: Class to be removed after Cantera "
 *                       "3.0; no specialization necessary.", DeprecationWarning)             # <<<<<<<<<<<<<<
 * 
 * cdef class CustomReaction(Reaction):
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__29, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1913
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("ChemicallyActivatedReaction: Class to be removed after Cantera "
 *                       "3.0; no specialization necessary.", DeprecationWarning)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.ChemicallyActivatedReaction.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_27ChemicallyActivatedReaction_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_27ChemicallyActivatedReaction_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_27ChemicallyActivatedReaction_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ChemicallyActivatedReaction.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_27ChemicallyActivatedReaction_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.ChemicallyActivatedReaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_27ChemicallyActivatedReaction_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_27ChemicallyActivatedReaction_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.ChemicallyActivatedReaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "cantera/reaction.pyx":1933
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("CustomReaction: Class to be removed after Cantera 3.0; no "
 *                       "specialization necessary.", DeprecationWarning)
 */

/* Python wrapper */
static int __pyx_pw_7cantera_8reaction_14CustomReaction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7cantera_8reaction_14CustomReaction_1__init__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  CYTHON_UNUSED PyObject *__pyx_v_args = 0;
  CYTHON_UNUSED PyObject *__pyx_v_kwargs = 0;
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_VARARGS(__pyx_args, __pyx_nargs);
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__init__ (wrapper)", 0);
  if (unlikely(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__init__", 1))) return -1;
  __Pyx_INCREF(__pyx_args);
  __pyx_v_args = __pyx_args;
  __pyx_r = __pyx_pf_7cantera_8reaction_14CustomReaction___init__(((struct __pyx_obj_7cantera_8reaction_CustomReaction *)__pyx_v_self), __pyx_v_args, __pyx_v_kwargs);

  /* function exit code */
  __Pyx_DECREF(__pyx_v_args);
  __Pyx_XDECREF(__pyx_v_kwargs);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7cantera_8reaction_14CustomReaction___init__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v_args, CYTHON_UNUSED PyObject *__pyx_v_kwargs) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__init__", 0);

  /* "cantera/reaction.pyx":1934
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("CustomReaction: Class to be removed after Cantera 3.0; no "             # <<<<<<<<<<<<<<
 *                       "specialization necessary.", DeprecationWarning)
 */
  __Pyx_GetModuleGlobalName(__pyx_t_1, __pyx_n_s_warnings); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = __Pyx_PyObject_GetAttrStr(__pyx_t_1, __pyx_n_s_warn); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1935
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("CustomReaction: Class to be removed after Cantera 3.0; no "
 *                       "specialization necessary.", DeprecationWarning)             # <<<<<<<<<<<<<<
 */
  __pyx_t_1 = __Pyx_PyObject_Call(__pyx_t_2, __pyx_tuple__30, NULL); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "cantera/reaction.pyx":1933
 *     """
 * 
 *     def __init__(self, *args, **kwargs):             # <<<<<<<<<<<<<<
 *         warnings.warn("CustomReaction: Class to be removed after Cantera 3.0; no "
 *                       "specialization necessary.", DeprecationWarning)
 */

  /* function exit code */
  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("cantera.reaction.CustomReaction.__init__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_14CustomReaction_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_14CustomReaction_3__reduce_cython__ = {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14CustomReaction_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_14CustomReaction_3__reduce_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__reduce_cython__ (wrapper)", 0);
  if (unlikely(__pyx_nargs > 0)) {
    __Pyx_RaiseArgtupleInvalid("__reduce_cython__", 1, 0, 0, __pyx_nargs); return NULL;}
  if (unlikely(__pyx_kwds) && __Pyx_NumKwargs_FASTCALL(__pyx_kwds) && unlikely(!__Pyx_CheckKeywordStrings(__pyx_kwds, "__reduce_cython__", 0))) return NULL;
  __pyx_r = __pyx_pf_7cantera_8reaction_14CustomReaction_2__reduce_cython__(((struct __pyx_obj_7cantera_8reaction_CustomReaction *)__pyx_v_self));

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_14CustomReaction_2__reduce_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomReaction *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__reduce_cython__", 0);

  /* "(tree fragment)":2
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 2, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.CustomReaction.__reduce_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_14CustomReaction_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_14CustomReaction_5__setstate_cython__ = {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14CustomReaction_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_14CustomReaction_5__setstate_cython__(PyObject *__pyx_v_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  CYTHON_UNUSED PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__setstate_cython__ (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_state,0};
    PyObject* values[1] = {0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 3, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__setstate_cython__") < 0)) __PYX_ERR(1, 3, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 1)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
    }
    __pyx_v___pyx_state = values[0];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__setstate_cython__", 1, 1, 1, __pyx_nargs); __PYX_ERR(1, 3, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.CustomReaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction_14CustomReaction_4__setstate_cython__(((struct __pyx_obj_7cantera_8reaction_CustomReaction *)__pyx_v_self), __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction_14CustomReaction_4__setstate_cython__(CYTHON_UNUSED struct __pyx_obj_7cantera_8reaction_CustomReaction *__pyx_v_self, CYTHON_UNUSED PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__setstate_cython__", 0);

  /* "(tree fragment)":4
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"             # <<<<<<<<<<<<<<
 */
  __Pyx_Raise(__pyx_builtin_TypeError, __pyx_kp_s_no_default___reduce___due_to_non, 0, 0);
  __PYX_ERR(1, 4, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_AddTraceback("cantera.reaction.CustomReaction.__setstate_cython__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":1
 * def __pyx_unpickle_ExtensibleRateData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

/* Python wrapper */
static PyObject *__pyx_pw_7cantera_8reaction_1__pyx_unpickle_ExtensibleRateData(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
); /*proto*/
static PyMethodDef __pyx_mdef_7cantera_8reaction_1__pyx_unpickle_ExtensibleRateData = {"__pyx_unpickle_ExtensibleRateData", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_1__pyx_unpickle_ExtensibleRateData, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0};
static PyObject *__pyx_pw_7cantera_8reaction_1__pyx_unpickle_ExtensibleRateData(PyObject *__pyx_self, 
#if CYTHON_METH_FASTCALL
PyObject *const *__pyx_args, Py_ssize_t __pyx_nargs, PyObject *__pyx_kwds
#else
PyObject *__pyx_args, PyObject *__pyx_kwds
#endif
) {
  PyObject *__pyx_v___pyx_type = 0;
  long __pyx_v___pyx_checksum;
  PyObject *__pyx_v___pyx_state = 0;
  #if !CYTHON_METH_FASTCALL
  CYTHON_UNUSED const Py_ssize_t __pyx_nargs = PyTuple_GET_SIZE(__pyx_args);
  #endif
  CYTHON_UNUSED PyObject *const *__pyx_kwvalues = __Pyx_KwValues_FASTCALL(__pyx_args, __pyx_nargs);
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__pyx_unpickle_ExtensibleRateData (wrapper)", 0);
  {
    PyObject **__pyx_pyargnames[] = {&__pyx_n_s_pyx_type,&__pyx_n_s_pyx_checksum,&__pyx_n_s_pyx_state,0};
    PyObject* values[3] = {0,0,0};
    if (__pyx_kwds) {
      Py_ssize_t kw_args;
      switch (__pyx_nargs) {
        case  3: values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
        CYTHON_FALLTHROUGH;
        case  2: values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
        CYTHON_FALLTHROUGH;
        case  1: values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
        CYTHON_FALLTHROUGH;
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = __Pyx_NumKwargs_FASTCALL(__pyx_kwds);
      switch (__pyx_nargs) {
        case  0:
        if (likely((values[0] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_type)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else goto __pyx_L5_argtuple_error;
        CYTHON_FALLTHROUGH;
        case  1:
        if (likely((values[1] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_checksum)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_ExtensibleRateData", 1, 3, 3, 1); __PYX_ERR(1, 1, __pyx_L3_error)
        }
        CYTHON_FALLTHROUGH;
        case  2:
        if (likely((values[2] = __Pyx_GetKwValue_FASTCALL(__pyx_kwds, __pyx_kwvalues, __pyx_n_s_pyx_state)) != 0)) kw_args--;
        else if (unlikely(PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
        else {
          __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_ExtensibleRateData", 1, 3, 3, 2); __PYX_ERR(1, 1, __pyx_L3_error)
        }
      }
      if (unlikely(kw_args > 0)) {
        const Py_ssize_t kwd_pos_args = __pyx_nargs;
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_kwvalues, __pyx_pyargnames, 0, values + 0, kwd_pos_args, "__pyx_unpickle_ExtensibleRateData") < 0)) __PYX_ERR(1, 1, __pyx_L3_error)
      }
    } else if (unlikely(__pyx_nargs != 3)) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = __Pyx_Arg_FASTCALL(__pyx_args, 0);
      values[1] = __Pyx_Arg_FASTCALL(__pyx_args, 1);
      values[2] = __Pyx_Arg_FASTCALL(__pyx_args, 2);
    }
    __pyx_v___pyx_type = values[0];
    __pyx_v___pyx_checksum = __Pyx_PyInt_As_long(values[1]); if (unlikely((__pyx_v___pyx_checksum == (long)-1) && PyErr_Occurred())) __PYX_ERR(1, 1, __pyx_L3_error)
    __pyx_v___pyx_state = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__pyx_unpickle_ExtensibleRateData", 1, 3, 3, __pyx_nargs); __PYX_ERR(1, 1, __pyx_L3_error)
  __pyx_L3_error:;
  __Pyx_AddTraceback("cantera.reaction.__pyx_unpickle_ExtensibleRateData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7cantera_8reaction___pyx_unpickle_ExtensibleRateData(__pyx_self, __pyx_v___pyx_type, __pyx_v___pyx_checksum, __pyx_v___pyx_state);

  /* function exit code */
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static PyObject *__pyx_pf_7cantera_8reaction___pyx_unpickle_ExtensibleRateData(CYTHON_UNUSED PyObject *__pyx_self, PyObject *__pyx_v___pyx_type, long __pyx_v___pyx_checksum, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_v___pyx_PickleError = 0;
  PyObject *__pyx_v___pyx_result = 0;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_ExtensibleRateData", 0);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x7c4e57e, 0xb662b45, 0xa3ea2d7):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0x7c4e57e, 0xb662b45, 0xa3ea2d7) = (_delegates))" % __pyx_checksum
 */
  __pyx_t_1 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = (__Pyx_PySequence_ContainsTF(__pyx_t_1, __pyx_tuple__31, Py_NE)); if (unlikely((__pyx_t_2 < 0))) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "(tree fragment)":5
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x7c4e57e, 0xb662b45, 0xa3ea2d7):
 *         from pickle import PickleError as __pyx_PickleError             # <<<<<<<<<<<<<<
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0x7c4e57e, 0xb662b45, 0xa3ea2d7) = (_delegates))" % __pyx_checksum
 *     __pyx_result = ExtensibleRateData.__new__(__pyx_type)
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_n_s_PickleError);
    __Pyx_GIVEREF(__pyx_n_s_PickleError);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_n_s_PickleError);
    __pyx_t_3 = __Pyx_Import(__pyx_n_s_pickle, __pyx_t_1, 0); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_PickleError); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 5, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_t_1);
    __pyx_v___pyx_PickleError = __pyx_t_1;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

    /* "(tree fragment)":6
 *     if __pyx_checksum not in (0x7c4e57e, 0xb662b45, 0xa3ea2d7):
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0x7c4e57e, 0xb662b45, 0xa3ea2d7) = (_delegates))" % __pyx_checksum             # <<<<<<<<<<<<<<
 *     __pyx_result = ExtensibleRateData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 */
    __pyx_t_3 = __Pyx_PyInt_From_long(__pyx_v___pyx_checksum); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = __Pyx_PyString_Format(__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_t_3); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 6, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_Raise(__pyx_v___pyx_PickleError, __pyx_t_1, 0, 0);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __PYX_ERR(1, 6, __pyx_L1_error)

    /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x7c4e57e, 0xb662b45, 0xa3ea2d7):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0x7c4e57e, 0xb662b45, 0xa3ea2d7) = (_delegates))" % __pyx_checksum
 */
  }

  /* "(tree fragment)":7
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0x7c4e57e, 0xb662b45, 0xa3ea2d7) = (_delegates))" % __pyx_checksum
 *     __pyx_result = ExtensibleRateData.__new__(__pyx_type)             # <<<<<<<<<<<<<<
 *     if __pyx_state is not None:
 *         __pyx_unpickle_ExtensibleRateData__set_state(<ExtensibleRateData> __pyx_result, __pyx_state)
 */
  __pyx_t_3 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRateData), __pyx_n_s_new); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 7, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_4 = NULL;
  __pyx_t_5 = 0;
  if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_3))) {
    __pyx_t_4 = PyMethod_GET_SELF(__pyx_t_3);
    if (likely(__pyx_t_4)) {
      PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      __Pyx_INCREF(function);
      __Pyx_DECREF_SET(__pyx_t_3, function);
      __pyx_t_5 = 1;
    }
  }
  {
    PyObject *__pyx_callargs[2] = {__pyx_t_4, __pyx_v___pyx_type};
    __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_3, __pyx_callargs+1-__pyx_t_5, 1+__pyx_t_5);
    __Pyx_XDECREF(__pyx_t_4); __pyx_t_4 = 0;
    if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 7, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  }
  __pyx_v___pyx_result = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0x7c4e57e, 0xb662b45, 0xa3ea2d7) = (_delegates))" % __pyx_checksum
 *     __pyx_result = ExtensibleRateData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_ExtensibleRateData__set_state(<ExtensibleRateData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  __pyx_t_2 = (__pyx_v___pyx_state != Py_None);
  if (__pyx_t_2) {

    /* "(tree fragment)":9
 *     __pyx_result = ExtensibleRateData.__new__(__pyx_type)
 *     if __pyx_state is not None:
 *         __pyx_unpickle_ExtensibleRateData__set_state(<ExtensibleRateData> __pyx_result, __pyx_state)             # <<<<<<<<<<<<<<
 *     return __pyx_result
 * cdef __pyx_unpickle_ExtensibleRateData__set_state(ExtensibleRateData __pyx_result, tuple __pyx_state):
 */
    if (!(likely(PyTuple_CheckExact(__pyx_v___pyx_state))||((__pyx_v___pyx_state) == Py_None) || __Pyx_RaiseUnexpectedTypeError("tuple", __pyx_v___pyx_state))) __PYX_ERR(1, 9, __pyx_L1_error)
    __pyx_t_1 = __pyx_f_7cantera_8reaction___pyx_unpickle_ExtensibleRateData__set_state(((struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)__pyx_v___pyx_result), ((PyObject*)__pyx_v___pyx_state)); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 9, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":8
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0x7c4e57e, 0xb662b45, 0xa3ea2d7) = (_delegates))" % __pyx_checksum
 *     __pyx_result = ExtensibleRateData.__new__(__pyx_type)
 *     if __pyx_state is not None:             # <<<<<<<<<<<<<<
 *         __pyx_unpickle_ExtensibleRateData__set_state(<ExtensibleRateData> __pyx_result, __pyx_state)
 *     return __pyx_result
 */
  }

  /* "(tree fragment)":10
 *     if __pyx_state is not None:
 *         __pyx_unpickle_ExtensibleRateData__set_state(<ExtensibleRateData> __pyx_result, __pyx_state)
 *     return __pyx_result             # <<<<<<<<<<<<<<
 * cdef __pyx_unpickle_ExtensibleRateData__set_state(ExtensibleRateData __pyx_result, tuple __pyx_state):
 *     __pyx_result._delegates = __pyx_state[0]
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v___pyx_result);
  __pyx_r = __pyx_v___pyx_result;
  goto __pyx_L0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_ExtensibleRateData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */

  /* function exit code */
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("cantera.reaction.__pyx_unpickle_ExtensibleRateData", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v___pyx_PickleError);
  __Pyx_XDECREF(__pyx_v___pyx_result);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "(tree fragment)":11
 *         __pyx_unpickle_ExtensibleRateData__set_state(<ExtensibleRateData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_ExtensibleRateData__set_state(ExtensibleRateData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result._delegates = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
 */

static PyObject *__pyx_f_7cantera_8reaction___pyx_unpickle_ExtensibleRateData__set_state(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *__pyx_v___pyx_result, PyObject *__pyx_v___pyx_state) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  Py_ssize_t __pyx_t_3;
  int __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__pyx_unpickle_ExtensibleRateData__set_state", 0);

  /* "(tree fragment)":12
 *     return __pyx_result
 * cdef __pyx_unpickle_ExtensibleRateData__set_state(ExtensibleRateData __pyx_result, tuple __pyx_state):
 *     __pyx_result._delegates = __pyx_state[0]             # <<<<<<<<<<<<<<
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[1])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
    __PYX_ERR(1, 12, __pyx_L1_error)
  }
  __pyx_t_1 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 0, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (!(likely(PyList_CheckExact(__pyx_t_1))||((__pyx_t_1) == Py_None) || __Pyx_RaiseUnexpectedTypeError("list", __pyx_t_1))) __PYX_ERR(1, 12, __pyx_L1_error)
  __Pyx_GIVEREF(__pyx_t_1);
  __Pyx_GOTREF(__pyx_v___pyx_result->_delegates);
  __Pyx_DECREF(__pyx_v___pyx_result->_delegates);
  __pyx_v___pyx_result->_delegates = ((PyObject*)__pyx_t_1);
  __pyx_t_1 = 0;

  /* "(tree fragment)":13
 * cdef __pyx_unpickle_ExtensibleRateData__set_state(ExtensibleRateData __pyx_result, tuple __pyx_state):
 *     __pyx_result._delegates = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[1])
 */
  if (unlikely(__pyx_v___pyx_state == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "object of type 'NoneType' has no len()");
    __PYX_ERR(1, 13, __pyx_L1_error)
  }
  __pyx_t_3 = PyTuple_GET_SIZE(__pyx_v___pyx_state); if (unlikely(__pyx_t_3 == ((Py_ssize_t)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_4 = (__pyx_t_3 > 1);
  if (__pyx_t_4) {
  } else {
    __pyx_t_2 = __pyx_t_4;
    goto __pyx_L4_bool_binop_done;
  }
  __pyx_t_4 = __Pyx_HasAttr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(__pyx_t_4 == ((int)-1))) __PYX_ERR(1, 13, __pyx_L1_error)
  __pyx_t_2 = __pyx_t_4;
  __pyx_L4_bool_binop_done:;
  if (__pyx_t_2) {

    /* "(tree fragment)":14
 *     __pyx_result._delegates = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
 *         __pyx_result.__dict__.update(__pyx_state[1])             # <<<<<<<<<<<<<<
 */
    __pyx_t_5 = __Pyx_PyObject_GetAttrStr(((PyObject *)__pyx_v___pyx_result), __pyx_n_s_dict); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = __Pyx_PyObject_GetAttrStr(__pyx_t_5, __pyx_n_s_update_2); if (unlikely(!__pyx_t_6)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (unlikely(__pyx_v___pyx_state == Py_None)) {
      PyErr_SetString(PyExc_TypeError, "'NoneType' object is not subscriptable");
      __PYX_ERR(1, 14, __pyx_L1_error)
    }
    __pyx_t_5 = __Pyx_GetItemInt_Tuple(__pyx_v___pyx_state, 1, long, 1, __Pyx_PyInt_From_long, 0, 0, 1); if (unlikely(!__pyx_t_5)) __PYX_ERR(1, 14, __pyx_L1_error)
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_7 = NULL;
    __pyx_t_8 = 0;
    if (CYTHON_UNPACK_METHODS && likely(PyMethod_Check(__pyx_t_6))) {
      __pyx_t_7 = PyMethod_GET_SELF(__pyx_t_6);
      if (likely(__pyx_t_7)) {
        PyObject* function = PyMethod_GET_FUNCTION(__pyx_t_6);
        __Pyx_INCREF(__pyx_t_7);
        __Pyx_INCREF(function);
        __Pyx_DECREF_SET(__pyx_t_6, function);
        __pyx_t_8 = 1;
      }
    }
    {
      PyObject *__pyx_callargs[2] = {__pyx_t_7, __pyx_t_5};
      __pyx_t_1 = __Pyx_PyObject_FastCall(__pyx_t_6, __pyx_callargs+1-__pyx_t_8, 1+__pyx_t_8);
      __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (unlikely(!__pyx_t_1)) __PYX_ERR(1, 14, __pyx_L1_error)
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "(tree fragment)":13
 * cdef __pyx_unpickle_ExtensibleRateData__set_state(ExtensibleRateData __pyx_result, tuple __pyx_state):
 *     __pyx_result._delegates = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):             # <<<<<<<<<<<<<<
 *         __pyx_result.__dict__.update(__pyx_state[1])
 */
  }

  /* "(tree fragment)":11
 *         __pyx_unpickle_ExtensibleRateData__set_state(<ExtensibleRateData> __pyx_result, __pyx_state)
 *     return __pyx_result
 * cdef __pyx_unpickle_ExtensibleRateData__set_state(ExtensibleRateData __pyx_result, tuple __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_result._delegates = __pyx_state[0]
 *     if len(__pyx_state) > 1 and hasattr(__pyx_result, '__dict__'):
 */

  /* function exit code */
  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("cantera.reaction.__pyx_unpickle_ExtensibleRateData__set_state", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate __pyx_vtable_7cantera_8reaction_ReactionRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_ReactionRate(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_ReactionRate *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cantera_8reaction_ReactionRate;
  new((void*)&(p->_rate)) std::shared_ptr<Cantera::ReactionRate> ();
  return o;
}

static void __pyx_tp_dealloc_7cantera_8reaction_ReactionRate(PyObject *o) {
  struct __pyx_obj_7cantera_8reaction_ReactionRate *p = (struct __pyx_obj_7cantera_8reaction_ReactionRate *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_8reaction_ReactionRate) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->_rate);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_12ReactionRate_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_12ReactionRate_4type_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_12ReactionRate_sub_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_12ReactionRate_8sub_type_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_12ReactionRate_input_data(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_12ReactionRate_10input_data_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_12ReactionRate_conversion_units(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_12ReactionRate_16conversion_units_1__get__(o);
}

static PyObject *__pyx_specialmethod___pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__(PyObject *self, CYTHON_UNUSED PyObject *arg) {
  return __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__(self);
}

static PyMethodDef __pyx_methods_7cantera_8reaction_ReactionRate[] = {
  {"__repr__", (PyCFunction)__pyx_specialmethod___pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, METH_NOARGS|METH_COEXIST, 0},
  {"from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_12ReactionRate_5from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_12ReactionRate_4from_dict},
  {"from_yaml", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_12ReactionRate_7from_yaml, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_12ReactionRate_6from_yaml},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_12ReactionRate_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_12ReactionRate_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_ReactionRate[] = {
  {(char *)"type", __pyx_getprop_7cantera_8reaction_12ReactionRate_type, 0, (char *)PyDoc_STR(" Get the C++ ReactionRate type "), 0},
  {(char *)"sub_type", __pyx_getprop_7cantera_8reaction_12ReactionRate_sub_type, 0, (char *)PyDoc_STR(" Get the C++ ReactionRate sub-type "), 0},
  {(char *)"input_data", __pyx_getprop_7cantera_8reaction_12ReactionRate_input_data, 0, (char *)PyDoc_STR("\n        Get input data for this reaction rate with its current parameter values.\n        "), 0},
  {(char *)"conversion_units", __pyx_getprop_7cantera_8reaction_12ReactionRate_conversion_units, 0, (char *)PyDoc_STR("\n        Get the units for converting the leading term in the reaction rate expression\n        to different unit systems.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_ReactionRate_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_8reaction_ReactionRate},
  {Py_tp_repr, (void *)__pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__},
  {Py_tp_call, (void *)__pyx_pw_7cantera_8reaction_12ReactionRate_3__call__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Base class for ReactionRate objects.\n\n    ReactionRate objects are used to calculate reaction rates and are associated\n    with a Reaction object.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_ReactionRate},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_ReactionRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_ReactionRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_ReactionRate_spec = {
  "cantera.reaction.ReactionRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_ReactionRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_ReactionRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_ReactionRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""ReactionRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_ReactionRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_7cantera_8reaction_12ReactionRate_3__call__, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Base class for ReactionRate objects.\n\n    ReactionRate objects are used to calculate reaction rates and are associated\n    with a Reaction object.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_ReactionRate, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_ReactionRate, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_ReactionRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRateBase __pyx_vtable_7cantera_8reaction_ArrheniusRateBase;

static PyObject *__pyx_tp_new_7cantera_8reaction_ArrheniusRateBase(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ReactionRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_ArrheniusRateBase;
  return o;
}

static PyObject *__pyx_getprop_7cantera_8reaction_17ArrheniusRateBase_pre_exponential_factor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_17ArrheniusRateBase_22pre_exponential_factor_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_17ArrheniusRateBase_temperature_exponent(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_17ArrheniusRateBase_20temperature_exponent_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_17ArrheniusRateBase_activation_energy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_17ArrheniusRateBase_17activation_energy_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_17ArrheniusRateBase_allow_negative_pre_exponential_factor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_17ArrheniusRateBase_allow_negative_pre_exponential_factor(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_17ArrheniusRateBase_37allow_negative_pre_exponential_factor_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_ArrheniusRateBase[] = {
  {"_cinit", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_1_cinit, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_17ArrheniusRateBase__cinit},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ArrheniusRateBase_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_ArrheniusRateBase[] = {
  {(char *)"pre_exponential_factor", __pyx_getprop_7cantera_8reaction_17ArrheniusRateBase_pre_exponential_factor, 0, (char *)PyDoc_STR("\n        The pre-exponential factor ``A`` in units of m, kmol, and s raised to\n        powers depending on the reaction order.\n        "), 0},
  {(char *)"temperature_exponent", __pyx_getprop_7cantera_8reaction_17ArrheniusRateBase_temperature_exponent, 0, (char *)PyDoc_STR("\n        The temperature exponent ``b``.\n        "), 0},
  {(char *)"activation_energy", __pyx_getprop_7cantera_8reaction_17ArrheniusRateBase_activation_energy, 0, (char *)PyDoc_STR("\n        The activation energy ``E`` [J/kmol].\n        "), 0},
  {(char *)"allow_negative_pre_exponential_factor", __pyx_getprop_7cantera_8reaction_17ArrheniusRateBase_allow_negative_pre_exponential_factor, __pyx_setprop_7cantera_8reaction_17ArrheniusRateBase_allow_negative_pre_exponential_factor, (char *)PyDoc_STR("\n        Get/Set whether the rate coefficient is allowed to have a negative\n        pre-exponential factor.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_ArrheniusRateBase_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    Base class collecting commonly used features of Arrhenius-type rate objects.\n    Objects should be instantiated by specialized classes, for example `ArrheniusRate`,\n    `BlowersMaselRate` and `TwoTempPlasmaRate`.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_ArrheniusRateBase},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_ArrheniusRateBase},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_ArrheniusRateBase},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_ArrheniusRateBase_spec = {
  "cantera.reaction.ArrheniusRateBase",
  sizeof(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_ArrheniusRateBase_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_ArrheniusRateBase = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""ArrheniusRateBase", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_ArrheniusRateBase), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_3__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Base class collecting commonly used features of Arrhenius-type rate objects.\n    Objects should be instantiated by specialized classes, for example `ArrheniusRate`,\n    `BlowersMaselRate` and `TwoTempPlasmaRate`.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_ArrheniusRateBase, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_ArrheniusRateBase, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_ArrheniusRateBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_FalloffRate __pyx_vtable_7cantera_8reaction_FalloffRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_FalloffRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_FalloffRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ReactionRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_FalloffRate *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_FalloffRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_11FalloffRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyObject *__pyx_getprop_7cantera_8reaction_11FalloffRate_low_rate(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_11FalloffRate_8low_rate_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_11FalloffRate_low_rate(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_11FalloffRate_8low_rate_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_11FalloffRate_high_rate(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_11FalloffRate_9high_rate_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_11FalloffRate_high_rate(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_11FalloffRate_9high_rate_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_11FalloffRate_falloff_coeffs(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_11FalloffRate_14falloff_coeffs_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_11FalloffRate_falloff_coeffs(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_11FalloffRate_14falloff_coeffs_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_11FalloffRate_allow_negative_pre_exponential_factor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_11FalloffRate_allow_negative_pre_exponential_factor(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_11FalloffRate_37allow_negative_pre_exponential_factor_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_11FalloffRate_chemically_activated(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_11FalloffRate_20chemically_activated_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_11FalloffRate_chemically_activated(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_11FalloffRate_20chemically_activated_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_FalloffRate[] = {
  {"falloff_function", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_11FalloffRate_5falloff_function, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_11FalloffRate_4falloff_function},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_11FalloffRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_11FalloffRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_FalloffRate[] = {
  {(char *)"low_rate", __pyx_getprop_7cantera_8reaction_11FalloffRate_low_rate, __pyx_setprop_7cantera_8reaction_11FalloffRate_low_rate, (char *)PyDoc_STR(" Get/Set the `Arrhenius` rate constant in the low-pressure limit "), 0},
  {(char *)"high_rate", __pyx_getprop_7cantera_8reaction_11FalloffRate_high_rate, __pyx_setprop_7cantera_8reaction_11FalloffRate_high_rate, (char *)PyDoc_STR(" Get/Set the `Arrhenius` rate constant in the high-pressure limit "), 0},
  {(char *)"falloff_coeffs", __pyx_getprop_7cantera_8reaction_11FalloffRate_falloff_coeffs, __pyx_setprop_7cantera_8reaction_11FalloffRate_falloff_coeffs, (char *)PyDoc_STR(" The array of coefficients used to define this falloff function. "), 0},
  {(char *)"allow_negative_pre_exponential_factor", __pyx_getprop_7cantera_8reaction_11FalloffRate_allow_negative_pre_exponential_factor, __pyx_setprop_7cantera_8reaction_11FalloffRate_allow_negative_pre_exponential_factor, (char *)PyDoc_STR("\n        Get/Set whether the rate coefficient is allowed to have a negative\n        pre-exponential factor.\n        "), 0},
  {(char *)"chemically_activated", __pyx_getprop_7cantera_8reaction_11FalloffRate_chemically_activated, __pyx_setprop_7cantera_8reaction_11FalloffRate_chemically_activated, (char *)PyDoc_STR("\n        Get whether the object is a chemically-activated reaction rate.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_FalloffRate_slots[] = {
  {Py_tp_call, (void *)__pyx_pw_7cantera_8reaction_11FalloffRate_3__call__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Base class for parameterizations used to describe the fall-off in reaction rates\n    due to intermolecular energy transfer. These objects are used by `FalloffReaction`.\n    Note that `FalloffRate` is a base class for specialized fall-off parameterizations\n    and cannot be instantiated by itself.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_FalloffRate},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_FalloffRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_FalloffRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_FalloffRate_spec = {
  "cantera.reaction.FalloffRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_FalloffRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_FalloffRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_FalloffRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""FalloffRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_FalloffRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_7cantera_8reaction_11FalloffRate_3__call__, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Base class for parameterizations used to describe the fall-off in reaction rates\n    due to intermolecular energy transfer. These objects are used by `FalloffReaction`.\n    Note that `FalloffRate` is a base class for specialized fall-off parameterizations\n    and cannot be instantiated by itself.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_FalloffRate, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_FalloffRate, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_FalloffRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_CustomRate __pyx_vtable_7cantera_8reaction_CustomRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_CustomRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_CustomRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ReactionRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_CustomRate *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_CustomRate;
  p->_rate_func = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cantera_8reaction_10CustomRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cantera_8reaction_CustomRate(PyObject *o) {
  struct __pyx_obj_7cantera_8reaction_CustomRate *p = (struct __pyx_obj_7cantera_8reaction_CustomRate *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_8reaction_CustomRate) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_rate_func);
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate(o);
}

static int __pyx_tp_traverse_7cantera_8reaction_CustomRate(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_8reaction_CustomRate *p = (struct __pyx_obj_7cantera_8reaction_CustomRate *)o;
  e = ((likely(__pyx_ptype_7cantera_8reaction_ReactionRate)) ? ((__pyx_ptype_7cantera_8reaction_ReactionRate->tp_traverse) ? __pyx_ptype_7cantera_8reaction_ReactionRate->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_7cantera_8reaction_CustomRate)); if (e) return e;
  if (p->_rate_func) {
    e = (*v)(((PyObject *)p->_rate_func), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_8reaction_CustomRate(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_8reaction_CustomRate *p = (struct __pyx_obj_7cantera_8reaction_CustomRate *)o;
  if (likely(__pyx_ptype_7cantera_8reaction_ReactionRate)) { if (__pyx_ptype_7cantera_8reaction_ReactionRate->tp_clear) __pyx_ptype_7cantera_8reaction_ReactionRate->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_7cantera_8reaction_CustomRate);
  tmp = ((PyObject*)p->_rate_func);
  p->_rate_func = ((struct __pyx_obj_7cantera_5func1_Func1 *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_CustomRate[] = {
  {"set_rate_function", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_10CustomRate_3set_rate_function, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_10CustomRate_2set_rate_function},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_10CustomRate_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_10CustomRate_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_CustomRate_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_8reaction_CustomRate},
  {Py_tp_doc, (void *)PyDoc_STR("\n    A custom rate coefficient which depends on temperature only.\n\n    The simplest way to create a `CustomRate` object is to use a lambda function,\n    for example::\n\n        rr = CustomRate(lambda T: 38.7 * T**2.7 * exp(-3150.15/T))\n\n    .. warning::\n\n        This class is an experimental part of the Cantera API and\n        may be changed or removed without notice.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction_CustomRate},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction_CustomRate},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_CustomRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_CustomRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_CustomRate_spec = {
  "cantera.reaction.CustomRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_CustomRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_8reaction_CustomRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_CustomRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""CustomRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_CustomRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_CustomRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_3__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A custom rate coefficient which depends on temperature only.\n\n    The simplest way to create a `CustomRate` object is to use a lambda function,\n    for example::\n\n        rr = CustomRate(lambda T: 38.7 * T**2.7 * exp(-3150.15/T))\n\n    .. warning::\n\n        This class is an experimental part of the Cantera API and\n        may be changed or removed without notice.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction_CustomRate, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction_CustomRate, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_CustomRate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_CustomRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_ExtensibleRate __pyx_vtable_7cantera_8reaction_ExtensibleRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_ExtensibleRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_ExtensibleRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ReactionRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_ExtensibleRate;
  p->_delegates = ((PyObject*)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cantera_8reaction_14ExtensibleRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cantera_8reaction_ExtensibleRate(PyObject *o) {
  struct __pyx_obj_7cantera_8reaction_ExtensibleRate *p = (struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_8reaction_ExtensibleRate) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_delegates);
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate(o);
}

static int __pyx_tp_traverse_7cantera_8reaction_ExtensibleRate(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_8reaction_ExtensibleRate *p = (struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)o;
  e = ((likely(__pyx_ptype_7cantera_8reaction_ReactionRate)) ? ((__pyx_ptype_7cantera_8reaction_ReactionRate->tp_traverse) ? __pyx_ptype_7cantera_8reaction_ReactionRate->tp_traverse(o, v, a) : 0) : __Pyx_call_next_tp_traverse(o, v, a, __pyx_tp_traverse_7cantera_8reaction_ExtensibleRate)); if (e) return e;
  if (p->_delegates) {
    e = (*v)(p->_delegates, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_8reaction_ExtensibleRate(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_8reaction_ExtensibleRate *p = (struct __pyx_obj_7cantera_8reaction_ExtensibleRate *)o;
  if (likely(__pyx_ptype_7cantera_8reaction_ReactionRate)) { if (__pyx_ptype_7cantera_8reaction_ReactionRate->tp_clear) __pyx_ptype_7cantera_8reaction_ReactionRate->tp_clear(o); } else __Pyx_call_next_tp_clear(o, __pyx_tp_clear_7cantera_8reaction_ExtensibleRate);
  tmp = ((PyObject*)p->_delegates);
  p->_delegates = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_7cantera_8reaction_14ExtensibleRate__delegates(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_14ExtensibleRate_10_delegates_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_14ExtensibleRate__delegates(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_14ExtensibleRate_10_delegates_3__set__(o, v);
  }
  else {
    return __pyx_pw_7cantera_8reaction_14ExtensibleRate_10_delegates_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_ExtensibleRate[] = {
  {"set_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_5set_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_14ExtensibleRate_4set_parameters},
  {"get_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_7get_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_14ExtensibleRate_6get_parameters},
  {"eval", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_9eval, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_14ExtensibleRate_8eval},
  {"validate", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_11validate, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_14ExtensibleRate_10validate},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_13__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14ExtensibleRate_15__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_ExtensibleRate[] = {
  {(char *)"_delegates", __pyx_getprop_7cantera_8reaction_14ExtensibleRate__delegates, __pyx_setprop_7cantera_8reaction_14ExtensibleRate__delegates, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_ExtensibleRate_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_8reaction_ExtensibleRate},
  {Py_tp_doc, (void *)PyDoc_STR("\n    A base class for a user-defined reaction rate parameterization. Classes derived from\n    this class should be decorated with the `extension` decorator to specify the name\n    of the rate parameterization and its corresponding data class, and to make these\n    rates constructible through factory functions and input files.\n\n    Classes derived from `ExtensibleRate` should implement the `set_parameters`,\n    `get_parameters`, `eval`, and (optionally) `validate` methods, which will be called\n    as delegates from the C++ :ct:`ReactionRate` class.\n\n    .. warning::\n\n        The delegatable methods defined here are an experimental part of the\n        Cantera API and may change without notice.\n\n    .. versionadded:: 3.0\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction_ExtensibleRate},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction_ExtensibleRate},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_ExtensibleRate},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_ExtensibleRate},
  {Py_tp_init, (void *)__pyx_pw_7cantera_8reaction_14ExtensibleRate_3__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_ExtensibleRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_ExtensibleRate_spec = {
  "cantera.reaction.ExtensibleRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_ExtensibleRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_8reaction_ExtensibleRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_ExtensibleRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""ExtensibleRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_ExtensibleRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ExtensibleRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_3__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A base class for a user-defined reaction rate parameterization. Classes derived from\n    this class should be decorated with the `extension` decorator to specify the name\n    of the rate parameterization and its corresponding data class, and to make these\n    rates constructible through factory functions and input files.\n\n    Classes derived from `ExtensibleRate` should implement the `set_parameters`,\n    `get_parameters`, `eval`, and (optionally) `validate` methods, which will be called\n    as delegates from the C++ :ct:`ReactionRate` class.\n\n    .. warning::\n\n        The delegatable methods defined here are an experimental part of the\n        Cantera API and may change without notice.\n\n    .. versionadded:: 3.0\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction_ExtensibleRate, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction_ExtensibleRate, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_ExtensibleRate, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_ExtensibleRate, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_8reaction_14ExtensibleRate_3__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_ExtensibleRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_ExtensibleRateData __pyx_vtable_7cantera_8reaction_ExtensibleRateData;

static PyObject *__pyx_tp_new_7cantera_8reaction_ExtensibleRateData(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cantera_8reaction_ExtensibleRateData;
  p->_delegates = ((PyObject*)Py_None); Py_INCREF(Py_None);
  return o;
}

static void __pyx_tp_dealloc_7cantera_8reaction_ExtensibleRateData(PyObject *o) {
  struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *p = (struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_8reaction_ExtensibleRateData) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->_delegates);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cantera_8reaction_ExtensibleRateData(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *p = (struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)o;
  if (p->_delegates) {
    e = (*v)(p->_delegates, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_8reaction_ExtensibleRateData(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *p = (struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *)o;
  tmp = ((PyObject*)p->_delegates);
  p->_delegates = ((PyObject*)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_7cantera_8reaction_18ExtensibleRateData__delegates(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_18ExtensibleRateData_10_delegates_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_18ExtensibleRateData__delegates(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_18ExtensibleRateData_10_delegates_3__set__(o, v);
  }
  else {
    return __pyx_pw_7cantera_8reaction_18ExtensibleRateData_10_delegates_5__del__(o);
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_ExtensibleRateData[] = {
  {"update", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_18ExtensibleRateData_1update, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_18ExtensibleRateData_update},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_18ExtensibleRateData_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_18ExtensibleRateData_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_ExtensibleRateData[] = {
  {(char *)"_delegates", __pyx_getprop_7cantera_8reaction_18ExtensibleRateData__delegates, __pyx_setprop_7cantera_8reaction_18ExtensibleRateData__delegates, (char *)0, 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_ExtensibleRateData_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_8reaction_ExtensibleRateData},
  {Py_tp_doc, (void *)PyDoc_STR("\n    A base class for data used when evaluating instances of `ExtensibleRate`. Classes\n    derived from `ExtensibleRateData` are used to store common data needed to evaluate\n    all reactions of a particular type.\n\n    Classes derived from `ExtensibleRateData` must implement the `update` method. After\n    the `update` method has been called, instances of `ExtensibleRateData` are passed as\n    the argument to `ExtensibleRate.eval`.\n\n    .. versionadded:: 3.0\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction_ExtensibleRateData},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction_ExtensibleRateData},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_ExtensibleRateData},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_ExtensibleRateData},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_ExtensibleRateData},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_ExtensibleRateData_spec = {
  "cantera.reaction.ExtensibleRateData",
  sizeof(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_8reaction_ExtensibleRateData_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_ExtensibleRateData = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""ExtensibleRateData", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ExtensibleRateData, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A base class for data used when evaluating instances of `ExtensibleRate`. Classes\n    derived from `ExtensibleRateData` are used to store common data needed to evaluate\n    all reactions of a particular type.\n\n    Classes derived from `ExtensibleRateData` must implement the `update` method. After\n    the `update` method has been called, instances of `ExtensibleRateData` are passed as\n    the argument to `ExtensibleRate.eval`.\n\n    .. versionadded:: 3.0\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction_ExtensibleRateData, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction_ExtensibleRateData, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_ExtensibleRateData, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_ExtensibleRateData, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_ExtensibleRateData, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_InterfaceRateBase __pyx_vtable_7cantera_8reaction_InterfaceRateBase;

static PyObject *__pyx_tp_new_7cantera_8reaction_InterfaceRateBase(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ArrheniusRateBase(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_InterfaceRateBase *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_InterfaceRateBase;
  return o;
}

static PyObject *__pyx_getprop_7cantera_8reaction_17InterfaceRateBase_coverage_dependencies(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_17InterfaceRateBase_coverage_dependencies(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_17InterfaceRateBase_21coverage_dependencies_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_17InterfaceRateBase_site_density(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_17InterfaceRateBase_12site_density_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_17InterfaceRateBase_site_density(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_17InterfaceRateBase_12site_density_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_17InterfaceRateBase_uses_electrochemistry(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_17InterfaceRateBase_21uses_electrochemistry_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_17InterfaceRateBase_beta(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_17InterfaceRateBase_4beta_1__get__(o);
}

static PyMethodDef __pyx_methods_7cantera_8reaction_InterfaceRateBase[] = {
  {"set_species", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17InterfaceRateBase_3set_species, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_17InterfaceRateBase_2set_species},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17InterfaceRateBase_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17InterfaceRateBase_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_InterfaceRateBase[] = {
  {(char *)"coverage_dependencies", __pyx_getprop_7cantera_8reaction_17InterfaceRateBase_coverage_dependencies, __pyx_setprop_7cantera_8reaction_17InterfaceRateBase_coverage_dependencies, (char *)PyDoc_STR("\n        Get/set a dictionary containing adjustments to the Arrhenius rate expression\n        dependent on surface species coverages. The keys of the dictionary are species\n        names, and the values are dictionaries specifying the three coverage\n        parameters ``a``, ``m`` and ``E`` which are the modifiers for the pre-exponential\n        factor [m, kmol, s units], the temperature exponent [nondimensional],\n        and the activation energy [J/kmol], respectively.\n        "), 0},
  {(char *)"site_density", __pyx_getprop_7cantera_8reaction_17InterfaceRateBase_site_density, __pyx_setprop_7cantera_8reaction_17InterfaceRateBase_site_density, (char *)PyDoc_STR("\n        Site density [kmol/m^2]\n\n        The site density is not an independent property, as it is set by an associated\n        `InterfaceKinetics` object. Accordingly, the setter should be only used for\n        testing purposes, as the value will be overwritten by an update of the\n        thermodynamic state.\n\n        .. warning::\n\n            This property is an experimental part of the Cantera API and\n            may be changed or removed without notice.\n        "), 0},
  {(char *)"uses_electrochemistry", __pyx_getprop_7cantera_8reaction_17InterfaceRateBase_uses_electrochemistry, 0, (char *)PyDoc_STR("\n        Return boolean flag indicating whether rate involves a charge transfer.\n        "), 0},
  {(char *)"beta", __pyx_getprop_7cantera_8reaction_17InterfaceRateBase_beta, 0, (char *)PyDoc_STR("\n        Return the charge transfer beta parameter\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_InterfaceRateBase_slots[] = {
  {Py_tp_call, (void *)__pyx_pw_7cantera_8reaction_17InterfaceRateBase_1__call__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Base class collecting commonly used features of Arrhenius-type rate objects\n    that include coverage dependencies.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_InterfaceRateBase},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_InterfaceRateBase},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_InterfaceRateBase},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_InterfaceRateBase_spec = {
  "cantera.reaction.InterfaceRateBase",
  sizeof(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_InterfaceRateBase_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_InterfaceRateBase = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""InterfaceRateBase", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_InterfaceRateBase), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_7cantera_8reaction_17InterfaceRateBase_1__call__, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Base class collecting commonly used features of Arrhenius-type rate objects\n    that include coverage dependencies.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_InterfaceRateBase, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_InterfaceRateBase, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_InterfaceRateBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_StickRateBase __pyx_vtable_7cantera_8reaction_StickRateBase;

static PyObject *__pyx_tp_new_7cantera_8reaction_StickRateBase(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_StickRateBase *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_InterfaceRateBase(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_StickRateBase *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_StickRateBase;
  return o;
}

static PyObject *__pyx_getprop_7cantera_8reaction_13StickRateBase_motz_wise_correction(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_13StickRateBase_20motz_wise_correction_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_13StickRateBase_motz_wise_correction(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_13StickRateBase_20motz_wise_correction_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_13StickRateBase_sticking_species(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_13StickRateBase_16sticking_species_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_13StickRateBase_sticking_species(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_13StickRateBase_16sticking_species_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_13StickRateBase_sticking_order(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_13StickRateBase_14sticking_order_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_13StickRateBase_sticking_order(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_13StickRateBase_14sticking_order_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_13StickRateBase_sticking_weight(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_13StickRateBase_15sticking_weight_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_13StickRateBase_sticking_weight(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_13StickRateBase_15sticking_weight_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_StickRateBase[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13StickRateBase_1__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13StickRateBase_3__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_StickRateBase[] = {
  {(char *)"motz_wise_correction", __pyx_getprop_7cantera_8reaction_13StickRateBase_motz_wise_correction, __pyx_setprop_7cantera_8reaction_13StickRateBase_motz_wise_correction, (char *)PyDoc_STR("\n        Get/Set a boolean indicating whether to use the correction factor developed by\n        Motz & Wise for reactions with high (near-unity) sticking coefficients when\n        converting the sticking coefficient to a rate coefficient.\n        "), 0},
  {(char *)"sticking_species", __pyx_getprop_7cantera_8reaction_13StickRateBase_sticking_species, __pyx_setprop_7cantera_8reaction_13StickRateBase_sticking_species, (char *)PyDoc_STR("\n        The name of the sticking species. Needed only for reactions with\n        multiple non-surface reactant species, where the sticking species is\n        ambiguous.\n        "), 0},
  {(char *)"sticking_order", __pyx_getprop_7cantera_8reaction_13StickRateBase_sticking_order, __pyx_setprop_7cantera_8reaction_13StickRateBase_sticking_order, (char *)PyDoc_STR("\n        The exponent applied to site density (sticking order).\n\n        The sticking order is not an independent property and is detected automatically\n        by Cantera. Accordingly, the setter should be only used for testing purposes.\n\n        .. warning::\n\n            This property is an experimental part of the Cantera API and\n            may be changed or removed without notice.\n        "), 0},
  {(char *)"sticking_weight", __pyx_getprop_7cantera_8reaction_13StickRateBase_sticking_weight, __pyx_setprop_7cantera_8reaction_13StickRateBase_sticking_weight, (char *)PyDoc_STR("\n        The molecular weight of the sticking species.\n\n        The sticking weight is not an independent property and is detected automatically\n        by Cantera. Accordingly, the setter should be only used for testing purposes.\n\n        .. warning::\n\n            This property is an experimental part of the Cantera API and\n            may be changed or removed without notice.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_StickRateBase_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    Base class collecting commonly used features of Arrhenius-type sticking rate\n    objects that include coverage dependencies.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_StickRateBase},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_StickRateBase},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_StickRateBase},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_StickRateBase_spec = {
  "cantera.reaction.StickRateBase",
  sizeof(struct __pyx_obj_7cantera_8reaction_StickRateBase),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_StickRateBase_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_StickRateBase = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""StickRateBase", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_StickRateBase), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_17InterfaceRateBase_1__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Base class collecting commonly used features of Arrhenius-type sticking rate\n    objects that include coverage dependencies.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_StickRateBase, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_StickRateBase, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_StickRateBase, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_ThirdBody __pyx_vtable_7cantera_8reaction_ThirdBody;

static PyObject *__pyx_tp_new_7cantera_8reaction_ThirdBody(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_ThirdBody *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7cantera_8reaction_ThirdBody *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cantera_8reaction_ThirdBody;
  new((void*)&(p->_third_body)) std::shared_ptr<Cantera::ThirdBody> ();
  if (unlikely(__pyx_pw_7cantera_8reaction_9ThirdBody_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cantera_8reaction_ThirdBody(PyObject *o) {
  struct __pyx_obj_7cantera_8reaction_ThirdBody *p = (struct __pyx_obj_7cantera_8reaction_ThirdBody *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && (!PyType_IS_GC(Py_TYPE(o)) || !__Pyx_PyObject_GC_IsFinalized(o))) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_8reaction_ThirdBody) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  __Pyx_call_destructor(p->_third_body);
  (*Py_TYPE(o)->tp_free)(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_9ThirdBody_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_9ThirdBody_4name_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_9ThirdBody_mass_action(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_9ThirdBody_11mass_action_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_9ThirdBody_efficiencies(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_9ThirdBody_12efficiencies_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_9ThirdBody_efficiencies(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_9ThirdBody_12efficiencies_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_9ThirdBody_default_efficiency(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_9ThirdBody_18default_efficiency_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_9ThirdBody_default_efficiency(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_9ThirdBody_18default_efficiency_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_ThirdBody[] = {
  {"efficiency", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9ThirdBody_3efficiency, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_9ThirdBody_2efficiency},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9ThirdBody_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9ThirdBody_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_ThirdBody[] = {
  {(char *)"name", __pyx_getprop_7cantera_8reaction_9ThirdBody_name, 0, (char *)PyDoc_STR("\n        Get the name of the third-body collider used in the reaction equation.\n        "), 0},
  {(char *)"mass_action", __pyx_getprop_7cantera_8reaction_9ThirdBody_mass_action, 0, (char *)PyDoc_STR("\n        Retrieve flag indicating whether third-body collider participates\n        in the law of mass action.\n        "), 0},
  {(char *)"efficiencies", __pyx_getprop_7cantera_8reaction_9ThirdBody_efficiencies, __pyx_setprop_7cantera_8reaction_9ThirdBody_efficiencies, (char *)PyDoc_STR("\n        Get/Set a `dict` defining non-default third-body efficiencies for this reaction,\n        where the keys are the species names and the values are the efficiencies.\n        "), 0},
  {(char *)"default_efficiency", __pyx_getprop_7cantera_8reaction_9ThirdBody_default_efficiency, __pyx_setprop_7cantera_8reaction_9ThirdBody_default_efficiency, (char *)PyDoc_STR("\n        Get/Set the default third-body efficiency for this reaction, used for species\n        not in `efficiencies`.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_ThirdBody_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_8reaction_ThirdBody},
  {Py_tp_doc, (void *)PyDoc_STR("\n    Class representing third-body collision partners in three-body or falloff reactions.\n\n    :param collider:\n        Name of the third-body collider. If ``M`` (default), the `default_efficiency`\n        is set to 1 and the collider is assumed to participate in a three-body reaction.\n        If the collider includes parentheses, - for example ``(+M)``, - a falloff form\n        is assumed, where the collider is not considered for the law of mass action.\n        For species other than ``M``, the third-body collider represents a named species\n        with collision efficiency 1, and the `default_efficiency` is set to zero.\n    :param efficiencies:\n        Non-default third-body efficiencies\n    :param default_efficiency:\n        Default third-body efficiency\n\n    .. versionadded:: 3.0\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_ThirdBody},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_ThirdBody},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_ThirdBody},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_ThirdBody_spec = {
  "cantera.reaction.ThirdBody",
  sizeof(struct __pyx_obj_7cantera_8reaction_ThirdBody),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_ThirdBody_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_ThirdBody = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""ThirdBody", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_ThirdBody), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ThirdBody, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    Class representing third-body collision partners in three-body or falloff reactions.\n\n    :param collider:\n        Name of the third-body collider. If ``M`` (default), the `default_efficiency`\n        is set to 1 and the collider is assumed to participate in a three-body reaction.\n        If the collider includes parentheses, - for example ``(+M)``, - a falloff form\n        is assumed, where the collider is not considered for the law of mass action.\n        For species other than ``M``, the third-body collider represents a named species\n        with collision efficiency 1, and the `default_efficiency` is set to zero.\n    :param efficiencies:\n        Non-default third-body efficiencies\n    :param default_efficiency:\n        Default third-body efficiency\n\n    .. versionadded:: 3.0\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_ThirdBody, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_ThirdBody, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_ThirdBody, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_Reaction __pyx_vtable_7cantera_8reaction_Reaction;

static PyObject *__pyx_tp_new_7cantera_8reaction_Reaction(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_Reaction *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7cantera_8reaction_Reaction *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cantera_8reaction_Reaction;
  new((void*)&(p->_reaction)) std::shared_ptr<Cantera::Reaction> ();
  p->_rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cantera_8reaction_8Reaction_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cantera_8reaction_Reaction(PyObject *o) {
  struct __pyx_obj_7cantera_8reaction_Reaction *p = (struct __pyx_obj_7cantera_8reaction_Reaction *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_8reaction_Reaction) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  __Pyx_call_destructor(p->_reaction);
  Py_CLEAR(p->_rate);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cantera_8reaction_Reaction(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_8reaction_Reaction *p = (struct __pyx_obj_7cantera_8reaction_Reaction *)o;
  if (p->_rate) {
    e = (*v)(((PyObject *)p->_rate), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_8reaction_Reaction(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_8reaction_Reaction *p = (struct __pyx_obj_7cantera_8reaction_Reaction *)o;
  tmp = ((PyObject*)p->_rate);
  p->_rate = ((struct __pyx_obj_7cantera_8reaction_ReactionRate *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_reactant_string(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_15reactant_string_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_product_string(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_14product_string_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_equation(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_8equation_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_reactants(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_9reactants_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_reactants(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_9reactants_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_products(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_8products_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_products(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_8products_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_orders(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_6orders_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_orders(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_6orders_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_ID(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_2ID_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_ID(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_2ID_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_reaction_type(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_13reaction_type_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_rate(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_4rate_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_rate(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_4rate_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_reversible(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_10reversible_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_reversible(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_10reversible_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_duplicate(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_9duplicate_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_duplicate(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_9duplicate_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_allow_nonreactant_orders(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_24allow_nonreactant_orders_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_allow_nonreactant_orders(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_24allow_nonreactant_orders_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_allow_negative_orders(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_21allow_negative_orders_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_allow_negative_orders(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_21allow_negative_orders_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_input_data(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_10input_data_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_rate_coeff_units(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_16rate_coeff_units_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_third_body(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_10third_body_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_third_body_name(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_15third_body_name_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_efficiencies(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_12efficiencies_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_efficiencies(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_12efficiencies_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_getprop_7cantera_8reaction_8Reaction_default_efficiency(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8Reaction_18default_efficiency_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8Reaction_default_efficiency(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8Reaction_18default_efficiency_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyObject *__pyx_specialmethod___pyx_pw_7cantera_8reaction_8Reaction_17__repr__(PyObject *self, CYTHON_UNUSED PyObject *arg) {
  return __pyx_pw_7cantera_8reaction_8Reaction_17__repr__(self);
}

static PyMethodDef __pyx_methods_7cantera_8reaction_Reaction[] = {
  {"from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_3from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_2from_dict},
  {"from_yaml", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_5from_yaml, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_4from_yaml},
  {"list_from_file", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_7list_from_file, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_6list_from_file},
  {"list_from_yaml", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_9list_from_yaml, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_8list_from_yaml},
  {"update_user_data", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_13update_user_data, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_12update_user_data},
  {"clear_user_data", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_15clear_user_data, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_14clear_user_data},
  {"__repr__", (PyCFunction)__pyx_specialmethod___pyx_pw_7cantera_8reaction_8Reaction_17__repr__, METH_NOARGS|METH_COEXIST, 0},
  {"efficiency", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_21efficiency, __Pyx_METH_FASTCALL|METH_KEYWORDS, __pyx_doc_7cantera_8reaction_8Reaction_20efficiency},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_23__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8Reaction_25__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_Reaction[] = {
  {(char *)"reactant_string", __pyx_getprop_7cantera_8reaction_8Reaction_reactant_string, 0, (char *)PyDoc_STR("\n        A string representing the reactants side of the chemical equation for\n        this reaction. Determined automatically based on `reactants`.\n        "), 0},
  {(char *)"product_string", __pyx_getprop_7cantera_8reaction_8Reaction_product_string, 0, (char *)PyDoc_STR("\n        A string representing the products side of the chemical equation for\n        this reaction. Determined automatically based on `products`.\n        "), 0},
  {(char *)"equation", __pyx_getprop_7cantera_8reaction_8Reaction_equation, 0, (char *)PyDoc_STR("\n        A string giving the chemical equation for this reaction. Determined\n        automatically based on `reactants` and `products`.\n        "), 0},
  {(char *)"reactants", __pyx_getprop_7cantera_8reaction_8Reaction_reactants, __pyx_setprop_7cantera_8reaction_8Reaction_reactants, (char *)PyDoc_STR("\n        Get/Set the reactants in this reaction as a dict where the keys are\n        species names and the values, are the stoichiometric coefficients, for example\n        ``{'CH4':1, 'OH':1}``, or as a composition string, for example\n        ``'CH4:1, OH:1'``.\n\n        .. deprecated:: 3.0\n\n            Setter for reactants is deprecated and will be removed after Cantera 3.0.\n            Use constructor instead.\n        "), 0},
  {(char *)"products", __pyx_getprop_7cantera_8reaction_8Reaction_products, __pyx_setprop_7cantera_8reaction_8Reaction_products, (char *)PyDoc_STR("\n        Get/Set the products in this reaction as a dict where the keys are\n        species names and the values, are the stoichiometric coefficients, for example\n        ``{'CH3':1, 'H2O':1}``, or as a composition string, for example\n        ``'CH3:1, H2O:1'``.\n\n        .. deprecated:: 3.0\n\n            Setter for products is deprecated and will be removed after Cantera 3.0.\n            Use constructor instead.\n        "), 0},
  {(char *)"orders", __pyx_getprop_7cantera_8reaction_8Reaction_orders, __pyx_setprop_7cantera_8reaction_8Reaction_orders, (char *)PyDoc_STR("\n        Get/Set the reaction order with respect to specific species as a dict\n        with species names as the keys and orders as the values, or as a\n        composition string. By default, mass-action kinetics is assumed, with\n        the reaction order for each reactant species equal to each its\n        stoichiometric coefficient.\n        "), 0},
  {(char *)"ID", __pyx_getprop_7cantera_8reaction_8Reaction_ID, __pyx_setprop_7cantera_8reaction_8Reaction_ID, (char *)PyDoc_STR("\n        Get/Set the identification string for the reaction, which can be used in\n        filtering operations.\n        "), 0},
  {(char *)"reaction_type", __pyx_getprop_7cantera_8reaction_8Reaction_reaction_type, 0, (char *)PyDoc_STR("\n        Retrieve the native type name of the reaction.\n        "), 0},
  {(char *)"rate", __pyx_getprop_7cantera_8reaction_8Reaction_rate, __pyx_setprop_7cantera_8reaction_8Reaction_rate, (char *)PyDoc_STR(" Get/Set the reaction rate evaluator for this reaction. "), 0},
  {(char *)"reversible", __pyx_getprop_7cantera_8reaction_8Reaction_reversible, __pyx_setprop_7cantera_8reaction_8Reaction_reversible, (char *)PyDoc_STR("\n        Get/Set a flag which is `True` if this reaction is reversible or `False`\n        otherwise.\n        "), 0},
  {(char *)"duplicate", __pyx_getprop_7cantera_8reaction_8Reaction_duplicate, __pyx_setprop_7cantera_8reaction_8Reaction_duplicate, (char *)PyDoc_STR("\n        Get/Set a flag which is `True` if this reaction is marked as a duplicate\n        or `False` otherwise.\n        "), 0},
  {(char *)"allow_nonreactant_orders", __pyx_getprop_7cantera_8reaction_8Reaction_allow_nonreactant_orders, __pyx_setprop_7cantera_8reaction_8Reaction_allow_nonreactant_orders, (char *)PyDoc_STR("\n        Get/Set a flag which is `True` if reaction orders can be specified for\n        non-reactant species. Default is `False`.\n        "), 0},
  {(char *)"allow_negative_orders", __pyx_getprop_7cantera_8reaction_8Reaction_allow_negative_orders, __pyx_setprop_7cantera_8reaction_8Reaction_allow_negative_orders, (char *)PyDoc_STR("\n        Get/Set a flag which is `True` if negative reaction orders are allowed.\n        Default is `False`.\n        "), 0},
  {(char *)"input_data", __pyx_getprop_7cantera_8reaction_8Reaction_input_data, 0, (char *)PyDoc_STR("\n        Get input data for this reaction with its current parameter values,\n        along with any user-specified data provided with its input (YAML)\n        definition.\n        "), 0},
  {(char *)"rate_coeff_units", __pyx_getprop_7cantera_8reaction_8Reaction_rate_coeff_units, 0, (char *)PyDoc_STR("Get reaction rate coefficient units"), 0},
  {(char *)"third_body", __pyx_getprop_7cantera_8reaction_8Reaction_third_body, 0, (char *)PyDoc_STR("\n        Returns a `ThirdBody` object if `Reaction` uses a third body collider, and\n        ``None`` otherwise.\n\n        .. versionadded:: 3.0\n        "), 0},
  {(char *)"third_body_name", __pyx_getprop_7cantera_8reaction_8Reaction_third_body_name, 0, (char *)PyDoc_STR("\n        Returns name of `ThirdBody` collider if `Reaction` uses a third body collider,\n        and ``None`` otherwise.\n\n        .. versionadded:: 3.0\n        "), 0},
  {(char *)"efficiencies", __pyx_getprop_7cantera_8reaction_8Reaction_efficiencies, __pyx_setprop_7cantera_8reaction_8Reaction_efficiencies, (char *)PyDoc_STR("\n        Get/Set a `dict` defining non-default third-body efficiencies for this reaction,\n        where the keys are the species names and the values are the efficiencies.\n\n        .. deprecated:: 3.0\n\n            To be removed after Cantera 3.0. Access via `third_body` property and\n            `ThirdBody` object instead.\n        "), 0},
  {(char *)"default_efficiency", __pyx_getprop_7cantera_8reaction_8Reaction_default_efficiency, __pyx_setprop_7cantera_8reaction_8Reaction_default_efficiency, (char *)PyDoc_STR("\n        Get/Set the default third-body efficiency for this reaction, used for species\n        not in `efficiencies`.\n\n        .. deprecated:: 3.0\n\n            To be removed after Cantera 3.0. Access via `third_body` property and\n            `ThirdBody` object instead.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_Reaction_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_8reaction_Reaction},
  {Py_tp_repr, (void *)__pyx_pw_7cantera_8reaction_8Reaction_17__repr__},
  {Py_sq_contains, (void *)__pyx_pw_7cantera_8reaction_8Reaction_11__contains__},
  {Py_tp_str, (void *)__pyx_pw_7cantera_8reaction_8Reaction_19__str__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    A class which stores data about a reaction and its rate parameterization so\n    that it can be added to a `Kinetics` object.\n\n    :param reactants:\n        Value used to set `reactants`\n    :param products:\n        Value used to set `products`\n    :param rate:\n        The rate parameterization for the reaction, given as one of the following:\n\n           - a `ReactionRate` object\n           - a `dict` containing the parameters needed to construct a `ReactionRate`\n             object, with keys corresponding to the YAML format\n           - a `dict` containing Arrhenius parameters (``A``, ``b``, and ``Ea``)\n    :param equation:\n        The reaction equation, used to set the reactants and products if values for\n        those arguments are not provided.\n\n    Examples::\n\n        R = ct.Reaction({\"O\": 1, \"H2\": 1}, {\"H\": 1, \"OH\": 1},\n                        ct.ArrheniusRate(38.7, 2.7, 26191840.0))\n        R = ct.Reaction(equation=\"O + H2 <=> H + OH\",\n                        rate={\"A\": 38.7, \"b\": 2.7, \"Ea\": 26191840.0})\n        R = ct.Reaction(equation=\"HO2 <=> OH + O\", rate=ChebyshevRate(...))\n\n    The static method `list_from_file` can be used to create a list of `Reaction`\n    objects from existing definitions in the YAML format. The following will produce a\n    list of the 325 reactions which make up the GRI 3.0 mechanism::\n\n        R = ct.Reaction.list_from_file(\"gri30.yaml\", gas)\n\n    where `gas` is a `Solution` object with the appropriate thermodynamic model,\n    which is the `ideal-gas` model in this case.\n\n    The static method `list_from_yaml` can be used to create lists of `Reaction`\n    objects from a YAML list::\n\n        rxns = '''\n          - equation: O + H2 <=> H + OH\n            rate-constant: {A: 3.87e+04, b: 2.7, Ea: 6260.0}\n          - equation: O + HO2 <=> OH + O2\n            rate-constant: {A: 2.0e+13, b: 0.0, Ea: 0.0}\n        '''\n        R = ct.Reaction.list_from_yaml(rxns, gas)\n""\n    The method `from_yaml` can be used to create individual `Reaction` objects from\n    definitions in the YAML format. It is important to verify that either the\n    pre-exponential factor and activation energy are supplied in SI units, or\n    that they have their units specified::\n\n        R = ct.Reaction.from_yaml('''{equation: O + H2 <=> H + OH,\n                rate-constant: {A: 3.87e+04 cm^3/mol/s, b: 2.7, Ea: 6260 cal/mol}}''',\n                gas)\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction_Reaction},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction_Reaction},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_Reaction},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_Reaction},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_Reaction},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_Reaction_spec = {
  "cantera.reaction.Reaction",
  sizeof(struct __pyx_obj_7cantera_8reaction_Reaction),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_8reaction_Reaction_slots,
};
#else

static PySequenceMethods __pyx_tp_as_sequence_Reaction = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  __pyx_pw_7cantera_8reaction_8Reaction_11__contains__, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyTypeObject __pyx_type_7cantera_8reaction_Reaction = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""Reaction", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_Reaction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_Reaction, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_7cantera_8reaction_8Reaction_17__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  &__pyx_tp_as_sequence_Reaction, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  __pyx_pw_7cantera_8reaction_8Reaction_19__str__, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A class which stores data about a reaction and its rate parameterization so\n    that it can be added to a `Kinetics` object.\n\n    :param reactants:\n        Value used to set `reactants`\n    :param products:\n        Value used to set `products`\n    :param rate:\n        The rate parameterization for the reaction, given as one of the following:\n\n           - a `ReactionRate` object\n           - a `dict` containing the parameters needed to construct a `ReactionRate`\n             object, with keys corresponding to the YAML format\n           - a `dict` containing Arrhenius parameters (``A``, ``b``, and ``Ea``)\n    :param equation:\n        The reaction equation, used to set the reactants and products if values for\n        those arguments are not provided.\n\n    Examples::\n\n        R = ct.Reaction({\"O\": 1, \"H2\": 1}, {\"H\": 1, \"OH\": 1},\n                        ct.ArrheniusRate(38.7, 2.7, 26191840.0))\n        R = ct.Reaction(equation=\"O + H2 <=> H + OH\",\n                        rate={\"A\": 38.7, \"b\": 2.7, \"Ea\": 26191840.0})\n        R = ct.Reaction(equation=\"HO2 <=> OH + O\", rate=ChebyshevRate(...))\n\n    The static method `list_from_file` can be used to create a list of `Reaction`\n    objects from existing definitions in the YAML format. The following will produce a\n    list of the 325 reactions which make up the GRI 3.0 mechanism::\n\n        R = ct.Reaction.list_from_file(\"gri30.yaml\", gas)\n\n    where `gas` is a `Solution` object with the appropriate thermodynamic model,\n    which is the `ideal-gas` model in this case.\n\n    The static method `list_from_yaml` can be used to create lists of `Reaction`\n    objects from a YAML list::\n\n        rxns = '''\n          - equation: O + H2 <=> H + OH\n            rate-constant: {A: 3.87e+04, b: 2.7, Ea: 6260.0}\n          - equation: O + HO2 <=> OH + O2\n            rate-constant: {A: 2.0e+13, b: 0.0, Ea: 0.0}\n        '''\n        R = ct.Reaction.list_from_yaml(rxns, gas)\n""\n    The method `from_yaml` can be used to create individual `Reaction` objects from\n    definitions in the YAML format. It is important to verify that either the\n    pre-exponential factor and activation energy are supplied in SI units, or\n    that they have their units specified::\n\n        R = ct.Reaction.from_yaml('''{equation: O + H2 <=> H + OH,\n                rate-constant: {A: 3.87e+04 cm^3/mol/s, b: 2.7, Ea: 6260 cal/mol}}''',\n                gas)\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction_Reaction, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction_Reaction, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_Reaction, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_Reaction, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_Reaction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_Arrhenius __pyx_vtable_7cantera_8reaction_Arrhenius;

static PyObject *__pyx_tp_new_7cantera_8reaction_Arrhenius(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_Arrhenius *p;
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (likely(!__Pyx_PyType_HasFeature(t, Py_TPFLAGS_IS_ABSTRACT))) {
    o = (*t->tp_alloc)(t, 0);
  } else {
    o = (PyObject *) PyBaseObject_Type.tp_new(t, __pyx_empty_tuple, 0);
  }
  if (unlikely(!o)) return 0;
  #endif
  p = ((struct __pyx_obj_7cantera_8reaction_Arrhenius *)o);
  p->__pyx_vtab = __pyx_vtabptr_7cantera_8reaction_Arrhenius;
  p->reaction = ((struct __pyx_obj_7cantera_8reaction_Reaction *)Py_None); Py_INCREF(Py_None);
  if (unlikely(__pyx_pw_7cantera_8reaction_9Arrhenius_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static void __pyx_tp_dealloc_7cantera_8reaction_Arrhenius(PyObject *o) {
  struct __pyx_obj_7cantera_8reaction_Arrhenius *p = (struct __pyx_obj_7cantera_8reaction_Arrhenius *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_8reaction_Arrhenius) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) + 1);
    __pyx_pw_7cantera_8reaction_9Arrhenius_3__dealloc__(o);
    __Pyx_SET_REFCNT(o, Py_REFCNT(o) - 1);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->reaction);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7cantera_8reaction_Arrhenius(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_8reaction_Arrhenius *p = (struct __pyx_obj_7cantera_8reaction_Arrhenius *)o;
  if (p->reaction) {
    e = (*v)(((PyObject *)p->reaction), a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_8reaction_Arrhenius(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_8reaction_Arrhenius *p = (struct __pyx_obj_7cantera_8reaction_Arrhenius *)o;
  tmp = ((PyObject*)p->reaction);
  p->reaction = ((struct __pyx_obj_7cantera_8reaction_Reaction *)Py_None); Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyObject *__pyx_getprop_7cantera_8reaction_9Arrhenius_pre_exponential_factor(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_9Arrhenius_22pre_exponential_factor_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_9Arrhenius_temperature_exponent(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_9Arrhenius_20temperature_exponent_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_9Arrhenius_activation_energy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_9Arrhenius_17activation_energy_1__get__(o);
}

static PyObject *__pyx_specialmethod___pyx_pw_7cantera_8reaction_9Arrhenius_5__repr__(PyObject *self, CYTHON_UNUSED PyObject *arg) {
  return __pyx_pw_7cantera_8reaction_9Arrhenius_5__repr__(self);
}

static PyMethodDef __pyx_methods_7cantera_8reaction_Arrhenius[] = {
  {"__repr__", (PyCFunction)__pyx_specialmethod___pyx_pw_7cantera_8reaction_9Arrhenius_5__repr__, METH_NOARGS|METH_COEXIST, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9Arrhenius_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9Arrhenius_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_Arrhenius[] = {
  {(char *)"pre_exponential_factor", __pyx_getprop_7cantera_8reaction_9Arrhenius_pre_exponential_factor, 0, (char *)PyDoc_STR("\n        The pre-exponential factor ``A`` in units of m, kmol, and s raised to\n        powers depending on the reaction order.\n        "), 0},
  {(char *)"temperature_exponent", __pyx_getprop_7cantera_8reaction_9Arrhenius_temperature_exponent, 0, (char *)PyDoc_STR("\n        The temperature exponent ``b``.\n        "), 0},
  {(char *)"activation_energy", __pyx_getprop_7cantera_8reaction_9Arrhenius_activation_energy, 0, (char *)PyDoc_STR("\n        The activation energy ``E`` [J/kmol].\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_Arrhenius_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_8reaction_Arrhenius},
  {Py_tp_repr, (void *)__pyx_pw_7cantera_8reaction_9Arrhenius_5__repr__},
  {Py_tp_call, (void *)__pyx_pw_7cantera_8reaction_9Arrhenius_7__call__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction rate coefficient which depends on temperature only and follows\n    the modified Arrhenius form:\n\n    .. math::\n\n        k_f = A T^b \\exp(-\\tfrac{E}{RT})\n\n    where ``A`` is the `pre_exponential_factor`, ``b`` is the `temperature_exponent`,\n    and ``E`` is the `activation_energy`.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction_Arrhenius},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction_Arrhenius},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_Arrhenius},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_Arrhenius},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_Arrhenius},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_Arrhenius_spec = {
  "cantera.reaction.Arrhenius",
  sizeof(struct __pyx_obj_7cantera_8reaction_Arrhenius),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_8reaction_Arrhenius_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_Arrhenius = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""Arrhenius", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_Arrhenius), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_Arrhenius, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  __pyx_pw_7cantera_8reaction_9Arrhenius_5__repr__, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_7cantera_8reaction_9Arrhenius_7__call__, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A reaction rate coefficient which depends on temperature only and follows\n    the modified Arrhenius form:\n\n    .. math::\n\n        k_f = A T^b \\exp(-\\tfrac{E}{RT})\n\n    where ``A`` is the `pre_exponential_factor`, ``b`` is the `temperature_exponent`,\n    and ``E`` is the `activation_energy`.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction_Arrhenius, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction_Arrhenius, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_Arrhenius, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_Arrhenius, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_Arrhenius, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_ArrheniusRate __pyx_vtable_7cantera_8reaction_ArrheniusRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_ArrheniusRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_ArrheniusRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ArrheniusRateBase(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_ArrheniusRate *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_ArrheniusRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_13ArrheniusRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_ArrheniusRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ArrheniusRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ArrheniusRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ArrheniusRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ArrheniusRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_ArrheniusRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction rate coefficient which depends on temperature only and follows\n    the modified Arrhenius form:\n\n    .. math::\n\n        k_f = A T^b \\exp(-\\tfrac{E_a}{RT})\n\n    where ``A`` is the\n    `pre_exponential_factor <ArrheniusRateBase.pre_exponential_factor>`, ``b`` is the\n    `temperature_exponent <ArrheniusRateBase.temperature_exponent>`, and ``Ea`` is the\n    `activation_energy <ArrheniusRateBase.activation_energy>`.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_ArrheniusRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_ArrheniusRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_ArrheniusRate_spec = {
  "cantera.reaction.ArrheniusRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_ArrheniusRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_ArrheniusRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_ArrheniusRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""ArrheniusRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_ArrheniusRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_3__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    A reaction rate coefficient which depends on temperature only and follows\n    the modified Arrhenius form:\n\n    .. math::\n\n        k_f = A T^b \\exp(-\\tfrac{E_a}{RT})\n\n    where ``A`` is the\n    `pre_exponential_factor <ArrheniusRateBase.pre_exponential_factor>`, ``b`` is the\n    `temperature_exponent <ArrheniusRateBase.temperature_exponent>`, and ``Ea`` is the\n    `activation_energy <ArrheniusRateBase.activation_energy>`.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_ArrheniusRate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_ArrheniusRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_BlowersMaselRate __pyx_vtable_7cantera_8reaction_BlowersMaselRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_BlowersMaselRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ArrheniusRateBase(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_BlowersMaselRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_16BlowersMaselRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyObject *__pyx_getprop_7cantera_8reaction_16BlowersMaselRate_bond_energy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_16BlowersMaselRate_11bond_energy_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_16BlowersMaselRate_delta_enthalpy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_16BlowersMaselRate_delta_enthalpy(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_16BlowersMaselRate_14delta_enthalpy_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_BlowersMaselRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_16BlowersMaselRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_16BlowersMaselRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_16BlowersMaselRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_16BlowersMaselRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_BlowersMaselRate[] = {
  {(char *)"bond_energy", __pyx_getprop_7cantera_8reaction_16BlowersMaselRate_bond_energy, 0, (char *)PyDoc_STR("\n        Average bond dissociation energy of the bond being formed and broken\n        in the reaction ``E`` [J/kmol].\n        "), 0},
  {(char *)"delta_enthalpy", __pyx_getprop_7cantera_8reaction_16BlowersMaselRate_delta_enthalpy, __pyx_setprop_7cantera_8reaction_16BlowersMaselRate_delta_enthalpy, (char *)PyDoc_STR("\n        Enthalpy change of reaction ``deltaH`` [J/kmol]\n\n        The enthalpy change of reaction is a function of temperature and thus not\n        an independent property. Accordingly, the setter should be only used for\n        testing purposes, as any value will be overwritten by an update of the\n        thermodynamic state.\n\n        .. warning::\n\n            This property is an experimental part of the Cantera API and\n            may be changed or removed without notice.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_BlowersMaselRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction rate coefficient which depends on temperature and enthalpy change\n    of the reaction follows the Blowers-Masel approximation and modified Arrhenius form\n    described in `ArrheniusRate`.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_BlowersMaselRate},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_BlowersMaselRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_BlowersMaselRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_BlowersMaselRate_spec = {
  "cantera.reaction.BlowersMaselRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_BlowersMaselRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_BlowersMaselRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""BlowersMaselRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_3__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    A reaction rate coefficient which depends on temperature and enthalpy change\n    of the reaction follows the Blowers-Masel approximation and modified Arrhenius form\n    described in `ArrheniusRate`.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_BlowersMaselRate, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_BlowersMaselRate, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_BlowersMaselRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_TwoTempPlasmaRate __pyx_vtable_7cantera_8reaction_TwoTempPlasmaRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_TwoTempPlasmaRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ArrheniusRateBase(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_TwoTempPlasmaRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyObject *__pyx_getprop_7cantera_8reaction_17TwoTempPlasmaRate_activation_electron_energy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_26activation_electron_energy_1__get__(o);
}

static PyMethodDef __pyx_methods_7cantera_8reaction_TwoTempPlasmaRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_5_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_7_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_9__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_11__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_TwoTempPlasmaRate[] = {
  {(char *)"activation_electron_energy", __pyx_getprop_7cantera_8reaction_17TwoTempPlasmaRate_activation_electron_energy, 0, (char *)PyDoc_STR("\n        The activation electron energy :math:`E_{a,e}` [J/kmol].\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_TwoTempPlasmaRate_slots[] = {
  {Py_tp_call, (void *)__pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_3__call__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction rate coefficient which depends on both gas and electron temperature\n    with the form similar to the modified Arrhenius form. Specifically, the temperature\n    exponent (b) is applied to the electron temperature instead. In addition, the\n    exponential term with activation energy for electron is included.\n\n    .. math::\n\n        k_f = A T_e^b \\exp(-\\tfrac{E_{a,g}}{RT}) \\exp(\\tfrac{E_{a,e}(T_e - T)}{R T T_e})\n\n    where :math:`A` is the\n    `pre_exponential_factor <ArrheniusRateBase.pre_exponential_factor>`,\n    :math:`b` is the `temperature_exponent <ArrheniusRateBase.temperature_exponent>`,\n    :math:`E_{a,g}` (``Ea_gas``) is the\n    `activation_energy <ArrheniusRateBase.activation_energy>`, and\n    :math:`E_{a,e}` (``Ea_electron``) is the `activation_electron_energy`.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_TwoTempPlasmaRate},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_TwoTempPlasmaRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_TwoTempPlasmaRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_TwoTempPlasmaRate_spec = {
  "cantera.reaction.TwoTempPlasmaRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_TwoTempPlasmaRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_TwoTempPlasmaRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""TwoTempPlasmaRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_7cantera_8reaction_17TwoTempPlasmaRate_3__call__, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    A reaction rate coefficient which depends on both gas and electron temperature\n    with the form similar to the modified Arrhenius form. Specifically, the temperature\n    exponent (b) is applied to the electron temperature instead. In addition, the\n    exponential term with activation energy for electron is included.\n\n    .. math::\n\n        k_f = A T_e^b \\exp(-\\tfrac{E_{a,g}}{RT}) \\exp(\\tfrac{E_{a,e}(T_e - T)}{R T T_e})\n\n    where :math:`A` is the\n    `pre_exponential_factor <ArrheniusRateBase.pre_exponential_factor>`,\n    :math:`b` is the `temperature_exponent <ArrheniusRateBase.temperature_exponent>`,\n    :math:`E_{a,g}` (``Ea_gas``) is the\n    `activation_energy <ArrheniusRateBase.activation_energy>`, and\n    :math:`E_{a,e}` (``Ea_electron``) is the `activation_electron_energy`.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_TwoTempPlasmaRate, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_TwoTempPlasmaRate, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_TwoTempPlasmaRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_LindemannRate __pyx_vtable_7cantera_8reaction_LindemannRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_LindemannRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_LindemannRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_FalloffRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_LindemannRate *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_LindemannRate;
  return o;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_LindemannRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13LindemannRate_1_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13LindemannRate_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13LindemannRate_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_LindemannRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    The Lindemann falloff parameterization.\n\n    This class implements the simple falloff function :math:`F(T,P_r) = 1.0`.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_LindemannRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_LindemannRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_LindemannRate_spec = {
  "cantera.reaction.LindemannRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_LindemannRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_LindemannRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_LindemannRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""LindemannRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_LindemannRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_11FalloffRate_3__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    The Lindemann falloff parameterization.\n\n    This class implements the simple falloff function :math:`F(T,P_r) = 1.0`.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_LindemannRate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_LindemannRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_TroeRate __pyx_vtable_7cantera_8reaction_TroeRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_TroeRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_TroeRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_FalloffRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_TroeRate *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_TroeRate;
  return o;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_TroeRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8TroeRate_1_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8TroeRate_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8TroeRate_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_TroeRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    The 3- or 4-parameter Troe falloff function.\n\n    :param falloff_coeffs:\n        An array of 3 or 4 parameters: :math:`[a, T^{***}, T^*, T^{**}]` where\n        the final parameter is optional (with a default value of 0).\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_TroeRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_TroeRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_TroeRate_spec = {
  "cantera.reaction.TroeRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_TroeRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_TroeRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_TroeRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""TroeRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_TroeRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_11FalloffRate_3__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    The 3- or 4-parameter Troe falloff function.\n\n    :param falloff_coeffs:\n        An array of 3 or 4 parameters: :math:`[a, T^{***}, T^*, T^{**}]` where\n        the final parameter is optional (with a default value of 0).\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_TroeRate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_TroeRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_SriRate __pyx_vtable_7cantera_8reaction_SriRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_SriRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_SriRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_FalloffRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_SriRate *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_SriRate;
  return o;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_SriRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_7SriRate_1_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_7SriRate_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_7SriRate_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_SriRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    The 3- or 5-parameter SRI falloff function.\n\n    :param falloff_coeffs:\n        An array of 3 or 5 parameters: :math:`[a, b, c, d, e]` where the last\n        two parameters are optional (with default values of 1 and 0, respectively).\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_SriRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_SriRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_SriRate_spec = {
  "cantera.reaction.SriRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_SriRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_SriRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_SriRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""SriRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_SriRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_11FalloffRate_3__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    The 3- or 5-parameter SRI falloff function.\n\n    :param falloff_coeffs:\n        An array of 3 or 5 parameters: :math:`[a, b, c, d, e]` where the last\n        two parameters are optional (with default values of 1 and 0, respectively).\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_SriRate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_SriRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_TsangRate __pyx_vtable_7cantera_8reaction_TsangRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_TsangRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_TsangRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_FalloffRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_TsangRate *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_TsangRate;
  return o;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_TsangRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9TsangRate_1_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9TsangRate_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_9TsangRate_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_TsangRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    The Tsang falloff parameterization.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_TsangRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_TsangRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_TsangRate_spec = {
  "cantera.reaction.TsangRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_TsangRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_TsangRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_TsangRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""TsangRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_TsangRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_11FalloffRate_3__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    The Tsang falloff parameterization.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_TsangRate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_TsangRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_PlogRate __pyx_vtable_7cantera_8reaction_PlogRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_PlogRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_PlogRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ReactionRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_PlogRate *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_PlogRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_8PlogRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyObject *__pyx_getprop_7cantera_8reaction_8PlogRate_rates(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_8PlogRate_5rates_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_8PlogRate_rates(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_8PlogRate_5rates_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_PlogRate[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8PlogRate_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_8PlogRate_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_PlogRate[] = {
  {(char *)"rates", __pyx_getprop_7cantera_8reaction_8PlogRate_rates, __pyx_setprop_7cantera_8reaction_8PlogRate_rates, (char *)PyDoc_STR("\n        Get/Set the rate coefficients for this reaction, which are given as a\n        list of (pressure, `Arrhenius`) tuples.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_PlogRate_slots[] = {
  {Py_tp_call, (void *)__pyx_pw_7cantera_8reaction_8PlogRate_3__call__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    A pressure-dependent reaction rate parameterized by logarithmically\n    interpolating between Arrhenius rate expressions at various pressures.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_PlogRate},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_PlogRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_PlogRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_PlogRate_spec = {
  "cantera.reaction.PlogRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_PlogRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_PlogRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_PlogRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""PlogRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_PlogRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_7cantera_8reaction_8PlogRate_3__call__, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    A pressure-dependent reaction rate parameterized by logarithmically\n    interpolating between Arrhenius rate expressions at various pressures.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_PlogRate, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_PlogRate, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_PlogRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_ChebyshevRate __pyx_vtable_7cantera_8reaction_ChebyshevRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_ChebyshevRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_ChebyshevRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_ReactionRate(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_ChebyshevRate *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_ChebyshevRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_13ChebyshevRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyObject *__pyx_getprop_7cantera_8reaction_13ChebyshevRate_temperature_range(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_13ChebyshevRate_17temperature_range_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_13ChebyshevRate_pressure_range(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_13ChebyshevRate_14pressure_range_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_13ChebyshevRate_n_temperature(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_13ChebyshevRate_13n_temperature_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_13ChebyshevRate_n_pressure(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_13ChebyshevRate_10n_pressure_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_13ChebyshevRate_data(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_13ChebyshevRate_4data_1__get__(o);
}

static PyMethodDef __pyx_methods_7cantera_8reaction_ChebyshevRate[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ChebyshevRate_5__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_13ChebyshevRate_7__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_ChebyshevRate[] = {
  {(char *)"temperature_range", __pyx_getprop_7cantera_8reaction_13ChebyshevRate_temperature_range, 0, (char *)PyDoc_STR(" Valid temperature range [K] for the Chebyshev fit "), 0},
  {(char *)"pressure_range", __pyx_getprop_7cantera_8reaction_13ChebyshevRate_pressure_range, 0, (char *)PyDoc_STR(" Valid pressure range [Pa] for the Chebyshev fit "), 0},
  {(char *)"n_temperature", __pyx_getprop_7cantera_8reaction_13ChebyshevRate_n_temperature, 0, (char *)PyDoc_STR("\n        Number of temperatures over which the Chebyshev fit is computed.\n        (same as number of rows of `data` property).\n        "), 0},
  {(char *)"n_pressure", __pyx_getprop_7cantera_8reaction_13ChebyshevRate_n_pressure, 0, (char *)PyDoc_STR("\n        Number of pressures over which the Chebyshev fit is computed\n        (same as number of columns of `data` property).\n        "), 0},
  {(char *)"data", __pyx_getprop_7cantera_8reaction_13ChebyshevRate_data, 0, (char *)PyDoc_STR("\n        2D array of Chebyshev coefficients where rows and columns correspond to\n        temperature and pressure dimensions over which the Chebyshev fit is computed.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_ChebyshevRate_slots[] = {
  {Py_tp_call, (void *)__pyx_pw_7cantera_8reaction_13ChebyshevRate_3__call__},
  {Py_tp_doc, (void *)PyDoc_STR("\n    A pressure-dependent reaction rate parameterized by a bivariate Chebyshev\n    polynomial in temperature and pressure.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_ChebyshevRate},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_ChebyshevRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_ChebyshevRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_ChebyshevRate_spec = {
  "cantera.reaction.ChebyshevRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_ChebyshevRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_ChebyshevRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_ChebyshevRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""ChebyshevRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_ChebyshevRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  __pyx_pw_7cantera_8reaction_13ChebyshevRate_3__call__, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    A pressure-dependent reaction rate parameterized by a bivariate Chebyshev\n    polynomial in temperature and pressure.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_ChebyshevRate, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_ChebyshevRate, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_ChebyshevRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_InterfaceArrheniusRate __pyx_vtable_7cantera_8reaction_InterfaceArrheniusRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_InterfaceArrheniusRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_InterfaceRateBase(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_InterfaceArrheniusRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_InterfaceArrheniusRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_22InterfaceArrheniusRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_InterfaceArrheniusRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction rate coefficient which depends on temperature and interface coverage\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_InterfaceArrheniusRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_InterfaceArrheniusRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_InterfaceArrheniusRate_spec = {
  "cantera.reaction.InterfaceArrheniusRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_InterfaceArrheniusRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_InterfaceArrheniusRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""InterfaceArrheniusRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_17InterfaceRateBase_1__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    A reaction rate coefficient which depends on temperature and interface coverage\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_InterfaceArrheniusRate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_InterfaceArrheniusRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_InterfaceBlowersMaselRate __pyx_vtable_7cantera_8reaction_InterfaceBlowersMaselRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_InterfaceBlowersMaselRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_InterfaceRateBase(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_InterfaceBlowersMaselRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyObject *__pyx_getprop_7cantera_8reaction_25InterfaceBlowersMaselRate_bond_energy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_11bond_energy_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_25InterfaceBlowersMaselRate_delta_enthalpy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_25InterfaceBlowersMaselRate_delta_enthalpy(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_14delta_enthalpy_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_InterfaceBlowersMaselRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_25InterfaceBlowersMaselRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_InterfaceBlowersMaselRate[] = {
  {(char *)"bond_energy", __pyx_getprop_7cantera_8reaction_25InterfaceBlowersMaselRate_bond_energy, 0, (char *)PyDoc_STR("\n        Average bond dissociation energy of the bond being formed and broken\n        in the reaction ``E`` [J/kmol].\n        "), 0},
  {(char *)"delta_enthalpy", __pyx_getprop_7cantera_8reaction_25InterfaceBlowersMaselRate_delta_enthalpy, __pyx_setprop_7cantera_8reaction_25InterfaceBlowersMaselRate_delta_enthalpy, (char *)PyDoc_STR("\n        Enthalpy change of reaction ``deltaH`` [J/kmol]\n\n        The enthalpy change of reaction is a function of temperature and thus not\n        an independent property. Accordingly, the setter should be only used for\n        testing purposes, as any value will be overwritten by an update of the\n        thermodynamic state.\n\n        .. warning::\n\n            This property is an experimental part of the Cantera API and\n            may be changed or removed without notice.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction rate coefficient which depends on temperature and enthalpy change\n    of the reaction follows the Blowers-Masel approximation and modified Arrhenius form\n    described in `ArrheniusRate`.\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_InterfaceBlowersMaselRate},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_InterfaceBlowersMaselRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_InterfaceBlowersMaselRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate_spec = {
  "cantera.reaction.InterfaceBlowersMaselRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""InterfaceBlowersMaselRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_17InterfaceRateBase_1__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    A reaction rate coefficient which depends on temperature and enthalpy change\n    of the reaction follows the Blowers-Masel approximation and modified Arrhenius form\n    described in `ArrheniusRate`.\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_InterfaceBlowersMaselRate, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_InterfaceBlowersMaselRate, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_InterfaceBlowersMaselRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_StickingArrheniusRate __pyx_vtable_7cantera_8reaction_StickingArrheniusRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_StickingArrheniusRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_StickRateBase(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_StickingArrheniusRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_StickingArrheniusRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_21StickingArrheniusRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_StickingArrheniusRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A surface sticking rate expression based on the Arrhenius parameterization\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_StickingArrheniusRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_StickingArrheniusRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_StickingArrheniusRate_spec = {
  "cantera.reaction.StickingArrheniusRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_StickingArrheniusRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_StickingArrheniusRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""StickingArrheniusRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_17InterfaceRateBase_1__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    A surface sticking rate expression based on the Arrhenius parameterization\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_StickingArrheniusRate, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_StickingArrheniusRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_StickingBlowersMaselRate __pyx_vtable_7cantera_8reaction_StickingBlowersMaselRate;

static PyObject *__pyx_tp_new_7cantera_8reaction_StickingBlowersMaselRate(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_StickRateBase(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *)o);
  p->__pyx_base.__pyx_base.__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_ReactionRate*)__pyx_vtabptr_7cantera_8reaction_StickingBlowersMaselRate;
  if (unlikely(__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_1__cinit__(o, a, k) < 0)) goto bad;
  return o;
  bad:
  Py_DECREF(o); o = 0;
  return NULL;
}

static PyObject *__pyx_getprop_7cantera_8reaction_24StickingBlowersMaselRate_bond_energy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_11bond_energy_1__get__(o);
}

static PyObject *__pyx_getprop_7cantera_8reaction_24StickingBlowersMaselRate_delta_enthalpy(PyObject *o, CYTHON_UNUSED void *x) {
  return __pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy_1__get__(o);
}

static int __pyx_setprop_7cantera_8reaction_24StickingBlowersMaselRate_delta_enthalpy(PyObject *o, PyObject *v, CYTHON_UNUSED void *x) {
  if (v) {
    return __pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_14delta_enthalpy_3__set__(o, v);
  }
  else {
    PyErr_SetString(PyExc_NotImplementedError, "__del__");
    return -1;
  }
}

static PyMethodDef __pyx_methods_7cantera_8reaction_StickingBlowersMaselRate[] = {
  {"_from_dict", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_3_from_dict, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"_from_parameters", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_5_from_parameters, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_7__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_24StickingBlowersMaselRate_9__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};

static struct PyGetSetDef __pyx_getsets_7cantera_8reaction_StickingBlowersMaselRate[] = {
  {(char *)"bond_energy", __pyx_getprop_7cantera_8reaction_24StickingBlowersMaselRate_bond_energy, 0, (char *)PyDoc_STR("\n        Average bond dissociation energy of the bond being formed and broken\n        in the reaction ``E`` [J/kmol].\n        "), 0},
  {(char *)"delta_enthalpy", __pyx_getprop_7cantera_8reaction_24StickingBlowersMaselRate_delta_enthalpy, __pyx_setprop_7cantera_8reaction_24StickingBlowersMaselRate_delta_enthalpy, (char *)PyDoc_STR("\n        Enthalpy change of reaction ``deltaH`` [J/kmol]\n\n        The enthalpy change of reaction is a function of temperature and thus not\n        an independent property. Accordingly, the setter should be only used for\n        testing purposes, as any value will be overwritten by an update of the\n        thermodynamic state.\n\n        .. warning::\n\n            This property is an experimental part of the Cantera API and\n            may be changed or removed without notice.\n        "), 0},
  {0, 0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_StickingBlowersMaselRate_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A surface sticking rate expression based on the Blowers-Masel parameterization\n    ")},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_StickingBlowersMaselRate},
  {Py_tp_getset, (void *)__pyx_getsets_7cantera_8reaction_StickingBlowersMaselRate},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_StickingBlowersMaselRate},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_StickingBlowersMaselRate_spec = {
  "cantera.reaction.StickingBlowersMaselRate",
  sizeof(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE,
  __pyx_type_7cantera_8reaction_StickingBlowersMaselRate_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_StickingBlowersMaselRate = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""StickingBlowersMaselRate", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_ReactionRate, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_12ReactionRate_1__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_17InterfaceRateBase_1__call__, /*tp_call*/
  #else
  0, /*tp_call*/
  #endif
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE, /*tp_flags*/
  PyDoc_STR("\n    A surface sticking rate expression based on the Blowers-Masel parameterization\n    "), /*tp_doc*/
  0, /*tp_traverse*/
  0, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_StickingBlowersMaselRate, /*tp_methods*/
  0, /*tp_members*/
  __pyx_getsets_7cantera_8reaction_StickingBlowersMaselRate, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_StickingBlowersMaselRate, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_ThreeBodyReaction __pyx_vtable_7cantera_8reaction_ThreeBodyReaction;

static PyObject *__pyx_tp_new_7cantera_8reaction_ThreeBodyReaction(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_Reaction(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_Reaction*)__pyx_vtabptr_7cantera_8reaction_ThreeBodyReaction;
  return o;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_ThreeBodyReaction[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ThreeBodyReaction_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_17ThreeBodyReaction_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_ThreeBodyReaction_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction with a non-reacting third body \"M\" that acts to add or remove\n    energy from the reacting species.\n\n    An example for the definition of an `ThreeBodyReaction` object is given as::\n\n        rxn = ThreeBodyReaction(\n            equation=\"2 O + M <=> O2 + M\",\n            rate={\"A\": 1.2e+17, \"b\": -1.0, \"Ea\": 0.0},\n            efficiencies={\"H2\": 2.4, \"H2O\": 15.4, \"AR\": 0.83},\n            kinetics=gas)\n\n    The YAML description corresponding to this reaction is::\n\n        equation: 2 O + M <=> O2 + M\n        type: three-body\n        rate-constant: {A: 1.2e+17 cm^6/mol^2/s, b: -1.0, Ea: 0.0 cal/mol}\n        efficiencies: {H2: 2.4, H2O: 15.4, AR: 0.83}\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0. Absorbed by `Reaction`.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction_Reaction},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction_Reaction},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_ThreeBodyReaction},
  {Py_tp_init, (void *)__pyx_pw_7cantera_8reaction_17ThreeBodyReaction_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_ThreeBodyReaction},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_ThreeBodyReaction_spec = {
  "cantera.reaction.ThreeBodyReaction",
  sizeof(struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_8reaction_ThreeBodyReaction_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_ThreeBodyReaction = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""ThreeBodyReaction", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_ThreeBodyReaction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_Reaction, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_8Reaction_17__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_8Reaction_19__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A reaction with a non-reacting third body \"M\" that acts to add or remove\n    energy from the reacting species.\n\n    An example for the definition of an `ThreeBodyReaction` object is given as::\n\n        rxn = ThreeBodyReaction(\n            equation=\"2 O + M <=> O2 + M\",\n            rate={\"A\": 1.2e+17, \"b\": -1.0, \"Ea\": 0.0},\n            efficiencies={\"H2\": 2.4, \"H2O\": 15.4, \"AR\": 0.83},\n            kinetics=gas)\n\n    The YAML description corresponding to this reaction is::\n\n        equation: 2 O + M <=> O2 + M\n        type: three-body\n        rate-constant: {A: 1.2e+17 cm^6/mol^2/s, b: -1.0, Ea: 0.0 cal/mol}\n        efficiencies: {H2: 2.4, H2O: 15.4, AR: 0.83}\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0. Absorbed by `Reaction`.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction_Reaction, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction_Reaction, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_ThreeBodyReaction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_8reaction_17ThreeBodyReaction_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_ThreeBodyReaction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_FalloffReaction __pyx_vtable_7cantera_8reaction_FalloffReaction;

static PyObject *__pyx_tp_new_7cantera_8reaction_FalloffReaction(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_FalloffReaction *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_Reaction(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_FalloffReaction *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_Reaction*)__pyx_vtabptr_7cantera_8reaction_FalloffReaction;
  return o;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_FalloffReaction[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_15FalloffReaction_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_15FalloffReaction_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_FalloffReaction_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction that is first-order in [M] at low pressure, like a third-body\n    reaction, but zeroth-order in [M] as pressure increases.\n\n    An example for the definition of a `FalloffReaction` object is given as::\n\n        rxn = FalloffReaction(\n            equation=\"2 OH (+ M) <=> H2O2 (+ M)\",\n            rate=ct.TroeRate(low=ct.Arrhenius(2.3e+12, -0.9, -7112800.0),\n                             high=ct.Arrhenius(7.4e+10, -0.37, 0),\n                             falloff_coeffs=[0.7346, 94.0, 1756.0, 5182.0]),\n            efficiencies={\"AR\": 0.7, \"H2\": 2.0, \"H2O\": 6.0},\n            kinetics=gas)\n\n    The YAML description corresponding to this reaction is::\n\n        equation: 2 OH (+ M) <=> H2O2 (+ M)  # Reaction 3\n        type: falloff\n        low-P-rate-constant: {A: 2.3e+12, b: -0.9, Ea: -1700.0 cal/mol}\n        high-P-rate-constant: {A: 7.4e+10, b: -0.37, Ea: 0.0 cal/mol}\n        Troe: {A: 0.7346, T3: 94.0, T1: 1756.0, T2: 5182.0}\n        efficiencies: {AR: 0.7, H2: 2.0, H2O: 6.0}\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0. Absorbed by `Reaction`.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction_Reaction},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction_Reaction},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_FalloffReaction},
  {Py_tp_init, (void *)__pyx_pw_7cantera_8reaction_15FalloffReaction_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_FalloffReaction},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_FalloffReaction_spec = {
  "cantera.reaction.FalloffReaction",
  sizeof(struct __pyx_obj_7cantera_8reaction_FalloffReaction),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_8reaction_FalloffReaction_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_FalloffReaction = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""FalloffReaction", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_FalloffReaction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_Reaction, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_8Reaction_17__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_8Reaction_19__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A reaction that is first-order in [M] at low pressure, like a third-body\n    reaction, but zeroth-order in [M] as pressure increases.\n\n    An example for the definition of a `FalloffReaction` object is given as::\n\n        rxn = FalloffReaction(\n            equation=\"2 OH (+ M) <=> H2O2 (+ M)\",\n            rate=ct.TroeRate(low=ct.Arrhenius(2.3e+12, -0.9, -7112800.0),\n                             high=ct.Arrhenius(7.4e+10, -0.37, 0),\n                             falloff_coeffs=[0.7346, 94.0, 1756.0, 5182.0]),\n            efficiencies={\"AR\": 0.7, \"H2\": 2.0, \"H2O\": 6.0},\n            kinetics=gas)\n\n    The YAML description corresponding to this reaction is::\n\n        equation: 2 OH (+ M) <=> H2O2 (+ M)  # Reaction 3\n        type: falloff\n        low-P-rate-constant: {A: 2.3e+12, b: -0.9, Ea: -1700.0 cal/mol}\n        high-P-rate-constant: {A: 7.4e+10, b: -0.37, Ea: 0.0 cal/mol}\n        Troe: {A: 0.7346, T3: 94.0, T1: 1756.0, T2: 5182.0}\n        efficiencies: {AR: 0.7, H2: 2.0, H2O: 6.0}\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0. Absorbed by `Reaction`.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction_Reaction, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction_Reaction, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_FalloffReaction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_8reaction_15FalloffReaction_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_FalloffReaction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_ChemicallyActivatedReaction __pyx_vtable_7cantera_8reaction_ChemicallyActivatedReaction;

static PyObject *__pyx_tp_new_7cantera_8reaction_ChemicallyActivatedReaction(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_FalloffReaction(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction *)o);
  p->__pyx_base.__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_Reaction*)__pyx_vtabptr_7cantera_8reaction_ChemicallyActivatedReaction;
  return o;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_ChemicallyActivatedReaction[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_ChemicallyActivatedReaction_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction where the rate decreases as pressure increases due to collisional\n    stabilization of a reaction intermediate. Like a `FalloffReaction`, except\n    that the forward rate constant is written as being proportional to the low-\n    pressure rate constant.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction_Reaction},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction_Reaction},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_ChemicallyActivatedReaction},
  {Py_tp_init, (void *)__pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_ChemicallyActivatedReaction},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_ChemicallyActivatedReaction_spec = {
  "cantera.reaction.ChemicallyActivatedReaction",
  sizeof(struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_8reaction_ChemicallyActivatedReaction_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_ChemicallyActivatedReaction = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""ChemicallyActivatedReaction", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_ChemicallyActivatedReaction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_Reaction, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_8Reaction_17__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_8Reaction_19__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A reaction where the rate decreases as pressure increases due to collisional\n    stabilization of a reaction intermediate. Like a `FalloffReaction`, except\n    that the forward rate constant is written as being proportional to the low-\n    pressure rate constant.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction_Reaction, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction_Reaction, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_ChemicallyActivatedReaction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_8reaction_27ChemicallyActivatedReaction_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_ChemicallyActivatedReaction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif
static struct __pyx_vtabstruct_7cantera_8reaction_CustomReaction __pyx_vtable_7cantera_8reaction_CustomReaction;

static PyObject *__pyx_tp_new_7cantera_8reaction_CustomReaction(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7cantera_8reaction_CustomReaction *p;
  PyObject *o = __pyx_tp_new_7cantera_8reaction_Reaction(t, a, k);
  if (unlikely(!o)) return 0;
  p = ((struct __pyx_obj_7cantera_8reaction_CustomReaction *)o);
  p->__pyx_base.__pyx_vtab = (struct __pyx_vtabstruct_7cantera_8reaction_Reaction*)__pyx_vtabptr_7cantera_8reaction_CustomReaction;
  return o;
}

static PyMethodDef __pyx_methods_7cantera_8reaction_CustomReaction[] = {
  {"__reduce_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14CustomReaction_3__reduce_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {"__setstate_cython__", (PyCFunction)(void*)(__Pyx_PyCFunction_FastCallWithKeywords)__pyx_pw_7cantera_8reaction_14CustomReaction_5__setstate_cython__, __Pyx_METH_FASTCALL|METH_KEYWORDS, 0},
  {0, 0, 0, 0}
};
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction_CustomReaction_slots[] = {
  {Py_tp_doc, (void *)PyDoc_STR("\n    A reaction which follows mass-action kinetics with a custom reaction rate.\n\n    An example for the definition of a `CustomReaction` object is given as::\n\n        rxn = CustomReaction(\n            equation=\"H2 + O <=> H + OH\",\n            rate=lambda T: 38.7 * T**2.7 * exp(-3150.15428/T),\n            kinetics=gas)\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0. Absorbed by `Reaction`.\n    ")},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction_Reaction},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction_Reaction},
  {Py_tp_methods, (void *)__pyx_methods_7cantera_8reaction_CustomReaction},
  {Py_tp_init, (void *)__pyx_pw_7cantera_8reaction_14CustomReaction_1__init__},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction_CustomReaction},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction_CustomReaction_spec = {
  "cantera.reaction.CustomReaction",
  sizeof(struct __pyx_obj_7cantera_8reaction_CustomReaction),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC,
  __pyx_type_7cantera_8reaction_CustomReaction_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction_CustomReaction = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""CustomReaction", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction_CustomReaction), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction_Reaction, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_8Reaction_17__repr__, /*tp_repr*/
  #else
  0, /*tp_repr*/
  #endif
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  #if CYTHON_COMPILING_IN_PYPY || 0
  __pyx_pw_7cantera_8reaction_8Reaction_19__str__, /*tp_str*/
  #else
  0, /*tp_str*/
  #endif
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  PyDoc_STR("\n    A reaction which follows mass-action kinetics with a custom reaction rate.\n\n    An example for the definition of a `CustomReaction` object is given as::\n\n        rxn = CustomReaction(\n            equation=\"H2 + O <=> H + OH\",\n            rate=lambda T: 38.7 * T**2.7 * exp(-3150.15428/T),\n            kinetics=gas)\n\n    .. deprecated:: 3.0\n\n        Class to be removed after Cantera 3.0. Absorbed by `Reaction`.\n    "), /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction_Reaction, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction_Reaction, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7cantera_8reaction_CustomReaction, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  __pyx_pw_7cantera_8reaction_14CustomReaction_1__init__, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction_CustomReaction, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *__pyx_freelist_7cantera_8reaction___pyx_scope_struct__wrap[8];
static int __pyx_freecount_7cantera_8reaction___pyx_scope_struct__wrap = 0;

static PyObject *__pyx_tp_new_7cantera_8reaction___pyx_scope_struct__wrap(PyTypeObject *t, CYTHON_UNUSED PyObject *a, CYTHON_UNUSED PyObject *k) {
  PyObject *o;
  #if CYTHON_COMPILING_IN_LIMITED_API
  allocfunc alloc_func = (allocfunc)PyType_GetSlot(t, Py_tp_alloc);
  o = alloc_func(t, 0);
  #else
  if (CYTHON_COMPILING_IN_CPYTHON && likely((int)(__pyx_freecount_7cantera_8reaction___pyx_scope_struct__wrap > 0) & (int)(t->tp_basicsize == sizeof(struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap)))) {
    o = (PyObject*)__pyx_freelist_7cantera_8reaction___pyx_scope_struct__wrap[--__pyx_freecount_7cantera_8reaction___pyx_scope_struct__wrap];
    memset(o, 0, sizeof(struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap));
    (void) PyObject_INIT(o, t);
    PyObject_GC_Track(o);
  } else {
    o = (*t->tp_alloc)(t, 0);
    if (unlikely(!o)) return 0;
  }
  #endif
  return o;
}

static void __pyx_tp_dealloc_7cantera_8reaction___pyx_scope_struct__wrap(PyObject *o) {
  struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *p = (struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *)o;
  #if CYTHON_USE_TP_FINALIZE
  if (unlikely((PY_VERSION_HEX >= 0x03080000 || __Pyx_PyType_HasFeature(Py_TYPE(o), Py_TPFLAGS_HAVE_FINALIZE)) && __Pyx_PyObject_GetSlot(o, tp_finalize, destructor)) && !__Pyx_PyObject_GC_IsFinalized(o)) {
    if (__Pyx_PyObject_GetSlot(o, tp_dealloc, destructor) == __pyx_tp_dealloc_7cantera_8reaction___pyx_scope_struct__wrap) {
      if (PyObject_CallFinalizerFromDealloc(o)) return;
    }
  }
  #endif
  PyObject_GC_UnTrack(o);
  Py_CLEAR(p->__pyx_v_register_subclasses);
  if (CYTHON_COMPILING_IN_CPYTHON && ((int)(__pyx_freecount_7cantera_8reaction___pyx_scope_struct__wrap < 8) & (int)(Py_TYPE(o)->tp_basicsize == sizeof(struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap)))) {
    __pyx_freelist_7cantera_8reaction___pyx_scope_struct__wrap[__pyx_freecount_7cantera_8reaction___pyx_scope_struct__wrap++] = ((struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *)o);
  } else {
    (*Py_TYPE(o)->tp_free)(o);
  }
}

static int __pyx_tp_traverse_7cantera_8reaction___pyx_scope_struct__wrap(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *p = (struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *)o;
  if (p->__pyx_v_register_subclasses) {
    e = (*v)(p->__pyx_v_register_subclasses, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7cantera_8reaction___pyx_scope_struct__wrap(PyObject *o) {
  PyObject* tmp;
  struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *p = (struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap *)o;
  tmp = ((PyObject*)p->__pyx_v_register_subclasses);
  p->__pyx_v_register_subclasses = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_type_7cantera_8reaction___pyx_scope_struct__wrap_slots[] = {
  {Py_tp_dealloc, (void *)__pyx_tp_dealloc_7cantera_8reaction___pyx_scope_struct__wrap},
  {Py_tp_traverse, (void *)__pyx_tp_traverse_7cantera_8reaction___pyx_scope_struct__wrap},
  {Py_tp_clear, (void *)__pyx_tp_clear_7cantera_8reaction___pyx_scope_struct__wrap},
  {Py_tp_new, (void *)__pyx_tp_new_7cantera_8reaction___pyx_scope_struct__wrap},
  {0, 0},
};
static PyType_Spec __pyx_type_7cantera_8reaction___pyx_scope_struct__wrap_spec = {
  "cantera.reaction.__pyx_scope_struct__wrap",
  sizeof(struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap),
  0,
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE,
  __pyx_type_7cantera_8reaction___pyx_scope_struct__wrap_slots,
};
#else

static PyTypeObject __pyx_type_7cantera_8reaction___pyx_scope_struct__wrap = {
  PyVarObject_HEAD_INIT(0, 0)
  "cantera.reaction.""__pyx_scope_struct__wrap", /*tp_name*/
  sizeof(struct __pyx_obj_7cantera_8reaction___pyx_scope_struct__wrap), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7cantera_8reaction___pyx_scope_struct__wrap, /*tp_dealloc*/
  #if PY_VERSION_HEX < 0x030800b4
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030800b4
  0, /*tp_vectorcall_offset*/
  #endif
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #endif
  #if PY_MAJOR_VERSION >= 3
  0, /*tp_as_async*/
  #endif
  0, /*tp_repr*/
  0, /*tp_as_number*/
  0, /*tp_as_sequence*/
  0, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  0, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_HAVE_VERSION_TAG|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_HAVE_GC|Py_TPFLAGS_HAVE_FINALIZE, /*tp_flags*/
  0, /*tp_doc*/
  __pyx_tp_traverse_7cantera_8reaction___pyx_scope_struct__wrap, /*tp_traverse*/
  __pyx_tp_clear_7cantera_8reaction___pyx_scope_struct__wrap, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  0, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  #if !CYTHON_USE_TYPE_SPECS
  0, /*tp_dictoffset*/
  #endif
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7cantera_8reaction___pyx_scope_struct__wrap, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  0, /*tp_version_tag*/
  #if PY_VERSION_HEX >= 0x030400a1
  #if CYTHON_USE_TP_FINALIZE
  0, /*tp_finalize*/
  #else
  NULL, /*tp_finalize*/
  #endif
  #endif
  #if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
  0, /*tp_vectorcall*/
  #endif
  #if __PYX_NEED_TP_PRINT_SLOT == 1
  0, /*tp_print*/
  #endif
  #if PY_VERSION_HEX >= 0x030C0000
  0, /*tp_watched*/
  #endif
  #if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
  0, /*tp_pypy_flags*/
  #endif
};
#endif

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};
#ifndef CYTHON_SMALL_CODE
#if defined(__clang__)
    #define CYTHON_SMALL_CODE
#elif defined(__GNUC__) && (__GNUC__ > 4 || (__GNUC__ == 4 && __GNUC_MINOR__ >= 3))
    #define CYTHON_SMALL_CODE __attribute__((cold))
#else
    #define CYTHON_SMALL_CODE
#endif
#endif
/* #### Code section: pystring_table ### */

static int __Pyx_CreateStringTabAndInitStrings(void) {
  __Pyx_StringTabEntry __pyx_string_tab[] = {
    {&__pyx_kp_u_0x, __pyx_k_0x, sizeof(__pyx_k_0x), 0, 1, 0, 0},
    {&__pyx_n_s_A, __pyx_k_A, sizeof(__pyx_k_A), 0, 0, 1, 1},
    {&__pyx_n_u_A, __pyx_k_A, sizeof(__pyx_k_A), 0, 1, 0, 1},
    {&__pyx_n_s_AnyMap, __pyx_k_AnyMap, sizeof(__pyx_k_AnyMap), 0, 0, 1, 1},
    {&__pyx_n_s_Arrhenius, __pyx_k_Arrhenius, sizeof(__pyx_k_Arrhenius), 0, 0, 1, 1},
    {&__pyx_n_u_Arrhenius, __pyx_k_Arrhenius, sizeof(__pyx_k_Arrhenius), 0, 1, 0, 1},
    {&__pyx_n_s_ArrheniusRate, __pyx_k_ArrheniusRate, sizeof(__pyx_k_ArrheniusRate), 0, 0, 1, 1},
    {&__pyx_n_s_ArrheniusRateBase, __pyx_k_ArrheniusRateBase, sizeof(__pyx_k_ArrheniusRateBase), 0, 0, 1, 1},
    {&__pyx_n_s_ArrheniusRateBase___reduce_cytho, __pyx_k_ArrheniusRateBase___reduce_cytho, sizeof(__pyx_k_ArrheniusRateBase___reduce_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_ArrheniusRateBase___setstate_cyt, __pyx_k_ArrheniusRateBase___setstate_cyt, sizeof(__pyx_k_ArrheniusRateBase___setstate_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_ArrheniusRateBase__cinit, __pyx_k_ArrheniusRateBase__cinit, sizeof(__pyx_k_ArrheniusRateBase__cinit), 0, 0, 1, 1},
    {&__pyx_n_s_ArrheniusRate___reduce_cython, __pyx_k_ArrheniusRate___reduce_cython, sizeof(__pyx_k_ArrheniusRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ArrheniusRate___setstate_cython, __pyx_k_ArrheniusRate___setstate_cython, sizeof(__pyx_k_ArrheniusRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ArrheniusRate__from_dict, __pyx_k_ArrheniusRate__from_dict, sizeof(__pyx_k_ArrheniusRate__from_dict), 0, 0, 1, 1},
    {&__pyx_n_s_ArrheniusRate__from_parameters, __pyx_k_ArrheniusRate__from_parameters, sizeof(__pyx_k_ArrheniusRate__from_parameters), 0, 0, 1, 1},
    {&__pyx_kp_u_Arrhenius_A_g_b_g_E_g, __pyx_k_Arrhenius_A_g_b_g_E_g, sizeof(__pyx_k_Arrhenius_A_g_b_g_E_g), 0, 1, 0, 0},
    {&__pyx_n_s_Arrhenius___reduce_cython, __pyx_k_Arrhenius___reduce_cython, sizeof(__pyx_k_Arrhenius___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Arrhenius___setstate_cython, __pyx_k_Arrhenius___setstate_cython, sizeof(__pyx_k_Arrhenius___setstate_cython), 0, 0, 1, 1},
    {&__pyx_kp_u_Base_class, __pyx_k_Base_class, sizeof(__pyx_k_Base_class), 0, 1, 0, 0},
    {&__pyx_n_s_BlowersMaselRate, __pyx_k_BlowersMaselRate, sizeof(__pyx_k_BlowersMaselRate), 0, 0, 1, 1},
    {&__pyx_n_s_BlowersMaselRate___reduce_cython, __pyx_k_BlowersMaselRate___reduce_cython, sizeof(__pyx_k_BlowersMaselRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_BlowersMaselRate___setstate_cyth, __pyx_k_BlowersMaselRate___setstate_cyth, sizeof(__pyx_k_BlowersMaselRate___setstate_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_BlowersMaselRate__from_dict, __pyx_k_BlowersMaselRate__from_dict, sizeof(__pyx_k_BlowersMaselRate__from_dict), 0, 0, 1, 1},
    {&__pyx_n_s_BlowersMaselRate__from_parameter, __pyx_k_BlowersMaselRate__from_parameter, sizeof(__pyx_k_BlowersMaselRate__from_parameter), 0, 0, 1, 1},
    {&__pyx_kp_u_Blowers_Masel, __pyx_k_Blowers_Masel, sizeof(__pyx_k_Blowers_Masel), 0, 1, 0, 0},
    {&__pyx_kp_u_Cannot_convert_input_with_type, __pyx_k_Cannot_convert_input_with_type, sizeof(__pyx_k_Cannot_convert_input_with_type), 0, 1, 0, 0},
    {&__pyx_n_s_CanteraError, __pyx_k_CanteraError, sizeof(__pyx_k_CanteraError), 0, 0, 1, 1},
    {&__pyx_n_u_Chebyshev, __pyx_k_Chebyshev, sizeof(__pyx_k_Chebyshev), 0, 1, 0, 1},
    {&__pyx_n_s_ChebyshevRate, __pyx_k_ChebyshevRate, sizeof(__pyx_k_ChebyshevRate), 0, 0, 1, 1},
    {&__pyx_n_s_ChebyshevRate___reduce_cython, __pyx_k_ChebyshevRate___reduce_cython, sizeof(__pyx_k_ChebyshevRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ChebyshevRate___setstate_cython, __pyx_k_ChebyshevRate___setstate_cython, sizeof(__pyx_k_ChebyshevRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ChemicallyActivatedReaction, __pyx_k_ChemicallyActivatedReaction, sizeof(__pyx_k_ChemicallyActivatedReaction), 0, 0, 1, 1},
    {&__pyx_kp_u_ChemicallyActivatedReaction_Clas, __pyx_k_ChemicallyActivatedReaction_Clas, sizeof(__pyx_k_ChemicallyActivatedReaction_Clas), 0, 1, 0, 0},
    {&__pyx_n_s_ChemicallyActivatedReaction___re, __pyx_k_ChemicallyActivatedReaction___re, sizeof(__pyx_k_ChemicallyActivatedReaction___re), 0, 0, 1, 1},
    {&__pyx_n_s_ChemicallyActivatedReaction___se, __pyx_k_ChemicallyActivatedReaction___se, sizeof(__pyx_k_ChemicallyActivatedReaction___se), 0, 0, 1, 1},
    {&__pyx_kp_u_Class_method_from_dict_was_invok, __pyx_k_Class_method_from_dict_was_invok, sizeof(__pyx_k_Class_method_from_dict_was_invok), 0, 1, 0, 0},
    {&__pyx_kp_u_Class_method_from_yaml_was_invok, __pyx_k_Class_method_from_yaml_was_invok, sizeof(__pyx_k_Class_method_from_yaml_was_invok), 0, 1, 0, 0},
    {&__pyx_n_s_CustomRate, __pyx_k_CustomRate, sizeof(__pyx_k_CustomRate), 0, 0, 1, 1},
    {&__pyx_n_s_CustomRate___reduce_cython, __pyx_k_CustomRate___reduce_cython, sizeof(__pyx_k_CustomRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_CustomRate___setstate_cython, __pyx_k_CustomRate___setstate_cython, sizeof(__pyx_k_CustomRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_CustomRate_set_rate_function, __pyx_k_CustomRate_set_rate_function, sizeof(__pyx_k_CustomRate_set_rate_function), 0, 0, 1, 1},
    {&__pyx_n_s_CustomReaction, __pyx_k_CustomReaction, sizeof(__pyx_k_CustomReaction), 0, 0, 1, 1},
    {&__pyx_kp_u_CustomReaction_Class_to_be_remov, __pyx_k_CustomReaction_Class_to_be_remov, sizeof(__pyx_k_CustomReaction_Class_to_be_remov), 0, 1, 0, 0},
    {&__pyx_n_s_CustomReaction___reduce_cython, __pyx_k_CustomReaction___reduce_cython, sizeof(__pyx_k_CustomReaction___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_CustomReaction___setstate_cython, __pyx_k_CustomReaction___setstate_cython, sizeof(__pyx_k_CustomReaction___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_DeprecationWarning, __pyx_k_DeprecationWarning, sizeof(__pyx_k_DeprecationWarning), 0, 0, 1, 1},
    {&__pyx_n_s_E, __pyx_k_E, sizeof(__pyx_k_E), 0, 0, 1, 1},
    {&__pyx_n_s_Ea, __pyx_k_Ea, sizeof(__pyx_k_Ea), 0, 0, 1, 1},
    {&__pyx_n_s_Ea0, __pyx_k_Ea0, sizeof(__pyx_k_Ea0), 0, 0, 1, 1},
    {&__pyx_n_u_Ea0, __pyx_k_Ea0, sizeof(__pyx_k_Ea0), 0, 1, 0, 1},
    {&__pyx_n_s_Ea_electron, __pyx_k_Ea_electron, sizeof(__pyx_k_Ea_electron), 0, 0, 1, 1},
    {&__pyx_n_s_Ea_gas, __pyx_k_Ea_gas, sizeof(__pyx_k_Ea_gas), 0, 0, 1, 1},
    {&__pyx_n_u_Ea_gas, __pyx_k_Ea_gas, sizeof(__pyx_k_Ea_gas), 0, 1, 0, 1},
    {&__pyx_n_s_ExtensibleRate, __pyx_k_ExtensibleRate, sizeof(__pyx_k_ExtensibleRate), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRateData, __pyx_k_ExtensibleRateData, sizeof(__pyx_k_ExtensibleRateData), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRateData___reduce_cyth, __pyx_k_ExtensibleRateData___reduce_cyth, sizeof(__pyx_k_ExtensibleRateData___reduce_cyth), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRateData___setstate_cy, __pyx_k_ExtensibleRateData___setstate_cy, sizeof(__pyx_k_ExtensibleRateData___setstate_cy), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRateData_update, __pyx_k_ExtensibleRateData_update, sizeof(__pyx_k_ExtensibleRateData_update), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRate___reduce_cython, __pyx_k_ExtensibleRate___reduce_cython, sizeof(__pyx_k_ExtensibleRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRate___setstate_cython, __pyx_k_ExtensibleRate___setstate_cython, sizeof(__pyx_k_ExtensibleRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRate_eval, __pyx_k_ExtensibleRate_eval, sizeof(__pyx_k_ExtensibleRate_eval), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRate_get_parameters, __pyx_k_ExtensibleRate_get_parameters, sizeof(__pyx_k_ExtensibleRate_get_parameters), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRate_set_parameters, __pyx_k_ExtensibleRate_set_parameters, sizeof(__pyx_k_ExtensibleRate_set_parameters), 0, 0, 1, 1},
    {&__pyx_n_s_ExtensibleRate_validate, __pyx_k_ExtensibleRate_validate, sizeof(__pyx_k_ExtensibleRate_validate), 0, 0, 1, 1},
    {&__pyx_n_u_F, __pyx_k_F, sizeof(__pyx_k_F), 0, 1, 0, 1},
    {&__pyx_n_s_FalloffRate, __pyx_k_FalloffRate, sizeof(__pyx_k_FalloffRate), 0, 0, 1, 1},
    {&__pyx_n_s_FalloffRate___reduce_cython, __pyx_k_FalloffRate___reduce_cython, sizeof(__pyx_k_FalloffRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_FalloffRate___setstate_cython, __pyx_k_FalloffRate___setstate_cython, sizeof(__pyx_k_FalloffRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_FalloffRate_falloff_function, __pyx_k_FalloffRate_falloff_function, sizeof(__pyx_k_FalloffRate_falloff_function), 0, 0, 1, 1},
    {&__pyx_n_s_FalloffReaction, __pyx_k_FalloffReaction, sizeof(__pyx_k_FalloffReaction), 0, 0, 1, 1},
    {&__pyx_kp_u_FalloffReaction_Class_to_be_remo, __pyx_k_FalloffReaction_Class_to_be_remo, sizeof(__pyx_k_FalloffReaction_Class_to_be_remo), 0, 1, 0, 0},
    {&__pyx_n_s_FalloffReaction___reduce_cython, __pyx_k_FalloffReaction___reduce_cython, sizeof(__pyx_k_FalloffReaction___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_FalloffReaction___setstate_cytho, __pyx_k_FalloffReaction___setstate_cytho, sizeof(__pyx_k_FalloffReaction___setstate_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_ImportError, __pyx_k_ImportError, sizeof(__pyx_k_ImportError), 0, 0, 1, 1},
    {&__pyx_kp_s_Incompatible_checksums_0x_x_vs_0, __pyx_k_Incompatible_checksums_0x_x_vs_0, sizeof(__pyx_k_Incompatible_checksums_0x_x_vs_0), 0, 0, 1, 0},
    {&__pyx_n_s_InterfaceArrheniusRate, __pyx_k_InterfaceArrheniusRate, sizeof(__pyx_k_InterfaceArrheniusRate), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceArrheniusRate___reduce, __pyx_k_InterfaceArrheniusRate___reduce, sizeof(__pyx_k_InterfaceArrheniusRate___reduce), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceArrheniusRate___setstat, __pyx_k_InterfaceArrheniusRate___setstat, sizeof(__pyx_k_InterfaceArrheniusRate___setstat), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceArrheniusRate__from_dic, __pyx_k_InterfaceArrheniusRate__from_dic, sizeof(__pyx_k_InterfaceArrheniusRate__from_dic), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceArrheniusRate__from_par, __pyx_k_InterfaceArrheniusRate__from_par, sizeof(__pyx_k_InterfaceArrheniusRate__from_par), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceBlowersMaselRate, __pyx_k_InterfaceBlowersMaselRate, sizeof(__pyx_k_InterfaceBlowersMaselRate), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceBlowersMaselRate___redu, __pyx_k_InterfaceBlowersMaselRate___redu, sizeof(__pyx_k_InterfaceBlowersMaselRate___redu), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceBlowersMaselRate___sets, __pyx_k_InterfaceBlowersMaselRate___sets, sizeof(__pyx_k_InterfaceBlowersMaselRate___sets), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceBlowersMaselRate__from, __pyx_k_InterfaceBlowersMaselRate__from, sizeof(__pyx_k_InterfaceBlowersMaselRate__from), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceBlowersMaselRate__from_2, __pyx_k_InterfaceBlowersMaselRate__from_2, sizeof(__pyx_k_InterfaceBlowersMaselRate__from_2), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceRateBase, __pyx_k_InterfaceRateBase, sizeof(__pyx_k_InterfaceRateBase), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceRateBase___reduce_cytho, __pyx_k_InterfaceRateBase___reduce_cytho, sizeof(__pyx_k_InterfaceRateBase___reduce_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceRateBase___setstate_cyt, __pyx_k_InterfaceRateBase___setstate_cyt, sizeof(__pyx_k_InterfaceRateBase___setstate_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_InterfaceRateBase_set_species, __pyx_k_InterfaceRateBase_set_species, sizeof(__pyx_k_InterfaceRateBase_set_species), 0, 0, 1, 1},
    {&__pyx_kp_u_Internal_Error_Delegator_does_no, __pyx_k_Internal_Error_Delegator_does_no, sizeof(__pyx_k_Internal_Error_Delegator_does_no), 0, 1, 0, 0},
    {&__pyx_kp_u_Invalid_input_parameters, __pyx_k_Invalid_input_parameters, sizeof(__pyx_k_Invalid_input_parameters), 0, 1, 0, 0},
    {&__pyx_kp_u_Invalid_parameter_input_data, __pyx_k_Invalid_parameter_input_data, sizeof(__pyx_k_Invalid_parameter_input_data), 0, 1, 0, 0},
    {&__pyx_kp_u_Invalid_parameter_rates, __pyx_k_Invalid_parameter_rates, sizeof(__pyx_k_Invalid_parameter_rates), 0, 1, 0, 0},
    {&__pyx_kp_u_Invalid_parameters, __pyx_k_Invalid_parameters, sizeof(__pyx_k_Invalid_parameters), 0, 1, 0, 0},
    {&__pyx_kp_u_Invalid_parameters_2, __pyx_k_Invalid_parameters_2, sizeof(__pyx_k_Invalid_parameters_2), 0, 1, 0, 0},
    {&__pyx_kp_u_Invalid_rate_definition_with_typ, __pyx_k_Invalid_rate_definition_with_typ, sizeof(__pyx_k_Invalid_rate_definition_with_typ), 0, 1, 0, 0},
    {&__pyx_n_u_Lindemann, __pyx_k_Lindemann, sizeof(__pyx_k_Lindemann), 0, 1, 0, 1},
    {&__pyx_n_s_LindemannRate, __pyx_k_LindemannRate, sizeof(__pyx_k_LindemannRate), 0, 0, 1, 1},
    {&__pyx_n_s_LindemannRate___reduce_cython, __pyx_k_LindemannRate___reduce_cython, sizeof(__pyx_k_LindemannRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_LindemannRate___setstate_cython, __pyx_k_LindemannRate___setstate_cython, sizeof(__pyx_k_LindemannRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_LindemannRate__from_dict, __pyx_k_LindemannRate__from_dict, sizeof(__pyx_k_LindemannRate__from_dict), 0, 0, 1, 1},
    {&__pyx_n_u_M, __pyx_k_M, sizeof(__pyx_k_M), 0, 1, 0, 1},
    {&__pyx_n_s_MemoryError, __pyx_k_MemoryError, sizeof(__pyx_k_MemoryError), 0, 0, 1, 1},
    {&__pyx_kp_u_Missing_reactant_and_or_product, __pyx_k_Missing_reactant_and_or_product, sizeof(__pyx_k_Missing_reactant_and_or_product), 0, 1, 0, 0},
    {&__pyx_kp_u_Missing_reaction_rate_informatio, __pyx_k_Missing_reaction_rate_informatio, sizeof(__pyx_k_Missing_reaction_rate_informatio), 0, 1, 0, 0},
    {&__pyx_n_s_None, __pyx_k_None, sizeof(__pyx_k_None), 0, 0, 1, 1},
    {&__pyx_n_s_NotImplementedError, __pyx_k_NotImplementedError, sizeof(__pyx_k_NotImplementedError), 0, 0, 1, 1},
    {&__pyx_n_s_PickleError, __pyx_k_PickleError, sizeof(__pyx_k_PickleError), 0, 0, 1, 1},
    {&__pyx_n_s_PlogRate, __pyx_k_PlogRate, sizeof(__pyx_k_PlogRate), 0, 0, 1, 1},
    {&__pyx_n_s_PlogRate___reduce_cython, __pyx_k_PlogRate___reduce_cython, sizeof(__pyx_k_PlogRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_PlogRate___setstate_cython, __pyx_k_PlogRate___setstate_cython, sizeof(__pyx_k_PlogRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Reaction, __pyx_k_Reaction, sizeof(__pyx_k_Reaction), 0, 0, 1, 1},
    {&__pyx_n_s_ReactionRate, __pyx_k_ReactionRate, sizeof(__pyx_k_ReactionRate), 0, 0, 1, 1},
    {&__pyx_n_s_ReactionRate___reduce_cython, __pyx_k_ReactionRate___reduce_cython, sizeof(__pyx_k_ReactionRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ReactionRate___setstate_cython, __pyx_k_ReactionRate___setstate_cython, sizeof(__pyx_k_ReactionRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ReactionRate_from_dict, __pyx_k_ReactionRate_from_dict, sizeof(__pyx_k_ReactionRate_from_dict), 0, 0, 1, 1},
    {&__pyx_n_s_ReactionRate_from_yaml, __pyx_k_ReactionRate_from_yaml, sizeof(__pyx_k_ReactionRate_from_yaml), 0, 0, 1, 1},
    {&__pyx_n_s_ReactionRate_wrap_locals_registe, __pyx_k_ReactionRate_wrap_locals_registe, sizeof(__pyx_k_ReactionRate_wrap_locals_registe), 0, 0, 1, 1},
    {&__pyx_kp_u_Reaction_Argument_efficiencies_i, __pyx_k_Reaction_Argument_efficiencies_i, sizeof(__pyx_k_Reaction_Argument_efficiencies_i), 0, 1, 0, 0},
    {&__pyx_kp_u_Reaction_Parameter_kinetics_is_n, __pyx_k_Reaction_Parameter_kinetics_is_n, sizeof(__pyx_k_Reaction_Parameter_kinetics_is_n), 0, 1, 0, 0},
    {&__pyx_n_s_Reaction___reduce_cython, __pyx_k_Reaction___reduce_cython, sizeof(__pyx_k_Reaction___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Reaction___setstate_cython, __pyx_k_Reaction___setstate_cython, sizeof(__pyx_k_Reaction___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_Reaction_clear_user_data, __pyx_k_Reaction_clear_user_data, sizeof(__pyx_k_Reaction_clear_user_data), 0, 0, 1, 1},
    {&__pyx_kp_u_Reaction_default_efficiency_Prop, __pyx_k_Reaction_default_efficiency_Prop, sizeof(__pyx_k_Reaction_default_efficiency_Prop), 0, 1, 0, 0},
    {&__pyx_kp_u_Reaction_does_not_involve_third, __pyx_k_Reaction_does_not_involve_third, sizeof(__pyx_k_Reaction_does_not_involve_third), 0, 1, 0, 0},
    {&__pyx_kp_u_Reaction_efficiencies_Property_i, __pyx_k_Reaction_efficiencies_Property_i, sizeof(__pyx_k_Reaction_efficiencies_Property_i), 0, 1, 0, 0},
    {&__pyx_n_s_Reaction_efficiency, __pyx_k_Reaction_efficiency, sizeof(__pyx_k_Reaction_efficiency), 0, 0, 1, 1},
    {&__pyx_kp_u_Reaction_efficiency_Method_is_de, __pyx_k_Reaction_efficiency_Method_is_de, sizeof(__pyx_k_Reaction_efficiency_Method_is_de), 0, 1, 0, 0},
    {&__pyx_n_s_Reaction_from_dict, __pyx_k_Reaction_from_dict, sizeof(__pyx_k_Reaction_from_dict), 0, 0, 1, 1},
    {&__pyx_n_s_Reaction_from_yaml, __pyx_k_Reaction_from_yaml, sizeof(__pyx_k_Reaction_from_yaml), 0, 0, 1, 1},
    {&__pyx_n_s_Reaction_list_from_file, __pyx_k_Reaction_list_from_file, sizeof(__pyx_k_Reaction_list_from_file), 0, 0, 1, 1},
    {&__pyx_n_s_Reaction_list_from_yaml, __pyx_k_Reaction_list_from_yaml, sizeof(__pyx_k_Reaction_list_from_yaml), 0, 0, 1, 1},
    {&__pyx_kp_u_Reaction_products_setter_is_dep, __pyx_k_Reaction_products_setter_is_dep, sizeof(__pyx_k_Reaction_products_setter_is_dep), 0, 1, 0, 0},
    {&__pyx_kp_u_Reaction_reactants_setter_is_de, __pyx_k_Reaction_reactants_setter_is_de, sizeof(__pyx_k_Reaction_reactants_setter_is_de), 0, 1, 0, 0},
    {&__pyx_n_s_Reaction_update_user_data, __pyx_k_Reaction_update_user_data, sizeof(__pyx_k_Reaction_update_user_data), 0, 0, 1, 1},
    {&__pyx_n_u_SRI, __pyx_k_SRI, sizeof(__pyx_k_SRI), 0, 1, 0, 1},
    {&__pyx_kp_s_Solution, __pyx_k_Solution, sizeof(__pyx_k_Solution), 0, 0, 1, 0},
    {&__pyx_n_s_SriRate, __pyx_k_SriRate, sizeof(__pyx_k_SriRate), 0, 0, 1, 1},
    {&__pyx_n_s_SriRate___reduce_cython, __pyx_k_SriRate___reduce_cython, sizeof(__pyx_k_SriRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_SriRate___setstate_cython, __pyx_k_SriRate___setstate_cython, sizeof(__pyx_k_SriRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_SriRate__from_dict, __pyx_k_SriRate__from_dict, sizeof(__pyx_k_SriRate__from_dict), 0, 0, 1, 1},
    {&__pyx_n_s_StickRateBase, __pyx_k_StickRateBase, sizeof(__pyx_k_StickRateBase), 0, 0, 1, 1},
    {&__pyx_n_s_StickRateBase___reduce_cython, __pyx_k_StickRateBase___reduce_cython, sizeof(__pyx_k_StickRateBase___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_StickRateBase___setstate_cython, __pyx_k_StickRateBase___setstate_cython, sizeof(__pyx_k_StickRateBase___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_StickingArrheniusRate, __pyx_k_StickingArrheniusRate, sizeof(__pyx_k_StickingArrheniusRate), 0, 0, 1, 1},
    {&__pyx_n_s_StickingArrheniusRate___reduce_c, __pyx_k_StickingArrheniusRate___reduce_c, sizeof(__pyx_k_StickingArrheniusRate___reduce_c), 0, 0, 1, 1},
    {&__pyx_n_s_StickingArrheniusRate___setstate, __pyx_k_StickingArrheniusRate___setstate, sizeof(__pyx_k_StickingArrheniusRate___setstate), 0, 0, 1, 1},
    {&__pyx_n_s_StickingArrheniusRate__from_dict, __pyx_k_StickingArrheniusRate__from_dict, sizeof(__pyx_k_StickingArrheniusRate__from_dict), 0, 0, 1, 1},
    {&__pyx_n_s_StickingArrheniusRate__from_para, __pyx_k_StickingArrheniusRate__from_para, sizeof(__pyx_k_StickingArrheniusRate__from_para), 0, 0, 1, 1},
    {&__pyx_n_s_StickingBlowersMaselRate, __pyx_k_StickingBlowersMaselRate, sizeof(__pyx_k_StickingBlowersMaselRate), 0, 0, 1, 1},
    {&__pyx_n_s_StickingBlowersMaselRate___reduc, __pyx_k_StickingBlowersMaselRate___reduc, sizeof(__pyx_k_StickingBlowersMaselRate___reduc), 0, 0, 1, 1},
    {&__pyx_n_s_StickingBlowersMaselRate___setst, __pyx_k_StickingBlowersMaselRate___setst, sizeof(__pyx_k_StickingBlowersMaselRate___setst), 0, 0, 1, 1},
    {&__pyx_n_s_StickingBlowersMaselRate__from_d, __pyx_k_StickingBlowersMaselRate__from_d, sizeof(__pyx_k_StickingBlowersMaselRate__from_d), 0, 0, 1, 1},
    {&__pyx_n_s_StickingBlowersMaselRate__from_p, __pyx_k_StickingBlowersMaselRate__from_p, sizeof(__pyx_k_StickingBlowersMaselRate__from_p), 0, 0, 1, 1},
    {&__pyx_n_s_T, __pyx_k_T, sizeof(__pyx_k_T), 0, 0, 1, 1},
    {&__pyx_n_s_ThirdBody, __pyx_k_ThirdBody, sizeof(__pyx_k_ThirdBody), 0, 0, 1, 1},
    {&__pyx_n_s_ThirdBody___reduce_cython, __pyx_k_ThirdBody___reduce_cython, sizeof(__pyx_k_ThirdBody___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ThirdBody___setstate_cython, __pyx_k_ThirdBody___setstate_cython, sizeof(__pyx_k_ThirdBody___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_ThirdBody_efficiency, __pyx_k_ThirdBody_efficiency, sizeof(__pyx_k_ThirdBody_efficiency), 0, 0, 1, 1},
    {&__pyx_n_s_ThreeBodyReaction, __pyx_k_ThreeBodyReaction, sizeof(__pyx_k_ThreeBodyReaction), 0, 0, 1, 1},
    {&__pyx_kp_u_ThreeBodyReaction_Class_to_be_re, __pyx_k_ThreeBodyReaction_Class_to_be_re, sizeof(__pyx_k_ThreeBodyReaction_Class_to_be_re), 0, 1, 0, 0},
    {&__pyx_n_s_ThreeBodyReaction___reduce_cytho, __pyx_k_ThreeBodyReaction___reduce_cytho, sizeof(__pyx_k_ThreeBodyReaction___reduce_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_ThreeBodyReaction___setstate_cyt, __pyx_k_ThreeBodyReaction___setstate_cyt, sizeof(__pyx_k_ThreeBodyReaction___setstate_cyt), 0, 0, 1, 1},
    {&__pyx_n_u_Troe, __pyx_k_Troe, sizeof(__pyx_k_Troe), 0, 1, 0, 1},
    {&__pyx_n_s_TroeRate, __pyx_k_TroeRate, sizeof(__pyx_k_TroeRate), 0, 0, 1, 1},
    {&__pyx_n_s_TroeRate___reduce_cython, __pyx_k_TroeRate___reduce_cython, sizeof(__pyx_k_TroeRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_TroeRate___setstate_cython, __pyx_k_TroeRate___setstate_cython, sizeof(__pyx_k_TroeRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_TroeRate__from_dict, __pyx_k_TroeRate__from_dict, sizeof(__pyx_k_TroeRate__from_dict), 0, 0, 1, 1},
    {&__pyx_n_u_Tsang, __pyx_k_Tsang, sizeof(__pyx_k_Tsang), 0, 1, 0, 1},
    {&__pyx_n_s_TsangRate, __pyx_k_TsangRate, sizeof(__pyx_k_TsangRate), 0, 0, 1, 1},
    {&__pyx_n_s_TsangRate___reduce_cython, __pyx_k_TsangRate___reduce_cython, sizeof(__pyx_k_TsangRate___reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_TsangRate___setstate_cython, __pyx_k_TsangRate___setstate_cython, sizeof(__pyx_k_TsangRate___setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_TsangRate__from_dict, __pyx_k_TsangRate__from_dict, sizeof(__pyx_k_TsangRate__from_dict), 0, 0, 1, 1},
    {&__pyx_n_s_TwoTempPlasmaRate, __pyx_k_TwoTempPlasmaRate, sizeof(__pyx_k_TwoTempPlasmaRate), 0, 0, 1, 1},
    {&__pyx_n_s_TwoTempPlasmaRate___reduce_cytho, __pyx_k_TwoTempPlasmaRate___reduce_cytho, sizeof(__pyx_k_TwoTempPlasmaRate___reduce_cytho), 0, 0, 1, 1},
    {&__pyx_n_s_TwoTempPlasmaRate___setstate_cyt, __pyx_k_TwoTempPlasmaRate___setstate_cyt, sizeof(__pyx_k_TwoTempPlasmaRate___setstate_cyt), 0, 0, 1, 1},
    {&__pyx_n_s_TwoTempPlasmaRate__from_dict, __pyx_k_TwoTempPlasmaRate__from_dict, sizeof(__pyx_k_TwoTempPlasmaRate__from_dict), 0, 0, 1, 1},
    {&__pyx_n_s_TwoTempPlasmaRate__from_paramete, __pyx_k_TwoTempPlasmaRate__from_paramete, sizeof(__pyx_k_TwoTempPlasmaRate__from_paramete), 0, 0, 1, 1},
    {&__pyx_n_s_TypeError, __pyx_k_TypeError, sizeof(__pyx_k_TypeError), 0, 0, 1, 1},
    {&__pyx_n_s_UnitStack, __pyx_k_UnitStack, sizeof(__pyx_k_UnitStack), 0, 0, 1, 1},
    {&__pyx_n_s_ValueError, __pyx_k_ValueError, sizeof(__pyx_k_ValueError), 0, 0, 1, 1},
    {&__pyx_kp_u__10, __pyx_k__10, sizeof(__pyx_k__10), 0, 1, 0, 0},
    {&__pyx_n_s__159, __pyx_k__159, sizeof(__pyx_k__159), 0, 0, 1, 1},
    {&__pyx_kp_u__20, __pyx_k__20, sizeof(__pyx_k__20), 0, 1, 0, 0},
    {&__pyx_kp_u__3, __pyx_k__3, sizeof(__pyx_k__3), 0, 1, 0, 0},
    {&__pyx_kp_u__32, __pyx_k__32, sizeof(__pyx_k__32), 0, 1, 0, 0},
    {&__pyx_n_s__33, __pyx_k__33, sizeof(__pyx_k__33), 0, 0, 1, 1},
    {&__pyx_kp_u__4, __pyx_k__4, sizeof(__pyx_k__4), 0, 1, 0, 0},
    {&__pyx_kp_u__7, __pyx_k__7, sizeof(__pyx_k__7), 0, 1, 0, 0},
    {&__pyx_kp_u__9, __pyx_k__9, sizeof(__pyx_k__9), 0, 1, 0, 0},
    {&__pyx_n_s_activation_energy, __pyx_k_activation_energy, sizeof(__pyx_k_activation_energy), 0, 0, 1, 1},
    {&__pyx_n_u_after, __pyx_k_after, sizeof(__pyx_k_after), 0, 1, 0, 1},
    {&__pyx_n_s_all, __pyx_k_all, sizeof(__pyx_k_all), 0, 0, 1, 1},
    {&__pyx_n_s_any_map, __pyx_k_any_map, sizeof(__pyx_k_any_map), 0, 0, 1, 1},
    {&__pyx_n_s_asyncio_coroutines, __pyx_k_asyncio_coroutines, sizeof(__pyx_k_asyncio_coroutines), 0, 0, 1, 1},
    {&__pyx_kp_u_at, __pyx_k_at, sizeof(__pyx_k_at), 0, 1, 0, 0},
    {&__pyx_n_s_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 0, 1, 1},
    {&__pyx_n_u_b, __pyx_k_b, sizeof(__pyx_k_b), 0, 1, 0, 1},
    {&__pyx_kp_u_but_should_be_called_from_base, __pyx_k_but_should_be_called_from_base, sizeof(__pyx_k_but_should_be_called_from_base), 0, 1, 0, 0},
    {&__pyx_n_s_c, __pyx_k_c, sizeof(__pyx_k_c), 0, 0, 1, 1},
    {&__pyx_kp_u_cannot_be_instantiated_by_itsel, __pyx_k_cannot_be_instantiated_by_itsel, sizeof(__pyx_k_cannot_be_instantiated_by_itsel), 0, 1, 0, 0},
    {&__pyx_kp_u_cannot_be_instantiated_by_itsel_2, __pyx_k_cannot_be_instantiated_by_itsel_2, sizeof(__pyx_k_cannot_be_instantiated_by_itsel_2), 0, 1, 0, 0},
    {&__pyx_n_s_cantera_reaction, __pyx_k_cantera_reaction, sizeof(__pyx_k_cantera_reaction), 0, 0, 1, 1},
    {&__pyx_kp_s_cantera_reaction_pyx, __pyx_k_cantera_reaction_pyx, sizeof(__pyx_k_cantera_reaction_pyx), 0, 0, 1, 0},
    {&__pyx_n_s_cinit, __pyx_k_cinit, sizeof(__pyx_k_cinit), 0, 0, 1, 1},
    {&__pyx_n_s_class, __pyx_k_class, sizeof(__pyx_k_class), 0, 0, 1, 1},
    {&__pyx_n_s_clear_user_data, __pyx_k_clear_user_data, sizeof(__pyx_k_clear_user_data), 0, 0, 1, 1},
    {&__pyx_n_s_cline_in_traceback, __pyx_k_cline_in_traceback, sizeof(__pyx_k_cline_in_traceback), 0, 0, 1, 1},
    {&__pyx_n_s_cls, __pyx_k_cls, sizeof(__pyx_k_cls), 0, 0, 1, 1},
    {&__pyx_n_s_collider, __pyx_k_collider, sizeof(__pyx_k_collider), 0, 0, 1, 1},
    {&__pyx_n_s_conc3b, __pyx_k_conc3b, sizeof(__pyx_k_conc3b), 0, 0, 1, 1},
    {&__pyx_n_s_concm, __pyx_k_concm, sizeof(__pyx_k_concm), 0, 0, 1, 1},
    {&__pyx_n_s_coverages, __pyx_k_coverages, sizeof(__pyx_k_coverages), 0, 0, 1, 1},
    {&__pyx_kp_u_custom_rate_function, __pyx_k_custom_rate_function, sizeof(__pyx_k_custom_rate_function), 0, 1, 0, 0},
    {&__pyx_n_s_cxx_rate, __pyx_k_cxx_rate, sizeof(__pyx_k_cxx_rate), 0, 0, 1, 1},
    {&__pyx_n_s_cxx_reaction, __pyx_k_cxx_reaction, sizeof(__pyx_k_cxx_reaction), 0, 0, 1, 1},
    {&__pyx_n_s_cxx_reactions, __pyx_k_cxx_reactions, sizeof(__pyx_k_cxx_reactions), 0, 0, 1, 1},
    {&__pyx_n_s_cxxvector, __pyx_k_cxxvector, sizeof(__pyx_k_cxxvector), 0, 0, 1, 1},
    {&__pyx_n_s_data, __pyx_k_data, sizeof(__pyx_k_data), 0, 0, 1, 1},
    {&__pyx_n_s_default_efficiency, __pyx_k_default_efficiency, sizeof(__pyx_k_default_efficiency), 0, 0, 1, 1},
    {&__pyx_n_s_delegatable_methods, __pyx_k_delegatable_methods, sizeof(__pyx_k_delegatable_methods), 0, 0, 1, 1},
    {&__pyx_n_s_dict, __pyx_k_dict, sizeof(__pyx_k_dict), 0, 0, 1, 1},
    {&__pyx_n_s_dict_2, __pyx_k_dict_2, sizeof(__pyx_k_dict_2), 0, 0, 1, 1},
    {&__pyx_kp_u_disable, __pyx_k_disable, sizeof(__pyx_k_disable), 0, 1, 0, 0},
    {&__pyx_n_s_double, __pyx_k_double, sizeof(__pyx_k_double), 0, 0, 1, 1},
    {&__pyx_kp_u_double_void, __pyx_k_double_void, sizeof(__pyx_k_double_void), 0, 1, 0, 0},
    {&__pyx_n_s_efficiencies, __pyx_k_efficiencies, sizeof(__pyx_k_efficiencies), 0, 0, 1, 1},
    {&__pyx_n_s_efficiency, __pyx_k_efficiency, sizeof(__pyx_k_efficiency), 0, 0, 1, 1},
    {&__pyx_n_s_elec_temp, __pyx_k_elec_temp, sizeof(__pyx_k_elec_temp), 0, 0, 1, 1},
    {&__pyx_kp_u_enable, __pyx_k_enable, sizeof(__pyx_k_enable), 0, 1, 0, 0},
    {&__pyx_n_s_enumerate, __pyx_k_enumerate, sizeof(__pyx_k_enumerate), 0, 0, 1, 1},
    {&__pyx_n_s_equation, __pyx_k_equation, sizeof(__pyx_k_equation), 0, 0, 1, 1},
    {&__pyx_kp_u_eval, __pyx_k_eval, sizeof(__pyx_k_eval), 0, 1, 0, 0},
    {&__pyx_n_u_evalFromStruct, __pyx_k_evalFromStruct, sizeof(__pyx_k_evalFromStruct), 0, 1, 0, 1},
    {&__pyx_n_s_eval_2, __pyx_k_eval_2, sizeof(__pyx_k_eval_2), 0, 0, 1, 1},
    {&__pyx_n_u_eval_2, __pyx_k_eval_2, sizeof(__pyx_k_eval_2), 0, 1, 0, 1},
    {&__pyx_n_u_extensible, __pyx_k_extensible, sizeof(__pyx_k_extensible), 0, 1, 0, 1},
    {&__pyx_n_s_falloff_coeffs, __pyx_k_falloff_coeffs, sizeof(__pyx_k_falloff_coeffs), 0, 0, 1, 1},
    {&__pyx_n_s_falloff_function, __pyx_k_falloff_function, sizeof(__pyx_k_falloff_function), 0, 0, 1, 1},
    {&__pyx_n_s_filename, __pyx_k_filename, sizeof(__pyx_k_filename), 0, 0, 1, 1},
    {&__pyx_n_s_float, __pyx_k_float, sizeof(__pyx_k_float), 0, 0, 1, 1},
    {&__pyx_n_s_format, __pyx_k_format, sizeof(__pyx_k_format), 0, 0, 1, 1},
    {&__pyx_n_s_from_dict, __pyx_k_from_dict, sizeof(__pyx_k_from_dict), 0, 0, 1, 1},
    {&__pyx_n_s_from_dict_2, __pyx_k_from_dict_2, sizeof(__pyx_k_from_dict_2), 0, 0, 1, 1},
    {&__pyx_n_s_from_parameters, __pyx_k_from_parameters, sizeof(__pyx_k_from_parameters), 0, 0, 1, 1},
    {&__pyx_n_s_from_yaml, __pyx_k_from_yaml, sizeof(__pyx_k_from_yaml), 0, 0, 1, 1},
    {&__pyx_n_s_fromiter, __pyx_k_fromiter, sizeof(__pyx_k_fromiter), 0, 0, 1, 1},
    {&__pyx_kp_u_gc, __pyx_k_gc, sizeof(__pyx_k_gc), 0, 1, 0, 0},
    {&__pyx_n_s_get, __pyx_k_get, sizeof(__pyx_k_get), 0, 0, 1, 1},
    {&__pyx_n_u_getParameters, __pyx_k_getParameters, sizeof(__pyx_k_getParameters), 0, 1, 0, 1},
    {&__pyx_kp_u_get_parameters, __pyx_k_get_parameters, sizeof(__pyx_k_get_parameters), 0, 1, 0, 0},
    {&__pyx_n_s_get_parameters_2, __pyx_k_get_parameters_2, sizeof(__pyx_k_get_parameters_2), 0, 0, 1, 1},
    {&__pyx_n_u_get_parameters_2, __pyx_k_get_parameters_2, sizeof(__pyx_k_get_parameters_2), 0, 1, 0, 1},
    {&__pyx_n_s_getstate, __pyx_k_getstate, sizeof(__pyx_k_getstate), 0, 0, 1, 1},
    {&__pyx_n_s_high, __pyx_k_high, sizeof(__pyx_k_high), 0, 0, 1, 1},
    {&__pyx_n_s_high_rate, __pyx_k_high_rate, sizeof(__pyx_k_high_rate), 0, 0, 1, 1},
    {&__pyx_n_s_hyphenize, __pyx_k_hyphenize, sizeof(__pyx_k_hyphenize), 0, 0, 1, 1},
    {&__pyx_n_s_id, __pyx_k_id, sizeof(__pyx_k_id), 0, 0, 1, 1},
    {&__pyx_n_s_import, __pyx_k_import, sizeof(__pyx_k_import), 0, 0, 1, 1},
    {&__pyx_n_s_init, __pyx_k_init, sizeof(__pyx_k_init), 0, 0, 1, 1},
    {&__pyx_n_s_initializing, __pyx_k_initializing, sizeof(__pyx_k_initializing), 0, 0, 1, 1},
    {&__pyx_n_s_input_data, __pyx_k_input_data, sizeof(__pyx_k_input_data), 0, 0, 1, 1},
    {&__pyx_kp_u_interface_Arrhenius, __pyx_k_interface_Arrhenius, sizeof(__pyx_k_interface_Arrhenius), 0, 1, 0, 0},
    {&__pyx_kp_u_interface_Blowers_Masel, __pyx_k_interface_Blowers_Masel, sizeof(__pyx_k_interface_Blowers_Masel), 0, 1, 0, 0},
    {&__pyx_n_s_is_coroutine, __pyx_k_is_coroutine, sizeof(__pyx_k_is_coroutine), 0, 0, 1, 1},
    {&__pyx_kp_u_isenabled, __pyx_k_isenabled, sizeof(__pyx_k_isenabled), 0, 1, 0, 0},
    {&__pyx_n_u_items, __pyx_k_items, sizeof(__pyx_k_items), 0, 1, 0, 1},
    {&__pyx_n_s_k, __pyx_k_k, sizeof(__pyx_k_k), 0, 0, 1, 1},
    {&__pyx_n_s_kinetics, __pyx_k_kinetics, sizeof(__pyx_k_kinetics), 0, 0, 1, 1},
    {&__pyx_n_s_kwargs, __pyx_k_kwargs, sizeof(__pyx_k_kwargs), 0, 0, 1, 1},
    {&__pyx_n_s_list_from_file, __pyx_k_list_from_file, sizeof(__pyx_k_list_from_file), 0, 0, 1, 1},
    {&__pyx_n_s_list_from_yaml, __pyx_k_list_from_yaml, sizeof(__pyx_k_list_from_yaml), 0, 0, 1, 1},
    {&__pyx_n_s_log, __pyx_k_log, sizeof(__pyx_k_log), 0, 0, 1, 1},
    {&__pyx_n_s_low, __pyx_k_low, sizeof(__pyx_k_low), 0, 0, 1, 1},
    {&__pyx_n_s_low_rate, __pyx_k_low_rate, sizeof(__pyx_k_low_rate), 0, 0, 1, 1},
    {&__pyx_n_s_main, __pyx_k_main, sizeof(__pyx_k_main), 0, 0, 1, 1},
    {&__pyx_n_s_name, __pyx_k_name, sizeof(__pyx_k_name), 0, 0, 1, 1},
    {&__pyx_n_s_name_2, __pyx_k_name_2, sizeof(__pyx_k_name_2), 0, 0, 1, 1},
    {&__pyx_n_s_new, __pyx_k_new, sizeof(__pyx_k_new), 0, 0, 1, 1},
    {&__pyx_kp_s_no_default___reduce___due_to_non, __pyx_k_no_default___reduce___due_to_non, sizeof(__pyx_k_no_default___reduce___due_to_non), 0, 0, 1, 0},
    {&__pyx_n_s_np, __pyx_k_np, sizeof(__pyx_k_np), 0, 0, 1, 1},
    {&__pyx_n_s_numpy, __pyx_k_numpy, sizeof(__pyx_k_numpy), 0, 0, 1, 1},
    {&__pyx_kp_u_numpy_core_multiarray_failed_to, __pyx_k_numpy_core_multiarray_failed_to, sizeof(__pyx_k_numpy_core_multiarray_failed_to), 0, 1, 0, 0},
    {&__pyx_kp_u_numpy_core_umath_failed_to_impor, __pyx_k_numpy_core_umath_failed_to_impor, sizeof(__pyx_k_numpy_core_umath_failed_to_impor), 0, 1, 0, 0},
    {&__pyx_kp_u_or, __pyx_k_or, sizeof(__pyx_k_or), 0, 1, 0, 0},
    {&__pyx_n_s_order, __pyx_k_order, sizeof(__pyx_k_order), 0, 0, 1, 1},
    {&__pyx_n_s_par_list, __pyx_k_par_list, sizeof(__pyx_k_par_list), 0, 0, 1, 1},
    {&__pyx_n_s_par_string, __pyx_k_par_string, sizeof(__pyx_k_par_string), 0, 0, 1, 1},
    {&__pyx_n_s_params, __pyx_k_params, sizeof(__pyx_k_params), 0, 0, 1, 1},
    {&__pyx_n_s_pickle, __pyx_k_pickle, sizeof(__pyx_k_pickle), 0, 0, 1, 1},
    {&__pyx_n_s_pre_exponential_factor, __pyx_k_pre_exponential_factor, sizeof(__pyx_k_pre_exponential_factor), 0, 0, 1, 1},
    {&__pyx_n_s_pressure, __pyx_k_pressure, sizeof(__pyx_k_pressure), 0, 0, 1, 1},
    {&__pyx_kp_u_pressure_dependent_Arrhenius, __pyx_k_pressure_dependent_Arrhenius, sizeof(__pyx_k_pressure_dependent_Arrhenius), 0, 1, 0, 0},
    {&__pyx_n_s_pressure_range, __pyx_k_pressure_range, sizeof(__pyx_k_pressure_range), 0, 0, 1, 1},
    {&__pyx_n_s_products, __pyx_k_products, sizeof(__pyx_k_products), 0, 0, 1, 1},
    {&__pyx_n_u_python, __pyx_k_python, sizeof(__pyx_k_python), 0, 1, 0, 1},
    {&__pyx_n_s_pyx_PickleError, __pyx_k_pyx_PickleError, sizeof(__pyx_k_pyx_PickleError), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_checksum, __pyx_k_pyx_checksum, sizeof(__pyx_k_pyx_checksum), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_result, __pyx_k_pyx_result, sizeof(__pyx_k_pyx_result), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_state, __pyx_k_pyx_state, sizeof(__pyx_k_pyx_state), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_type, __pyx_k_pyx_type, sizeof(__pyx_k_pyx_type), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_unpickle_ExtensibleRateDat, __pyx_k_pyx_unpickle_ExtensibleRateDat, sizeof(__pyx_k_pyx_unpickle_ExtensibleRateDat), 0, 0, 1, 1},
    {&__pyx_n_s_pyx_vtable, __pyx_k_pyx_vtable, sizeof(__pyx_k_pyx_vtable), 0, 0, 1, 1},
    {&__pyx_n_s_r, __pyx_k_r, sizeof(__pyx_k_r), 0, 0, 1, 1},
    {&__pyx_n_s_range, __pyx_k_range, sizeof(__pyx_k_range), 0, 0, 1, 1},
    {&__pyx_n_s_rate, __pyx_k_rate, sizeof(__pyx_k_rate), 0, 0, 1, 1},
    {&__pyx_n_s_rate_coeff_units, __pyx_k_rate_coeff_units, sizeof(__pyx_k_rate_coeff_units), 0, 0, 1, 1},
    {&__pyx_kp_u_rate_constant, __pyx_k_rate_constant, sizeof(__pyx_k_rate_constant), 0, 1, 0, 0},
    {&__pyx_n_s_rate_type, __pyx_k_rate_type, sizeof(__pyx_k_rate_type), 0, 0, 1, 1},
    {&__pyx_n_s_rates, __pyx_k_rates, sizeof(__pyx_k_rates), 0, 0, 1, 1},
    {&__pyx_n_s_reactants, __pyx_k_reactants, sizeof(__pyx_k_reactants), 0, 0, 1, 1},
    {&__pyx_n_s_reaction_rate_type, __pyx_k_reaction_rate_type, sizeof(__pyx_k_reaction_rate_type), 0, 0, 1, 1},
    {&__pyx_n_u_reaction_rate_type, __pyx_k_reaction_rate_type, sizeof(__pyx_k_reaction_rate_type), 0, 1, 0, 1},
    {&__pyx_n_s_reaction_type, __pyx_k_reaction_type, sizeof(__pyx_k_reaction_type), 0, 0, 1, 1},
    {&__pyx_n_u_reactions, __pyx_k_reactions, sizeof(__pyx_k_reactions), 0, 1, 0, 1},
    {&__pyx_n_s_reduce, __pyx_k_reduce, sizeof(__pyx_k_reduce), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_cython, __pyx_k_reduce_cython, sizeof(__pyx_k_reduce_cython), 0, 0, 1, 1},
    {&__pyx_n_s_reduce_ex, __pyx_k_reduce_ex, sizeof(__pyx_k_reduce_ex), 0, 0, 1, 1},
    {&__pyx_n_s_register_subclasses, __pyx_k_register_subclasses, sizeof(__pyx_k_register_subclasses), 0, 0, 1, 1},
    {&__pyx_n_u_replace, __pyx_k_replace, sizeof(__pyx_k_replace), 0, 1, 0, 1},
    {&__pyx_n_s_reshape, __pyx_k_reshape, sizeof(__pyx_k_reshape), 0, 0, 1, 1},
    {&__pyx_n_s_return, __pyx_k_return, sizeof(__pyx_k_return), 0, 0, 1, 1},
    {&__pyx_n_s_root, __pyx_k_root, sizeof(__pyx_k_root), 0, 0, 1, 1},
    {&__pyx_n_s_s, __pyx_k_s, sizeof(__pyx_k_s), 0, 0, 1, 1},
    {&__pyx_n_s_section, __pyx_k_section, sizeof(__pyx_k_section), 0, 0, 1, 1},
    {&__pyx_n_s_self, __pyx_k_self, sizeof(__pyx_k_self), 0, 0, 1, 1},
    {&__pyx_kp_s_self__rate_self_base_self_interf, __pyx_k_self__rate_self_base_self_interf, sizeof(__pyx_k_self__rate_self_base_self_interf), 0, 0, 1, 0},
    {&__pyx_kp_s_self__rate_self_base_self_interf_2, __pyx_k_self__rate_self_base_self_interf_2, sizeof(__pyx_k_self__rate_self_base_self_interf_2), 0, 0, 1, 0},
    {&__pyx_kp_s_self__rate_self_base_self_rate_c, __pyx_k_self__rate_self_base_self_rate_c, sizeof(__pyx_k_self__rate_self_base_self_rate_c), 0, 0, 1, 0},
    {&__pyx_kp_s_self__rate_self_rate_cannot_be_c, __pyx_k_self__rate_self_rate_cannot_be_c, sizeof(__pyx_k_self__rate_self_rate_cannot_be_c), 0, 0, 1, 0},
    {&__pyx_n_u_setParameters, __pyx_k_setParameters, sizeof(__pyx_k_setParameters), 0, 1, 0, 1},
    {&__pyx_n_s_set_parameters, __pyx_k_set_parameters, sizeof(__pyx_k_set_parameters), 0, 0, 1, 1},
    {&__pyx_n_u_set_parameters, __pyx_k_set_parameters, sizeof(__pyx_k_set_parameters), 0, 1, 0, 1},
    {&__pyx_kp_u_set_parameters_2, __pyx_k_set_parameters_2, sizeof(__pyx_k_set_parameters_2), 0, 1, 0, 0},
    {&__pyx_n_s_set_rate_function, __pyx_k_set_rate_function, sizeof(__pyx_k_set_rate_function), 0, 0, 1, 1},
    {&__pyx_n_s_set_species, __pyx_k_set_species, sizeof(__pyx_k_set_species), 0, 0, 1, 1},
    {&__pyx_n_s_setstate, __pyx_k_setstate, sizeof(__pyx_k_setstate), 0, 0, 1, 1},
    {&__pyx_n_s_setstate_cython, __pyx_k_setstate_cython, sizeof(__pyx_k_setstate_cython), 0, 0, 1, 1},
    {&__pyx_n_s_soln, __pyx_k_soln, sizeof(__pyx_k_soln), 0, 0, 1, 1},
    {&__pyx_n_s_spec, __pyx_k_spec, sizeof(__pyx_k_spec), 0, 0, 1, 1},
    {&__pyx_n_s_species, __pyx_k_species, sizeof(__pyx_k_species), 0, 0, 1, 1},
    {&__pyx_n_s_state, __pyx_k_state, sizeof(__pyx_k_state), 0, 0, 1, 1},
    {&__pyx_n_s_staticmethod, __pyx_k_staticmethod, sizeof(__pyx_k_staticmethod), 0, 0, 1, 1},
    {&__pyx_kp_u_sticking_Arrhenius, __pyx_k_sticking_Arrhenius, sizeof(__pyx_k_sticking_Arrhenius), 0, 1, 0, 0},
    {&__pyx_kp_u_sticking_Blowers_Masel, __pyx_k_sticking_Blowers_Masel, sizeof(__pyx_k_sticking_Blowers_Masel), 0, 1, 0, 0},
    {&__pyx_n_s_str, __pyx_k_str, sizeof(__pyx_k_str), 0, 0, 1, 1},
    {&__pyx_kp_s_stringsource, __pyx_k_stringsource, sizeof(__pyx_k_stringsource), 0, 0, 1, 0},
    {&__pyx_n_s_subclasses, __pyx_k_subclasses, sizeof(__pyx_k_subclasses), 0, 0, 1, 1},
    {&__pyx_n_s_temperature, __pyx_k_temperature, sizeof(__pyx_k_temperature), 0, 0, 1, 1},
    {&__pyx_n_s_temperature_exponent, __pyx_k_temperature_exponent, sizeof(__pyx_k_temperature_exponent), 0, 0, 1, 1},
    {&__pyx_n_s_temperature_range, __pyx_k_temperature_range, sizeof(__pyx_k_temperature_range), 0, 0, 1, 1},
    {&__pyx_n_s_test, __pyx_k_test, sizeof(__pyx_k_test), 0, 0, 1, 1},
    {&__pyx_n_s_text, __pyx_k_text, sizeof(__pyx_k_text), 0, 0, 1, 1},
    {&__pyx_n_s_third_body, __pyx_k_third_body, sizeof(__pyx_k_third_body), 0, 0, 1, 1},
    {&__pyx_kp_u_to_rate_expression, __pyx_k_to_rate_expression, sizeof(__pyx_k_to_rate_expression), 0, 1, 0, 0},
    {&__pyx_n_s_tolist, __pyx_k_tolist, sizeof(__pyx_k_tolist), 0, 0, 1, 1},
    {&__pyx_kp_u_two_temperature_plasma, __pyx_k_two_temperature_plasma, sizeof(__pyx_k_two_temperature_plasma), 0, 1, 0, 0},
    {&__pyx_n_u_type, __pyx_k_type, sizeof(__pyx_k_type), 0, 1, 0, 1},
    {&__pyx_kp_u_update, __pyx_k_update, sizeof(__pyx_k_update), 0, 1, 0, 0},
    {&__pyx_n_s_update_2, __pyx_k_update_2, sizeof(__pyx_k_update_2), 0, 0, 1, 1},
    {&__pyx_n_u_update_2, __pyx_k_update_2, sizeof(__pyx_k_update_2), 0, 1, 0, 1},
    {&__pyx_n_s_update_user_data, __pyx_k_update_user_data, sizeof(__pyx_k_update_user_data), 0, 0, 1, 1},
    {&__pyx_n_s_use_setstate, __pyx_k_use_setstate, sizeof(__pyx_k_use_setstate), 0, 0, 1, 1},
    {&__pyx_n_s_utils, __pyx_k_utils, sizeof(__pyx_k_utils), 0, 0, 1, 1},
    {&__pyx_n_s_validate, __pyx_k_validate, sizeof(__pyx_k_validate), 0, 0, 1, 1},
    {&__pyx_n_u_validate, __pyx_k_validate, sizeof(__pyx_k_validate), 0, 1, 0, 1},
    {&__pyx_kp_u_void_AnyMap, __pyx_k_void_AnyMap, sizeof(__pyx_k_void_AnyMap), 0, 1, 0, 0},
    {&__pyx_kp_u_void_AnyMap_UnitStack, __pyx_k_void_AnyMap_UnitStack, sizeof(__pyx_k_void_AnyMap_UnitStack), 0, 1, 0, 0},
    {&__pyx_kp_u_void_string_void, __pyx_k_void_string_void, sizeof(__pyx_k_void_string_void), 0, 1, 0, 0},
    {&__pyx_n_s_w, __pyx_k_w, sizeof(__pyx_k_w), 0, 0, 1, 1},
    {&__pyx_n_s_warn, __pyx_k_warn, sizeof(__pyx_k_warn), 0, 0, 1, 1},
    {&__pyx_n_s_warnings, __pyx_k_warnings, sizeof(__pyx_k_warnings), 0, 0, 1, 1},
    {0, 0, 0, 0, 0, 0, 0}
  };
  return __Pyx_InitStrings(__pyx_string_tab);
}
/* #### Code section: cached_builtins ### */
static CYTHON_SMALL_CODE int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_staticmethod = __Pyx_GetBuiltinName(__pyx_n_s_staticmethod); if (!__pyx_builtin_staticmethod) __PYX_ERR(0, 1468, __pyx_L1_error)
  __pyx_builtin_id = __Pyx_GetBuiltinName(__pyx_n_s_id); if (!__pyx_builtin_id) __PYX_ERR(0, 29, __pyx_L1_error)
  __pyx_builtin_TypeError = __Pyx_GetBuiltinName(__pyx_n_s_TypeError); if (!__pyx_builtin_TypeError) __PYX_ERR(0, 109, __pyx_L1_error)
  __pyx_builtin_all = __Pyx_GetBuiltinName(__pyx_n_s_all); if (!__pyx_builtin_all) __PYX_ERR(0, 181, __pyx_L1_error)
  __pyx_builtin_enumerate = __Pyx_GetBuiltinName(__pyx_n_s_enumerate); if (!__pyx_builtin_enumerate) __PYX_ERR(0, 647, __pyx_L1_error)
  __pyx_builtin_NotImplementedError = __Pyx_GetBuiltinName(__pyx_n_s_NotImplementedError); if (!__pyx_builtin_NotImplementedError) __PYX_ERR(0, 791, __pyx_L1_error)
  __pyx_builtin_DeprecationWarning = __Pyx_GetBuiltinName(__pyx_n_s_DeprecationWarning); if (!__pyx_builtin_DeprecationWarning) __PYX_ERR(0, 1329, __pyx_L1_error)
  __pyx_builtin_ValueError = __Pyx_GetBuiltinName(__pyx_n_s_ValueError); if (!__pyx_builtin_ValueError) __PYX_ERR(0, 1339, __pyx_L1_error)
  __pyx_builtin_MemoryError = __Pyx_GetBuiltinName(__pyx_n_s_MemoryError); if (!__pyx_builtin_MemoryError) __PYX_ERR(1, 68, __pyx_L1_error)
  __pyx_builtin_range = __Pyx_GetBuiltinName(__pyx_n_s_range); if (!__pyx_builtin_range) __PYX_ERR(1, 76, __pyx_L1_error)
  __pyx_builtin_ImportError = __Pyx_GetBuiltinName(__pyx_n_s_ImportError); if (!__pyx_builtin_ImportError) __PYX_ERR(3, 987, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: cached_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":987
 *         __pyx_import_array()
 *     except Exception:
 *         raise ImportError("numpy.core.multiarray failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_umath() except -1:
 */
  __pyx_tuple_ = PyTuple_Pack(1, __pyx_kp_u_numpy_core_multiarray_failed_to); if (unlikely(!__pyx_tuple_)) __PYX_ERR(3, 987, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple_);
  __Pyx_GIVEREF(__pyx_tuple_);

  /* "../../../../../../../tmp/build-env-524pndgi/lib/python3.10/site-packages/numpy/__init__.cython-30.pxd":993
 *         _import_umath()
 *     except Exception:
 *         raise ImportError("numpy.core.umath failed to import")             # <<<<<<<<<<<<<<
 * 
 * cdef inline int import_ufunc() except -1:
 */
  __pyx_tuple__2 = PyTuple_Pack(1, __pyx_kp_u_numpy_core_umath_failed_to_impor); if (unlikely(!__pyx_tuple__2)) __PYX_ERR(3, 993, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__2);
  __Pyx_GIVEREF(__pyx_tuple__2);

  /* "cantera/reaction.pyx":54
 *         # ensure all reaction types are registered
 *         if not _reaction_rate_class_registry:
 *             def register_subclasses(cls):             # <<<<<<<<<<<<<<
 *                 for c in cls.__subclasses__():
 *                     rate_type = getattr(c, "_reaction_rate_type")
 */
  __pyx_tuple__5 = PyTuple_Pack(3, __pyx_n_s_cls, __pyx_n_s_c, __pyx_n_s_rate_type); if (unlikely(!__pyx_tuple__5)) __PYX_ERR(0, 54, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__5);
  __Pyx_GIVEREF(__pyx_tuple__5);
  __pyx_codeobj__6 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__5, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_register_subclasses, 54, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__6)) __PYX_ERR(0, 54, __pyx_L1_error)

  /* "cantera/reaction.pyx":186
 *             self._from_dict({})
 *         elif input_data:
 *             raise TypeError("Invalid parameter 'input_data'")             # <<<<<<<<<<<<<<
 *         else:
 *             par_list = [f"'{k}'" for k in kwargs]
 */
  __pyx_tuple__8 = PyTuple_Pack(1, __pyx_kp_u_Invalid_parameter_input_data); if (unlikely(!__pyx_tuple__8)) __PYX_ERR(0, 186, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__8);
  __Pyx_GIVEREF(__pyx_tuple__8);

  /* "cantera/reaction.pyx":396
 *                 self._from_dict({})
 *             else:
 *                 raise TypeError("Invalid input parameters")             # <<<<<<<<<<<<<<
 *             self.set_cxx_object()
 * 
 */
  __pyx_tuple__11 = PyTuple_Pack(1, __pyx_kp_u_Invalid_input_parameters); if (unlikely(!__pyx_tuple__11)) __PYX_ERR(0, 396, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__11);
  __Pyx_GIVEREF(__pyx_tuple__11);

  /* "cantera/reaction.pyx":563
 *                 raise TypeError("Invalid parameter 'input_data'")
 *             else:
 *                 raise TypeError("Invalid parameter 'rates'")             # <<<<<<<<<<<<<<
 *             self.set_cxx_object()
 * 
 */
  __pyx_tuple__12 = PyTuple_Pack(1, __pyx_kp_u_Invalid_parameter_rates); if (unlikely(!__pyx_tuple__12)) __PYX_ERR(0, 563, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__12);
  __Pyx_GIVEREF(__pyx_tuple__12);

  /* "cantera/reaction.pyx":629
 *                 raise TypeError("Invalid parameter 'input_data'")
 *             else:
 *                 raise TypeError("Invalid parameters")             # <<<<<<<<<<<<<<
 *             self.set_cxx_object()
 * 
 */
  __pyx_tuple__13 = PyTuple_Pack(1, __pyx_kp_u_Invalid_parameters_2); if (unlikely(!__pyx_tuple__13)) __PYX_ERR(0, 629, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__13);
  __Pyx_GIVEREF(__pyx_tuple__13);

  /* "cantera/reaction.pyx":1328
 *                   Kinetics kinetics=None, third_body=None):
 *         if kinetics:
 *             warnings.warn("Reaction: Parameter 'kinetics' is no longer used and will "             # <<<<<<<<<<<<<<
 *                           "be removed after Cantera 3.0.", DeprecationWarning)
 * 
 */
  __pyx_tuple__14 = PyTuple_Pack(2, __pyx_kp_u_Reaction_Parameter_kinetics_is_n, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__14)) __PYX_ERR(0, 1328, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__14);
  __Pyx_GIVEREF(__pyx_tuple__14);

  /* "cantera/reaction.pyx":1339
 *         elif rate is None:
 *             # default to Arrhenius expression
 *             raise ValueError("Missing reaction rate information.")             # <<<<<<<<<<<<<<
 *         elif isinstance(rate, dict):
 *             if {"A", "b"} - set(rate) == set():
 */
  __pyx_tuple__15 = PyTuple_Pack(1, __pyx_kp_u_Missing_reaction_rate_informatio); if (unlikely(!__pyx_tuple__15)) __PYX_ERR(0, 1339, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__15);
  __Pyx_GIVEREF(__pyx_tuple__15);

  /* "cantera/reaction.pyx":1368
 *             _third_body = ThirdBody(third_body)
 *         elif efficiencies:
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction: Argument 'efficiencies' is deprecated and will be removed "
 *                 "after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 */
  __pyx_tuple__16 = PyTuple_Pack(2, __pyx_kp_u_Reaction_Argument_efficiencies_i, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__16)) __PYX_ERR(0, 1368, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__16);
  __Pyx_GIVEREF(__pyx_tuple__16);

  /* "cantera/reaction.pyx":1401
 *         else:
 *             # create default object
 *             raise ValueError("Missing reactant and/or product information.")             # <<<<<<<<<<<<<<
 * 
 *         self.reaction = self._reaction.get()
 */
  __pyx_tuple__17 = PyTuple_Pack(1, __pyx_kp_u_Missing_reactant_and_or_product); if (unlikely(!__pyx_tuple__17)) __PYX_ERR(0, 1401, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__17);
  __Pyx_GIVEREF(__pyx_tuple__17);

  /* "cantera/reaction.pyx":1532
 *             return comp_map_to_dict(self.reaction.reactants)
 *         def __set__(self, reactants):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "'Reaction.reactants' setter is deprecated and will be removed after "
 *                 "Cantera 3.0.\nInstantiate using constructor instead.",
 */
  __pyx_tuple__18 = PyTuple_Pack(2, __pyx_kp_u_Reaction_reactants_setter_is_de, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__18)) __PYX_ERR(0, 1532, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__18);
  __Pyx_GIVEREF(__pyx_tuple__18);

  /* "cantera/reaction.pyx":1553
 *             return comp_map_to_dict(self.reaction.products)
 *         def __set__(self, products):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "'Reaction.products' setter is deprecated and will be removed after "
 *                 "Cantera 3.0.\nInstantiate using constructor instead.",
 */
  __pyx_tuple__19 = PyTuple_Pack(2, __pyx_kp_u_Reaction_products_setter_is_dep, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__19)) __PYX_ERR(0, 1553, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__19);
  __Pyx_GIVEREF(__pyx_tuple__19);

  /* "cantera/reaction.pyx":1717
 *         """
 *         def __get__(self):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 */
  __pyx_tuple__21 = PyTuple_Pack(2, __pyx_kp_u_Reaction_efficiencies_Property_i, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__21)) __PYX_ERR(0, 1717, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__21);
  __Pyx_GIVEREF(__pyx_tuple__21);

  /* "cantera/reaction.pyx":1721
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 *             if self.third_body is None:
 *                 raise ValueError("Reaction does not involve third body collider")             # <<<<<<<<<<<<<<
 *             return self.third_body.efficiencies
 *         def __set__(self, eff):
 */
  __pyx_tuple__22 = PyTuple_Pack(1, __pyx_kp_u_Reaction_does_not_involve_third); if (unlikely(!__pyx_tuple__22)) __PYX_ERR(0, 1721, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__22);
  __Pyx_GIVEREF(__pyx_tuple__22);

  /* "cantera/reaction.pyx":1724
 *             return self.third_body.efficiencies
 *         def __set__(self, eff):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction.efficiencies: Property is deprecated and will be removed "
 *                 "after Cantera 3.0. Access via ThirdBody instead.", DeprecationWarning)
 */
  __pyx_tuple__23 = PyTuple_Pack(2, __pyx_kp_u_Reaction_efficiencies_Property_i, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__23)) __PYX_ERR(0, 1724, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__23);
  __Pyx_GIVEREF(__pyx_tuple__23);

  /* "cantera/reaction.pyx":1742
 *         """
 *         def __get__(self):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 */
  __pyx_tuple__24 = PyTuple_Pack(2, __pyx_kp_u_Reaction_default_efficiency_Prop, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__24)) __PYX_ERR(0, 1742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__24);
  __Pyx_GIVEREF(__pyx_tuple__24);

  /* "cantera/reaction.pyx":1749
 *             return self.third_body.default_efficiency
 *         def __set__(self, default_eff):
 *             warnings.warn(             # <<<<<<<<<<<<<<
 *                 "Reaction.default_efficiency: Property is deprecated and will be "
 *                 "removed after Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 */
  __pyx_tuple__25 = PyTuple_Pack(2, __pyx_kp_u_Reaction_default_efficiency_Prop, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__25)) __PYX_ERR(0, 1749, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__25);
  __Pyx_GIVEREF(__pyx_tuple__25);

  /* "cantera/reaction.pyx":1766
 *             `ThirdBody` object instead.
 *         """
 *         warnings.warn(             # <<<<<<<<<<<<<<
 *             "Reaction.efficiency: Method is deprecated and will be removed after "
 *             "Cantera 3.0. Use ThirdBody instead.", DeprecationWarning)
 */
  __pyx_tuple__26 = PyTuple_Pack(2, __pyx_kp_u_Reaction_efficiency_Method_is_de, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__26)) __PYX_ERR(0, 1766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__26);
  __Pyx_GIVEREF(__pyx_tuple__26);

  /* "cantera/reaction.pyx":1868
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("ThreeBodyReaction: Class to be removed after Cantera 3.0; "             # <<<<<<<<<<<<<<
 *                       "no specialization necessary.", DeprecationWarning)
 * 
 */
  __pyx_tuple__27 = PyTuple_Pack(2, __pyx_kp_u_ThreeBodyReaction_Class_to_be_re, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__27)) __PYX_ERR(0, 1868, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__27);
  __Pyx_GIVEREF(__pyx_tuple__27);

  /* "cantera/reaction.pyx":1902
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("FalloffReaction: Class to be removed after Cantera 3.0; "             # <<<<<<<<<<<<<<
 *                       "no specialization necessary.", DeprecationWarning)
 * 
 */
  __pyx_tuple__28 = PyTuple_Pack(2, __pyx_kp_u_FalloffReaction_Class_to_be_remo, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__28)) __PYX_ERR(0, 1902, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__28);
  __Pyx_GIVEREF(__pyx_tuple__28);

  /* "cantera/reaction.pyx":1914
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("ChemicallyActivatedReaction: Class to be removed after Cantera "             # <<<<<<<<<<<<<<
 *                       "3.0; no specialization necessary.", DeprecationWarning)
 * 
 */
  __pyx_tuple__29 = PyTuple_Pack(2, __pyx_kp_u_ChemicallyActivatedReaction_Clas, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__29)) __PYX_ERR(0, 1914, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__29);
  __Pyx_GIVEREF(__pyx_tuple__29);

  /* "cantera/reaction.pyx":1934
 * 
 *     def __init__(self, *args, **kwargs):
 *         warnings.warn("CustomReaction: Class to be removed after Cantera 3.0; no "             # <<<<<<<<<<<<<<
 *                       "specialization necessary.", DeprecationWarning)
 */
  __pyx_tuple__30 = PyTuple_Pack(2, __pyx_kp_u_CustomReaction_Class_to_be_remov, __pyx_builtin_DeprecationWarning); if (unlikely(!__pyx_tuple__30)) __PYX_ERR(0, 1934, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__30);
  __Pyx_GIVEREF(__pyx_tuple__30);

  /* "(tree fragment)":4
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 *     if __pyx_checksum not in (0x7c4e57e, 0xb662b45, 0xa3ea2d7):             # <<<<<<<<<<<<<<
 *         from pickle import PickleError as __pyx_PickleError
 *         raise __pyx_PickleError, "Incompatible checksums (0x%x vs (0x7c4e57e, 0xb662b45, 0xa3ea2d7) = (_delegates))" % __pyx_checksum
 */
  __pyx_tuple__31 = PyTuple_Pack(3, __pyx_int_130344318, __pyx_int_191245125, __pyx_int_171877079); if (unlikely(!__pyx_tuple__31)) __PYX_ERR(1, 4, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__31);
  __Pyx_GIVEREF(__pyx_tuple__31);

  /* "cantera/reaction.pyx":94
 *         self.rate = self._rate.get()
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, hyphenize=True):
 *         """
 */
  __pyx_tuple__34 = PyTuple_Pack(5, __pyx_n_s_cls, __pyx_n_s_data, __pyx_n_s_hyphenize, __pyx_n_s_any_map, __pyx_n_s_cxx_rate); if (unlikely(!__pyx_tuple__34)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__34);
  __Pyx_GIVEREF(__pyx_tuple__34);
  __pyx_codeobj__35 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__34, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict_2, 94, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__35)) __PYX_ERR(0, 94, __pyx_L1_error)
  __pyx_tuple__36 = PyTuple_Pack(1, Py_True); if (unlikely(!__pyx_tuple__36)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__36);
  __Pyx_GIVEREF(__pyx_tuple__36);

  /* "cantera/reaction.pyx":117
 *         return ReactionRate.wrap(cxx_rate)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_yaml(cls, text):
 *         """
 */
  __pyx_tuple__37 = PyTuple_Pack(4, __pyx_n_s_cls, __pyx_n_s_text, __pyx_n_s_any_map, __pyx_n_s_cxx_rate); if (unlikely(!__pyx_tuple__37)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__37);
  __Pyx_GIVEREF(__pyx_tuple__37);
  __pyx_codeobj__38 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__37, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_yaml, 117, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__38)) __PYX_ERR(0, 117, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_tuple__39 = PyTuple_Pack(1, __pyx_n_s_self); if (unlikely(!__pyx_tuple__39)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__39);
  __Pyx_GIVEREF(__pyx_tuple__39);
  __pyx_codeobj__40 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__40)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 */
  __pyx_tuple__41 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_pyx_state); if (unlikely(!__pyx_tuple__41)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__41);
  __Pyx_GIVEREF(__pyx_tuple__41);
  __pyx_codeobj__42 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__42)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":167
 *     _reaction_rate_type = None
 * 
 *     def _cinit(self, input_data, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Helper function called by __cinit__. The method is used as a uniform interface
 */
  __pyx_tuple__43 = PyTuple_Pack(9, __pyx_n_s_self, __pyx_n_s_input_data, __pyx_n_s_kwargs, __pyx_n_s_par_list, __pyx_n_s_par_string, __pyx_n_s_k, __pyx_n_s_k, __pyx_n_s_k, __pyx_n_s_k); if (unlikely(!__pyx_tuple__43)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__43);
  __Pyx_GIVEREF(__pyx_tuple__43);
  __pyx_codeobj__44 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 9, 0, CO_OPTIMIZED|CO_NEWLOCALS|CO_VARKEYWORDS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__43, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_cinit, 167, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__44)) __PYX_ERR(0, 167, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__45 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__45)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 */
  __pyx_codeobj__46 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__46)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":248
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxArrheniusRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_tuple__47 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_input_data); if (unlikely(!__pyx_tuple__47)) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__47);
  __Pyx_GIVEREF(__pyx_tuple__47);
  __pyx_codeobj__48 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 248, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__48)) __PYX_ERR(0, 248, __pyx_L1_error)

  /* "cantera/reaction.pyx":251
 *         self._rate.reset(new CxxArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxArrheniusRate(A, b, Ea))
 * 
 */
  __pyx_tuple__49 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_A, __pyx_n_s_b, __pyx_n_s_Ea); if (unlikely(!__pyx_tuple__49)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__49);
  __Pyx_GIVEREF(__pyx_tuple__49);
  __pyx_codeobj__50 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__49, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_parameters, 251, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__50)) __PYX_ERR(0, 251, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__51 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__51)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__52 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__52)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":275
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_codeobj__53 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 275, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__53)) __PYX_ERR(0, 275, __pyx_L1_error)

  /* "cantera/reaction.pyx":278
 *         self._rate.reset(new CxxBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxBlowersMaselRate(A, b, Ea0, w))
 * 
 */
  __pyx_tuple__54 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_A, __pyx_n_s_b, __pyx_n_s_Ea0, __pyx_n_s_w); if (unlikely(!__pyx_tuple__54)) __PYX_ERR(0, 278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__54);
  __Pyx_GIVEREF(__pyx_tuple__54);
  __pyx_codeobj__55 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_parameters, 278, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__55)) __PYX_ERR(0, 278, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__56 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__56)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__57 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__57)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":350
 *         return self.rate.eval(temperature, elec_temp)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTwoTempPlasmaRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_codeobj__58 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 350, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__58)) __PYX_ERR(0, 350, __pyx_L1_error)

  /* "cantera/reaction.pyx":355
 *         )
 * 
 *     def _from_parameters(self, A, b, Ea_gas, Ea_electron):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxTwoTempPlasmaRate(A, b, Ea_gas, Ea_electron))
 * 
 */
  __pyx_tuple__59 = PyTuple_Pack(5, __pyx_n_s_self, __pyx_n_s_A, __pyx_n_s_b, __pyx_n_s_Ea_gas, __pyx_n_s_Ea_electron); if (unlikely(!__pyx_tuple__59)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__59);
  __Pyx_GIVEREF(__pyx_tuple__59);
  __pyx_codeobj__60 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__59, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_parameters, 355, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__60)) __PYX_ERR(0, 355, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__61 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__61)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__62 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__62)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":461
 *             self.falloff.setChemicallyActivated(activated)
 * 
 *     def falloff_function(self, double temperature, double conc3b):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate the falloff function based on temperature and third-body
 */
  __pyx_tuple__63 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_temperature, __pyx_n_s_conc3b); if (unlikely(!__pyx_tuple__63)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__63);
  __Pyx_GIVEREF(__pyx_tuple__63);
  __pyx_codeobj__64 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__63, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_falloff_function, 461, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__64)) __PYX_ERR(0, 461, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__65 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__65)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__66 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__66)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":477
 *     _reaction_rate_type = "Lindemann"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxLindemannRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_codeobj__67 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 477, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__67)) __PYX_ERR(0, 477, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__68 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__68)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__69 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__69)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":497
 *     _reaction_rate_type = "Troe"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTroeRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_codeobj__70 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 497, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__70)) __PYX_ERR(0, 497, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__71 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__71)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__72 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__72)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":517
 *     _reaction_rate_type = "SRI"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxSriRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_codeobj__73 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 517, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__73)) __PYX_ERR(0, 517, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__74 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__74)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__75 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__75)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":533
 *     _reaction_rate_type = "Tsang"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTsangRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_codeobj__76 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 533, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__76)) __PYX_ERR(0, 533, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__77 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__77)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__78 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__78)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__79 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__79)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__80 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__80)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__81 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__81)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__82 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__82)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":723
 *         return <CxxCustomFunc1Rate*>self.rate
 * 
 *     def set_rate_function(self, k):             # <<<<<<<<<<<<<<
 *         r"""
 *         Set the function describing a custom reaction rate::
 */
  __pyx_tuple__83 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_k); if (unlikely(!__pyx_tuple__83)) __PYX_ERR(0, 723, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__83);
  __Pyx_GIVEREF(__pyx_tuple__83);
  __pyx_codeobj__84 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__83, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_set_rate_function, 723, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__84)) __PYX_ERR(0, 723, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__85 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__85)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__86 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__86)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":764
 * 
 *     delegatable_methods = {
 *         "eval": ("evalFromStruct", "double(void*)", "replace"),             # <<<<<<<<<<<<<<
 *         "set_parameters": ("setParameters", "void(AnyMap&, UnitStack&)", "after"),
 *         "get_parameters": ("getParameters", "void(AnyMap&)", "replace"),
 */
  __pyx_tuple__87 = PyTuple_Pack(3, __pyx_n_u_evalFromStruct, __pyx_kp_u_double_void, __pyx_n_u_replace); if (unlikely(!__pyx_tuple__87)) __PYX_ERR(0, 764, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__87);
  __Pyx_GIVEREF(__pyx_tuple__87);

  /* "cantera/reaction.pyx":765
 *     delegatable_methods = {
 *         "eval": ("evalFromStruct", "double(void*)", "replace"),
 *         "set_parameters": ("setParameters", "void(AnyMap&, UnitStack&)", "after"),             # <<<<<<<<<<<<<<
 *         "get_parameters": ("getParameters", "void(AnyMap&)", "replace"),
 *         "validate": ("validate", "void(string, void*)", "replace")
 */
  __pyx_tuple__88 = PyTuple_Pack(3, __pyx_n_u_setParameters, __pyx_kp_u_void_AnyMap_UnitStack, __pyx_n_u_after); if (unlikely(!__pyx_tuple__88)) __PYX_ERR(0, 765, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__88);
  __Pyx_GIVEREF(__pyx_tuple__88);

  /* "cantera/reaction.pyx":766
 *         "eval": ("evalFromStruct", "double(void*)", "replace"),
 *         "set_parameters": ("setParameters", "void(AnyMap&, UnitStack&)", "after"),
 *         "get_parameters": ("getParameters", "void(AnyMap&)", "replace"),             # <<<<<<<<<<<<<<
 *         "validate": ("validate", "void(string, void*)", "replace")
 *     }
 */
  __pyx_tuple__89 = PyTuple_Pack(3, __pyx_n_u_getParameters, __pyx_kp_u_void_AnyMap, __pyx_n_u_replace); if (unlikely(!__pyx_tuple__89)) __PYX_ERR(0, 766, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__89);
  __Pyx_GIVEREF(__pyx_tuple__89);

  /* "cantera/reaction.pyx":767
 *         "set_parameters": ("setParameters", "void(AnyMap&, UnitStack&)", "after"),
 *         "get_parameters": ("getParameters", "void(AnyMap&)", "replace"),
 *         "validate": ("validate", "void(string, void*)", "replace")             # <<<<<<<<<<<<<<
 *     }
 * 
 */
  __pyx_tuple__90 = PyTuple_Pack(3, __pyx_n_u_validate, __pyx_kp_u_void_string_void, __pyx_n_u_replace); if (unlikely(!__pyx_tuple__90)) __PYX_ERR(0, 767, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__90);
  __Pyx_GIVEREF(__pyx_tuple__90);

  /* "cantera/reaction.pyx":779
 *             self.set_parameters(input_data, UnitStack())
 * 
 *     def set_parameters(self, params: AnyMap, rate_coeff_units: UnitStack) -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for setting rate parameters based on the input data. For example,
 */
  __pyx_tuple__91 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_params, __pyx_n_s_rate_coeff_units); if (unlikely(!__pyx_tuple__91)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__91);
  __Pyx_GIVEREF(__pyx_tuple__91);
  __pyx_codeobj__92 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__91, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_set_parameters, 779, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__92)) __PYX_ERR(0, 779, __pyx_L1_error)

  /* "cantera/reaction.pyx":793
 *         raise NotImplementedError(f"{self.__class__.__name__}.set_parameters")
 * 
 *     def get_parameters(self, params: AnyMap) -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for serializing the state of the ExtensibleRate object, using the
 */
  __pyx_tuple__93 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_params); if (unlikely(!__pyx_tuple__93)) __PYX_ERR(0, 793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__93);
  __Pyx_GIVEREF(__pyx_tuple__93);
  __pyx_codeobj__94 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__93, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_get_parameters_2, 793, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__94)) __PYX_ERR(0, 793, __pyx_L1_error)

  /* "cantera/reaction.pyx":805
 *         raise NotImplementedError(f"{self.__class__.__name__}.get_parameters")
 * 
 *     def eval(self, data: ExtensibleRateData) -> float:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for calculating the forward rate constant based on the current state
 */
  __pyx_tuple__95 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_data); if (unlikely(!__pyx_tuple__95)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__95);
  __Pyx_GIVEREF(__pyx_tuple__95);
  __pyx_codeobj__96 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__95, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_eval_2, 805, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__96)) __PYX_ERR(0, 805, __pyx_L1_error)

  /* "cantera/reaction.pyx":813
 *         raise NotImplementedError(f"{self.__class__.__name__}.eval")
 * 
 *     def validate(self, equation: str, soln: "Solution") -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for validating that the rate expression is configured with valid
 */
  __pyx_tuple__97 = PyTuple_Pack(3, __pyx_n_s_self, __pyx_n_s_equation, __pyx_n_s_soln); if (unlikely(!__pyx_tuple__97)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__97);
  __Pyx_GIVEREF(__pyx_tuple__97);
  __pyx_codeobj__98 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 3, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__97, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_validate, 813, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__98)) __PYX_ERR(0, 813, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__99 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__99)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__100 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__100)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":859
 *     """
 *     delegatable_methods = {
 *         "update": ("update", "double(void*)", "replace")             # <<<<<<<<<<<<<<
 *     }
 * 
 */
  __pyx_tuple__101 = PyTuple_Pack(3, __pyx_n_u_update_2, __pyx_kp_u_double_void, __pyx_n_u_replace); if (unlikely(!__pyx_tuple__101)) __PYX_ERR(0, 859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__101);
  __Pyx_GIVEREF(__pyx_tuple__101);

  /* "cantera/reaction.pyx":862
 *     }
 * 
 *     def update(self, soln):             # <<<<<<<<<<<<<<
 *         """
 *         This method takes a `Solution` object and stores any thermodynamic data (for
 */
  __pyx_tuple__102 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_soln); if (unlikely(!__pyx_tuple__102)) __PYX_ERR(0, 862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__102);
  __Pyx_GIVEREF(__pyx_tuple__102);
  __pyx_codeobj__103 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__102, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_update_2, 862, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__103)) __PYX_ERR(0, 862, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_tuple__104 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_state, __pyx_n_s_dict_2, __pyx_n_s_use_setstate); if (unlikely(!__pyx_tuple__104)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__104);
  __Pyx_GIVEREF(__pyx_tuple__104);
  __pyx_codeobj__105 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__104, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__105)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_ExtensibleRateData__set_state(self, __pyx_state)
 */
  __pyx_codeobj__106 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 16, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__106)) __PYX_ERR(1, 16, __pyx_L1_error)

  /* "cantera/reaction.pyx":916
 *             self.interface.setCoverageDependencies(cxx_deps)
 * 
 *     def set_species(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Set association with an ordered list of all species associated with an
 */
  __pyx_tuple__107 = PyTuple_Pack(4, __pyx_n_s_self, __pyx_n_s_species, __pyx_n_s_cxxvector, __pyx_n_s_s); if (unlikely(!__pyx_tuple__107)) __PYX_ERR(0, 916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__107);
  __Pyx_GIVEREF(__pyx_tuple__107);
  __pyx_codeobj__108 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__107, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_set_species, 916, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__108)) __PYX_ERR(0, 916, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__109 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__109)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 */
  __pyx_codeobj__110 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__110)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":971
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceArrheniusRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_codeobj__111 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 971, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__111)) __PYX_ERR(0, 971, __pyx_L1_error)

  /* "cantera/reaction.pyx":974
 *         self._rate.reset(new CxxInterfaceArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceArrheniusRate(A, b, Ea))
 * 
 */
  __pyx_codeobj__112 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__49, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_parameters, 974, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__112)) __PYX_ERR(0, 974, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__113 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__113)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__114 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__114)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":999
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_codeobj__115 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 999, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__115)) __PYX_ERR(0, 999, __pyx_L1_error)

  /* "cantera/reaction.pyx":1002
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(A, b, Ea0, w))
 * 
 */
  __pyx_codeobj__116 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_parameters, 1002, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__116)) __PYX_ERR(0, 1002, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__117 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__117)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__118 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__118)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__119 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__119)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 */
  __pyx_codeobj__120 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__120)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":1115
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingArrheniusRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_codeobj__121 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 1115, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__121)) __PYX_ERR(0, 1115, __pyx_L1_error)

  /* "cantera/reaction.pyx":1118
 *         self._rate.reset(new CxxStickingArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingArrheniusRate(A, b, Ea))
 * 
 */
  __pyx_codeobj__122 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 4, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__49, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_parameters, 1118, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__122)) __PYX_ERR(0, 1118, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__123 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__123)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__124 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__124)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":1142
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_codeobj__125 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__47, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict, 1142, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__125)) __PYX_ERR(0, 1142, __pyx_L1_error)

  /* "cantera/reaction.pyx":1145
 *         self._rate.reset(new CxxStickingBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingBlowersMaselRate(A, b, Ea0, w))
 * 
 */
  __pyx_codeobj__126 = (PyObject*)__Pyx_PyCode_New(5, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__54, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_parameters, 1145, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__126)) __PYX_ERR(0, 1145, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__127 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__127)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__128 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__128)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":1258
 *             self.third_body.default_efficiency = default_eff
 * 
 *     def efficiency(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Get the efficiency of the third body named ``species`` considering both
 */
  __pyx_tuple__129 = PyTuple_Pack(2, __pyx_n_s_self, __pyx_n_s_species); if (unlikely(!__pyx_tuple__129)) __PYX_ERR(0, 1258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__129);
  __Pyx_GIVEREF(__pyx_tuple__129);
  __pyx_codeobj__130 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__129, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_efficiency, 1258, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__130)) __PYX_ERR(0, 1258, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__131 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__131)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__132 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__132)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "cantera/reaction.pyx":1419
 *         return R
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, Kinetics kinetics, hyphenize=True):
 *         """
 */
  __pyx_tuple__133 = PyTuple_Pack(6, __pyx_n_s_cls, __pyx_n_s_data, __pyx_n_s_kinetics, __pyx_n_s_hyphenize, __pyx_n_s_any_map, __pyx_n_s_cxx_reaction); if (unlikely(!__pyx_tuple__133)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__133);
  __Pyx_GIVEREF(__pyx_tuple__133);
  __pyx_codeobj__134 = (PyObject*)__Pyx_PyCode_New(4, 0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__133, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_dict_2, 1419, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__134)) __PYX_ERR(0, 1419, __pyx_L1_error)

  /* "cantera/reaction.pyx":1444
 *         return Reaction.wrap(cxx_reaction)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_yaml(cls, text, Kinetics kinetics):
 *         """
 */
  __pyx_tuple__135 = PyTuple_Pack(5, __pyx_n_s_cls, __pyx_n_s_text, __pyx_n_s_kinetics, __pyx_n_s_any_map, __pyx_n_s_cxx_reaction); if (unlikely(!__pyx_tuple__135)) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__135);
  __Pyx_GIVEREF(__pyx_tuple__135);
  __pyx_codeobj__136 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__135, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_from_yaml, 1444, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__136)) __PYX_ERR(0, 1444, __pyx_L1_error)

  /* "cantera/reaction.pyx":1468
 *         return Reaction.wrap(cxx_reaction)
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def list_from_file(filename, Kinetics kinetics, section="reactions"):
 *         """
 */
  __pyx_tuple__137 = PyTuple_Pack(6, __pyx_n_s_filename, __pyx_n_s_kinetics, __pyx_n_s_section, __pyx_n_s_root, __pyx_n_s_cxx_reactions, __pyx_n_s_r); if (unlikely(!__pyx_tuple__137)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__137);
  __Pyx_GIVEREF(__pyx_tuple__137);
  __pyx_codeobj__138 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 6, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__137, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_list_from_file, 1468, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__138)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __pyx_tuple__139 = PyTuple_Pack(1, __pyx_n_u_reactions); if (unlikely(!__pyx_tuple__139)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__139);
  __Pyx_GIVEREF(__pyx_tuple__139);

  /* "cantera/reaction.pyx":1482
 *         return [Reaction.wrap(r) for r in cxx_reactions]
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def list_from_yaml(text, Kinetics kinetics):
 *         """
 */
  __pyx_tuple__140 = PyTuple_Pack(5, __pyx_n_s_text, __pyx_n_s_kinetics, __pyx_n_s_root, __pyx_n_s_cxx_reactions, __pyx_n_s_r); if (unlikely(!__pyx_tuple__140)) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__140);
  __Pyx_GIVEREF(__pyx_tuple__140);
  __pyx_codeobj__141 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__140, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_list_from_yaml, 1482, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__141)) __PYX_ERR(0, 1482, __pyx_L1_error)

  /* "cantera/reaction.pyx":1655
 *             return anymap_to_py(self.reaction.parameters(True))
 * 
 *     def update_user_data(self, data):             # <<<<<<<<<<<<<<
 *         """
 *         Add the contents of the provided `dict` as additional fields when generating
 */
  __pyx_codeobj__142 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__95, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_update_user_data, 1655, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__142)) __PYX_ERR(0, 1655, __pyx_L1_error)

  /* "cantera/reaction.pyx":1663
 *         self.reaction.input.update(py_to_anymap(data), False)
 * 
 *     def clear_user_data(self):             # <<<<<<<<<<<<<<
 *         """
 *         Clear all saved input data, so that the data given by `input_data` or
 */
  __pyx_codeobj__143 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_clear_user_data, 1663, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__143)) __PYX_ERR(0, 1663, __pyx_L1_error)

  /* "cantera/reaction.pyx":1756
 *             self.third_body.default_efficiency = default_eff
 * 
 *     def efficiency(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Get the efficiency of the third body named ``species`` considering both
 */
  __pyx_codeobj__144 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__129, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_cantera_reaction_pyx, __pyx_n_s_efficiency, 1756, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__144)) __PYX_ERR(0, 1756, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__145 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__145)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__146 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__146)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__147 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__147)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__148 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__148)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__149 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__149)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__150 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__150)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__151 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__151)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__152 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__152)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__153 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__153)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__154 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__154)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_codeobj__155 = (PyObject*)__Pyx_PyCode_New(1, 0, 0, 1, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__39, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_reduce_cython, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__155)) __PYX_ERR(1, 1, __pyx_L1_error)

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_codeobj__156 = (PyObject*)__Pyx_PyCode_New(2, 0, 0, 2, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__41, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_setstate_cython, 3, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__156)) __PYX_ERR(1, 3, __pyx_L1_error)

  /* "(tree fragment)":1
 * def __pyx_unpickle_ExtensibleRateData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_tuple__157 = PyTuple_Pack(5, __pyx_n_s_pyx_type, __pyx_n_s_pyx_checksum, __pyx_n_s_pyx_state, __pyx_n_s_pyx_PickleError, __pyx_n_s_pyx_result); if (unlikely(!__pyx_tuple__157)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_tuple__157);
  __Pyx_GIVEREF(__pyx_tuple__157);
  __pyx_codeobj__158 = (PyObject*)__Pyx_PyCode_New(3, 0, 0, 5, 0, CO_OPTIMIZED|CO_NEWLOCALS, __pyx_empty_bytes, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_tuple__157, __pyx_empty_tuple, __pyx_empty_tuple, __pyx_kp_s_stringsource, __pyx_n_s_pyx_unpickle_ExtensibleRateDat, 1, __pyx_empty_bytes); if (unlikely(!__pyx_codeobj__158)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}
/* #### Code section: init_constants ### */

static CYTHON_SMALL_CODE int __Pyx_InitConstants(void) {
  __pyx_umethod_PyDict_Type_get.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_get.method_name = &__pyx_n_s_get;
  __pyx_umethod_PyDict_Type_update.type = (PyObject*)&PyDict_Type;
  __pyx_umethod_PyDict_Type_update.method_name = &__pyx_n_s_update_2;
  if (__Pyx_CreateStringTabAndInitStrings() < 0) __PYX_ERR(0, 1, __pyx_L1_error);
  __pyx_float_0_0 = PyFloat_FromDouble(0.0); if (unlikely(!__pyx_float_0_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_130344318 = PyInt_FromLong(130344318L); if (unlikely(!__pyx_int_130344318)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_171877079 = PyInt_FromLong(171877079L); if (unlikely(!__pyx_int_171877079)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_int_191245125 = PyInt_FromLong(191245125L); if (unlikely(!__pyx_int_191245125)) __PYX_ERR(0, 1, __pyx_L1_error)
  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_globals ### */

static CYTHON_SMALL_CODE int __Pyx_InitGlobals(void) {
  /* NumpyImportArray.init */
  /*
 * Cython has automatically inserted a call to _import_array since
 * you didn't include one when you cimported numpy. To disable this
 * add the line
 *   <void>numpy._import_array
 */
#ifdef NPY_FEATURE_VERSION
#if !NO_IMPORT_ARRAY
if (unlikely(_import_array() == -1)) {
    PyErr_SetString(PyExc_ImportError, "numpy.core.multiarray failed to import "
    "(auto-generated because you didn't call 'numpy.import_array()' after cimporting numpy; "
    "use '<void>numpy._import_array' to disable if you are certain you don't need it).");
}
#endif
#endif

if (unlikely(PyErr_Occurred())) __PYX_ERR(0, 1, __pyx_L1_error)

  return 0;
  __pyx_L1_error:;
  return -1;
}
/* #### Code section: init_module ### */

static CYTHON_SMALL_CODE int __Pyx_modinit_global_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_export_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_init_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_type_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_variable_import_code(void); /*proto*/
static CYTHON_SMALL_CODE int __Pyx_modinit_function_import_code(void); /*proto*/

static int __Pyx_modinit_global_init_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_global_init_code", 0);
  /*--- Global init code ---*/
  __pyx_v_7cantera_8reaction__reaction_rate_class_registry = ((PyObject*)Py_None); Py_INCREF(Py_None);
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_variable_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_export_code", 0);
  /*--- Variable export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_export_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_export_code", 0);
  /*--- Function export code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_type_init_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_init_code", 0);
  /*--- Type init code ---*/
  __pyx_vtabptr_7cantera_8reaction_ReactionRate = &__pyx_vtable_7cantera_8reaction_ReactionRate;
  __pyx_vtable_7cantera_8reaction_ReactionRate.wrap = (PyObject *(*)(std::shared_ptr<Cantera::ReactionRate> ))__pyx_f_7cantera_8reaction_12ReactionRate_wrap;
  __pyx_vtable_7cantera_8reaction_ReactionRate.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_12ReactionRate_set_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_8reaction_ReactionRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_ReactionRate_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_8reaction_ReactionRate)) __PYX_ERR(0, 19, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_ReactionRate_spec, __pyx_ptype_7cantera_8reaction_ReactionRate) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_ReactionRate = &__pyx_type_7cantera_8reaction_ReactionRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_ReactionRate) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_ReactionRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_ReactionRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_ReactionRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_ReactionRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate, "__call__"); if (unlikely(!wrapper)) __PYX_ERR(0, 19, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_7cantera_8reaction_12ReactionRate_2__call__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_7cantera_8reaction_12ReactionRate_2__call__.doc = __pyx_doc_7cantera_8reaction_12ReactionRate_2__call__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_7cantera_8reaction_12ReactionRate_2__call__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_ReactionRate, __pyx_vtabptr_7cantera_8reaction_ReactionRate) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_ReactionRate) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ReactionRate, (PyObject *) __pyx_ptype_7cantera_8reaction_ReactionRate) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_ReactionRate) < 0) __PYX_ERR(0, 19, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_ArrheniusRateBase = &__pyx_vtable_7cantera_8reaction_ArrheniusRateBase;
  __pyx_vtable_7cantera_8reaction_ArrheniusRateBase.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ReactionRate;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 159, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_ArrheniusRateBase = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_ArrheniusRateBase_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_ArrheniusRateBase)) __PYX_ERR(0, 159, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_ArrheniusRateBase_spec, __pyx_ptype_7cantera_8reaction_ArrheniusRateBase) < 0) __PYX_ERR(0, 159, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_ArrheniusRateBase = &__pyx_type_7cantera_8reaction_ArrheniusRateBase;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_ArrheniusRateBase->tp_base = __pyx_ptype_7cantera_8reaction_ReactionRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_ArrheniusRateBase) < 0) __PYX_ERR(0, 159, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_ArrheniusRateBase->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_ArrheniusRateBase->tp_dictoffset && __pyx_ptype_7cantera_8reaction_ArrheniusRateBase->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_ArrheniusRateBase->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_ArrheniusRateBase, __pyx_vtabptr_7cantera_8reaction_ArrheniusRateBase) < 0) __PYX_ERR(0, 159, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_ArrheniusRateBase) < 0) __PYX_ERR(0, 159, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ArrheniusRateBase, (PyObject *) __pyx_ptype_7cantera_8reaction_ArrheniusRateBase) < 0) __PYX_ERR(0, 159, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_ArrheniusRateBase) < 0) __PYX_ERR(0, 159, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_FalloffRate = &__pyx_vtable_7cantera_8reaction_FalloffRate;
  __pyx_vtable_7cantera_8reaction_FalloffRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ReactionRate;
  __pyx_vtable_7cantera_8reaction_FalloffRate.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_11FalloffRate_set_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 373, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_FalloffRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_FalloffRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_FalloffRate)) __PYX_ERR(0, 373, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_FalloffRate_spec, __pyx_ptype_7cantera_8reaction_FalloffRate) < 0) __PYX_ERR(0, 373, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_FalloffRate = &__pyx_type_7cantera_8reaction_FalloffRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_FalloffRate->tp_base = __pyx_ptype_7cantera_8reaction_ReactionRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_FalloffRate) < 0) __PYX_ERR(0, 373, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_FalloffRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_FalloffRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_FalloffRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_FalloffRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_7cantera_8reaction_FalloffRate, "__call__"); if (unlikely(!wrapper)) __PYX_ERR(0, 373, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_7cantera_8reaction_11FalloffRate_2__call__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_7cantera_8reaction_11FalloffRate_2__call__.doc = __pyx_doc_7cantera_8reaction_11FalloffRate_2__call__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_7cantera_8reaction_11FalloffRate_2__call__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_FalloffRate, __pyx_vtabptr_7cantera_8reaction_FalloffRate) < 0) __PYX_ERR(0, 373, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_FalloffRate) < 0) __PYX_ERR(0, 373, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_FalloffRate, (PyObject *) __pyx_ptype_7cantera_8reaction_FalloffRate) < 0) __PYX_ERR(0, 373, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_FalloffRate) < 0) __PYX_ERR(0, 373, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_CustomRate = &__pyx_vtable_7cantera_8reaction_CustomRate;
  __pyx_vtable_7cantera_8reaction_CustomRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ReactionRate;
  __pyx_vtable_7cantera_8reaction_CustomRate.cxx_object = (Cantera::CustomFunc1Rate *(*)(struct __pyx_obj_7cantera_8reaction_CustomRate *))__pyx_f_7cantera_8reaction_10CustomRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 693, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_CustomRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_CustomRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_CustomRate)) __PYX_ERR(0, 693, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_CustomRate_spec, __pyx_ptype_7cantera_8reaction_CustomRate) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_CustomRate = &__pyx_type_7cantera_8reaction_CustomRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_CustomRate->tp_base = __pyx_ptype_7cantera_8reaction_ReactionRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_CustomRate) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_CustomRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_CustomRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_CustomRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_CustomRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_CustomRate, __pyx_vtabptr_7cantera_8reaction_CustomRate) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_CustomRate) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CustomRate, (PyObject *) __pyx_ptype_7cantera_8reaction_CustomRate) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_CustomRate) < 0) __PYX_ERR(0, 693, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_ExtensibleRate = &__pyx_vtable_7cantera_8reaction_ExtensibleRate;
  __pyx_vtable_7cantera_8reaction_ExtensibleRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ReactionRate;
  __pyx_vtable_7cantera_8reaction_ExtensibleRate.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_14ExtensibleRate_set_cxx_object__pyx_wrap_1;
  __pyx_vtable_7cantera_8reaction_ExtensibleRate.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ExtensibleRate *, struct __pyx_opt_args_7cantera_8reaction_14ExtensibleRate_set_cxx_object *__pyx_optional_args))__pyx_f_7cantera_8reaction_14ExtensibleRate_set_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 742, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_ExtensibleRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_ExtensibleRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_ExtensibleRate)) __PYX_ERR(0, 742, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_ExtensibleRate_spec, __pyx_ptype_7cantera_8reaction_ExtensibleRate) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_ExtensibleRate = &__pyx_type_7cantera_8reaction_ExtensibleRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_base = __pyx_ptype_7cantera_8reaction_ReactionRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_ExtensibleRate) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_ExtensibleRate, __pyx_vtabptr_7cantera_8reaction_ExtensibleRate) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_ExtensibleRate) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ExtensibleRate, (PyObject *) __pyx_ptype_7cantera_8reaction_ExtensibleRate) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_ExtensibleRate) < 0) __PYX_ERR(0, 742, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_ExtensibleRateData = &__pyx_vtable_7cantera_8reaction_ExtensibleRateData;
  __pyx_vtable_7cantera_8reaction_ExtensibleRateData.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ExtensibleRateData *, Cantera::ReactionDataDelegator *))__pyx_f_7cantera_8reaction_18ExtensibleRateData_set_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_8reaction_ExtensibleRateData = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_ExtensibleRateData_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_8reaction_ExtensibleRateData)) __PYX_ERR(0, 846, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_ExtensibleRateData_spec, __pyx_ptype_7cantera_8reaction_ExtensibleRateData) < 0) __PYX_ERR(0, 846, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_ExtensibleRateData = &__pyx_type_7cantera_8reaction_ExtensibleRateData;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_ExtensibleRateData) < 0) __PYX_ERR(0, 846, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_ExtensibleRateData->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_ExtensibleRateData->tp_dictoffset && __pyx_ptype_7cantera_8reaction_ExtensibleRateData->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_ExtensibleRateData->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_ExtensibleRateData, __pyx_vtabptr_7cantera_8reaction_ExtensibleRateData) < 0) __PYX_ERR(0, 846, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_ExtensibleRateData) < 0) __PYX_ERR(0, 846, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ExtensibleRateData, (PyObject *) __pyx_ptype_7cantera_8reaction_ExtensibleRateData) < 0) __PYX_ERR(0, 846, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_ExtensibleRateData) < 0) __PYX_ERR(0, 846, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_InterfaceRateBase = &__pyx_vtable_7cantera_8reaction_InterfaceRateBase;
  __pyx_vtable_7cantera_8reaction_InterfaceRateBase.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ArrheniusRateBase;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRateBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 878, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_InterfaceRateBase = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_InterfaceRateBase_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_InterfaceRateBase)) __PYX_ERR(0, 878, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_InterfaceRateBase_spec, __pyx_ptype_7cantera_8reaction_InterfaceRateBase) < 0) __PYX_ERR(0, 878, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_InterfaceRateBase = &__pyx_type_7cantera_8reaction_InterfaceRateBase;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_InterfaceRateBase->tp_base = __pyx_ptype_7cantera_8reaction_ArrheniusRateBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_InterfaceRateBase) < 0) __PYX_ERR(0, 878, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_InterfaceRateBase->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_InterfaceRateBase->tp_dictoffset && __pyx_ptype_7cantera_8reaction_InterfaceRateBase->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_InterfaceRateBase->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceRateBase, "__call__"); if (unlikely(!wrapper)) __PYX_ERR(0, 878, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_7cantera_8reaction_17InterfaceRateBase___call__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_7cantera_8reaction_17InterfaceRateBase___call__.doc = __pyx_doc_7cantera_8reaction_17InterfaceRateBase___call__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_7cantera_8reaction_17InterfaceRateBase___call__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_InterfaceRateBase, __pyx_vtabptr_7cantera_8reaction_InterfaceRateBase) < 0) __PYX_ERR(0, 878, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_InterfaceRateBase) < 0) __PYX_ERR(0, 878, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_InterfaceRateBase, (PyObject *) __pyx_ptype_7cantera_8reaction_InterfaceRateBase) < 0) __PYX_ERR(0, 878, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_InterfaceRateBase) < 0) __PYX_ERR(0, 878, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_StickRateBase = &__pyx_vtable_7cantera_8reaction_StickRateBase;
  __pyx_vtable_7cantera_8reaction_StickRateBase.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_InterfaceRateBase;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceRateBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1041, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_StickRateBase = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_StickRateBase_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_StickRateBase)) __PYX_ERR(0, 1041, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_StickRateBase_spec, __pyx_ptype_7cantera_8reaction_StickRateBase) < 0) __PYX_ERR(0, 1041, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_StickRateBase = &__pyx_type_7cantera_8reaction_StickRateBase;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_StickRateBase->tp_base = __pyx_ptype_7cantera_8reaction_InterfaceRateBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_StickRateBase) < 0) __PYX_ERR(0, 1041, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_StickRateBase->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_StickRateBase->tp_dictoffset && __pyx_ptype_7cantera_8reaction_StickRateBase->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_StickRateBase->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_StickRateBase, __pyx_vtabptr_7cantera_8reaction_StickRateBase) < 0) __PYX_ERR(0, 1041, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_StickRateBase) < 0) __PYX_ERR(0, 1041, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_StickRateBase, (PyObject *) __pyx_ptype_7cantera_8reaction_StickRateBase) < 0) __PYX_ERR(0, 1041, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_StickRateBase) < 0) __PYX_ERR(0, 1041, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_ThirdBody = &__pyx_vtable_7cantera_8reaction_ThirdBody;
  __pyx_vtable_7cantera_8reaction_ThirdBody.wrap = (PyObject *(*)(std::shared_ptr<Cantera::ThirdBody> ))__pyx_f_7cantera_8reaction_9ThirdBody_wrap;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_8reaction_ThirdBody = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_ThirdBody_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_8reaction_ThirdBody)) __PYX_ERR(0, 1185, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_ThirdBody_spec, __pyx_ptype_7cantera_8reaction_ThirdBody) < 0) __PYX_ERR(0, 1185, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_ThirdBody = &__pyx_type_7cantera_8reaction_ThirdBody;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_ThirdBody) < 0) __PYX_ERR(0, 1185, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_ThirdBody->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_ThirdBody->tp_dictoffset && __pyx_ptype_7cantera_8reaction_ThirdBody->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_ThirdBody->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_ThirdBody, __pyx_vtabptr_7cantera_8reaction_ThirdBody) < 0) __PYX_ERR(0, 1185, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_ThirdBody) < 0) __PYX_ERR(0, 1185, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ThirdBody, (PyObject *) __pyx_ptype_7cantera_8reaction_ThirdBody) < 0) __PYX_ERR(0, 1185, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_ThirdBody) < 0) __PYX_ERR(0, 1185, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_Reaction = &__pyx_vtable_7cantera_8reaction_Reaction;
  __pyx_vtable_7cantera_8reaction_Reaction.wrap = (PyObject *(*)(std::shared_ptr<Cantera::Reaction> ))__pyx_f_7cantera_8reaction_8Reaction_wrap;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_8reaction_Reaction = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_Reaction_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_8reaction_Reaction)) __PYX_ERR(0, 1266, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_Reaction_spec, __pyx_ptype_7cantera_8reaction_Reaction) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_Reaction = &__pyx_type_7cantera_8reaction_Reaction;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_Reaction) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_Reaction->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_Reaction->tp_dictoffset && __pyx_ptype_7cantera_8reaction_Reaction->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_Reaction->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_Reaction, __pyx_vtabptr_7cantera_8reaction_Reaction) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_Reaction) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Reaction, (PyObject *) __pyx_ptype_7cantera_8reaction_Reaction) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_Reaction) < 0) __PYX_ERR(0, 1266, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_Arrhenius = &__pyx_vtable_7cantera_8reaction_Arrhenius;
  __pyx_vtable_7cantera_8reaction_Arrhenius.wrap = (PyObject *(*)(Cantera::ArrheniusRate *))__pyx_f_7cantera_8reaction_9Arrhenius_wrap;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_8reaction_Arrhenius = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_Arrhenius_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_8reaction_Arrhenius)) __PYX_ERR(0, 1774, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_Arrhenius_spec, __pyx_ptype_7cantera_8reaction_Arrhenius) < 0) __PYX_ERR(0, 1774, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_Arrhenius = &__pyx_type_7cantera_8reaction_Arrhenius;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_Arrhenius) < 0) __PYX_ERR(0, 1774, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_Arrhenius->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_Arrhenius->tp_dictoffset && __pyx_ptype_7cantera_8reaction_Arrhenius->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_Arrhenius->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_Arrhenius, __pyx_vtabptr_7cantera_8reaction_Arrhenius) < 0) __PYX_ERR(0, 1774, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_Arrhenius) < 0) __PYX_ERR(0, 1774, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_Arrhenius, (PyObject *) __pyx_ptype_7cantera_8reaction_Arrhenius) < 0) __PYX_ERR(0, 1774, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_Arrhenius) < 0) __PYX_ERR(0, 1774, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_ArrheniusRate = &__pyx_vtable_7cantera_8reaction_ArrheniusRate;
  __pyx_vtable_7cantera_8reaction_ArrheniusRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ArrheniusRateBase;
  __pyx_vtable_7cantera_8reaction_ArrheniusRate.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_13ArrheniusRate_set_cxx_object;
  __pyx_vtable_7cantera_8reaction_ArrheniusRate.cxx_object = (Cantera::ArrheniusRate *(*)(struct __pyx_obj_7cantera_8reaction_ArrheniusRate *))__pyx_f_7cantera_8reaction_13ArrheniusRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRateBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 227, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_ArrheniusRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_ArrheniusRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_ArrheniusRate)) __PYX_ERR(0, 227, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_ArrheniusRate_spec, __pyx_ptype_7cantera_8reaction_ArrheniusRate) < 0) __PYX_ERR(0, 227, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_ArrheniusRate = &__pyx_type_7cantera_8reaction_ArrheniusRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_ArrheniusRate->tp_base = __pyx_ptype_7cantera_8reaction_ArrheniusRateBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_ArrheniusRate) < 0) __PYX_ERR(0, 227, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_ArrheniusRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_ArrheniusRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_ArrheniusRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_ArrheniusRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_ArrheniusRate, __pyx_vtabptr_7cantera_8reaction_ArrheniusRate) < 0) __PYX_ERR(0, 227, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_ArrheniusRate) < 0) __PYX_ERR(0, 227, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ArrheniusRate, (PyObject *) __pyx_ptype_7cantera_8reaction_ArrheniusRate) < 0) __PYX_ERR(0, 227, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_ArrheniusRate) < 0) __PYX_ERR(0, 227, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_BlowersMaselRate = &__pyx_vtable_7cantera_8reaction_BlowersMaselRate;
  __pyx_vtable_7cantera_8reaction_BlowersMaselRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ArrheniusRateBase;
  __pyx_vtable_7cantera_8reaction_BlowersMaselRate.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_16BlowersMaselRate_set_cxx_object;
  __pyx_vtable_7cantera_8reaction_BlowersMaselRate.cxx_object = (Cantera::BlowersMaselRate *(*)(struct __pyx_obj_7cantera_8reaction_BlowersMaselRate *))__pyx_f_7cantera_8reaction_16BlowersMaselRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRateBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 262, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_BlowersMaselRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_BlowersMaselRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_BlowersMaselRate)) __PYX_ERR(0, 262, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_BlowersMaselRate_spec, __pyx_ptype_7cantera_8reaction_BlowersMaselRate) < 0) __PYX_ERR(0, 262, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_BlowersMaselRate = &__pyx_type_7cantera_8reaction_BlowersMaselRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_BlowersMaselRate->tp_base = __pyx_ptype_7cantera_8reaction_ArrheniusRateBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_BlowersMaselRate) < 0) __PYX_ERR(0, 262, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_BlowersMaselRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_BlowersMaselRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_BlowersMaselRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_BlowersMaselRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_BlowersMaselRate, __pyx_vtabptr_7cantera_8reaction_BlowersMaselRate) < 0) __PYX_ERR(0, 262, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_BlowersMaselRate) < 0) __PYX_ERR(0, 262, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_BlowersMaselRate, (PyObject *) __pyx_ptype_7cantera_8reaction_BlowersMaselRate) < 0) __PYX_ERR(0, 262, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_BlowersMaselRate) < 0) __PYX_ERR(0, 262, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_TwoTempPlasmaRate = &__pyx_vtable_7cantera_8reaction_TwoTempPlasmaRate;
  __pyx_vtable_7cantera_8reaction_TwoTempPlasmaRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ArrheniusRateBase;
  __pyx_vtable_7cantera_8reaction_TwoTempPlasmaRate.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_17TwoTempPlasmaRate_set_cxx_object;
  __pyx_vtable_7cantera_8reaction_TwoTempPlasmaRate.cxx_object = (Cantera::TwoTempPlasmaRate *(*)(struct __pyx_obj_7cantera_8reaction_TwoTempPlasmaRate *))__pyx_f_7cantera_8reaction_17TwoTempPlasmaRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRateBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 316, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_TwoTempPlasmaRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate)) __PYX_ERR(0, 316, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_TwoTempPlasmaRate_spec, __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate = &__pyx_type_7cantera_8reaction_TwoTempPlasmaRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate->tp_base = __pyx_ptype_7cantera_8reaction_ArrheniusRateBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate, "__call__"); if (unlikely(!wrapper)) __PYX_ERR(0, 316, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_7cantera_8reaction_17TwoTempPlasmaRate_2__call__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_7cantera_8reaction_17TwoTempPlasmaRate_2__call__.doc = __pyx_doc_7cantera_8reaction_17TwoTempPlasmaRate_2__call__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_7cantera_8reaction_17TwoTempPlasmaRate_2__call__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate, __pyx_vtabptr_7cantera_8reaction_TwoTempPlasmaRate) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_TwoTempPlasmaRate, (PyObject *) __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate) < 0) __PYX_ERR(0, 316, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_LindemannRate = &__pyx_vtable_7cantera_8reaction_LindemannRate;
  __pyx_vtable_7cantera_8reaction_LindemannRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_FalloffRate;
  __pyx_vtable_7cantera_8reaction_LindemannRate.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_13LindemannRate_set_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_FalloffRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 469, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_LindemannRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_LindemannRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_LindemannRate)) __PYX_ERR(0, 469, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_LindemannRate_spec, __pyx_ptype_7cantera_8reaction_LindemannRate) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_LindemannRate = &__pyx_type_7cantera_8reaction_LindemannRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_LindemannRate->tp_base = __pyx_ptype_7cantera_8reaction_FalloffRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_LindemannRate) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_LindemannRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_LindemannRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_LindemannRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_LindemannRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_LindemannRate, __pyx_vtabptr_7cantera_8reaction_LindemannRate) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_LindemannRate) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_LindemannRate, (PyObject *) __pyx_ptype_7cantera_8reaction_LindemannRate) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_LindemannRate) < 0) __PYX_ERR(0, 469, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_TroeRate = &__pyx_vtable_7cantera_8reaction_TroeRate;
  __pyx_vtable_7cantera_8reaction_TroeRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_FalloffRate;
  __pyx_vtable_7cantera_8reaction_TroeRate.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_8TroeRate_set_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_FalloffRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 487, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_TroeRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_TroeRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_TroeRate)) __PYX_ERR(0, 487, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_TroeRate_spec, __pyx_ptype_7cantera_8reaction_TroeRate) < 0) __PYX_ERR(0, 487, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_TroeRate = &__pyx_type_7cantera_8reaction_TroeRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_TroeRate->tp_base = __pyx_ptype_7cantera_8reaction_FalloffRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_TroeRate) < 0) __PYX_ERR(0, 487, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_TroeRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_TroeRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_TroeRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_TroeRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_TroeRate, __pyx_vtabptr_7cantera_8reaction_TroeRate) < 0) __PYX_ERR(0, 487, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_TroeRate) < 0) __PYX_ERR(0, 487, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_TroeRate, (PyObject *) __pyx_ptype_7cantera_8reaction_TroeRate) < 0) __PYX_ERR(0, 487, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_TroeRate) < 0) __PYX_ERR(0, 487, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_SriRate = &__pyx_vtable_7cantera_8reaction_SriRate;
  __pyx_vtable_7cantera_8reaction_SriRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_FalloffRate;
  __pyx_vtable_7cantera_8reaction_SriRate.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_7SriRate_set_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_FalloffRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 507, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_SriRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_SriRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_SriRate)) __PYX_ERR(0, 507, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_SriRate_spec, __pyx_ptype_7cantera_8reaction_SriRate) < 0) __PYX_ERR(0, 507, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_SriRate = &__pyx_type_7cantera_8reaction_SriRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_SriRate->tp_base = __pyx_ptype_7cantera_8reaction_FalloffRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_SriRate) < 0) __PYX_ERR(0, 507, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_SriRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_SriRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_SriRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_SriRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_SriRate, __pyx_vtabptr_7cantera_8reaction_SriRate) < 0) __PYX_ERR(0, 507, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_SriRate) < 0) __PYX_ERR(0, 507, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_SriRate, (PyObject *) __pyx_ptype_7cantera_8reaction_SriRate) < 0) __PYX_ERR(0, 507, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_SriRate) < 0) __PYX_ERR(0, 507, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_TsangRate = &__pyx_vtable_7cantera_8reaction_TsangRate;
  __pyx_vtable_7cantera_8reaction_TsangRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_FalloffRate;
  __pyx_vtable_7cantera_8reaction_TsangRate.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_9TsangRate_set_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_FalloffRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 527, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_TsangRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_TsangRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_TsangRate)) __PYX_ERR(0, 527, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_TsangRate_spec, __pyx_ptype_7cantera_8reaction_TsangRate) < 0) __PYX_ERR(0, 527, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_TsangRate = &__pyx_type_7cantera_8reaction_TsangRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_TsangRate->tp_base = __pyx_ptype_7cantera_8reaction_FalloffRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_TsangRate) < 0) __PYX_ERR(0, 527, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_TsangRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_TsangRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_TsangRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_TsangRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_TsangRate, __pyx_vtabptr_7cantera_8reaction_TsangRate) < 0) __PYX_ERR(0, 527, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_TsangRate) < 0) __PYX_ERR(0, 527, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_TsangRate, (PyObject *) __pyx_ptype_7cantera_8reaction_TsangRate) < 0) __PYX_ERR(0, 527, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_TsangRate) < 0) __PYX_ERR(0, 527, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_PlogRate = &__pyx_vtable_7cantera_8reaction_PlogRate;
  __pyx_vtable_7cantera_8reaction_PlogRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ReactionRate;
  __pyx_vtable_7cantera_8reaction_PlogRate.cxx_object = (Cantera::PlogRate *(*)(struct __pyx_obj_7cantera_8reaction_PlogRate *))__pyx_f_7cantera_8reaction_8PlogRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 543, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_PlogRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_PlogRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_PlogRate)) __PYX_ERR(0, 543, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_PlogRate_spec, __pyx_ptype_7cantera_8reaction_PlogRate) < 0) __PYX_ERR(0, 543, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_PlogRate = &__pyx_type_7cantera_8reaction_PlogRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_PlogRate->tp_base = __pyx_ptype_7cantera_8reaction_ReactionRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_PlogRate) < 0) __PYX_ERR(0, 543, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_PlogRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_PlogRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_PlogRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_PlogRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_7cantera_8reaction_PlogRate, "__call__"); if (unlikely(!wrapper)) __PYX_ERR(0, 543, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_7cantera_8reaction_8PlogRate_2__call__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_7cantera_8reaction_8PlogRate_2__call__.doc = __pyx_doc_7cantera_8reaction_8PlogRate_2__call__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_7cantera_8reaction_8PlogRate_2__call__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_PlogRate, __pyx_vtabptr_7cantera_8reaction_PlogRate) < 0) __PYX_ERR(0, 543, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_PlogRate) < 0) __PYX_ERR(0, 543, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_PlogRate, (PyObject *) __pyx_ptype_7cantera_8reaction_PlogRate) < 0) __PYX_ERR(0, 543, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_PlogRate) < 0) __PYX_ERR(0, 543, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_ChebyshevRate = &__pyx_vtable_7cantera_8reaction_ChebyshevRate;
  __pyx_vtable_7cantera_8reaction_ChebyshevRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_ReactionRate;
  __pyx_vtable_7cantera_8reaction_ChebyshevRate._cxxarray2d = (Cantera::Array2D (*)(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *, PyObject *))__pyx_f_7cantera_8reaction_13ChebyshevRate__cxxarray2d;
  __pyx_vtable_7cantera_8reaction_ChebyshevRate.cxx_object = (Cantera::ChebyshevRate *(*)(struct __pyx_obj_7cantera_8reaction_ChebyshevRate *))__pyx_f_7cantera_8reaction_13ChebyshevRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 602, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_ChebyshevRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_ChebyshevRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_ChebyshevRate)) __PYX_ERR(0, 602, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_ChebyshevRate_spec, __pyx_ptype_7cantera_8reaction_ChebyshevRate) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_ChebyshevRate = &__pyx_type_7cantera_8reaction_ChebyshevRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_ChebyshevRate->tp_base = __pyx_ptype_7cantera_8reaction_ReactionRate;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_ChebyshevRate) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_ChebyshevRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_ChebyshevRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_ChebyshevRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_ChebyshevRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  #if CYTHON_UPDATE_DESCRIPTOR_DOC
  {
    PyObject *wrapper = PyObject_GetAttrString((PyObject *)__pyx_ptype_7cantera_8reaction_ChebyshevRate, "__call__"); if (unlikely(!wrapper)) __PYX_ERR(0, 602, __pyx_L1_error)
    if (__Pyx_IS_TYPE(wrapper, &PyWrapperDescr_Type)) {
      __pyx_wrapperbase_7cantera_8reaction_13ChebyshevRate_2__call__ = *((PyWrapperDescrObject *)wrapper)->d_base;
      __pyx_wrapperbase_7cantera_8reaction_13ChebyshevRate_2__call__.doc = __pyx_doc_7cantera_8reaction_13ChebyshevRate_2__call__;
      ((PyWrapperDescrObject *)wrapper)->d_base = &__pyx_wrapperbase_7cantera_8reaction_13ChebyshevRate_2__call__;
    }
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_ChebyshevRate, __pyx_vtabptr_7cantera_8reaction_ChebyshevRate) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_ChebyshevRate) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ChebyshevRate, (PyObject *) __pyx_ptype_7cantera_8reaction_ChebyshevRate) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_ChebyshevRate) < 0) __PYX_ERR(0, 602, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_InterfaceArrheniusRate = &__pyx_vtable_7cantera_8reaction_InterfaceArrheniusRate;
  __pyx_vtable_7cantera_8reaction_InterfaceArrheniusRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_InterfaceRateBase;
  __pyx_vtable_7cantera_8reaction_InterfaceArrheniusRate.__pyx_base.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_22InterfaceArrheniusRate_set_cxx_object;
  __pyx_vtable_7cantera_8reaction_InterfaceArrheniusRate.cxx_object = (Cantera::InterfaceArrheniusRate *(*)(struct __pyx_obj_7cantera_8reaction_InterfaceArrheniusRate *))__pyx_f_7cantera_8reaction_22InterfaceArrheniusRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceRateBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 960, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_InterfaceArrheniusRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate)) __PYX_ERR(0, 960, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_InterfaceArrheniusRate_spec, __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate) < 0) __PYX_ERR(0, 960, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate = &__pyx_type_7cantera_8reaction_InterfaceArrheniusRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate->tp_base = __pyx_ptype_7cantera_8reaction_InterfaceRateBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate) < 0) __PYX_ERR(0, 960, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate, __pyx_vtabptr_7cantera_8reaction_InterfaceArrheniusRate) < 0) __PYX_ERR(0, 960, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate) < 0) __PYX_ERR(0, 960, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_InterfaceArrheniusRate, (PyObject *) __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate) < 0) __PYX_ERR(0, 960, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate) < 0) __PYX_ERR(0, 960, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_InterfaceBlowersMaselRate = &__pyx_vtable_7cantera_8reaction_InterfaceBlowersMaselRate;
  __pyx_vtable_7cantera_8reaction_InterfaceBlowersMaselRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_InterfaceRateBase;
  __pyx_vtable_7cantera_8reaction_InterfaceBlowersMaselRate.__pyx_base.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_25InterfaceBlowersMaselRate_set_cxx_object;
  __pyx_vtable_7cantera_8reaction_InterfaceBlowersMaselRate.cxx_object = (Cantera::InterfaceBlowersMaselRate *(*)(struct __pyx_obj_7cantera_8reaction_InterfaceBlowersMaselRate *))__pyx_f_7cantera_8reaction_25InterfaceBlowersMaselRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceRateBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 986, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate)) __PYX_ERR(0, 986, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate_spec, __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate) < 0) __PYX_ERR(0, 986, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate = &__pyx_type_7cantera_8reaction_InterfaceBlowersMaselRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate->tp_base = __pyx_ptype_7cantera_8reaction_InterfaceRateBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate) < 0) __PYX_ERR(0, 986, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate, __pyx_vtabptr_7cantera_8reaction_InterfaceBlowersMaselRate) < 0) __PYX_ERR(0, 986, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate) < 0) __PYX_ERR(0, 986, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_InterfaceBlowersMaselRate, (PyObject *) __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate) < 0) __PYX_ERR(0, 986, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate) < 0) __PYX_ERR(0, 986, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_StickingArrheniusRate = &__pyx_vtable_7cantera_8reaction_StickingArrheniusRate;
  __pyx_vtable_7cantera_8reaction_StickingArrheniusRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_StickRateBase;
  __pyx_vtable_7cantera_8reaction_StickingArrheniusRate.__pyx_base.__pyx_base.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_21StickingArrheniusRate_set_cxx_object;
  __pyx_vtable_7cantera_8reaction_StickingArrheniusRate.cxx_object = (Cantera::StickingArrheniusRate *(*)(struct __pyx_obj_7cantera_8reaction_StickingArrheniusRate *))__pyx_f_7cantera_8reaction_21StickingArrheniusRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_StickRateBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1104, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_StickingArrheniusRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_StickingArrheniusRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_StickingArrheniusRate)) __PYX_ERR(0, 1104, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_StickingArrheniusRate_spec, __pyx_ptype_7cantera_8reaction_StickingArrheniusRate) < 0) __PYX_ERR(0, 1104, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_StickingArrheniusRate = &__pyx_type_7cantera_8reaction_StickingArrheniusRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_StickingArrheniusRate->tp_base = __pyx_ptype_7cantera_8reaction_StickRateBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_StickingArrheniusRate) < 0) __PYX_ERR(0, 1104, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_StickingArrheniusRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_StickingArrheniusRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_StickingArrheniusRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_StickingArrheniusRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_StickingArrheniusRate, __pyx_vtabptr_7cantera_8reaction_StickingArrheniusRate) < 0) __PYX_ERR(0, 1104, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_StickingArrheniusRate) < 0) __PYX_ERR(0, 1104, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_StickingArrheniusRate, (PyObject *) __pyx_ptype_7cantera_8reaction_StickingArrheniusRate) < 0) __PYX_ERR(0, 1104, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_StickingArrheniusRate) < 0) __PYX_ERR(0, 1104, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_StickingBlowersMaselRate = &__pyx_vtable_7cantera_8reaction_StickingBlowersMaselRate;
  __pyx_vtable_7cantera_8reaction_StickingBlowersMaselRate.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_StickRateBase;
  __pyx_vtable_7cantera_8reaction_StickingBlowersMaselRate.__pyx_base.__pyx_base.__pyx_base.__pyx_base.set_cxx_object = (PyObject *(*)(struct __pyx_obj_7cantera_8reaction_ReactionRate *))__pyx_f_7cantera_8reaction_24StickingBlowersMaselRate_set_cxx_object;
  __pyx_vtable_7cantera_8reaction_StickingBlowersMaselRate.cxx_object = (Cantera::StickingBlowersMaselRate *(*)(struct __pyx_obj_7cantera_8reaction_StickingBlowersMaselRate *))__pyx_f_7cantera_8reaction_24StickingBlowersMaselRate_cxx_object;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_StickRateBase); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1131, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_StickingBlowersMaselRate_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate)) __PYX_ERR(0, 1131, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_StickingBlowersMaselRate_spec, __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate) < 0) __PYX_ERR(0, 1131, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate = &__pyx_type_7cantera_8reaction_StickingBlowersMaselRate;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate->tp_base = __pyx_ptype_7cantera_8reaction_StickRateBase;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate) < 0) __PYX_ERR(0, 1131, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate->tp_dictoffset && __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate, __pyx_vtabptr_7cantera_8reaction_StickingBlowersMaselRate) < 0) __PYX_ERR(0, 1131, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate) < 0) __PYX_ERR(0, 1131, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_StickingBlowersMaselRate, (PyObject *) __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate) < 0) __PYX_ERR(0, 1131, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate) < 0) __PYX_ERR(0, 1131, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_ThreeBodyReaction = &__pyx_vtable_7cantera_8reaction_ThreeBodyReaction;
  __pyx_vtable_7cantera_8reaction_ThreeBodyReaction.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_Reaction;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_Reaction); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1842, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_ThreeBodyReaction = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_ThreeBodyReaction_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_ThreeBodyReaction)) __PYX_ERR(0, 1842, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_ThreeBodyReaction_spec, __pyx_ptype_7cantera_8reaction_ThreeBodyReaction) < 0) __PYX_ERR(0, 1842, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_ThreeBodyReaction = &__pyx_type_7cantera_8reaction_ThreeBodyReaction;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_ThreeBodyReaction->tp_base = __pyx_ptype_7cantera_8reaction_Reaction;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_ThreeBodyReaction) < 0) __PYX_ERR(0, 1842, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_ThreeBodyReaction->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_ThreeBodyReaction->tp_dictoffset && __pyx_ptype_7cantera_8reaction_ThreeBodyReaction->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_ThreeBodyReaction->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_ThreeBodyReaction, __pyx_vtabptr_7cantera_8reaction_ThreeBodyReaction) < 0) __PYX_ERR(0, 1842, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_ThreeBodyReaction) < 0) __PYX_ERR(0, 1842, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ThreeBodyReaction, (PyObject *) __pyx_ptype_7cantera_8reaction_ThreeBodyReaction) < 0) __PYX_ERR(0, 1842, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_ThreeBodyReaction) < 0) __PYX_ERR(0, 1842, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_FalloffReaction = &__pyx_vtable_7cantera_8reaction_FalloffReaction;
  __pyx_vtable_7cantera_8reaction_FalloffReaction.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_Reaction;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_Reaction); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1872, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_FalloffReaction = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_FalloffReaction_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_FalloffReaction)) __PYX_ERR(0, 1872, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_FalloffReaction_spec, __pyx_ptype_7cantera_8reaction_FalloffReaction) < 0) __PYX_ERR(0, 1872, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_FalloffReaction = &__pyx_type_7cantera_8reaction_FalloffReaction;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_FalloffReaction->tp_base = __pyx_ptype_7cantera_8reaction_Reaction;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_FalloffReaction) < 0) __PYX_ERR(0, 1872, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_FalloffReaction->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_FalloffReaction->tp_dictoffset && __pyx_ptype_7cantera_8reaction_FalloffReaction->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_FalloffReaction->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_FalloffReaction, __pyx_vtabptr_7cantera_8reaction_FalloffReaction) < 0) __PYX_ERR(0, 1872, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_FalloffReaction) < 0) __PYX_ERR(0, 1872, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_FalloffReaction, (PyObject *) __pyx_ptype_7cantera_8reaction_FalloffReaction) < 0) __PYX_ERR(0, 1872, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_FalloffReaction) < 0) __PYX_ERR(0, 1872, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_ChemicallyActivatedReaction = &__pyx_vtable_7cantera_8reaction_ChemicallyActivatedReaction;
  __pyx_vtable_7cantera_8reaction_ChemicallyActivatedReaction.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_FalloffReaction;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_FalloffReaction); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1905, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_ChemicallyActivatedReaction_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction)) __PYX_ERR(0, 1905, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_ChemicallyActivatedReaction_spec, __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction) < 0) __PYX_ERR(0, 1905, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction = &__pyx_type_7cantera_8reaction_ChemicallyActivatedReaction;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction->tp_base = __pyx_ptype_7cantera_8reaction_FalloffReaction;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction) < 0) __PYX_ERR(0, 1905, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction->tp_dictoffset && __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction, __pyx_vtabptr_7cantera_8reaction_ChemicallyActivatedReaction) < 0) __PYX_ERR(0, 1905, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction) < 0) __PYX_ERR(0, 1905, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_ChemicallyActivatedReaction, (PyObject *) __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction) < 0) __PYX_ERR(0, 1905, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_ChemicallyActivatedReaction) < 0) __PYX_ERR(0, 1905, __pyx_L1_error)
  #endif
  __pyx_vtabptr_7cantera_8reaction_CustomReaction = &__pyx_vtable_7cantera_8reaction_CustomReaction;
  __pyx_vtable_7cantera_8reaction_CustomReaction.__pyx_base = *__pyx_vtabptr_7cantera_8reaction_Reaction;
  #if CYTHON_USE_TYPE_SPECS
  __pyx_t_1 = PyTuple_Pack(1, (PyObject *)__pyx_ptype_7cantera_8reaction_Reaction); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1917, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8reaction_CustomReaction = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction_CustomReaction_spec, __pyx_t_1);
  __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (unlikely(!__pyx_ptype_7cantera_8reaction_CustomReaction)) __PYX_ERR(0, 1917, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction_CustomReaction_spec, __pyx_ptype_7cantera_8reaction_CustomReaction) < 0) __PYX_ERR(0, 1917, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction_CustomReaction = &__pyx_type_7cantera_8reaction_CustomReaction;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  __pyx_ptype_7cantera_8reaction_CustomReaction->tp_base = __pyx_ptype_7cantera_8reaction_Reaction;
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction_CustomReaction) < 0) __PYX_ERR(0, 1917, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction_CustomReaction->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction_CustomReaction->tp_dictoffset && __pyx_ptype_7cantera_8reaction_CustomReaction->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction_CustomReaction->tp_getattro = __Pyx_PyObject_GenericGetAttr;
  }
  #endif
  if (__Pyx_SetVtable(__pyx_ptype_7cantera_8reaction_CustomReaction, __pyx_vtabptr_7cantera_8reaction_CustomReaction) < 0) __PYX_ERR(0, 1917, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_MergeVtables(__pyx_ptype_7cantera_8reaction_CustomReaction) < 0) __PYX_ERR(0, 1917, __pyx_L1_error)
  #endif
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s_CustomReaction, (PyObject *) __pyx_ptype_7cantera_8reaction_CustomReaction) < 0) __PYX_ERR(0, 1917, __pyx_L1_error)
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if (__Pyx_setup_reduce((PyObject *) __pyx_ptype_7cantera_8reaction_CustomReaction) < 0) __PYX_ERR(0, 1917, __pyx_L1_error)
  #endif
  #if CYTHON_USE_TYPE_SPECS
  __pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap = (PyTypeObject *) __Pyx_PyType_FromModuleAndSpec(__pyx_m, &__pyx_type_7cantera_8reaction___pyx_scope_struct__wrap_spec, NULL); if (unlikely(!__pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap)) __PYX_ERR(0, 48, __pyx_L1_error)
  if (__Pyx_fix_up_extension_type_from_spec(&__pyx_type_7cantera_8reaction___pyx_scope_struct__wrap_spec, __pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap) < 0) __PYX_ERR(0, 48, __pyx_L1_error)
  #else
  __pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap = &__pyx_type_7cantera_8reaction___pyx_scope_struct__wrap;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  #endif
  #if !CYTHON_USE_TYPE_SPECS
  if (__Pyx_PyType_Ready(__pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap) < 0) __PYX_ERR(0, 48, __pyx_L1_error)
  #endif
  #if PY_MAJOR_VERSION < 3
  __pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap->tp_print = 0;
  #endif
  #if !CYTHON_COMPILING_IN_LIMITED_API
  if ((CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP) && likely(!__pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap->tp_dictoffset && __pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap->tp_getattro == PyObject_GenericGetAttr)) {
    __pyx_ptype_7cantera_8reaction___pyx_scope_struct__wrap->tp_getattro = __Pyx_PyObject_GenericGetAttrNoDict;
  }
  #endif
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_type_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_type_import_code", 0);
  /*--- Type import code ---*/
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(5, 9, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType_3_0_0(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "type", 
  #if defined(PYPY_VERSION_NUM) && PYPY_VERSION_NUM < 0x050B0000
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyTypeObject),
  #elif CYTHON_COMPILING_IN_LIMITED_API
  sizeof(PyTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyHeapTypeObject),
  #endif
  __Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cpython_4type_type) __PYX_ERR(5, 9, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(6, 8, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_4bool_bool = __Pyx_ImportType_3_0_0(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "bool", sizeof(PyBoolObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyBoolObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cpython_4bool_bool) __PYX_ERR(6, 8, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_t_1)) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cpython_7complex_complex = __Pyx_ImportType_3_0_0(__pyx_t_1, __Pyx_BUILTIN_MODULE_NAME, "complex", sizeof(PyComplexObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyComplexObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cpython_7complex_complex) __PYX_ERR(7, 15, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("numpy"); if (unlikely(!__pyx_t_1)) __PYX_ERR(3, 203, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "dtype", sizeof(PyArray_Descr), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyArray_Descr),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_dtype) __PYX_ERR(3, 203, __pyx_L1_error)
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "flatiter", sizeof(PyArrayIterObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyArrayIterObject),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_flatiter) __PYX_ERR(3, 226, __pyx_L1_error)
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "broadcast", sizeof(PyArrayMultiIterObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyArrayMultiIterObject),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_broadcast) __PYX_ERR(3, 230, __pyx_L1_error)
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "ndarray", sizeof(PyArrayObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyArrayObject),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_ndarray) __PYX_ERR(3, 239, __pyx_L1_error)
  __pyx_ptype_5numpy_generic = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "generic", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_generic) __PYX_ERR(3, 813, __pyx_L1_error)
  __pyx_ptype_5numpy_number = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "number", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_number) __PYX_ERR(3, 815, __pyx_L1_error)
  __pyx_ptype_5numpy_integer = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "integer", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_integer) __PYX_ERR(3, 817, __pyx_L1_error)
  __pyx_ptype_5numpy_signedinteger = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "signedinteger", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_signedinteger) __PYX_ERR(3, 819, __pyx_L1_error)
  __pyx_ptype_5numpy_unsignedinteger = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "unsignedinteger", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_unsignedinteger) __PYX_ERR(3, 821, __pyx_L1_error)
  __pyx_ptype_5numpy_inexact = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "inexact", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_inexact) __PYX_ERR(3, 823, __pyx_L1_error)
  __pyx_ptype_5numpy_floating = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "floating", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_floating) __PYX_ERR(3, 825, __pyx_L1_error)
  __pyx_ptype_5numpy_complexfloating = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "complexfloating", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_complexfloating) __PYX_ERR(3, 827, __pyx_L1_error)
  __pyx_ptype_5numpy_flexible = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "flexible", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_flexible) __PYX_ERR(3, 829, __pyx_L1_error)
  __pyx_ptype_5numpy_character = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "character", sizeof(PyObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyObject),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_5numpy_character) __PYX_ERR(3, 831, __pyx_L1_error)
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType_3_0_0(__pyx_t_1, "numpy", "ufunc", sizeof(PyUFuncObject), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(PyUFuncObject),__Pyx_ImportType_CheckSize_Ignore_3_0_0); if (!__pyx_ptype_5numpy_ufunc) __PYX_ERR(3, 869, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera.func1"); if (unlikely(!__pyx_t_1)) __PYX_ERR(8, 46, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_5func1_Func1 = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.func1", "Func1", sizeof(struct __pyx_obj_7cantera_5func1_Func1), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_5func1_Func1),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_5func1_Func1) __PYX_ERR(8, 46, __pyx_L1_error)
  __pyx_vtabptr_7cantera_5func1_Func1 = (struct __pyx_vtabstruct_7cantera_5func1_Func1*)__Pyx_GetVtable(__pyx_ptype_7cantera_5func1_Func1); if (unlikely(!__pyx_vtabptr_7cantera_5func1_Func1)) __PYX_ERR(8, 46, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera.units"); if (unlikely(!__pyx_t_1)) __PYX_ERR(9, 42, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_5units_Units = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.units", "Units", sizeof(struct __pyx_obj_7cantera_5units_Units), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_5units_Units),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_5units_Units) __PYX_ERR(9, 42, __pyx_L1_error)
  __pyx_vtabptr_7cantera_5units_Units = (struct __pyx_vtabstruct_7cantera_5units_Units*)__Pyx_GetVtable(__pyx_ptype_7cantera_5units_Units); if (unlikely(!__pyx_vtabptr_7cantera_5units_Units)) __PYX_ERR(9, 42, __pyx_L1_error)
  __pyx_ptype_7cantera_5units_UnitStack = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.units", "UnitStack", sizeof(struct __pyx_obj_7cantera_5units_UnitStack), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_5units_UnitStack),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_5units_UnitStack) __PYX_ERR(9, 47, __pyx_L1_error)
  __pyx_vtabptr_7cantera_5units_UnitStack = (struct __pyx_vtabstruct_7cantera_5units_UnitStack*)__Pyx_GetVtable(__pyx_ptype_7cantera_5units_UnitStack); if (unlikely(!__pyx_vtabptr_7cantera_5units_UnitStack)) __PYX_ERR(9, 47, __pyx_L1_error)
  __pyx_ptype_7cantera_5units_UnitSystem = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.units", "UnitSystem", sizeof(struct __pyx_obj_7cantera_5units_UnitSystem), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_5units_UnitSystem),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_5units_UnitSystem) __PYX_ERR(9, 53, __pyx_L1_error)
  __pyx_vtabptr_7cantera_5units_UnitSystem = (struct __pyx_vtabstruct_7cantera_5units_UnitSystem*)__Pyx_GetVtable(__pyx_ptype_7cantera_5units_UnitSystem); if (unlikely(!__pyx_vtabptr_7cantera_5units_UnitSystem)) __PYX_ERR(9, 53, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera.solutionbase"); if (unlikely(!__pyx_t_1)) __PYX_ERR(10, 108, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_12solutionbase__SolutionBase = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.solutionbase", "_SolutionBase", sizeof(struct __pyx_obj_7cantera_12solutionbase__SolutionBase), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_12solutionbase__SolutionBase),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_12solutionbase__SolutionBase) __PYX_ERR(10, 108, __pyx_L1_error)
  __pyx_ptype_7cantera_12solutionbase_SolutionArrayBase = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.solutionbase", "SolutionArrayBase", sizeof(struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_12solutionbase_SolutionArrayBase),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_12solutionbase_SolutionArrayBase) __PYX_ERR(10, 122, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera.kinetics"); if (unlikely(!__pyx_t_1)) __PYX_ERR(11, 143, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_8kinetics_Kinetics = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.kinetics", "Kinetics", sizeof(struct __pyx_obj_7cantera_8kinetics_Kinetics), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_8kinetics_Kinetics),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_8kinetics_Kinetics) __PYX_ERR(11, 143, __pyx_L1_error)
  __pyx_ptype_7cantera_8kinetics_InterfaceKinetics = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera.kinetics", "InterfaceKinetics", sizeof(struct __pyx_obj_7cantera_8kinetics_InterfaceKinetics), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_8kinetics_InterfaceKinetics),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_8kinetics_InterfaceKinetics) __PYX_ERR(11, 146, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera._utils"); if (unlikely(!__pyx_t_1)) __PYX_ERR(12, 96, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_ptype_7cantera_6_utils_AnyMap = __Pyx_ImportType_3_0_0(__pyx_t_1, "cantera._utils", "AnyMap", sizeof(struct __pyx_obj_7cantera_6_utils_AnyMap), __PYX_GET_STRUCT_ALIGNMENT_3_0_0(struct __pyx_obj_7cantera_6_utils_AnyMap),__Pyx_ImportType_CheckSize_Warn_3_0_0); if (!__pyx_ptype_7cantera_6_utils_AnyMap) __PYX_ERR(12, 96, __pyx_L1_error)
  __pyx_vtabptr_7cantera_6_utils_AnyMap = (struct __pyx_vtabstruct_7cantera_6_utils_AnyMap*)__Pyx_GetVtable(__pyx_ptype_7cantera_6_utils_AnyMap); if (unlikely(!__pyx_vtabptr_7cantera_6_utils_AnyMap)) __PYX_ERR(12, 96, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_modinit_variable_import_code(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_modinit_variable_import_code", 0);
  /*--- Variable import code ---*/
  __Pyx_RefNannyFinishContext();
  return 0;
}

static int __Pyx_modinit_function_import_code(void) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannySetupContext("__Pyx_modinit_function_import_code", 0);
  /*--- Function import code ---*/
  __pyx_t_1 = PyImport_ImportModule("cantera.delegator"); if (!__pyx_t_1) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "assign_delegates", (void (**)(void))&__pyx_f_7cantera_9delegator_assign_delegates, "int (PyObject *, Cantera::Delegator *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyImport_ImportModule("cantera._utils"); if (!__pyx_t_1) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_1);
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "stringify", (void (**)(void))&__pyx_f_7cantera_6_utils_stringify, "std::string (PyObject *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "pystr", (void (**)(void))&__pyx_f_7cantera_6_utils_pystr, "PyObject *(std::string)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "comp_map_to_dict", (void (**)(void))&__pyx_f_7cantera_6_utils_comp_map_to_dict, "PyObject *(__pyx_t_7cantera_5ctcxx_Composition)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "comp_map", (void (**)(void))&__pyx_f_7cantera_6_utils_comp_map, "__pyx_t_7cantera_5ctcxx_Composition (PyObject *)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "py_to_anymap", (void (**)(void))&__pyx_f_7cantera_6_utils_py_to_anymap, "Cantera::AnyMap (PyObject *, struct __pyx_opt_args_7cantera_6_utils_py_to_anymap *__pyx_optional_args)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  if (__Pyx_ImportFunction_3_0_0(__pyx_t_1, "anymap_to_py", (void (**)(void))&__pyx_f_7cantera_6_utils_anymap_to_py, "PyObject *(Cantera::AnyMap &)") < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_RefNannyFinishContext();
  return -1;
}


#if PY_MAJOR_VERSION >= 3
#if CYTHON_PEP489_MULTI_PHASE_INIT
static PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def); /*proto*/
static int __pyx_pymod_exec_reaction(PyObject* module); /*proto*/
static PyModuleDef_Slot __pyx_moduledef_slots[] = {
  {Py_mod_create, (void*)__pyx_pymod_create},
  {Py_mod_exec, (void*)__pyx_pymod_exec_reaction},
  {0, NULL}
};
#endif

#ifdef __cplusplus
namespace {
  struct PyModuleDef __pyx_moduledef =
  #else
  static struct PyModuleDef __pyx_moduledef =
  #endif
  {
      PyModuleDef_HEAD_INIT,
      "reaction",
      0, /* m_doc */
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      0, /* m_size */
    #elif CYTHON_USE_MODULE_STATE
      sizeof(__pyx_mstate), /* m_size */
    #else
      -1, /* m_size */
    #endif
      __pyx_methods /* m_methods */,
    #if CYTHON_PEP489_MULTI_PHASE_INIT
      __pyx_moduledef_slots, /* m_slots */
    #else
      NULL, /* m_reload */
    #endif
    #if CYTHON_USE_MODULE_STATE
      __pyx_m_traverse, /* m_traverse */
      __pyx_m_clear, /* m_clear */
      NULL /* m_free */
    #else
      NULL, /* m_traverse */
      NULL, /* m_clear */
      NULL /* m_free */
    #endif
  };
  #ifdef __cplusplus
} /* anonymous namespace */
#endif
#endif

#ifndef CYTHON_NO_PYINIT_EXPORT
#define __Pyx_PyMODINIT_FUNC PyMODINIT_FUNC
#elif PY_MAJOR_VERSION < 3
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" void
#else
#define __Pyx_PyMODINIT_FUNC void
#endif
#else
#ifdef __cplusplus
#define __Pyx_PyMODINIT_FUNC extern "C" PyObject *
#else
#define __Pyx_PyMODINIT_FUNC PyObject *
#endif
#endif


#if PY_MAJOR_VERSION < 3
__Pyx_PyMODINIT_FUNC initreaction(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC initreaction(void)
#else
__Pyx_PyMODINIT_FUNC PyInit_reaction(void) CYTHON_SMALL_CODE; /*proto*/
__Pyx_PyMODINIT_FUNC PyInit_reaction(void)
#if CYTHON_PEP489_MULTI_PHASE_INIT
{
  return PyModuleDef_Init(&__pyx_moduledef);
}
static CYTHON_SMALL_CODE int __Pyx_check_single_interpreter(void) {
    #if PY_VERSION_HEX >= 0x030700A1
    static PY_INT64_T main_interpreter_id = -1;
    PY_INT64_T current_id = PyInterpreterState_GetID(PyThreadState_Get()->interp);
    if (main_interpreter_id == -1) {
        main_interpreter_id = current_id;
        return (unlikely(current_id == -1)) ? -1 : 0;
    } else if (unlikely(main_interpreter_id != current_id))
    #else
    static PyInterpreterState *main_interpreter = NULL;
    PyInterpreterState *current_interpreter = PyThreadState_Get()->interp;
    if (!main_interpreter) {
        main_interpreter = current_interpreter;
    } else if (unlikely(main_interpreter != current_interpreter))
    #endif
    {
        PyErr_SetString(
            PyExc_ImportError,
            "Interpreter change detected - this module can only be loaded into one interpreter per process.");
        return -1;
    }
    return 0;
}
#if CYTHON_COMPILING_IN_LIMITED_API
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *module, const char* from_name, const char* to_name, int allow_none)
#else
static CYTHON_SMALL_CODE int __Pyx_copy_spec_to_module(PyObject *spec, PyObject *moddict, const char* from_name, const char* to_name, int allow_none)
#endif
{
    PyObject *value = PyObject_GetAttrString(spec, from_name);
    int result = 0;
    if (likely(value)) {
        if (allow_none || value != Py_None) {
#if CYTHON_COMPILING_IN_LIMITED_API
            result = PyModule_AddObject(module, to_name, value);
#else
            result = PyDict_SetItemString(moddict, to_name, value);
#endif
        }
        Py_DECREF(value);
    } else if (PyErr_ExceptionMatches(PyExc_AttributeError)) {
        PyErr_Clear();
    } else {
        result = -1;
    }
    return result;
}
static CYTHON_SMALL_CODE PyObject* __pyx_pymod_create(PyObject *spec, PyModuleDef *def) {
    PyObject *module = NULL, *moddict, *modname;
    CYTHON_UNUSED_VAR(def);
    if (__Pyx_check_single_interpreter())
        return NULL;
    if (__pyx_m)
        return __Pyx_NewRef(__pyx_m);
    modname = PyObject_GetAttrString(spec, "name");
    if (unlikely(!modname)) goto bad;
    module = PyModule_NewObject(modname);
    Py_DECREF(modname);
    if (unlikely(!module)) goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    moddict = module;
#else
    moddict = PyModule_GetDict(module);
    if (unlikely(!moddict)) goto bad;
#endif
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "loader", "__loader__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "origin", "__file__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "parent", "__package__", 1) < 0)) goto bad;
    if (unlikely(__Pyx_copy_spec_to_module(spec, moddict, "submodule_search_locations", "__path__", 0) < 0)) goto bad;
    return module;
bad:
    Py_XDECREF(module);
    return NULL;
}


static CYTHON_SMALL_CODE int __pyx_pymod_exec_reaction(PyObject *__pyx_pyinit_module)
#endif
#endif
{
  int stringtab_initialized = 0;
  #if CYTHON_USE_MODULE_STATE
  int pystate_addmodule_run = 0;
  #endif
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_RefNannyDeclarations
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  if (__pyx_m) {
    if (__pyx_m == __pyx_pyinit_module) return 0;
    PyErr_SetString(PyExc_RuntimeError, "Module 'reaction' has already been imported. Re-initialisation is not supported.");
    return -1;
  }
  #elif PY_MAJOR_VERSION >= 3
  if (__pyx_m) return __Pyx_NewRef(__pyx_m);
  #endif
  /*--- Module creation code ---*/
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  __pyx_m = __pyx_pyinit_module;
  Py_INCREF(__pyx_m);
  #else
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4("reaction", __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #elif CYTHON_USE_MODULE_STATE
  __pyx_t_1 = PyModule_Create(&__pyx_moduledef); if (unlikely(!__pyx_t_1)) __PYX_ERR(0, 1, __pyx_L1_error)
  {
    int add_module_result = PyState_AddModule(__pyx_t_1, &__pyx_moduledef);
    __pyx_t_1 = 0; /* transfer ownership from __pyx_t_1 to reaction pseudovariable */
    if (unlikely((add_module_result < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    pystate_addmodule_run = 1;
  }
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  if (unlikely(!__pyx_m)) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #endif
  CYTHON_UNUSED_VAR(__pyx_t_1);
  __pyx_d = PyModule_GetDict(__pyx_m); if (unlikely(!__pyx_d)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_d);
  __pyx_b = PyImport_AddModule(__Pyx_BUILTIN_MODULE_NAME); if (unlikely(!__pyx_b)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_b);
  __pyx_cython_runtime = PyImport_AddModule((char *) "cython_runtime"); if (unlikely(!__pyx_cython_runtime)) __PYX_ERR(0, 1, __pyx_L1_error)
  Py_INCREF(__pyx_cython_runtime);
  if (PyObject_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if CYTHON_REFNANNY
__Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
if (!__Pyx_RefNanny) {
  PyErr_Clear();
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
  if (!__Pyx_RefNanny)
      Py_FatalError("failed to import 'refnanny' module");
}
#endif
  __Pyx_RefNannySetupContext("__Pyx_PyMODINIT_FUNC PyInit_reaction(void)", 0);
  if (__Pyx_check_binary_version() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pxy_PyFrame_Initialize_Offsets
  __Pxy_PyFrame_Initialize_Offsets();
  #endif
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) __PYX_ERR(0, 1, __pyx_L1_error)
  __pyx_empty_unicode = PyUnicode_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_unicode)) __PYX_ERR(0, 1, __pyx_L1_error)
  #ifdef __Pyx_CyFunction_USED
  if (__pyx_CyFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Coroutine_USED
  if (__pyx_Coroutine_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_AsyncGen_USED
  if (__pyx_AsyncGen_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  #ifdef __Pyx_StopAsyncIteration_USED
  if (__pyx_StopAsyncIteration_init(__pyx_m) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(WITH_THREAD) && PY_VERSION_HEX < 0x030700F0 && defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  PyEval_InitThreads();
  #endif
  /*--- Initialize various global constants etc. ---*/
  if (__Pyx_InitConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  stringtab_initialized = 1;
  if (__Pyx_InitGlobals() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #if PY_MAJOR_VERSION < 3 && (__PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT)
  if (__Pyx_init_sys_getdefaultencoding_params() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif
  if (__pyx_module_is_main_cantera__reaction) {
    if (PyObject_SetAttr(__pyx_m, __pyx_n_s_name, __pyx_n_s_main) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  }
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) __PYX_ERR(0, 1, __pyx_L1_error)
    if (!PyDict_GetItemString(modules, "cantera.reaction")) {
      if (unlikely((PyDict_SetItemString(modules, "cantera.reaction", __pyx_m) < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
    }
  }
  #endif
  /*--- Builtin init code ---*/
  if (__Pyx_InitCachedBuiltins() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Constants init code ---*/
  if (__Pyx_InitCachedConstants() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Global type/function init code ---*/
  (void)__Pyx_modinit_global_init_code();
  (void)__Pyx_modinit_variable_export_code();
  (void)__Pyx_modinit_function_export_code();
  if (unlikely((__Pyx_modinit_type_init_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  if (unlikely((__Pyx_modinit_type_import_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  (void)__Pyx_modinit_variable_import_code();
  if (unlikely((__Pyx_modinit_function_import_code() < 0))) __PYX_ERR(0, 1, __pyx_L1_error)
  /*--- Execution code ---*/
  #if defined(__Pyx_Generator_USED) || defined(__Pyx_Coroutine_USED)
  if (__Pyx_patch_abc() < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  #endif

  /* "cantera/reaction.pyx":5
 * 
 * cimport numpy as np
 * import numpy as np             # <<<<<<<<<<<<<<
 * import warnings
 * from cython.operator cimport dereference as deref
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_numpy, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_np, __pyx_t_2) < 0) __PYX_ERR(0, 5, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":6
 * cimport numpy as np
 * import numpy as np
 * import warnings             # <<<<<<<<<<<<<<
 * from cython.operator cimport dereference as deref
 * 
 */
  __pyx_t_2 = __Pyx_ImportDottedModule(__pyx_n_s_warnings, NULL); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_warnings, __pyx_t_2) < 0) __PYX_ERR(0, 6, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "cantera/reaction.pyx":11
 * from .kinetics cimport Kinetics
 * from ._utils cimport *
 * from ._utils import CanteraError             # <<<<<<<<<<<<<<
 * from .units cimport *
 * from .delegator cimport *
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_n_s_CanteraError);
  __Pyx_GIVEREF(__pyx_n_s_CanteraError);
  PyList_SET_ITEM(__pyx_t_2, 0, __pyx_n_s_CanteraError);
  __pyx_t_3 = __Pyx_Import(__pyx_n_s_utils, __pyx_t_2, 1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = __Pyx_ImportFrom(__pyx_t_3, __pyx_n_s_CanteraError); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_CanteraError, __pyx_t_2) < 0) __PYX_ERR(0, 11, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":16
 * 
 * # dictionary to store reaction rate classes
 * cdef dict _reaction_rate_class_registry = {}             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_XGOTREF(__pyx_v_7cantera_8reaction__reaction_rate_class_registry);
  __Pyx_DECREF_SET(__pyx_v_7cantera_8reaction__reaction_rate_class_registry, ((PyObject*)__pyx_t_3));
  __Pyx_GIVEREF(__pyx_t_3);
  __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":26
 *     with a Reaction object.
 *     """
 *     _reaction_rate_type = ""             # <<<<<<<<<<<<<<
 * 
 *     def __repr__(self):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_kp_u__7) < 0) __PYX_ERR(0, 26, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ReactionRate);

  /* "cantera/reaction.pyx":94
 *         self.rate = self._rate.get()
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, hyphenize=True):
 *         """
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_12ReactionRate_5from_dict, __Pyx_CYFUNCTION_CLASSMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ReactionRate_from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__35)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__36);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate->tp_dict, __pyx_n_s_from_dict_2, __pyx_t_3) < 0) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ReactionRate);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate, __pyx_n_s_from_dict_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate->tp_dict, __pyx_n_s_from_dict_2, __pyx_t_2) < 0) __PYX_ERR(0, 94, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ReactionRate);

  /* "cantera/reaction.pyx":117
 *         return ReactionRate.wrap(cxx_rate)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_yaml(cls, text):
 *         """
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_12ReactionRate_7from_yaml, __Pyx_CYFUNCTION_CLASSMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ReactionRate_from_yaml, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__38)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate->tp_dict, __pyx_n_s_from_yaml, __pyx_t_2) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ReactionRate);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate, __pyx_n_s_from_yaml); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ReactionRate->tp_dict, __pyx_n_s_from_yaml, __pyx_t_3) < 0) __PYX_ERR(0, 117, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ReactionRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_12ReactionRate_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ReactionRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__40)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.rate cannot be converted to a Python object for pickling"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_12ReactionRate_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ReactionRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__42)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":165
 *     `BlowersMaselRate` and `TwoTempPlasmaRate`.
 *     """
 *     _reaction_rate_type = None             # <<<<<<<<<<<<<<
 * 
 *     def _cinit(self, input_data, **kwargs):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRateBase->tp_dict, __pyx_n_s_reaction_rate_type, Py_None) < 0) __PYX_ERR(0, 165, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ArrheniusRateBase);

  /* "cantera/reaction.pyx":167
 *     _reaction_rate_type = None
 * 
 *     def _cinit(self, input_data, **kwargs):             # <<<<<<<<<<<<<<
 *         """
 *         Helper function called by __cinit__. The method is used as a uniform interface
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17ArrheniusRateBase_1_cinit, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ArrheniusRateBase__cinit, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__44)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRateBase->tp_dict, __pyx_n_s_cinit, __pyx_t_3) < 0) __PYX_ERR(0, 167, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ArrheniusRateBase);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17ArrheniusRateBase_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ArrheniusRateBase___reduce_cytho, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__45)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.rate cannot be converted to a Python object for pickling"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17ArrheniusRateBase_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ArrheniusRateBase___setstate_cyt, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__46)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":241
 *     `activation_energy <ArrheniusRateBase.activation_energy>`.
 *     """
 *     _reaction_rate_type = "Arrhenius"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_n_u_Arrhenius) < 0) __PYX_ERR(0, 241, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ArrheniusRate);

  /* "cantera/reaction.pyx":248
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxArrheniusRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13ArrheniusRate_3_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ArrheniusRate__from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__48)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 248, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ArrheniusRate);

  /* "cantera/reaction.pyx":251
 *         self._rate.reset(new CxxArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxArrheniusRate(A, b, Ea))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13ArrheniusRate_5_from_parameters, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ArrheniusRate__from_parameters, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__50)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ArrheniusRate->tp_dict, __pyx_n_s_from_parameters, __pyx_t_3) < 0) __PYX_ERR(0, 251, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ArrheniusRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13ArrheniusRate_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ArrheniusRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__51)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13ArrheniusRate_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ArrheniusRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__52)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":268
 *     described in `ArrheniusRate`.
 *     """
 *     _reaction_rate_type = "Blowers-Masel"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_BlowersMaselRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_kp_u_Blowers_Masel) < 0) __PYX_ERR(0, 268, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_BlowersMaselRate);

  /* "cantera/reaction.pyx":275
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_16BlowersMaselRate_3_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_BlowersMaselRate__from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__53)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 275, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_BlowersMaselRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 275, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_BlowersMaselRate);

  /* "cantera/reaction.pyx":278
 *         self._rate.reset(new CxxBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxBlowersMaselRate(A, b, Ea0, w))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_16BlowersMaselRate_5_from_parameters, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_BlowersMaselRate__from_parameter, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__55)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 278, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_BlowersMaselRate->tp_dict, __pyx_n_s_from_parameters, __pyx_t_3) < 0) __PYX_ERR(0, 278, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_BlowersMaselRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_16BlowersMaselRate_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_BlowersMaselRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__56)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_16BlowersMaselRate_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_BlowersMaselRate___setstate_cyth, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__57)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":334
 *     :math:`E_{a,e}` (``Ea_electron``) is the `activation_electron_energy`.
 *     """
 *     _reaction_rate_type = "two-temperature-plasma"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, A=None, b=None, Ea_gas=0.0, Ea_electron=0.0,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_kp_u_two_temperature_plasma) < 0) __PYX_ERR(0, 334, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate);

  /* "cantera/reaction.pyx":350
 *         return self.rate.eval(temperature, elec_temp)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTwoTempPlasmaRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17TwoTempPlasmaRate_5_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TwoTempPlasmaRate__from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__58)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 350, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate);

  /* "cantera/reaction.pyx":355
 *         )
 * 
 *     def _from_parameters(self, A, b, Ea_gas, Ea_electron):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxTwoTempPlasmaRate(A, b, Ea_gas, Ea_electron))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17TwoTempPlasmaRate_7_from_parameters, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TwoTempPlasmaRate__from_paramete, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__60)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate->tp_dict, __pyx_n_s_from_parameters, __pyx_t_3) < 0) __PYX_ERR(0, 355, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_TwoTempPlasmaRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17TwoTempPlasmaRate_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TwoTempPlasmaRate___reduce_cytho, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__61)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17TwoTempPlasmaRate_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TwoTempPlasmaRate___setstate_cyt, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__62)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":381
 *     """
 * 
 *     _reaction_rate_type = None             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, low=None, high=None, falloff_coeffs=None, input_data=None, init=True):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_FalloffRate->tp_dict, __pyx_n_s_reaction_rate_type, Py_None) < 0) __PYX_ERR(0, 381, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_FalloffRate);

  /* "cantera/reaction.pyx":461
 *             self.falloff.setChemicallyActivated(activated)
 * 
 *     def falloff_function(self, double temperature, double conc3b):             # <<<<<<<<<<<<<<
 *         """
 *         Evaluate the falloff function based on temperature and third-body
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_11FalloffRate_5falloff_function, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FalloffRate_falloff_function, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__64)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_FalloffRate->tp_dict, __pyx_n_s_falloff_function, __pyx_t_3) < 0) __PYX_ERR(0, 461, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_FalloffRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_11FalloffRate_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FalloffRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__65)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_11FalloffRate_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FalloffRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__66)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":475
 *     This class implements the simple falloff function :math:`F(T,P_r) = 1.0`.
 *     """
 *     _reaction_rate_type = "Lindemann"             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_LindemannRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_n_u_Lindemann) < 0) __PYX_ERR(0, 475, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_LindemannRate);

  /* "cantera/reaction.pyx":477
 *     _reaction_rate_type = "Lindemann"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxLindemannRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13LindemannRate_1_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LindemannRate__from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__67)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_LindemannRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 477, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_LindemannRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13LindemannRate_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LindemannRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__68)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13LindemannRate_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_LindemannRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__69)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":495
 *         the final parameter is optional (with a default value of 0).
 *     """
 *     _reaction_rate_type = "Troe"             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_TroeRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_n_u_Troe) < 0) __PYX_ERR(0, 495, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_TroeRate);

  /* "cantera/reaction.pyx":497
 *     _reaction_rate_type = "Troe"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTroeRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8TroeRate_1_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TroeRate__from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__70)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_TroeRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 497, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_TroeRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8TroeRate_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TroeRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__71)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8TroeRate_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TroeRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__72)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":515
 *         two parameters are optional (with default values of 1 and 0, respectively).
 *     """
 *     _reaction_rate_type = "SRI"             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_SriRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_n_u_SRI) < 0) __PYX_ERR(0, 515, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_SriRate);

  /* "cantera/reaction.pyx":517
 *     _reaction_rate_type = "SRI"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxSriRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_7SriRate_1_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_SriRate__from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__73)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 517, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_SriRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 517, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_SriRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_7SriRate_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_SriRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__74)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_7SriRate_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_SriRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__75)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":531
 *     The Tsang falloff parameterization.
 *     """
 *     _reaction_rate_type = "Tsang"             # <<<<<<<<<<<<<<
 * 
 *     def _from_dict(self, input_data):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_TsangRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_n_u_Tsang) < 0) __PYX_ERR(0, 531, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_TsangRate);

  /* "cantera/reaction.pyx":533
 *     _reaction_rate_type = "Tsang"
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(
 *             new CxxTsangRate(py_to_anymap(input_data, hyphenize=True))
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_9TsangRate_1_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TsangRate__from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__76)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_TsangRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 533, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_TsangRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_9TsangRate_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TsangRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__77)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_9TsangRate_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_TsangRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__78)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":548
 *     interpolating between Arrhenius rate expressions at various pressures.
 *     """
 *     _reaction_rate_type = "pressure-dependent-Arrhenius"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, rates=None, input_data=None, init=True):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_PlogRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_kp_u_pressure_dependent_Arrhenius) < 0) __PYX_ERR(0, 548, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_PlogRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8PlogRate_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PlogRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__79)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8PlogRate_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_PlogRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__80)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":607
 *     polynomial in temperature and pressure.
 *     """
 *     _reaction_rate_type = "Chebyshev"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, temperature_range=None, pressure_range=None, data=None,
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ChebyshevRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_n_u_Chebyshev) < 0) __PYX_ERR(0, 607, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ChebyshevRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13ChebyshevRate_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChebyshevRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__81)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13ChebyshevRate_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChebyshevRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__82)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":707
 *         may be changed or removed without notice.
 *     """
 *     _reaction_rate_type = "custom-rate-function"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, k=None, init=True):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_CustomRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_kp_u_custom_rate_function) < 0) __PYX_ERR(0, 707, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_CustomRate);

  /* "cantera/reaction.pyx":723
 *         return <CxxCustomFunc1Rate*>self.rate
 * 
 *     def set_rate_function(self, k):             # <<<<<<<<<<<<<<
 *         r"""
 *         Set the function describing a custom reaction rate::
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_10CustomRate_3set_rate_function, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CustomRate_set_rate_function, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__84)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 723, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_CustomRate->tp_dict, __pyx_n_s_set_rate_function, __pyx_t_3) < 0) __PYX_ERR(0, 723, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_CustomRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_10CustomRate_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CustomRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__85)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_10CustomRate_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CustomRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__86)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":761
 *     """
 * 
 *     _reaction_rate_type = "extensible"             # <<<<<<<<<<<<<<
 * 
 *     delegatable_methods = {
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_n_u_extensible) < 0) __PYX_ERR(0, 761, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRate);

  /* "cantera/reaction.pyx":764
 * 
 *     delegatable_methods = {
 *         "eval": ("evalFromStruct", "double(void*)", "replace"),             # <<<<<<<<<<<<<<
 *         "set_parameters": ("setParameters", "void(AnyMap&, UnitStack&)", "after"),
 *         "get_parameters": ("getParameters", "void(AnyMap&)", "replace"),
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(4); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 764, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_eval_2, __pyx_tuple__87) < 0) __PYX_ERR(0, 764, __pyx_L1_error)

  /* "cantera/reaction.pyx":765
 *     delegatable_methods = {
 *         "eval": ("evalFromStruct", "double(void*)", "replace"),
 *         "set_parameters": ("setParameters", "void(AnyMap&, UnitStack&)", "after"),             # <<<<<<<<<<<<<<
 *         "get_parameters": ("getParameters", "void(AnyMap&)", "replace"),
 *         "validate": ("validate", "void(string, void*)", "replace")
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_set_parameters, __pyx_tuple__88) < 0) __PYX_ERR(0, 764, __pyx_L1_error)

  /* "cantera/reaction.pyx":766
 *         "eval": ("evalFromStruct", "double(void*)", "replace"),
 *         "set_parameters": ("setParameters", "void(AnyMap&, UnitStack&)", "after"),
 *         "get_parameters": ("getParameters", "void(AnyMap&)", "replace"),             # <<<<<<<<<<<<<<
 *         "validate": ("validate", "void(string, void*)", "replace")
 *     }
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_get_parameters_2, __pyx_tuple__89) < 0) __PYX_ERR(0, 764, __pyx_L1_error)

  /* "cantera/reaction.pyx":767
 *         "set_parameters": ("setParameters", "void(AnyMap&, UnitStack&)", "after"),
 *         "get_parameters": ("getParameters", "void(AnyMap&)", "replace"),
 *         "validate": ("validate", "void(string, void*)", "replace")             # <<<<<<<<<<<<<<
 *     }
 * 
 */
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_validate, __pyx_tuple__90) < 0) __PYX_ERR(0, 764, __pyx_L1_error)
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_dict, __pyx_n_s_delegatable_methods, __pyx_t_3) < 0) __PYX_ERR(0, 763, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRate);

  /* "cantera/reaction.pyx":779
 *             self.set_parameters(input_data, UnitStack())
 * 
 *     def set_parameters(self, params: AnyMap, rate_coeff_units: UnitStack) -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for setting rate parameters based on the input data. For example,
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_params, __pyx_n_s_AnyMap) < 0) __PYX_ERR(0, 779, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_rate_coeff_units, __pyx_n_s_UnitStack) < 0) __PYX_ERR(0, 779, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_return, __pyx_n_s_None) < 0) __PYX_ERR(0, 779, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_14ExtensibleRate_5set_parameters, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ExtensibleRate_set_parameters, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__92)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_dict, __pyx_n_s_set_parameters, __pyx_t_2) < 0) __PYX_ERR(0, 779, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRate);

  /* "cantera/reaction.pyx":793
 *         raise NotImplementedError(f"{self.__class__.__name__}.set_parameters")
 * 
 *     def get_parameters(self, params: AnyMap) -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for serializing the state of the ExtensibleRate object, using the
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_params, __pyx_n_s_AnyMap) < 0) __PYX_ERR(0, 793, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_return, __pyx_n_s_None) < 0) __PYX_ERR(0, 793, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_14ExtensibleRate_7get_parameters, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ExtensibleRate_get_parameters, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__94)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 793, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_dict, __pyx_n_s_get_parameters_2, __pyx_t_3) < 0) __PYX_ERR(0, 793, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRate);

  /* "cantera/reaction.pyx":805
 *         raise NotImplementedError(f"{self.__class__.__name__}.get_parameters")
 * 
 *     def eval(self, data: ExtensibleRateData) -> float:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for calculating the forward rate constant based on the current state
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_data, __pyx_n_s_ExtensibleRateData) < 0) __PYX_ERR(0, 805, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_s_return, __pyx_n_s_float) < 0) __PYX_ERR(0, 805, __pyx_L1_error)
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_14ExtensibleRate_9eval, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ExtensibleRate_eval, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__96)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_2, __pyx_t_3);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_dict, __pyx_n_s_eval_2, __pyx_t_2) < 0) __PYX_ERR(0, 805, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRate);

  /* "cantera/reaction.pyx":813
 *         raise NotImplementedError(f"{self.__class__.__name__}.eval")
 * 
 *     def validate(self, equation: str, soln: "Solution") -> None:             # <<<<<<<<<<<<<<
 *         """
 *         Responsible for validating that the rate expression is configured with valid
 */
  __pyx_t_2 = __Pyx_PyDict_NewPresized(3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_equation, __pyx_n_s_str) < 0) __PYX_ERR(0, 813, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_soln, __pyx_kp_s_Solution) < 0) __PYX_ERR(0, 813, __pyx_L1_error)
  if (PyDict_SetItem(__pyx_t_2, __pyx_n_s_return, __pyx_n_s_None) < 0) __PYX_ERR(0, 813, __pyx_L1_error)
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_14ExtensibleRate_11validate, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ExtensibleRate_validate, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__98)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetAnnotationsDict(__pyx_t_3, __pyx_t_2);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRate->tp_dict, __pyx_n_s_validate, __pyx_t_3) < 0) __PYX_ERR(0, 813, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_14ExtensibleRate_13__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ExtensibleRate___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__99)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_14ExtensibleRate_15__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ExtensibleRate___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__100)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":859
 *     """
 *     delegatable_methods = {
 *         "update": ("update", "double(void*)", "replace")             # <<<<<<<<<<<<<<
 *     }
 * 
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(1); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 859, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_t_3, __pyx_n_u_update_2, __pyx_tuple__101) < 0) __PYX_ERR(0, 859, __pyx_L1_error)
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRateData->tp_dict, __pyx_n_s_delegatable_methods, __pyx_t_3) < 0) __PYX_ERR(0, 858, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRateData);

  /* "cantera/reaction.pyx":862
 *     }
 * 
 *     def update(self, soln):             # <<<<<<<<<<<<<<
 *         """
 *         This method takes a `Solution` object and stores any thermodynamic data (for
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_18ExtensibleRateData_1update, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ExtensibleRateData_update, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__103)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 862, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRateData->tp_dict, __pyx_n_s_update_2, __pyx_t_3) < 0) __PYX_ERR(0, 862, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRateData);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     cdef tuple state
 *     cdef object _dict
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_18ExtensibleRateData_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ExtensibleRateData___reduce_cyth, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__105)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRateData->tp_dict, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRateData);

  /* "(tree fragment)":16
 *     else:
 *         return __pyx_unpickle_ExtensibleRateData, (type(self), 0x7c4e57e, state)
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     __pyx_unpickle_ExtensibleRateData__set_state(self, __pyx_state)
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_18ExtensibleRateData_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ExtensibleRateData___setstate_cy, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__106)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ExtensibleRateData->tp_dict, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 16, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ExtensibleRateData);

  /* "cantera/reaction.pyx":916
 *             self.interface.setCoverageDependencies(cxx_deps)
 * 
 *     def set_species(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Set association with an ordered list of all species associated with an
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17InterfaceRateBase_3set_species, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceRateBase_set_species, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__108)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 916, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceRateBase->tp_dict, __pyx_n_s_set_species, __pyx_t_3) < 0) __PYX_ERR(0, 916, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_InterfaceRateBase);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17InterfaceRateBase_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceRateBase___reduce_cytho, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__109)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate cannot be converted to a Python object for pickling"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17InterfaceRateBase_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceRateBase___setstate_cyt, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__110)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":964
 *     A reaction rate coefficient which depends on temperature and interface coverage
 *     """
 *     _reaction_rate_type = "interface-Arrhenius"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_kp_u_interface_Arrhenius) < 0) __PYX_ERR(0, 964, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate);

  /* "cantera/reaction.pyx":971
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceArrheniusRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_22InterfaceArrheniusRate_3_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceArrheniusRate__from_dic, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__111)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 971, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 971, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate);

  /* "cantera/reaction.pyx":974
 *         self._rate.reset(new CxxInterfaceArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceArrheniusRate(A, b, Ea))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_22InterfaceArrheniusRate_5_from_parameters, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceArrheniusRate__from_par, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__112)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 974, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate->tp_dict, __pyx_n_s_from_parameters, __pyx_t_3) < 0) __PYX_ERR(0, 974, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_InterfaceArrheniusRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_22InterfaceArrheniusRate_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceArrheniusRate___reduce, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__113)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_22InterfaceArrheniusRate_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceArrheniusRate___setstat, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__114)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":992
 *     described in `ArrheniusRate`.
 *     """
 *     _reaction_rate_type = "interface-Blowers-Masel"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_kp_u_interface_Blowers_Masel) < 0) __PYX_ERR(0, 992, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate);

  /* "cantera/reaction.pyx":999
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_25InterfaceBlowersMaselRate_3_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceBlowersMaselRate__from, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__115)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 999, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 999, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate);

  /* "cantera/reaction.pyx":1002
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxInterfaceBlowersMaselRate(A, b, Ea0, w))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_25InterfaceBlowersMaselRate_5_from_parameters, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceBlowersMaselRate__from_2, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__116)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate->tp_dict, __pyx_n_s_from_parameters, __pyx_t_3) < 0) __PYX_ERR(0, 1002, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_InterfaceBlowersMaselRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_25InterfaceBlowersMaselRate_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceBlowersMaselRate___redu, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__117)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_25InterfaceBlowersMaselRate_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_InterfaceBlowersMaselRate___sets, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__118)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13StickRateBase_1__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickRateBase___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__119)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "self._rate,self.base,self.interface,self.rate,self.stick cannot be converted to a Python object for pickling"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_13StickRateBase_3__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickRateBase___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__120)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":1108
 *     A surface sticking rate expression based on the Arrhenius parameterization
 *     """
 *     _reaction_rate_type = "sticking-Arrhenius"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, A=None, b=None, Ea=None, input_data=None, init=True):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_StickingArrheniusRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_kp_u_sticking_Arrhenius) < 0) __PYX_ERR(0, 1108, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_StickingArrheniusRate);

  /* "cantera/reaction.pyx":1115
 *             self._cinit(input_data, A=A, b=b, Ea=Ea)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingArrheniusRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_21StickingArrheniusRate_3_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickingArrheniusRate__from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__121)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1115, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_StickingArrheniusRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 1115, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_StickingArrheniusRate);

  /* "cantera/reaction.pyx":1118
 *         self._rate.reset(new CxxStickingArrheniusRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingArrheniusRate(A, b, Ea))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_21StickingArrheniusRate_5_from_parameters, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickingArrheniusRate__from_para, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__122)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1118, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_StickingArrheniusRate->tp_dict, __pyx_n_s_from_parameters, __pyx_t_3) < 0) __PYX_ERR(0, 1118, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_StickingArrheniusRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_21StickingArrheniusRate_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickingArrheniusRate___reduce_c, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__123)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_21StickingArrheniusRate_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickingArrheniusRate___setstate, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__124)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":1135
 *     A surface sticking rate expression based on the Blowers-Masel parameterization
 *     """
 *     _reaction_rate_type = "sticking-Blowers-Masel"             # <<<<<<<<<<<<<<
 * 
 *     def __cinit__(self, A=None, b=None, Ea0=None, w=None, input_data=None, init=True):
 */
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate->tp_dict, __pyx_n_s_reaction_rate_type, __pyx_kp_u_sticking_Blowers_Masel) < 0) __PYX_ERR(0, 1135, __pyx_L1_error)
  PyType_Modified(__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate);

  /* "cantera/reaction.pyx":1142
 *             self._cinit(input_data, A=A, b=b, Ea0=Ea0, w=w)
 * 
 *     def _from_dict(self, input_data):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingBlowersMaselRate(py_to_anymap(input_data)))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_24StickingBlowersMaselRate_3_from_dict, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickingBlowersMaselRate__from_d, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__125)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1142, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate->tp_dict, __pyx_n_s_from_dict, __pyx_t_3) < 0) __PYX_ERR(0, 1142, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate);

  /* "cantera/reaction.pyx":1145
 *         self._rate.reset(new CxxStickingBlowersMaselRate(py_to_anymap(input_data)))
 * 
 *     def _from_parameters(self, A, b, Ea0, w):             # <<<<<<<<<<<<<<
 *         self._rate.reset(new CxxStickingBlowersMaselRate(A, b, Ea0, w))
 * 
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_24StickingBlowersMaselRate_5_from_parameters, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickingBlowersMaselRate__from_p, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__126)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate->tp_dict, __pyx_n_s_from_parameters, __pyx_t_3) < 0) __PYX_ERR(0, 1145, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_StickingBlowersMaselRate);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_24StickingBlowersMaselRate_7__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickingBlowersMaselRate___reduc, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__127)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_24StickingBlowersMaselRate_9__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_StickingBlowersMaselRate___setst, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__128)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":1258
 *             self.third_body.default_efficiency = default_eff
 * 
 *     def efficiency(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Get the efficiency of the third body named ``species`` considering both
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_9ThirdBody_3efficiency, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ThirdBody_efficiency, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__130)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1258, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_ThirdBody->tp_dict, __pyx_n_s_efficiency, __pyx_t_3) < 0) __PYX_ERR(0, 1258, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_ThirdBody);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_9ThirdBody_5__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ThirdBody___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__131)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_9ThirdBody_7__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ThirdBody___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__132)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":1419
 *         return R
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_dict(cls, data, Kinetics kinetics, hyphenize=True):
 *         """
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8Reaction_3from_dict, __Pyx_CYFUNCTION_CLASSMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Reaction_from_dict, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__134)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__36);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_from_dict_2, __pyx_t_3) < 0) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7cantera_8reaction_Reaction, __pyx_n_s_from_dict_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_Method_ClassMethod(__pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_from_dict_2, __pyx_t_2) < 0) __PYX_ERR(0, 1419, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);

  /* "cantera/reaction.pyx":1444
 *         return Reaction.wrap(cxx_reaction)
 * 
 *     @classmethod             # <<<<<<<<<<<<<<
 *     def from_yaml(cls, text, Kinetics kinetics):
 *         """
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8Reaction_5from_yaml, __Pyx_CYFUNCTION_CLASSMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Reaction_from_yaml, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__136)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_from_yaml, __pyx_t_2) < 0) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7cantera_8reaction_Reaction, __pyx_n_s_from_yaml); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_Method_ClassMethod(__pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_from_yaml, __pyx_t_3) < 0) __PYX_ERR(0, 1444, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);

  /* "cantera/reaction.pyx":1468
 *         return Reaction.wrap(cxx_reaction)
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def list_from_file(filename, Kinetics kinetics, section="reactions"):
 *         """
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8Reaction_7list_from_file, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Reaction_list_from_file, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__138)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_CyFunction_SetDefaultsTuple(__pyx_t_3, __pyx_tuple__139);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_list_from_file, __pyx_t_3) < 0) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);
  __Pyx_GetNameInClass(__pyx_t_3, (PyObject *)__pyx_ptype_7cantera_8reaction_Reaction, __pyx_n_s_list_from_file); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_2 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_3); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_list_from_file, __pyx_t_2) < 0) __PYX_ERR(0, 1468, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);

  /* "cantera/reaction.pyx":1482
 *         return [Reaction.wrap(r) for r in cxx_reactions]
 * 
 *     @staticmethod             # <<<<<<<<<<<<<<
 *     def list_from_yaml(text, Kinetics kinetics):
 *         """
 */
  __pyx_t_2 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8Reaction_9list_from_yaml, __Pyx_CYFUNCTION_STATICMETHOD | __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Reaction_list_from_yaml, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__141)); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_list_from_yaml, __pyx_t_2) < 0) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);
  __Pyx_GetNameInClass(__pyx_t_2, (PyObject *)__pyx_ptype_7cantera_8reaction_Reaction, __pyx_n_s_list_from_yaml); if (unlikely(!__pyx_t_2)) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_3 = __Pyx_PyObject_CallOneArg(__pyx_builtin_staticmethod, __pyx_t_2); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_list_from_yaml, __pyx_t_3) < 0) __PYX_ERR(0, 1482, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);

  /* "cantera/reaction.pyx":1655
 *             return anymap_to_py(self.reaction.parameters(True))
 * 
 *     def update_user_data(self, data):             # <<<<<<<<<<<<<<
 *         """
 *         Add the contents of the provided `dict` as additional fields when generating
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8Reaction_13update_user_data, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Reaction_update_user_data, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__142)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1655, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_update_user_data, __pyx_t_3) < 0) __PYX_ERR(0, 1655, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);

  /* "cantera/reaction.pyx":1663
 *         self.reaction.input.update(py_to_anymap(data), False)
 * 
 *     def clear_user_data(self):             # <<<<<<<<<<<<<<
 *         """
 *         Clear all saved input data, so that the data given by `input_data` or
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8Reaction_15clear_user_data, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Reaction_clear_user_data, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__143)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1663, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_clear_user_data, __pyx_t_3) < 0) __PYX_ERR(0, 1663, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);

  /* "cantera/reaction.pyx":1756
 *             self.third_body.default_efficiency = default_eff
 * 
 *     def efficiency(self, species):             # <<<<<<<<<<<<<<
 *         """
 *         Get the efficiency of the third body named ``species`` considering both
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8Reaction_21efficiency, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Reaction_efficiency, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__144)); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1756, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem((PyObject *)__pyx_ptype_7cantera_8reaction_Reaction->tp_dict, __pyx_n_s_efficiency, __pyx_t_3) < 0) __PYX_ERR(0, 1756, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  PyType_Modified(__pyx_ptype_7cantera_8reaction_Reaction);

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8Reaction_23__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Reaction___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__145)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_8Reaction_25__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Reaction___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__146)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_9Arrhenius_9__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Arrhenius___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__147)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_9Arrhenius_11__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_Arrhenius___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__148)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17ThreeBodyReaction_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ThreeBodyReaction___reduce_cytho, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__149)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_17ThreeBodyReaction_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ThreeBodyReaction___setstate_cyt, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__150)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_15FalloffReaction_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FalloffReaction___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__151)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_15FalloffReaction_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_FalloffReaction___setstate_cytho, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__152)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_27ChemicallyActivatedReaction_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChemicallyActivatedReaction___re, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__153)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_27ChemicallyActivatedReaction_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_ChemicallyActivatedReaction___se, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__154)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __reduce_cython__(self):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_14CustomReaction_3__reduce_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CustomReaction___reduce_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__155)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_reduce_cython, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":3
 * def __reduce_cython__(self):
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 * def __setstate_cython__(self, __pyx_state):             # <<<<<<<<<<<<<<
 *     raise TypeError, "no default __reduce__ due to non-trivial __cinit__"
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_14CustomReaction_5__setstate_cython__, __Pyx_CYFUNCTION_CCLASS, __pyx_n_s_CustomReaction___setstate_cython, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__156)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_setstate_cython, __pyx_t_3) < 0) __PYX_ERR(1, 3, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "(tree fragment)":1
 * def __pyx_unpickle_ExtensibleRateData(__pyx_type, long __pyx_checksum, __pyx_state):             # <<<<<<<<<<<<<<
 *     cdef object __pyx_PickleError
 *     cdef object __pyx_result
 */
  __pyx_t_3 = __Pyx_CyFunction_New(&__pyx_mdef_7cantera_8reaction_1__pyx_unpickle_ExtensibleRateData, 0, __pyx_n_s_pyx_unpickle_ExtensibleRateDat, NULL, __pyx_n_s_cantera_reaction, __pyx_d, ((PyObject *)__pyx_codeobj__158)); if (unlikely(!__pyx_t_3)) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_pyx_unpickle_ExtensibleRateDat, __pyx_t_3) < 0) __PYX_ERR(1, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "cantera/reaction.pyx":1
 * # This file is part of Cantera. See License.txt in the top-level directory or             # <<<<<<<<<<<<<<
 * # at https://cantera.org/license.txt for license and copyright information.
 * 
 */
  __pyx_t_3 = __Pyx_PyDict_NewPresized(0); if (unlikely(!__pyx_t_3)) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_GOTREF(__pyx_t_3);
  if (PyDict_SetItem(__pyx_d, __pyx_n_s_test, __pyx_t_3) < 0) __PYX_ERR(0, 1, __pyx_L1_error)
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /*--- Wrapped vars code ---*/

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  if (__pyx_m) {
    if (__pyx_d && stringtab_initialized) {
      __Pyx_AddTraceback("init cantera.reaction", __pyx_clineno, __pyx_lineno, __pyx_filename);
    }
    #if !CYTHON_USE_MODULE_STATE
    Py_CLEAR(__pyx_m);
    #else
    Py_DECREF(__pyx_m);
    if (pystate_addmodule_run) {
      PyObject *tp, *value, *tb;
      PyErr_Fetch(&tp, &value, &tb);
      PyState_RemoveModule(&__pyx_moduledef);
      PyErr_Restore(tp, value, tb);
    }
    #endif
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init cantera.reaction");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if CYTHON_PEP489_MULTI_PHASE_INIT
  return (__pyx_m != NULL) ? 0 : -1;
  #elif PY_MAJOR_VERSION >= 3
  return __pyx_m;
  #else
  return;
  #endif
}
/* #### Code section: cleanup_globals ### */
/* #### Code section: cleanup_module ### */
/* #### Code section: main_method ### */
/* #### Code section: utility_code_pragmas ### */
#ifdef _MSC_VER
#pragma warning( push )
/* Warning 4127: conditional expression is constant
 * Cython uses constant conditional expressions to allow in inline functions to be optimized at
 * compile-time, so this warning is not useful
 */
#pragma warning( disable : 4127 )
#endif



/* #### Code section: utility_code_def ### */

/* --- Runtime support code --- */
/* Refnanny */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule(modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, "RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif

/* PyErrExceptionMatches */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx_PyErr_ExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        if (__Pyx_PyErr_GivenExceptionMatches(exc_type, PyTuple_GET_ITEM(tuple, i))) return 1;
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_ExceptionMatchesInState(PyThreadState* tstate, PyObject* err) {
    int result;
    PyObject *exc_type;
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *current_exception = tstate->current_exception;
    if (unlikely(!current_exception)) return 0;
    exc_type = (PyObject*) Py_TYPE(current_exception);
    if (exc_type == err) return 1;
#else
    exc_type = tstate->curexc_type;
    if (exc_type == err) return 1;
    if (unlikely(!exc_type)) return 0;
#endif
    #if CYTHON_AVOID_BORROWED_REFS
    Py_INCREF(exc_type);
    #endif
    if (unlikely(PyTuple_Check(err))) {
        result = __Pyx_PyErr_ExceptionMatchesTuple(exc_type, err);
    } else {
        result = __Pyx_PyErr_GivenExceptionMatches(exc_type, err);
    }
    #if CYTHON_AVOID_BORROWED_REFS
    Py_DECREF(exc_type);
    #endif
    return result;
}
#endif

/* PyErrFetchRestore */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx_ErrRestoreInState(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject *tmp_value;
    assert(type == NULL || (value != NULL && type == (PyObject*) Py_TYPE(value)));
    if (value) {
        #if CYTHON_COMPILING_IN_CPYTHON
        if (unlikely(((PyBaseExceptionObject*) value)->traceback != tb))
        #endif
            PyException_SetTraceback(value, tb);
    }
    tmp_value = tstate->current_exception;
    tstate->current_exception = value;
    Py_XDECREF(tmp_value);
#else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetchInState(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
#if PY_VERSION_HEX >= 0x030C00A6
    PyObject* exc_value;
    exc_value = tstate->current_exception;
    tstate->current_exception = 0;
    *value = exc_value;
    *type = NULL;
    *tb = NULL;
    if (exc_value) {
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        #if CYTHON_COMPILING_IN_CPYTHON
        *tb = ((PyBaseExceptionObject*) exc_value)->traceback;
        Py_XINCREF(*tb);
        #else
        *tb = PyException_GetTraceback(exc_value);
        #endif
    }
#else
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#endif
}
#endif

/* PyObjectGetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStr(PyObject* obj, PyObject* attr_name) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro))
        return tp->tp_getattro(obj, attr_name);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_getattr))
        return tp->tp_getattr(obj, PyString_AS_STRING(attr_name));
#endif
    return PyObject_GetAttr(obj, attr_name);
}
#endif

/* PyObjectGetAttrStrNoError */
static void __Pyx_PyObject_GetAttrStr_ClearAttributeError(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (likely(__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        __Pyx_PyErr_Clear();
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GetAttrStrNoError(PyObject* obj, PyObject* attr_name) {
    PyObject *result;
#if CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_TYPE_SLOTS && PY_VERSION_HEX >= 0x030700B1
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_getattro == PyObject_GenericGetAttr)) {
        return _PyObject_GenericGetAttrWithDict(obj, attr_name, NULL, 1);
    }
#endif
    result = __Pyx_PyObject_GetAttrStr(obj, attr_name);
    if (unlikely(!result)) {
        __Pyx_PyObject_GetAttrStr_ClearAttributeError();
    }
    return result;
}

/* GetBuiltinName */
static PyObject *__Pyx_GetBuiltinName(PyObject *name) {
    PyObject* result = __Pyx_PyObject_GetAttrStrNoError(__pyx_b, name);
    if (unlikely(!result) && !PyErr_Occurred()) {
        PyErr_Format(PyExc_NameError,
#if PY_MAJOR_VERSION >= 3
            "name '%U' is not defined", name);
#else
            "name '%.200s' is not defined", PyString_AS_STRING(name));
#endif
    }
    return result;
}

/* GetTopmostException */
#if CYTHON_USE_EXC_INFO_STACK && CYTHON_FAST_THREAD_STATE
static _PyErr_StackItem *
__Pyx_PyErr_GetTopmostException(PyThreadState *tstate)
{
    _PyErr_StackItem *exc_info = tstate->exc_info;
    while ((exc_info->exc_value == NULL || exc_info->exc_value == Py_None) &&
           exc_info->previous_item != NULL)
    {
        exc_info = exc_info->previous_item;
    }
    return exc_info;
}
#endif

/* SaveResetException */
#if CYTHON_FAST_THREAD_STATE
static CYTHON_INLINE void __Pyx__ExceptionSave(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    PyObject *exc_value = exc_info->exc_value;
    if (exc_value == NULL || exc_value == Py_None) {
        *value = NULL;
        *type = NULL;
        *tb = NULL;
    } else {
        *value = exc_value;
        Py_INCREF(*value);
        *type = (PyObject*) Py_TYPE(exc_value);
        Py_INCREF(*type);
        *tb = PyException_GetTraceback(exc_value);
    }
  #elif CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = __Pyx_PyErr_GetTopmostException(tstate);
    *type = exc_info->exc_type;
    *value = exc_info->exc_value;
    *tb = exc_info->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #else
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
  #endif
}
static CYTHON_INLINE void __Pyx__ExceptionReset(PyThreadState *tstate, PyObject *type, PyObject *value, PyObject *tb) {
  #if CYTHON_USE_EXC_INFO_STACK && PY_VERSION_HEX >= 0x030B00a4
    _PyErr_StackItem *exc_info = tstate->exc_info;
    PyObject *tmp_value = exc_info->exc_value;
    exc_info->exc_value = value;
    Py_XDECREF(tmp_value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
  #else
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    #if CYTHON_USE_EXC_INFO_STACK
    _PyErr_StackItem *exc_info = tstate->exc_info;
    tmp_type = exc_info->exc_type;
    tmp_value = exc_info->exc_value;
    tmp_tb = exc_info->exc_traceback;
    exc_info->exc_type = type;
    exc_info->exc_value = value;
    exc_info->exc_traceback = tb;
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
  #endif
}
#endif

/* GetException */
#if CYTHON_FAST_THREAD_STATE
static int __Pyx__GetException(PyThreadState *tstate, PyObject **type, PyObject **value, PyObject **tb)
#else
static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb)
#endif
{
    PyObject *local_type = NULL, *local_value, *local_tb = NULL;
#if CYTHON_FAST_THREAD_STATE
    PyObject *tmp_type, *tmp_value, *tmp_tb;
  #if PY_VERSION_HEX >= 0x030C00A6
    local_value = tstate->current_exception;
    tstate->current_exception = 0;
    if (likely(local_value)) {
        local_type = (PyObject*) Py_TYPE(local_value);
        Py_INCREF(local_type);
        local_tb = PyException_GetTraceback(local_value);
    }
  #else
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
  #endif
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_FAST_THREAD_STATE && PY_VERSION_HEX >= 0x030C00A6
    if (unlikely(tstate->current_exception))
#elif CYTHON_FAST_THREAD_STATE
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (local_tb) {
        if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
            goto bad;
    }
    #endif
    Py_XINCREF(local_tb);
    Py_XINCREF(local_type);
    Py_XINCREF(local_value);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_FAST_THREAD_STATE
    #if CYTHON_USE_EXC_INFO_STACK
    {
        _PyErr_StackItem *exc_info = tstate->exc_info;
      #if PY_VERSION_HEX >= 0x030B00a4
        tmp_value = exc_info->exc_value;
        exc_info->exc_value = local_value;
        tmp_type = NULL;
        tmp_tb = NULL;
        Py_XDECREF(local_type);
        Py_XDECREF(local_tb);
      #else
        tmp_type = exc_info->exc_type;
        tmp_value = exc_info->exc_value;
        tmp_tb = exc_info->exc_traceback;
        exc_info->exc_type = local_type;
        exc_info->exc_value = local_value;
        exc_info->exc_traceback = local_tb;
      #endif
    }
    #else
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    #endif
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

/* PyObjectCall */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    PyObject *result;
    ternaryfunc call = Py_TYPE(func)->tp_call;
    if (unlikely(!call))
        return PyObject_Call(func, arg, kw);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = (*call)(func, arg, kw);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* RaiseException */
#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    __Pyx_PyThreadState_declare
    CYTHON_UNUSED_VAR(cause);
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    if (PyType_Check(type)) {
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        type = (PyObject*) Py_TYPE(type);
        Py_INCREF(type);
        if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: exception class must be a subclass of BaseException");
            goto raise_error;
        }
    }
    __Pyx_PyThreadState_assign
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *instance_class = NULL;
        if (value && PyExceptionInstance_Check(value)) {
            instance_class = (PyObject*) Py_TYPE(value);
            if (instance_class != type) {
                int is_subclass = PyObject_IsSubclass(instance_class, type);
                if (!is_subclass) {
                    instance_class = NULL;
                } else if (unlikely(is_subclass == -1)) {
                    goto bad;
                } else {
                    type = instance_class;
                }
            }
        }
        if (!instance_class) {
            PyObject *args;
            if (!value)
                args = PyTuple_New(0);
            else if (PyTuple_Check(value)) {
                Py_INCREF(value);
                args = value;
            } else
                args = PyTuple_Pack(1, value);
            if (!args)
                goto bad;
            owned_instance = PyObject_Call(type, args, NULL);
            Py_DECREF(args);
            if (!owned_instance)
                goto bad;
            value = owned_instance;
            if (!PyExceptionInstance_Check(value)) {
                PyErr_Format(PyExc_TypeError,
                             "calling %R should have returned an instance of "
                             "BaseException, not %R",
                             type, Py_TYPE(value));
                goto bad;
            }
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause) {
        PyObject *fixed_cause;
        if (cause == Py_None) {
            fixed_cause = NULL;
        } else if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        } else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        } else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
      #if PY_VERSION_HEX >= 0x030C00A6
        PyException_SetTraceback(value, tb);
      #elif CYTHON_FAST_THREAD_STATE
        PyThreadState *tstate = __Pyx_PyThreadState_Current;
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
#else
        PyObject *tmp_type, *tmp_value, *tmp_tb;
        PyErr_Fetch(&tmp_type, &tmp_value, &tmp_tb);
        Py_INCREF(tb);
        PyErr_Restore(tmp_type, tmp_value, tb);
        Py_XDECREF(tmp_tb);
#endif
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

/* TupleAndListFromArray */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_copy_object_array(PyObject *const *CYTHON_RESTRICT src, PyObject** CYTHON_RESTRICT dest, Py_ssize_t length) {
    PyObject *v;
    Py_ssize_t i;
    for (i = 0; i < length; i++) {
        v = dest[i] = src[i];
        Py_INCREF(v);
    }
}
static CYTHON_INLINE PyObject *
__Pyx_PyTuple_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        Py_INCREF(__pyx_empty_tuple);
        return __pyx_empty_tuple;
    }
    res = PyTuple_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyTupleObject*)res)->ob_item, n);
    return res;
}
static CYTHON_INLINE PyObject *
__Pyx_PyList_FromArray(PyObject *const *src, Py_ssize_t n)
{
    PyObject *res;
    if (n <= 0) {
        return PyList_New(0);
    }
    res = PyList_New(n);
    if (unlikely(res == NULL)) return NULL;
    __Pyx_copy_object_array(src, ((PyListObject*)res)->ob_item, n);
    return res;
}
#endif

/* BytesEquals */
static CYTHON_INLINE int __Pyx_PyBytes_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
    if (s1 == s2) {
        return (equals == Py_EQ);
    } else if (PyBytes_CheckExact(s1) & PyBytes_CheckExact(s2)) {
        const char *ps1, *ps2;
        Py_ssize_t length = PyBytes_GET_SIZE(s1);
        if (length != PyBytes_GET_SIZE(s2))
            return (equals == Py_NE);
        ps1 = PyBytes_AS_STRING(s1);
        ps2 = PyBytes_AS_STRING(s2);
        if (ps1[0] != ps2[0]) {
            return (equals == Py_NE);
        } else if (length == 1) {
            return (equals == Py_EQ);
        } else {
            int result;
#if CYTHON_USE_UNICODE_INTERNALS && (PY_VERSION_HEX < 0x030B0000)
            Py_hash_t hash1, hash2;
            hash1 = ((PyBytesObject*)s1)->ob_shash;
            hash2 = ((PyBytesObject*)s2)->ob_shash;
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                return (equals == Py_NE);
            }
#endif
            result = memcmp(ps1, ps2, (size_t)length);
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & PyBytes_CheckExact(s2)) {
        return (equals == Py_NE);
    } else if ((s2 == Py_None) & PyBytes_CheckExact(s1)) {
        return (equals == Py_NE);
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
#endif
}

/* UnicodeEquals */
static CYTHON_INLINE int __Pyx_PyUnicode_Equals(PyObject* s1, PyObject* s2, int equals) {
#if CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API
    return PyObject_RichCompareBool(s1, s2, equals);
#else
#if PY_MAJOR_VERSION < 3
    PyObject* owned_ref = NULL;
#endif
    int s1_is_unicode, s2_is_unicode;
    if (s1 == s2) {
        goto return_eq;
    }
    s1_is_unicode = PyUnicode_CheckExact(s1);
    s2_is_unicode = PyUnicode_CheckExact(s2);
#if PY_MAJOR_VERSION < 3
    if ((s1_is_unicode & (!s2_is_unicode)) && PyString_CheckExact(s2)) {
        owned_ref = PyUnicode_FromObject(s2);
        if (unlikely(!owned_ref))
            return -1;
        s2 = owned_ref;
        s2_is_unicode = 1;
    } else if ((s2_is_unicode & (!s1_is_unicode)) && PyString_CheckExact(s1)) {
        owned_ref = PyUnicode_FromObject(s1);
        if (unlikely(!owned_ref))
            return -1;
        s1 = owned_ref;
        s1_is_unicode = 1;
    } else if (((!s2_is_unicode) & (!s1_is_unicode))) {
        return __Pyx_PyBytes_Equals(s1, s2, equals);
    }
#endif
    if (s1_is_unicode & s2_is_unicode) {
        Py_ssize_t length;
        int kind;
        void *data1, *data2;
        if (unlikely(__Pyx_PyUnicode_READY(s1) < 0) || unlikely(__Pyx_PyUnicode_READY(s2) < 0))
            return -1;
        length = __Pyx_PyUnicode_GET_LENGTH(s1);
        if (length != __Pyx_PyUnicode_GET_LENGTH(s2)) {
            goto return_ne;
        }
#if CYTHON_USE_UNICODE_INTERNALS
        {
            Py_hash_t hash1, hash2;
        #if CYTHON_PEP393_ENABLED
            hash1 = ((PyASCIIObject*)s1)->hash;
            hash2 = ((PyASCIIObject*)s2)->hash;
        #else
            hash1 = ((PyUnicodeObject*)s1)->hash;
            hash2 = ((PyUnicodeObject*)s2)->hash;
        #endif
            if (hash1 != hash2 && hash1 != -1 && hash2 != -1) {
                goto return_ne;
            }
        }
#endif
        kind = __Pyx_PyUnicode_KIND(s1);
        if (kind != __Pyx_PyUnicode_KIND(s2)) {
            goto return_ne;
        }
        data1 = __Pyx_PyUnicode_DATA(s1);
        data2 = __Pyx_PyUnicode_DATA(s2);
        if (__Pyx_PyUnicode_READ(kind, data1, 0) != __Pyx_PyUnicode_READ(kind, data2, 0)) {
            goto return_ne;
        } else if (length == 1) {
            goto return_eq;
        } else {
            int result = memcmp(data1, data2, (size_t)(length * kind));
            #if PY_MAJOR_VERSION < 3
            Py_XDECREF(owned_ref);
            #endif
            return (equals == Py_EQ) ? (result == 0) : (result != 0);
        }
    } else if ((s1 == Py_None) & s2_is_unicode) {
        goto return_ne;
    } else if ((s2 == Py_None) & s1_is_unicode) {
        goto return_ne;
    } else {
        int result;
        PyObject* py_result = PyObject_RichCompare(s1, s2, equals);
        #if PY_MAJOR_VERSION < 3
        Py_XDECREF(owned_ref);
        #endif
        if (!py_result)
            return -1;
        result = __Pyx_PyObject_IsTrue(py_result);
        Py_DECREF(py_result);
        return result;
    }
return_eq:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_EQ);
return_ne:
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(owned_ref);
    #endif
    return (equals == Py_NE);
#endif
}

/* fastcall */
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE PyObject * __Pyx_GetKwValue_FASTCALL(PyObject *kwnames, PyObject *const *kwvalues, PyObject *s)
{
    Py_ssize_t i, n = PyTuple_GET_SIZE(kwnames);
    for (i = 0; i < n; i++)
    {
        if (s == PyTuple_GET_ITEM(kwnames, i)) return kwvalues[i];
    }
    for (i = 0; i < n; i++)
    {
        int eq = __Pyx_PyUnicode_Equals(s, PyTuple_GET_ITEM(kwnames, i), Py_EQ);
        if (unlikely(eq != 0)) {
            if (unlikely(eq < 0)) return NULL;  // error
            return kwvalues[i];
        }
    }
    return NULL;  // not found (no exception set)
}
#endif

/* PyFunctionFastCall */
#if CYTHON_FAST_PYCALL && !CYTHON_VECTORCALL
static PyObject* __Pyx_PyFunction_FastCallNoKw(PyCodeObject *co, PyObject **args, Py_ssize_t na,
                                               PyObject *globals) {
    PyFrameObject *f;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject **fastlocals;
    Py_ssize_t i;
    PyObject *result;
    assert(globals != NULL);
    /* XXX Perhaps we should create a specialized
       PyFrame_New() that doesn't take locals, but does
       take builtins without sanity checking them.
       */
    assert(tstate != NULL);
    f = PyFrame_New(tstate, co, globals, NULL);
    if (f == NULL) {
        return NULL;
    }
    fastlocals = __Pyx_PyFrame_GetLocalsplus(f);
    for (i = 0; i < na; i++) {
        Py_INCREF(*args);
        fastlocals[i] = *args++;
    }
    result = PyEval_EvalFrameEx(f,0);
    ++tstate->recursion_depth;
    Py_DECREF(f);
    --tstate->recursion_depth;
    return result;
}
static PyObject *__Pyx_PyFunction_FastCallDict(PyObject *func, PyObject **args, Py_ssize_t nargs, PyObject *kwargs) {
    PyCodeObject *co = (PyCodeObject *)PyFunction_GET_CODE(func);
    PyObject *globals = PyFunction_GET_GLOBALS(func);
    PyObject *argdefs = PyFunction_GET_DEFAULTS(func);
    PyObject *closure;
#if PY_MAJOR_VERSION >= 3
    PyObject *kwdefs;
#endif
    PyObject *kwtuple, **k;
    PyObject **d;
    Py_ssize_t nd;
    Py_ssize_t nk;
    PyObject *result;
    assert(kwargs == NULL || PyDict_Check(kwargs));
    nk = kwargs ? PyDict_Size(kwargs) : 0;
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object"))) {
        return NULL;
    }
    if (
#if PY_MAJOR_VERSION >= 3
            co->co_kwonlyargcount == 0 &&
#endif
            likely(kwargs == NULL || nk == 0) &&
            co->co_flags == (CO_OPTIMIZED | CO_NEWLOCALS | CO_NOFREE)) {
        if (argdefs == NULL && co->co_argcount == nargs) {
            result = __Pyx_PyFunction_FastCallNoKw(co, args, nargs, globals);
            goto done;
        }
        else if (nargs == 0 && argdefs != NULL
                 && co->co_argcount == Py_SIZE(argdefs)) {
            /* function called with no arguments, but all parameters have
               a default value: use default values as arguments .*/
            args = &PyTuple_GET_ITEM(argdefs, 0);
            result =__Pyx_PyFunction_FastCallNoKw(co, args, Py_SIZE(argdefs), globals);
            goto done;
        }
    }
    if (kwargs != NULL) {
        Py_ssize_t pos, i;
        kwtuple = PyTuple_New(2 * nk);
        if (kwtuple == NULL) {
            result = NULL;
            goto done;
        }
        k = &PyTuple_GET_ITEM(kwtuple, 0);
        pos = i = 0;
        while (PyDict_Next(kwargs, &pos, &k[i], &k[i+1])) {
            Py_INCREF(k[i]);
            Py_INCREF(k[i+1]);
            i += 2;
        }
        nk = i / 2;
    }
    else {
        kwtuple = NULL;
        k = NULL;
    }
    closure = PyFunction_GET_CLOSURE(func);
#if PY_MAJOR_VERSION >= 3
    kwdefs = PyFunction_GET_KW_DEFAULTS(func);
#endif
    if (argdefs != NULL) {
        d = &PyTuple_GET_ITEM(argdefs, 0);
        nd = Py_SIZE(argdefs);
    }
    else {
        d = NULL;
        nd = 0;
    }
#if PY_MAJOR_VERSION >= 3
    result = PyEval_EvalCodeEx((PyObject*)co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, kwdefs, closure);
#else
    result = PyEval_EvalCodeEx(co, globals, (PyObject *)NULL,
                               args, (int)nargs,
                               k, (int)nk,
                               d, (int)nd, closure);
#endif
    Py_XDECREF(kwtuple);
done:
    Py_LeaveRecursiveCall();
    return result;
}
#endif

/* PyObjectCallMethO */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallMethO(PyObject *func, PyObject *arg) {
    PyObject *self, *result;
    PyCFunction cfunc;
    cfunc = PyCFunction_GET_FUNCTION(func);
    self = PyCFunction_GET_SELF(func);
    if (unlikely(Py_EnterRecursiveCall((char*)" while calling a Python object")))
        return NULL;
    result = cfunc(self, arg);
    Py_LeaveRecursiveCall();
    if (unlikely(!result) && unlikely(!PyErr_Occurred())) {
        PyErr_SetString(
            PyExc_SystemError,
            "NULL result without error in PyObject_Call");
    }
    return result;
}
#endif

/* PyObjectFastCall */
static PyObject* __Pyx_PyObject_FastCall_fallback(PyObject *func, PyObject **args, size_t nargs, PyObject *kwargs) {
    PyObject *argstuple;
    PyObject *result;
    size_t i;
    argstuple = PyTuple_New((Py_ssize_t)nargs);
    if (unlikely(!argstuple)) return NULL;
    for (i = 0; i < nargs; i++) {
        Py_INCREF(args[i]);
        PyTuple_SET_ITEM(argstuple, (Py_ssize_t)i, args[i]);
    }
    result = __Pyx_PyObject_Call(func, argstuple, kwargs);
    Py_DECREF(argstuple);
    return result;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_FastCallDict(PyObject *func, PyObject **args, size_t _nargs, PyObject *kwargs) {
    Py_ssize_t nargs = __Pyx_PyVectorcall_NARGS(_nargs);
#if CYTHON_COMPILING_IN_CPYTHON
    if (nargs == 0 && kwargs == NULL) {
#if defined(__Pyx_CyFunction_USED) && defined(NDEBUG)
        if (__Pyx_IsCyOrPyCFunction(func))
#else
        if (PyCFunction_Check(func))
#endif
        {
            if (likely(PyCFunction_GET_FLAGS(func) & METH_NOARGS)) {
                return __Pyx_PyObject_CallMethO(func, NULL);
            }
        }
    }
    else if (nargs == 1 && kwargs == NULL) {
        if (PyCFunction_Check(func))
        {
            if (likely(PyCFunction_GET_FLAGS(func) & METH_O)) {
                return __Pyx_PyObject_CallMethO(func, args[0]);
            }
        }
    }
#endif
    #if PY_VERSION_HEX < 0x030800B1
    #if CYTHON_FAST_PYCCALL
    if (PyCFunction_Check(func)) {
        if (kwargs) {
            return _PyCFunction_FastCallDict(func, args, nargs, kwargs);
        } else {
            return _PyCFunction_FastCallKeywords(func, args, nargs, NULL);
        }
    }
    #if PY_VERSION_HEX >= 0x030700A1
    if (!kwargs && __Pyx_IS_TYPE(func, &PyMethodDescr_Type)) {
        return _PyMethodDescr_FastCallKeywords(func, args, nargs, NULL);
    }
    #endif
    #endif
    #if CYTHON_FAST_PYCALL
    if (PyFunction_Check(func)) {
        return __Pyx_PyFunction_FastCallDict(func, args, nargs, kwargs);
    }
    #endif
    #endif
    #if CYTHON_VECTORCALL
    vectorcallfunc f = _PyVectorcall_Function(func);
    if (f) {
        return f(func, args, (size_t)nargs, kwargs);
    }
    #elif defined(__Pyx_CyFunction_USED) && CYTHON_BACKPORT_VECTORCALL
    if (__Pyx_CyFunction_CheckExact(func)) {
        __pyx_vectorcallfunc f = __Pyx_CyFunction_func_vectorcall(func);
        if (f) return f(func, args, (size_t)nargs, kwargs);
    }
    #endif
    if (nargs == 0) {
        return __Pyx_PyObject_Call(func, __pyx_empty_tuple, kwargs);
    }
    return __Pyx_PyObject_FastCall_fallback(func, args, (size_t)nargs, kwargs);
}

/* PyObjectCallOneArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallOneArg(PyObject *func, PyObject *arg) {
    PyObject *args[2] = {NULL, arg};
    return __Pyx_PyObject_FastCall(func, args+1, 1 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectFormat */
#if CYTHON_USE_UNICODE_WRITER
static PyObject* __Pyx_PyObject_Format(PyObject* obj, PyObject* format_spec) {
    int ret;
    _PyUnicodeWriter writer;
    if (likely(PyFloat_CheckExact(obj))) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x03040000
        _PyUnicodeWriter_Init(&writer, 0);
#else
        _PyUnicodeWriter_Init(&writer);
#endif
        ret = _PyFloat_FormatAdvancedWriter(
            &writer,
            obj,
            format_spec, 0, PyUnicode_GET_LENGTH(format_spec));
    } else if (likely(PyLong_CheckExact(obj))) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x03040000
        _PyUnicodeWriter_Init(&writer, 0);
#else
        _PyUnicodeWriter_Init(&writer);
#endif
        ret = _PyLong_FormatAdvancedWriter(
            &writer,
            obj,
            format_spec, 0, PyUnicode_GET_LENGTH(format_spec));
    } else {
        return PyObject_Format(obj, format_spec);
    }
    if (unlikely(ret == -1)) {
        _PyUnicodeWriter_Dealloc(&writer);
        return NULL;
    }
    return _PyUnicodeWriter_Finish(&writer);
}
#endif

/* JoinPyUnicode */
static PyObject* __Pyx_PyUnicode_Join(PyObject* value_tuple, Py_ssize_t value_count, Py_ssize_t result_ulength,
                                      Py_UCS4 max_char) {
#if CYTHON_USE_UNICODE_INTERNALS && CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    PyObject *result_uval;
    int result_ukind, kind_shift;
    Py_ssize_t i, char_pos;
    void *result_udata;
    CYTHON_MAYBE_UNUSED_VAR(max_char);
#if CYTHON_PEP393_ENABLED
    result_uval = PyUnicode_New(result_ulength, max_char);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = (max_char <= 255) ? PyUnicode_1BYTE_KIND : (max_char <= 65535) ? PyUnicode_2BYTE_KIND : PyUnicode_4BYTE_KIND;
    kind_shift = (result_ukind == PyUnicode_4BYTE_KIND) ? 2 : result_ukind - 1;
    result_udata = PyUnicode_DATA(result_uval);
#else
    result_uval = PyUnicode_FromUnicode(NULL, result_ulength);
    if (unlikely(!result_uval)) return NULL;
    result_ukind = sizeof(Py_UNICODE);
    kind_shift = (result_ukind == 4) ? 2 : result_ukind - 1;
    result_udata = PyUnicode_AS_UNICODE(result_uval);
#endif
    assert(kind_shift == 2 || kind_shift == 1 || kind_shift == 0);
    char_pos = 0;
    for (i=0; i < value_count; i++) {
        int ukind;
        Py_ssize_t ulength;
        void *udata;
        PyObject *uval = PyTuple_GET_ITEM(value_tuple, i);
        if (unlikely(__Pyx_PyUnicode_READY(uval)))
            goto bad;
        ulength = __Pyx_PyUnicode_GET_LENGTH(uval);
        if (unlikely(!ulength))
            continue;
        if (unlikely((PY_SSIZE_T_MAX >> kind_shift) - ulength < char_pos))
            goto overflow;
        ukind = __Pyx_PyUnicode_KIND(uval);
        udata = __Pyx_PyUnicode_DATA(uval);
        if (!CYTHON_PEP393_ENABLED || ukind == result_ukind) {
            memcpy((char *)result_udata + (char_pos << kind_shift), udata, (size_t) (ulength << kind_shift));
        } else {
            #if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030300F0 || defined(_PyUnicode_FastCopyCharacters)
            _PyUnicode_FastCopyCharacters(result_uval, char_pos, uval, 0, ulength);
            #else
            Py_ssize_t j;
            for (j=0; j < ulength; j++) {
                Py_UCS4 uchar = __Pyx_PyUnicode_READ(ukind, udata, j);
                __Pyx_PyUnicode_WRITE(result_ukind, result_udata, char_pos+j, uchar);
            }
            #endif
        }
        char_pos += ulength;
    }
    return result_uval;
overflow:
    PyErr_SetString(PyExc_OverflowError, "join() result is too long for a Python string");
bad:
    Py_DECREF(result_uval);
    return NULL;
#else
    CYTHON_UNUSED_VAR(max_char);
    CYTHON_UNUSED_VAR(result_ulength);
    CYTHON_UNUSED_VAR(value_count);
    return PyUnicode_Join(__pyx_empty_unicode, value_tuple);
#endif
}

/* RaiseDoubleKeywords */
static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

/* ParseKeywords */
static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject *const *kwvalues,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    int kwds_is_tuple = CYTHON_METH_FASTCALL && likely(PyTuple_Check(kwds));
    while (1) {
        if (kwds_is_tuple) {
            if (pos >= PyTuple_GET_SIZE(kwds)) break;
            key = PyTuple_GET_ITEM(kwds, pos);
            value = kwvalues[pos];
            pos++;
        }
        else
        {
            if (!PyDict_Next(kwds, &pos, &key, &value)) break;
        }
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (__Pyx_PyUnicode_GET_LENGTH(**name) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key)
                );
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (__Pyx_PyUnicode_GET_LENGTH(**argname) != __Pyx_PyUnicode_GET_LENGTH(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

/* RaiseArgTupleInvalid */
static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%.200s() takes %.8s %" CYTHON_FORMAT_SSIZE_T "d positional argument%.1s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

/* GetAttr */
static CYTHON_INLINE PyObject *__Pyx_GetAttr(PyObject *o, PyObject *n) {
#if CYTHON_USE_TYPE_SLOTS
#if PY_MAJOR_VERSION >= 3
    if (likely(PyUnicode_Check(n)))
#else
    if (likely(PyString_Check(n)))
#endif
        return __Pyx_PyObject_GetAttrStr(o, n);
#endif
    return PyObject_GetAttr(o, n);
}

/* RaiseClosureNameError */
static CYTHON_INLINE void __Pyx_RaiseClosureNameError(const char *varname) {
    PyErr_Format(PyExc_NameError, "free variable '%s' referenced before assignment in enclosing scope", varname);
}

/* FixUpExtensionType */
#if CYTHON_USE_TYPE_SPECS
static int __Pyx_fix_up_extension_type_from_spec(PyType_Spec *spec, PyTypeObject *type) {
#if PY_VERSION_HEX > 0x030900B1 || CYTHON_COMPILING_IN_LIMITED_API
    CYTHON_UNUSED_VAR(spec);
    CYTHON_UNUSED_VAR(type);
#else
    const PyType_Slot *slot = spec->slots;
    while (slot && slot->slot && slot->slot != Py_tp_members)
        slot++;
    if (slot && slot->slot == Py_tp_members) {
        int changed = 0;
#if !(PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON)
        const
#endif
            PyMemberDef *memb = (PyMemberDef*) slot->pfunc;
        while (memb && memb->name) {
            if (memb->name[0] == '_' && memb->name[1] == '_') {
#if PY_VERSION_HEX < 0x030900b1
                if (strcmp(memb->name, "__weaklistoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_weaklistoffset = memb->offset;
                    changed = 1;
                }
                else if (strcmp(memb->name, "__dictoffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
                    type->tp_dictoffset = memb->offset;
                    changed = 1;
                }
#if CYTHON_METH_FASTCALL
                else if (strcmp(memb->name, "__vectorcalloffset__") == 0) {
                    assert(memb->type == T_PYSSIZET);
                    assert(memb->flags == READONLY);
#if PY_VERSION_HEX >= 0x030800b4
                    type->tp_vectorcall_offset = memb->offset;
#else
                    type->tp_print = (printfunc) memb->offset;
#endif
                    changed = 1;
                }
#endif
#else
                if ((0));
#endif
#if PY_VERSION_HEX <= 0x030900b1 && CYTHON_COMPILING_IN_CPYTHON
                else if (strcmp(memb->name, "__module__") == 0) {
                    PyObject *descr;
                    assert(memb->type == T_OBJECT);
                    assert(memb->flags == 0 || memb->flags == READONLY);
                    descr = PyDescr_NewMember(type, memb);
                    if (unlikely(!descr))
                        return -1;
                    if (unlikely(PyDict_SetItem(type->tp_dict, PyDescr_NAME(descr), descr) < 0)) {
                        Py_DECREF(descr);
                        return -1;
                    }
                    Py_DECREF(descr);
                    changed = 1;
                }
#endif
            }
            memb++;
        }
        if (changed)
            PyType_Modified(type);
    }
#endif
    return 0;
}
#endif

/* FetchSharedCythonModule */
static PyObject *__Pyx_FetchSharedCythonABIModule(void) {
    PyObject *abi_module = PyImport_AddModule((char*) __PYX_ABI_MODULE_NAME);
    if (unlikely(!abi_module)) return NULL;
    Py_INCREF(abi_module);
    return abi_module;
}

/* FetchCommonType */
static int __Pyx_VerifyCachedType(PyObject *cached_type,
                               const char *name,
                               Py_ssize_t basicsize,
                               Py_ssize_t expected_basicsize) {
    if (!PyType_Check(cached_type)) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s is not a type object", name);
        return -1;
    }
    if (basicsize != expected_basicsize) {
        PyErr_Format(PyExc_TypeError,
            "Shared Cython type %.200s has the wrong size, try recompiling",
            name);
        return -1;
    }
    return 0;
}
#if !CYTHON_USE_TYPE_SPECS
static PyTypeObject* __Pyx_FetchCommonType(PyTypeObject* type) {
    PyObject* abi_module;
    const char* object_name;
    PyTypeObject *cached_type = NULL;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    object_name = strrchr(type->tp_name, '.');
    object_name = object_name ? object_name+1 : type->tp_name;
    cached_type = (PyTypeObject*) PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        if (__Pyx_VerifyCachedType(
              (PyObject *)cached_type,
              object_name,
              cached_type->tp_basicsize,
              type->tp_basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    if (PyType_Ready(type) < 0) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, (PyObject *)type) < 0)
        goto bad;
    Py_INCREF(type);
    cached_type = type;
done:
    Py_DECREF(abi_module);
    return cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#else
static PyTypeObject *__Pyx_FetchCommonTypeFromSpec(PyObject *module, PyType_Spec *spec, PyObject *bases) {
    PyObject *abi_module, *cached_type = NULL;
    const char* object_name = strrchr(spec->name, '.');
    object_name = object_name ? object_name+1 : spec->name;
    abi_module = __Pyx_FetchSharedCythonABIModule();
    if (!abi_module) return NULL;
    cached_type = PyObject_GetAttrString(abi_module, object_name);
    if (cached_type) {
        Py_ssize_t basicsize;
#if CYTHON_COMPILING_IN_LIMITED_API
        PyObject *py_basicsize;
        py_basicsize = PyObject_GetAttrString(cached_type, "__basicsize__");
        if (unlikely(!py_basicsize)) goto bad;
        basicsize = PyLong_AsSsize_t(py_basicsize);
        Py_DECREF(py_basicsize);
        py_basicsize = 0;
        if (unlikely(basicsize == (Py_ssize_t)-1) && PyErr_Occurred()) goto bad;
#else
        basicsize = likely(PyType_Check(cached_type)) ? ((PyTypeObject*) cached_type)->tp_basicsize : -1;
#endif
        if (__Pyx_VerifyCachedType(
              cached_type,
              object_name,
              basicsize,
              spec->basicsize) < 0) {
            goto bad;
        }
        goto done;
    }
    if (!PyErr_ExceptionMatches(PyExc_AttributeError)) goto bad;
    PyErr_Clear();
    CYTHON_UNUSED_VAR(module);
    cached_type = __Pyx_PyType_FromModuleAndSpec(abi_module, spec, bases);
    if (unlikely(!cached_type)) goto bad;
    if (unlikely(__Pyx_fix_up_extension_type_from_spec(spec, (PyTypeObject *) cached_type) < 0)) goto bad;
    if (PyObject_SetAttrString(abi_module, object_name, cached_type) < 0) goto bad;
done:
    Py_DECREF(abi_module);
    assert(cached_type == NULL || PyType_Check(cached_type));
    return (PyTypeObject *) cached_type;
bad:
    Py_XDECREF(cached_type);
    cached_type = NULL;
    goto done;
}
#endif

/* PyVectorcallFastCallDict */
#if CYTHON_METH_FASTCALL
static PyObject *__Pyx_PyVectorcall_FastCallDict_kw(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    PyObject *res = NULL;
    PyObject *kwnames;
    PyObject **newargs;
    PyObject **kwvalues;
    Py_ssize_t i, pos;
    size_t j;
    PyObject *key, *value;
    unsigned long keys_are_strings;
    Py_ssize_t nkw = PyDict_GET_SIZE(kw);
    newargs = (PyObject **)PyMem_Malloc((nargs + (size_t)nkw) * sizeof(args[0]));
    if (unlikely(newargs == NULL)) {
        PyErr_NoMemory();
        return NULL;
    }
    for (j = 0; j < nargs; j++) newargs[j] = args[j];
    kwnames = PyTuple_New(nkw);
    if (unlikely(kwnames == NULL)) {
        PyMem_Free(newargs);
        return NULL;
    }
    kwvalues = newargs + nargs;
    pos = i = 0;
    keys_are_strings = Py_TPFLAGS_UNICODE_SUBCLASS;
    while (PyDict_Next(kw, &pos, &key, &value)) {
        keys_are_strings &= Py_TYPE(key)->tp_flags;
        Py_INCREF(key);
        Py_INCREF(value);
        PyTuple_SET_ITEM(kwnames, i, key);
        kwvalues[i] = value;
        i++;
    }
    if (unlikely(!keys_are_strings)) {
        PyErr_SetString(PyExc_TypeError, "keywords must be strings");
        goto cleanup;
    }
    res = vc(func, newargs, nargs, kwnames);
cleanup:
    Py_DECREF(kwnames);
    for (i = 0; i < nkw; i++)
        Py_DECREF(kwvalues[i]);
    PyMem_Free(newargs);
    return res;
}
static CYTHON_INLINE PyObject *__Pyx_PyVectorcall_FastCallDict(PyObject *func, __pyx_vectorcallfunc vc, PyObject *const *args, size_t nargs, PyObject *kw)
{
    if (likely(kw == NULL) || PyDict_GET_SIZE(kw) == 0) {
        return vc(func, args, nargs, NULL);
    }
    return __Pyx_PyVectorcall_FastCallDict_kw(func, vc, args, nargs, kw);
}
#endif

/* CythonFunctionShared */
static CYTHON_INLINE void __Pyx__CyFunction_SetClassObj(__pyx_CyFunctionObject* f, PyObject* classobj) {
#if PY_VERSION_HEX < 0x030900B1
    __Pyx_Py_XDECREF_SET(
        __Pyx_CyFunction_GetClassObj(f),
            ((classobj) ? __Pyx_NewRef(classobj) : NULL));
#else
    __Pyx_Py_XDECREF_SET(
        ((PyCMethodObject *) (f))->mm_class,
        (PyTypeObject*)((classobj) ? __Pyx_NewRef(classobj) : NULL));
#endif
}
static PyObject *
__Pyx_CyFunction_get_doc(__pyx_CyFunctionObject *op, void *closure)
{
    CYTHON_UNUSED_VAR(closure);
    if (unlikely(op->func_doc == NULL)) {
        if (((PyCFunctionObject*)op)->m_ml->ml_doc) {
#if PY_MAJOR_VERSION >= 3
            op->func_doc = PyUnicode_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#else
            op->func_doc = PyString_FromString(((PyCFunctionObject*)op)->m_ml->ml_doc);
#endif
            if (unlikely(op->func_doc == NULL))
                return NULL;
        } else {
            Py_INCREF(Py_None);
            return Py_None;
        }
    }
    Py_INCREF(op->func_doc);
    return op->func_doc;
}
static int
__Pyx_CyFunction_set_doc(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (value == NULL) {
        value = Py_None;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_doc, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_name(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_name == NULL)) {
#if PY_MAJOR_VERSION >= 3
        op->func_name = PyUnicode_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#else
        op->func_name = PyString_InternFromString(((PyCFunctionObject*)op)->m_ml->ml_name);
#endif
        if (unlikely(op->func_name == NULL))
            return NULL;
    }
    Py_INCREF(op->func_name);
    return op->func_name;
}
static int
__Pyx_CyFunction_set_name(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__name__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_name, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_qualname(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_qualname);
    return op->func_qualname;
}
static int
__Pyx_CyFunction_set_qualname(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
#if PY_MAJOR_VERSION >= 3
    if (unlikely(value == NULL || !PyUnicode_Check(value)))
#else
    if (unlikely(value == NULL || !PyString_Check(value)))
#endif
    {
        PyErr_SetString(PyExc_TypeError,
                        "__qualname__ must be set to a string object");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_qualname, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_dict(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(op->func_dict == NULL)) {
        op->func_dict = PyDict_New();
        if (unlikely(op->func_dict == NULL))
            return NULL;
    }
    Py_INCREF(op->func_dict);
    return op->func_dict;
}
static int
__Pyx_CyFunction_set_dict(__pyx_CyFunctionObject *op, PyObject *value, void *context)
{
    CYTHON_UNUSED_VAR(context);
    if (unlikely(value == NULL)) {
        PyErr_SetString(PyExc_TypeError,
               "function's dictionary may not be deleted");
        return -1;
    }
    if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
               "setting function's dictionary to a non-dict");
        return -1;
    }
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_dict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_globals(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(op->func_globals);
    return op->func_globals;
}
static PyObject *
__Pyx_CyFunction_get_closure(__pyx_CyFunctionObject *op, void *context)
{
    CYTHON_UNUSED_VAR(op);
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(Py_None);
    return Py_None;
}
static PyObject *
__Pyx_CyFunction_get_code(__pyx_CyFunctionObject *op, void *context)
{
    PyObject* result = (op->func_code) ? op->func_code : Py_None;
    CYTHON_UNUSED_VAR(context);
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_init_defaults(__pyx_CyFunctionObject *op) {
    int result = 0;
    PyObject *res = op->defaults_getter((PyObject *) op);
    if (unlikely(!res))
        return -1;
    #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    op->defaults_tuple = PyTuple_GET_ITEM(res, 0);
    Py_INCREF(op->defaults_tuple);
    op->defaults_kwdict = PyTuple_GET_ITEM(res, 1);
    Py_INCREF(op->defaults_kwdict);
    #else
    op->defaults_tuple = PySequence_ITEM(res, 0);
    if (unlikely(!op->defaults_tuple)) result = -1;
    else {
        op->defaults_kwdict = PySequence_ITEM(res, 1);
        if (unlikely(!op->defaults_kwdict)) result = -1;
    }
    #endif
    Py_DECREF(res);
    return result;
}
static int
__Pyx_CyFunction_set_defaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyTuple_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__defaults__ must be set to a tuple object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__defaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_tuple, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_defaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_tuple;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_tuple;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_kwdefaults(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value) {
        value = Py_None;
    } else if (unlikely(value != Py_None && !PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__kwdefaults__ must be set to a dict object");
        return -1;
    }
    PyErr_WarnEx(PyExc_RuntimeWarning, "changes to cyfunction.__kwdefaults__ will not "
                 "currently affect the values used in function calls", 1);
    Py_INCREF(value);
    __Pyx_Py_XDECREF_SET(op->defaults_kwdict, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_kwdefaults(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->defaults_kwdict;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        if (op->defaults_getter) {
            if (unlikely(__Pyx_CyFunction_init_defaults(op) < 0)) return NULL;
            result = op->defaults_kwdict;
        } else {
            result = Py_None;
        }
    }
    Py_INCREF(result);
    return result;
}
static int
__Pyx_CyFunction_set_annotations(__pyx_CyFunctionObject *op, PyObject* value, void *context) {
    CYTHON_UNUSED_VAR(context);
    if (!value || value == Py_None) {
        value = NULL;
    } else if (unlikely(!PyDict_Check(value))) {
        PyErr_SetString(PyExc_TypeError,
                        "__annotations__ must be set to a dict object");
        return -1;
    }
    Py_XINCREF(value);
    __Pyx_Py_XDECREF_SET(op->func_annotations, value);
    return 0;
}
static PyObject *
__Pyx_CyFunction_get_annotations(__pyx_CyFunctionObject *op, void *context) {
    PyObject* result = op->func_annotations;
    CYTHON_UNUSED_VAR(context);
    if (unlikely(!result)) {
        result = PyDict_New();
        if (unlikely(!result)) return NULL;
        op->func_annotations = result;
    }
    Py_INCREF(result);
    return result;
}
static PyObject *
__Pyx_CyFunction_get_is_coroutine(__pyx_CyFunctionObject *op, void *context) {
    int is_coroutine;
    CYTHON_UNUSED_VAR(context);
    if (op->func_is_coroutine) {
        return __Pyx_NewRef(op->func_is_coroutine);
    }
    is_coroutine = op->flags & __Pyx_CYFUNCTION_COROUTINE;
#if PY_VERSION_HEX >= 0x03050000
    if (is_coroutine) {
        PyObject *module, *fromlist, *marker = __pyx_n_s_is_coroutine;
        fromlist = PyList_New(1);
        if (unlikely(!fromlist)) return NULL;
        Py_INCREF(marker);
        PyList_SET_ITEM(fromlist, 0, marker);
        module = PyImport_ImportModuleLevelObject(__pyx_n_s_asyncio_coroutines, NULL, NULL, fromlist, 0);
        Py_DECREF(fromlist);
        if (unlikely(!module)) goto ignore;
        op->func_is_coroutine = __Pyx_PyObject_GetAttrStr(module, marker);
        Py_DECREF(module);
        if (likely(op->func_is_coroutine)) {
            return __Pyx_NewRef(op->func_is_coroutine);
        }
ignore:
        PyErr_Clear();
    }
#endif
    op->func_is_coroutine = __Pyx_PyBool_FromLong(is_coroutine);
    return __Pyx_NewRef(op->func_is_coroutine);
}
static PyGetSetDef __pyx_CyFunction_getsets[] = {
    {(char *) "func_doc", (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "__doc__",  (getter)__Pyx_CyFunction_get_doc, (setter)__Pyx_CyFunction_set_doc, 0, 0},
    {(char *) "func_name", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__name__", (getter)__Pyx_CyFunction_get_name, (setter)__Pyx_CyFunction_set_name, 0, 0},
    {(char *) "__qualname__", (getter)__Pyx_CyFunction_get_qualname, (setter)__Pyx_CyFunction_set_qualname, 0, 0},
    {(char *) "func_dict", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "__dict__", (getter)__Pyx_CyFunction_get_dict, (setter)__Pyx_CyFunction_set_dict, 0, 0},
    {(char *) "func_globals", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "__globals__", (getter)__Pyx_CyFunction_get_globals, 0, 0, 0},
    {(char *) "func_closure", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "__closure__", (getter)__Pyx_CyFunction_get_closure, 0, 0, 0},
    {(char *) "func_code", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "__code__", (getter)__Pyx_CyFunction_get_code, 0, 0, 0},
    {(char *) "func_defaults", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__defaults__", (getter)__Pyx_CyFunction_get_defaults, (setter)__Pyx_CyFunction_set_defaults, 0, 0},
    {(char *) "__kwdefaults__", (getter)__Pyx_CyFunction_get_kwdefaults, (setter)__Pyx_CyFunction_set_kwdefaults, 0, 0},
    {(char *) "__annotations__", (getter)__Pyx_CyFunction_get_annotations, (setter)__Pyx_CyFunction_set_annotations, 0, 0},
    {(char *) "_is_coroutine", (getter)__Pyx_CyFunction_get_is_coroutine, 0, 0, 0},
    {0, 0, 0, 0, 0}
};
static PyMemberDef __pyx_CyFunction_members[] = {
    {(char *) "__module__", T_OBJECT, offsetof(PyCFunctionObject, m_module), 0, 0},
#if CYTHON_USE_TYPE_SPECS
    {(char *) "__dictoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_dict), READONLY, 0},
#if CYTHON_METH_FASTCALL
#if CYTHON_BACKPORT_VECTORCALL
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_vectorcall), READONLY, 0},
#else
    {(char *) "__vectorcalloffset__", T_PYSSIZET, offsetof(PyCFunctionObject, vectorcall), READONLY, 0},
#endif
#endif
#if PY_VERSION_HEX < 0x030500A0
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(__pyx_CyFunctionObject, func_weakreflist), READONLY, 0},
#else
    {(char *) "__weaklistoffset__", T_PYSSIZET, offsetof(PyCFunctionObject, m_weakreflist), READONLY, 0},
#endif
#endif
    {0, 0, 0,  0, 0}
};
static PyObject *
__Pyx_CyFunction_reduce(__pyx_CyFunctionObject *m, PyObject *args)
{
    CYTHON_UNUSED_VAR(args);
#if PY_MAJOR_VERSION >= 3
    Py_INCREF(m->func_qualname);
    return m->func_qualname;
#else
    return PyString_FromString(((PyCFunctionObject*)m)->m_ml->ml_name);
#endif
}
static PyMethodDef __pyx_CyFunction_methods[] = {
    {"__reduce__", (PyCFunction)__Pyx_CyFunction_reduce, METH_VARARGS, 0},
    {0, 0, 0, 0}
};
#if PY_VERSION_HEX < 0x030500A0
#define __Pyx_CyFunction_weakreflist(cyfunc) ((cyfunc)->func_weakreflist)
#else
#define __Pyx_CyFunction_weakreflist(cyfunc) (((PyCFunctionObject*)cyfunc)->m_weakreflist)
#endif
static PyObject *__Pyx_CyFunction_Init(__pyx_CyFunctionObject *op, PyMethodDef *ml, int flags, PyObject* qualname,
                                       PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyCFunctionObject *cf = (PyCFunctionObject*) op;
    if (unlikely(op == NULL))
        return NULL;
    op->flags = flags;
    __Pyx_CyFunction_weakreflist(op) = NULL;
    cf->m_ml = ml;
    cf->m_self = (PyObject *) op;
    Py_XINCREF(closure);
    op->func_closure = closure;
    Py_XINCREF(module);
    cf->m_module = module;
    op->func_dict = NULL;
    op->func_name = NULL;
    Py_INCREF(qualname);
    op->func_qualname = qualname;
    op->func_doc = NULL;
#if PY_VERSION_HEX < 0x030900B1
    op->func_classobj = NULL;
#else
    ((PyCMethodObject*)op)->mm_class = NULL;
#endif
    op->func_globals = globals;
    Py_INCREF(op->func_globals);
    Py_XINCREF(code);
    op->func_code = code;
    op->defaults_pyobjects = 0;
    op->defaults_size = 0;
    op->defaults = NULL;
    op->defaults_tuple = NULL;
    op->defaults_kwdict = NULL;
    op->defaults_getter = NULL;
    op->func_annotations = NULL;
    op->func_is_coroutine = NULL;
#if CYTHON_METH_FASTCALL
    switch (ml->ml_flags & (METH_VARARGS | METH_FASTCALL | METH_NOARGS | METH_O | METH_KEYWORDS | METH_METHOD)) {
    case METH_NOARGS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_NOARGS;
        break;
    case METH_O:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_O;
        break;
    case METH_METHOD | METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD;
        break;
    case METH_FASTCALL | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS;
        break;
    case METH_VARARGS | METH_KEYWORDS:
        __Pyx_CyFunction_func_vectorcall(op) = NULL;
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        Py_DECREF(op);
        return NULL;
    }
#endif
    return (PyObject *) op;
}
static int
__Pyx_CyFunction_clear(__pyx_CyFunctionObject *m)
{
    Py_CLEAR(m->func_closure);
    Py_CLEAR(((PyCFunctionObject*)m)->m_module);
    Py_CLEAR(m->func_dict);
    Py_CLEAR(m->func_name);
    Py_CLEAR(m->func_qualname);
    Py_CLEAR(m->func_doc);
    Py_CLEAR(m->func_globals);
    Py_CLEAR(m->func_code);
#if PY_VERSION_HEX < 0x030900B1
    Py_CLEAR(__Pyx_CyFunction_GetClassObj(m));
#else
    {
        PyObject *cls = (PyObject*) ((PyCMethodObject *) (m))->mm_class;
        ((PyCMethodObject *) (m))->mm_class = NULL;
        Py_XDECREF(cls);
    }
#endif
    Py_CLEAR(m->defaults_tuple);
    Py_CLEAR(m->defaults_kwdict);
    Py_CLEAR(m->func_annotations);
    Py_CLEAR(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_XDECREF(pydefaults[i]);
        PyObject_Free(m->defaults);
        m->defaults = NULL;
    }
    return 0;
}
static void __Pyx__CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    if (__Pyx_CyFunction_weakreflist(m) != NULL)
        PyObject_ClearWeakRefs((PyObject *) m);
    __Pyx_CyFunction_clear(m);
    __Pyx_PyHeapTypeObject_GC_Del(m);
}
static void __Pyx_CyFunction_dealloc(__pyx_CyFunctionObject *m)
{
    PyObject_GC_UnTrack(m);
    __Pyx__CyFunction_dealloc(m);
}
static int __Pyx_CyFunction_traverse(__pyx_CyFunctionObject *m, visitproc visit, void *arg)
{
    Py_VISIT(m->func_closure);
    Py_VISIT(((PyCFunctionObject*)m)->m_module);
    Py_VISIT(m->func_dict);
    Py_VISIT(m->func_name);
    Py_VISIT(m->func_qualname);
    Py_VISIT(m->func_doc);
    Py_VISIT(m->func_globals);
    Py_VISIT(m->func_code);
    Py_VISIT(__Pyx_CyFunction_GetClassObj(m));
    Py_VISIT(m->defaults_tuple);
    Py_VISIT(m->defaults_kwdict);
    Py_VISIT(m->func_is_coroutine);
    if (m->defaults) {
        PyObject **pydefaults = __Pyx_CyFunction_Defaults(PyObject *, m);
        int i;
        for (i = 0; i < m->defaults_pyobjects; i++)
            Py_VISIT(pydefaults[i]);
    }
    return 0;
}
static PyObject*
__Pyx_CyFunction_repr(__pyx_CyFunctionObject *op)
{
#if PY_MAJOR_VERSION >= 3
    return PyUnicode_FromFormat("<cyfunction %U at %p>",
                                op->func_qualname, (void *)op);
#else
    return PyString_FromFormat("<cyfunction %s at %p>",
                               PyString_AsString(op->func_qualname), (void *)op);
#endif
}
static PyObject * __Pyx_CyFunction_CallMethod(PyObject *func, PyObject *self, PyObject *arg, PyObject *kw) {
    PyCFunctionObject* f = (PyCFunctionObject*)func;
    PyCFunction meth = f->m_ml->ml_meth;
    Py_ssize_t size;
    switch (f->m_ml->ml_flags & (METH_VARARGS | METH_KEYWORDS | METH_NOARGS | METH_O)) {
    case METH_VARARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0))
            return (*meth)(self, arg);
        break;
    case METH_VARARGS | METH_KEYWORDS:
        return (*(PyCFunctionWithKeywords)(void*)meth)(self, arg, kw);
    case METH_NOARGS:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 0))
                return (*meth)(self, NULL);
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    case METH_O:
        if (likely(kw == NULL || PyDict_Size(kw) == 0)) {
            size = PyTuple_GET_SIZE(arg);
            if (likely(size == 1)) {
                PyObject *result, *arg0;
                #if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
                arg0 = PyTuple_GET_ITEM(arg, 0);
                #else
                arg0 = PySequence_ITEM(arg, 0); if (unlikely(!arg0)) return NULL;
                #endif
                result = (*meth)(self, arg0);
                #if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
                Py_DECREF(arg0);
                #endif
                return result;
            }
            PyErr_Format(PyExc_TypeError,
                "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
                f->m_ml->ml_name, size);
            return NULL;
        }
        break;
    default:
        PyErr_SetString(PyExc_SystemError, "Bad call flags for CyFunction");
        return NULL;
    }
    PyErr_Format(PyExc_TypeError, "%.200s() takes no keyword arguments",
                 f->m_ml->ml_name);
    return NULL;
}
static CYTHON_INLINE PyObject *__Pyx_CyFunction_Call(PyObject *func, PyObject *arg, PyObject *kw) {
    return __Pyx_CyFunction_CallMethod(func, ((PyCFunctionObject*)func)->m_self, arg, kw);
}
static PyObject *__Pyx_CyFunction_CallAsMethod(PyObject *func, PyObject *args, PyObject *kw) {
    PyObject *result;
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *) func;
#if CYTHON_METH_FASTCALL
     __pyx_vectorcallfunc vc = __Pyx_CyFunction_func_vectorcall(cyfunc);
    if (vc) {
#if CYTHON_ASSUME_SAFE_MACROS
        return __Pyx_PyVectorcall_FastCallDict(func, vc, &PyTuple_GET_ITEM(args, 0), (size_t)PyTuple_GET_SIZE(args), kw);
#else
        (void) &__Pyx_PyVectorcall_FastCallDict;
        return PyVectorcall_Call(func, args, kw);
#endif
    }
#endif
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        Py_ssize_t argc;
        PyObject *new_args;
        PyObject *self;
        argc = PyTuple_GET_SIZE(args);
        new_args = PyTuple_GetSlice(args, 1, argc);
        if (unlikely(!new_args))
            return NULL;
        self = PyTuple_GetItem(args, 0);
        if (unlikely(!self)) {
            Py_DECREF(new_args);
#if PY_MAJOR_VERSION > 2
            PyErr_Format(PyExc_TypeError,
                         "unbound method %.200S() needs an argument",
                         cyfunc->func_qualname);
#else
            PyErr_SetString(PyExc_TypeError,
                            "unbound method needs an argument");
#endif
            return NULL;
        }
        result = __Pyx_CyFunction_CallMethod(func, self, new_args, kw);
        Py_DECREF(new_args);
    } else {
        result = __Pyx_CyFunction_Call(func, args, kw);
    }
    return result;
}
#if CYTHON_METH_FASTCALL
static CYTHON_INLINE int __Pyx_CyFunction_Vectorcall_CheckArgs(__pyx_CyFunctionObject *cyfunc, Py_ssize_t nargs, PyObject *kwnames)
{
    int ret = 0;
    if ((cyfunc->flags & __Pyx_CYFUNCTION_CCLASS) && !(cyfunc->flags & __Pyx_CYFUNCTION_STATICMETHOD)) {
        if (unlikely(nargs < 1)) {
            PyErr_Format(PyExc_TypeError, "%.200s() needs an argument",
                         ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
            return -1;
        }
        ret = 1;
    }
    if (unlikely(kwnames) && unlikely(PyTuple_GET_SIZE(kwnames))) {
        PyErr_Format(PyExc_TypeError,
                     "%.200s() takes no keyword arguments", ((PyCFunctionObject*)cyfunc)->m_ml->ml_name);
        return -1;
    }
    return ret;
}
static PyObject * __Pyx_CyFunction_Vectorcall_NOARGS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 0)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes no arguments (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, NULL);
}
static PyObject * __Pyx_CyFunction_Vectorcall_O(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, kwnames)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    if (unlikely(nargs != 1)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s() takes exactly one argument (%" CYTHON_FORMAT_SSIZE_T "d given)",
            def->ml_name, nargs);
        return NULL;
    }
    return def->ml_meth(self, args[0]);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((_PyCFunctionFastWithKeywords)(void(*)(void))def->ml_meth)(self, args, nargs, kwnames);
}
static PyObject * __Pyx_CyFunction_Vectorcall_FASTCALL_KEYWORDS_METHOD(PyObject *func, PyObject *const *args, size_t nargsf, PyObject *kwnames)
{
    __pyx_CyFunctionObject *cyfunc = (__pyx_CyFunctionObject *)func;
    PyMethodDef* def = ((PyCFunctionObject*)cyfunc)->m_ml;
    PyTypeObject *cls = (PyTypeObject *) __Pyx_CyFunction_GetClassObj(cyfunc);
#if CYTHON_BACKPORT_VECTORCALL
    Py_ssize_t nargs = (Py_ssize_t)nargsf;
#else
    Py_ssize_t nargs = PyVectorcall_NARGS(nargsf);
#endif
    PyObject *self;
    switch (__Pyx_CyFunction_Vectorcall_CheckArgs(cyfunc, nargs, NULL)) {
    case 1:
        self = args[0];
        args += 1;
        nargs -= 1;
        break;
    case 0:
        self = ((PyCFunctionObject*)cyfunc)->m_self;
        break;
    default:
        return NULL;
    }
    return ((__Pyx_PyCMethod)(void(*)(void))def->ml_meth)(self, cls, args, (size_t)nargs, kwnames);
}
#endif
#if CYTHON_USE_TYPE_SPECS
static PyType_Slot __pyx_CyFunctionType_slots[] = {
    {Py_tp_dealloc, (void *)__Pyx_CyFunction_dealloc},
    {Py_tp_repr, (void *)__Pyx_CyFunction_repr},
    {Py_tp_call, (void *)__Pyx_CyFunction_CallAsMethod},
    {Py_tp_traverse, (void *)__Pyx_CyFunction_traverse},
    {Py_tp_clear, (void *)__Pyx_CyFunction_clear},
    {Py_tp_methods, (void *)__pyx_CyFunction_methods},
    {Py_tp_members, (void *)__pyx_CyFunction_members},
    {Py_tp_getset, (void *)__pyx_CyFunction_getsets},
    {Py_tp_descr_get, (void *)__Pyx_PyMethod_New},
    {0, 0},
};
static PyType_Spec __pyx_CyFunctionType_spec = {
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#if (defined(_Py_TPFLAGS_HAVE_VECTORCALL) && CYTHON_METH_FASTCALL)
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    __pyx_CyFunctionType_slots
};
#else
static PyTypeObject __pyx_CyFunctionType_type = {
    PyVarObject_HEAD_INIT(0, 0)
    __PYX_TYPE_MODULE_PREFIX "cython_function_or_method",
    sizeof(__pyx_CyFunctionObject),
    0,
    (destructor) __Pyx_CyFunction_dealloc,
#if !CYTHON_METH_FASTCALL
    0,
#elif CYTHON_BACKPORT_VECTORCALL
    (printfunc)offsetof(__pyx_CyFunctionObject, func_vectorcall),
#else
    offsetof(PyCFunctionObject, vectorcall),
#endif
    0,
    0,
#if PY_MAJOR_VERSION < 3
    0,
#else
    0,
#endif
    (reprfunc) __Pyx_CyFunction_repr,
    0,
    0,
    0,
    0,
    __Pyx_CyFunction_CallAsMethod,
    0,
    0,
    0,
    0,
#ifdef Py_TPFLAGS_METHOD_DESCRIPTOR
    Py_TPFLAGS_METHOD_DESCRIPTOR |
#endif
#ifdef _Py_TPFLAGS_HAVE_VECTORCALL
    _Py_TPFLAGS_HAVE_VECTORCALL |
#endif
    Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC | Py_TPFLAGS_BASETYPE,
    0,
    (traverseproc) __Pyx_CyFunction_traverse,
    (inquiry) __Pyx_CyFunction_clear,
    0,
#if PY_VERSION_HEX < 0x030500A0
    offsetof(__pyx_CyFunctionObject, func_weakreflist),
#else
    offsetof(PyCFunctionObject, m_weakreflist),
#endif
    0,
    0,
    __pyx_CyFunction_methods,
    __pyx_CyFunction_members,
    __pyx_CyFunction_getsets,
    0,
    0,
    __Pyx_PyMethod_New,
    0,
    offsetof(__pyx_CyFunctionObject, func_dict),
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
#if PY_VERSION_HEX >= 0x030400a1
    0,
#endif
#if PY_VERSION_HEX >= 0x030800b1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07030800)
    0,
#endif
#if __PYX_NEED_TP_PRINT_SLOT
    0,
#endif
#if PY_VERSION_HEX >= 0x030C0000
    0,
#endif
#if CYTHON_COMPILING_IN_PYPY && PY_VERSION_HEX >= 0x03090000 && PY_VERSION_HEX < 0x030a0000
    0,
#endif
};
#endif
static int __pyx_CyFunction_init(PyObject *module) {
#if CYTHON_USE_TYPE_SPECS
    __pyx_CyFunctionType = __Pyx_FetchCommonTypeFromSpec(module, &__pyx_CyFunctionType_spec, NULL);
#else
    CYTHON_UNUSED_VAR(module);
    __pyx_CyFunctionType = __Pyx_FetchCommonType(&__pyx_CyFunctionType_type);
#endif
    if (unlikely(__pyx_CyFunctionType == NULL)) {
        return -1;
    }
    return 0;
}
static CYTHON_INLINE void *__Pyx_CyFunction_InitDefaults(PyObject *func, size_t size, int pyobjects) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults = PyObject_Malloc(size);
    if (unlikely(!m->defaults))
        return PyErr_NoMemory();
    memset(m->defaults, 0, size);
    m->defaults_pyobjects = pyobjects;
    m->defaults_size = size;
    return m->defaults;
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsTuple(PyObject *func, PyObject *tuple) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_tuple = tuple;
    Py_INCREF(tuple);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetDefaultsKwDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->defaults_kwdict = dict;
    Py_INCREF(dict);
}
static CYTHON_INLINE void __Pyx_CyFunction_SetAnnotationsDict(PyObject *func, PyObject *dict) {
    __pyx_CyFunctionObject *m = (__pyx_CyFunctionObject *) func;
    m->func_annotations = dict;
    Py_INCREF(dict);
}

/* CythonFunction */
static PyObject *__Pyx_CyFunction_New(PyMethodDef *ml, int flags, PyObject* qualname,
                                      PyObject *closure, PyObject *module, PyObject* globals, PyObject* code) {
    PyObject *op = __Pyx_CyFunction_Init(
        PyObject_GC_New(__pyx_CyFunctionObject, __pyx_CyFunctionType),
        ml, flags, qualname, closure, module, globals, code
    );
    if (likely(op)) {
        PyObject_GC_Track(op);
    }
    return op;
}

/* PyDictVersioning */
#if CYTHON_USE_DICT_VERSIONS && CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE PY_UINT64_T __Pyx_get_tp_dict_version(PyObject *obj) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;
}
static CYTHON_INLINE PY_UINT64_T __Pyx_get_object_dict_version(PyObject *obj) {
    PyObject **dictptr = NULL;
    Py_ssize_t offset = Py_TYPE(obj)->tp_dictoffset;
    if (offset) {
#if CYTHON_COMPILING_IN_CPYTHON
        dictptr = (likely(offset > 0)) ? (PyObject **) ((char *)obj + offset) : _PyObject_GetDictPtr(obj);
#else
        dictptr = _PyObject_GetDictPtr(obj);
#endif
    }
    return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;
}
static CYTHON_INLINE int __Pyx_object_dict_version_matches(PyObject* obj, PY_UINT64_T tp_dict_version, PY_UINT64_T obj_dict_version) {
    PyObject *dict = Py_TYPE(obj)->tp_dict;
    if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))
        return 0;
    return obj_dict_version == __Pyx_get_object_dict_version(obj);
}
#endif

/* GetModuleGlobalName */
#if CYTHON_USE_DICT_VERSIONS
static PyObject *__Pyx__GetModuleGlobalName(PyObject *name, PY_UINT64_T *dict_version, PyObject **dict_cached_value)
#else
static CYTHON_INLINE PyObject *__Pyx__GetModuleGlobalName(PyObject *name)
#endif
{
    PyObject *result;
#if !CYTHON_AVOID_BORROWED_REFS
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030500A1
    result = _PyDict_GetItem_KnownHash(__pyx_d, name, ((PyASCIIObject *) name)->hash);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    } else if (unlikely(PyErr_Occurred())) {
        return NULL;
    }
#elif CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(!__pyx_m)) {
        return NULL;
    }
    result = PyObject_GetAttr(__pyx_m, name);
    if (likely(result)) {
        return result;
    }
#else
    result = PyDict_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
#endif
#else
    result = PyObject_GetItem(__pyx_d, name);
    __PYX_UPDATE_DICT_CACHE(__pyx_d, result, *dict_cached_value, *dict_version)
    if (likely(result)) {
        return __Pyx_NewRef(result);
    }
    PyErr_Clear();
#endif
    return __Pyx_GetBuiltinName(name);
}

/* UnpackUnboundCMethod */
static PyObject *__Pyx_SelflessCall(PyObject *method, PyObject *args, PyObject *kwargs) {
    PyObject *selfless_args = PyTuple_GetSlice(args, 1, PyTuple_Size(args));
    if (unlikely(!selfless_args)) return NULL;
    PyObject *result = PyObject_Call(method, selfless_args, kwargs);
    Py_DECREF(selfless_args);
    return result;
}
static PyMethodDef __Pyx_UnboundCMethod_Def = {
     "CythonUnboundCMethod",
     __PYX_REINTERPRET_FUNCION(PyCFunction, __Pyx_SelflessCall),
     METH_VARARGS | METH_KEYWORDS,
     NULL
};
static int __Pyx_TryUnpackUnboundCMethod(__Pyx_CachedCFunction* target) {
    PyObject *method;
    method = __Pyx_PyObject_GetAttrStr(target->type, *target->method_name);
    if (unlikely(!method))
        return -1;
    target->method = method;
#if CYTHON_COMPILING_IN_CPYTHON
    #if PY_MAJOR_VERSION >= 3
    if (likely(__Pyx_TypeCheck(method, &PyMethodDescr_Type)))
    #else
    if (likely(!PyCFunction_Check(method)))
    #endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject*) method;
        target->func = descr->d_method->ml_meth;
        target->flag = descr->d_method->ml_flags & ~(METH_CLASS | METH_STATIC | METH_COEXIST | METH_STACKLESS);
    } else
#endif
#if defined(CYTHON_COMPILING_IN_PYPY)
#elif PY_VERSION_HEX >= 0x03090000
    if (PyCFunction_CheckExact(method))
#else
    if (PyCFunction_Check(method))
#endif
    {
        PyObject *self;
        int self_found;
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        self = PyObject_GetAttrString(method, "__self__");
        if (!self) {
            PyErr_Clear();
        }
#else
        self = PyCFunction_GET_SELF(method);
#endif
        self_found = (self && self != Py_None);
#if CYTHON_COMPILING_IN_LIMITED_API || CYTHON_COMPILING_IN_PYPY
        Py_XDECREF(self);
#endif
        if (self_found) {
            PyObject *unbound_method = PyCFunction_New(&__Pyx_UnboundCMethod_Def, method);
            if (unlikely(!unbound_method)) return -1;
            Py_DECREF(method);
            target->method = unbound_method;
        }
    }
    return 0;
}

/* CallUnboundCMethod1 */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE PyObject* __Pyx_CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg) {
    if (likely(cfunc->func)) {
        int flag = cfunc->flag;
        if (flag == METH_O) {
            return (*(cfunc->func))(self, arg);
        } else if ((PY_VERSION_HEX >= 0x030600B1) && flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
                return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, &arg, 1);
            #else
                return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
            #endif
        } else if ((PY_VERSION_HEX >= 0x030700A0) && flag == (METH_FASTCALL | METH_KEYWORDS)) {
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, &arg, 1, NULL);
        }
    }
    return __Pyx__CallUnboundCMethod1(cfunc, self, arg);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod1(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 0, arg);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg);
        PyTuple_SET_ITEM(args, 1, arg);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(2, self, arg);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* CallUnboundCMethod2 */
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030600B1
static CYTHON_INLINE PyObject *__Pyx_CallUnboundCMethod2(__Pyx_CachedCFunction *cfunc, PyObject *self, PyObject *arg1, PyObject *arg2) {
    if (likely(cfunc->func)) {
        PyObject *args[2] = {arg1, arg2};
        if (cfunc->flag == METH_FASTCALL) {
            #if PY_VERSION_HEX >= 0x030700A0
            return (*(__Pyx_PyCFunctionFast)(void*)(PyCFunction)cfunc->func)(self, args, 2);
            #else
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
            #endif
        }
        #if PY_VERSION_HEX >= 0x030700A0
        if (cfunc->flag == (METH_FASTCALL | METH_KEYWORDS))
            return (*(__Pyx_PyCFunctionFastWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, 2, NULL);
        #endif
    }
    return __Pyx__CallUnboundCMethod2(cfunc, self, arg1, arg2);
}
#endif
static PyObject* __Pyx__CallUnboundCMethod2(__Pyx_CachedCFunction* cfunc, PyObject* self, PyObject* arg1, PyObject* arg2){
    PyObject *args, *result = NULL;
    if (unlikely(!cfunc->func && !cfunc->method) && unlikely(__Pyx_TryUnpackUnboundCMethod(cfunc) < 0)) return NULL;
#if CYTHON_COMPILING_IN_CPYTHON
    if (cfunc->func && (cfunc->flag & METH_VARARGS)) {
        args = PyTuple_New(2);
        if (unlikely(!args)) goto bad;
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 0, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 1, arg2);
        if (cfunc->flag & METH_KEYWORDS)
            result = (*(PyCFunctionWithKeywords)(void*)(PyCFunction)cfunc->func)(self, args, NULL);
        else
            result = (*cfunc->func)(self, args);
    } else {
        args = PyTuple_New(3);
        if (unlikely(!args)) goto bad;
        Py_INCREF(self);
        PyTuple_SET_ITEM(args, 0, self);
        Py_INCREF(arg1);
        PyTuple_SET_ITEM(args, 1, arg1);
        Py_INCREF(arg2);
        PyTuple_SET_ITEM(args, 2, arg2);
        result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
    }
#else
    args = PyTuple_Pack(3, self, arg1, arg2);
    if (unlikely(!args)) goto bad;
    result = __Pyx_PyObject_Call(cfunc->method, args, NULL);
#endif
bad:
    Py_XDECREF(args);
    return result;
}

/* dict_getitem_default */
static PyObject* __Pyx_PyDict_GetItemDefault(PyObject* d, PyObject* key, PyObject* default_value) {
    PyObject* value;
#if PY_MAJOR_VERSION >= 3 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM >= 0x07020000)
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (unlikely(PyErr_Occurred()))
            return NULL;
        value = default_value;
    }
    Py_INCREF(value);
    if ((1));
#else
    if (PyString_CheckExact(key) || PyUnicode_CheckExact(key) || PyInt_CheckExact(key)) {
        value = PyDict_GetItem(d, key);
        if (unlikely(!value)) {
            value = default_value;
        }
        Py_INCREF(value);
    }
#endif
    else {
        if (default_value == Py_None)
            value = __Pyx_CallUnboundCMethod1(&__pyx_umethod_PyDict_Type_get, d, key);
        else
            value = __Pyx_CallUnboundCMethod2(&__pyx_umethod_PyDict_Type_get, d, key, default_value);
    }
    return value;
}

/* ExtTypeTest */
static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    __Pyx_TypeName obj_type_name;
    __Pyx_TypeName type_name;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(__Pyx_TypeCheck(obj, type)))
        return 1;
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    type_name = __Pyx_PyType_GetName(type);
    PyErr_Format(PyExc_TypeError,
                 "Cannot convert " __Pyx_FMT_TYPENAME " to " __Pyx_FMT_TYPENAME,
                 obj_type_name, type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    __Pyx_DECREF_TypeName(type_name);
    return 0;
}

/* KeywordStringCheck */
static int __Pyx_CheckKeywordStrings(
    PyObject *kw,
    const char* function_name,
    int kw_allowed)
{
    PyObject* key = 0;
    Py_ssize_t pos = 0;
#if CYTHON_COMPILING_IN_PYPY
    if (!kw_allowed && PyDict_Next(kw, &pos, &key, 0))
        goto invalid_keyword;
    return 1;
#else
    if (CYTHON_METH_FASTCALL && likely(PyTuple_Check(kw))) {
        if (unlikely(PyTuple_GET_SIZE(kw) == 0))
            return 1;
        if (!kw_allowed) {
            key = PyTuple_GET_ITEM(kw, 0);
            goto invalid_keyword;
        }
#if PY_VERSION_HEX < 0x03090000
        for (pos = 0; pos < PyTuple_GET_SIZE(kw); pos++) {
            key = PyTuple_GET_ITEM(kw, pos);
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
        }
#endif
        return 1;
    }
    while (PyDict_Next(kw, &pos, &key, 0)) {
        #if PY_MAJOR_VERSION < 3
        if (unlikely(!PyString_Check(key)))
        #endif
            if (unlikely(!PyUnicode_Check(key)))
                goto invalid_keyword_type;
    }
    if (!kw_allowed && unlikely(key))
        goto invalid_keyword;
    return 1;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%.200s() keywords must be strings", function_name);
    return 0;
#endif
invalid_keyword:
    #if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_TypeError,
        "%.200s() got an unexpected keyword argument '%.200s'",
        function_name, PyString_AsString(key));
    #else
    PyErr_Format(PyExc_TypeError,
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
    return 0;
}

/* IterFinish */
static CYTHON_INLINE int __Pyx_IterFinish(void) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    PyObject* exc_type = __Pyx_PyErr_CurrentExceptionType();
    if (unlikely(exc_type)) {
        if (unlikely(!__Pyx_PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)))
            return -1;
        __Pyx_PyErr_Clear();
        return 0;
    }
    return 0;
}

/* PyObjectCallNoArg */
static CYTHON_INLINE PyObject* __Pyx_PyObject_CallNoArg(PyObject *func) {
    PyObject *arg = NULL;
    return __Pyx_PyObject_FastCall(func, (&arg)+1, 0 | __Pyx_PY_VECTORCALL_ARGUMENTS_OFFSET);
}

/* PyObjectGetMethod */
static int __Pyx_PyObject_GetMethod(PyObject *obj, PyObject *name, PyObject **method) {
    PyObject *attr;
#if CYTHON_UNPACK_METHODS && CYTHON_COMPILING_IN_CPYTHON && CYTHON_USE_PYTYPE_LOOKUP
    __Pyx_TypeName type_name;
    PyTypeObject *tp = Py_TYPE(obj);
    PyObject *descr;
    descrgetfunc f = NULL;
    PyObject **dictptr, *dict;
    int meth_found = 0;
    assert (*method == NULL);
    if (unlikely(tp->tp_getattro != PyObject_GenericGetAttr)) {
        attr = __Pyx_PyObject_GetAttrStr(obj, name);
        goto try_unpack;
    }
    if (unlikely(tp->tp_dict == NULL) && unlikely(PyType_Ready(tp) < 0)) {
        return 0;
    }
    descr = _PyType_Lookup(tp, name);
    if (likely(descr != NULL)) {
        Py_INCREF(descr);
#if defined(Py_TPFLAGS_METHOD_DESCRIPTOR) && Py_TPFLAGS_METHOD_DESCRIPTOR
        if (__Pyx_PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_METHOD_DESCRIPTOR))
#elif PY_MAJOR_VERSION >= 3
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr) || __Pyx_IS_TYPE(descr, &PyMethodDescr_Type)))
        #endif
#else
        #ifdef __Pyx_CyFunction_USED
        if (likely(PyFunction_Check(descr) || __Pyx_CyFunction_Check(descr)))
        #else
        if (likely(PyFunction_Check(descr)))
        #endif
#endif
        {
            meth_found = 1;
        } else {
            f = Py_TYPE(descr)->tp_descr_get;
            if (f != NULL && PyDescr_IsData(descr)) {
                attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
                Py_DECREF(descr);
                goto try_unpack;
            }
        }
    }
    dictptr = _PyObject_GetDictPtr(obj);
    if (dictptr != NULL && (dict = *dictptr) != NULL) {
        Py_INCREF(dict);
        attr = __Pyx_PyDict_GetItemStr(dict, name);
        if (attr != NULL) {
            Py_INCREF(attr);
            Py_DECREF(dict);
            Py_XDECREF(descr);
            goto try_unpack;
        }
        Py_DECREF(dict);
    }
    if (meth_found) {
        *method = descr;
        return 1;
    }
    if (f != NULL) {
        attr = f(descr, obj, (PyObject *)Py_TYPE(obj));
        Py_DECREF(descr);
        goto try_unpack;
    }
    if (likely(descr != NULL)) {
        *method = descr;
        return 0;
    }
    type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return 0;
#else
    attr = __Pyx_PyObject_GetAttrStr(obj, name);
    goto try_unpack;
#endif
try_unpack:
#if CYTHON_UNPACK_METHODS
    if (likely(attr) && PyMethod_Check(attr) && likely(PyMethod_GET_SELF(attr) == obj)) {
        PyObject *function = PyMethod_GET_FUNCTION(attr);
        Py_INCREF(function);
        Py_DECREF(attr);
        *method = function;
        return 1;
    }
#endif
    *method = attr;
    return 0;
}

/* PyObjectCallMethod0 */
static PyObject* __Pyx_PyObject_CallMethod0(PyObject* obj, PyObject* method_name) {
    PyObject *method = NULL, *result = NULL;
    int is_method = __Pyx_PyObject_GetMethod(obj, method_name, &method);
    if (likely(is_method)) {
        result = __Pyx_PyObject_CallOneArg(method, obj);
        Py_DECREF(method);
        return result;
    }
    if (unlikely(!method)) goto bad;
    result = __Pyx_PyObject_CallNoArg(method);
    Py_DECREF(method);
bad:
    return result;
}

/* RaiseNeedMoreValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%.1s to unpack",
                 index, (index == 1) ? "" : "s");
}

/* RaiseTooManyValuesToUnpack */
static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

/* UnpackItemEndCheck */
static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    }
    return __Pyx_IterFinish();
}

/* RaiseNoneIterError */
static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

/* UnpackTupleError */
static void __Pyx_UnpackTupleError(PyObject *t, Py_ssize_t index) {
    if (t == Py_None) {
      __Pyx_RaiseNoneNotIterableError();
    } else if (PyTuple_GET_SIZE(t) < index) {
      __Pyx_RaiseNeedMoreValuesError(PyTuple_GET_SIZE(t));
    } else {
      __Pyx_RaiseTooManyValuesError(index);
    }
}

/* UnpackTuple2 */
static CYTHON_INLINE int __Pyx_unpack_tuple2_exact(
        PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2, int decref_tuple) {
    PyObject *value1 = NULL, *value2 = NULL;
#if CYTHON_COMPILING_IN_PYPY
    value1 = PySequence_ITEM(tuple, 0);  if (unlikely(!value1)) goto bad;
    value2 = PySequence_ITEM(tuple, 1);  if (unlikely(!value2)) goto bad;
#else
    value1 = PyTuple_GET_ITEM(tuple, 0);  Py_INCREF(value1);
    value2 = PyTuple_GET_ITEM(tuple, 1);  Py_INCREF(value2);
#endif
    if (decref_tuple) {
        Py_DECREF(tuple);
    }
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
#if CYTHON_COMPILING_IN_PYPY
bad:
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
#endif
}
static int __Pyx_unpack_tuple2_generic(PyObject* tuple, PyObject** pvalue1, PyObject** pvalue2,
                                       int has_known_size, int decref_tuple) {
    Py_ssize_t index;
    PyObject *value1 = NULL, *value2 = NULL, *iter = NULL;
    iternextfunc iternext;
    iter = PyObject_GetIter(tuple);
    if (unlikely(!iter)) goto bad;
    if (decref_tuple) { Py_DECREF(tuple); tuple = NULL; }
    iternext = __Pyx_PyObject_GetIterNextFunc(iter);
    value1 = iternext(iter); if (unlikely(!value1)) { index = 0; goto unpacking_failed; }
    value2 = iternext(iter); if (unlikely(!value2)) { index = 1; goto unpacking_failed; }
    if (!has_known_size && unlikely(__Pyx_IternextUnpackEndCheck(iternext(iter), 2))) goto bad;
    Py_DECREF(iter);
    *pvalue1 = value1;
    *pvalue2 = value2;
    return 0;
unpacking_failed:
    if (!has_known_size && __Pyx_IterFinish() == 0)
        __Pyx_RaiseNeedMoreValuesError(index);
bad:
    Py_XDECREF(iter);
    Py_XDECREF(value1);
    Py_XDECREF(value2);
    if (decref_tuple) { Py_XDECREF(tuple); }
    return -1;
}

/* dict_iter */
static CYTHON_INLINE PyObject* __Pyx_dict_iterator(PyObject* iterable, int is_dict, PyObject* method_name,
                                                   Py_ssize_t* p_orig_length, int* p_source_is_dict) {
    is_dict = is_dict || likely(PyDict_CheckExact(iterable));
    *p_source_is_dict = is_dict;
    if (is_dict) {
#if !CYTHON_COMPILING_IN_PYPY
        *p_orig_length = PyDict_Size(iterable);
        Py_INCREF(iterable);
        return iterable;
#elif PY_MAJOR_VERSION >= 3
        static PyObject *py_items = NULL, *py_keys = NULL, *py_values = NULL;
        PyObject **pp = NULL;
        if (method_name) {
            const char *name = PyUnicode_AsUTF8(method_name);
            if (strcmp(name, "iteritems") == 0) pp = &py_items;
            else if (strcmp(name, "iterkeys") == 0) pp = &py_keys;
            else if (strcmp(name, "itervalues") == 0) pp = &py_values;
            if (pp) {
                if (!*pp) {
                    *pp = PyUnicode_FromString(name + 4);
                    if (!*pp)
                        return NULL;
                }
                method_name = *pp;
            }
        }
#endif
    }
    *p_orig_length = 0;
    if (method_name) {
        PyObject* iter;
        iterable = __Pyx_PyObject_CallMethod0(iterable, method_name);
        if (!iterable)
            return NULL;
#if !CYTHON_COMPILING_IN_PYPY
        if (PyTuple_CheckExact(iterable) || PyList_CheckExact(iterable))
            return iterable;
#endif
        iter = PyObject_GetIter(iterable);
        Py_DECREF(iterable);
        return iter;
    }
    return PyObject_GetIter(iterable);
}
static CYTHON_INLINE int __Pyx_dict_iter_next(
        PyObject* iter_obj, CYTHON_NCP_UNUSED Py_ssize_t orig_length, CYTHON_NCP_UNUSED Py_ssize_t* ppos,
        PyObject** pkey, PyObject** pvalue, PyObject** pitem, int source_is_dict) {
    PyObject* next_item;
#if !CYTHON_COMPILING_IN_PYPY
    if (source_is_dict) {
        PyObject *key, *value;
        if (unlikely(orig_length != PyDict_Size(iter_obj))) {
            PyErr_SetString(PyExc_RuntimeError, "dictionary changed size during iteration");
            return -1;
        }
        if (unlikely(!PyDict_Next(iter_obj, ppos, &key, &value))) {
            return 0;
        }
        if (pitem) {
            PyObject* tuple = PyTuple_New(2);
            if (unlikely(!tuple)) {
                return -1;
            }
            Py_INCREF(key);
            Py_INCREF(value);
            PyTuple_SET_ITEM(tuple, 0, key);
            PyTuple_SET_ITEM(tuple, 1, value);
            *pitem = tuple;
        } else {
            if (pkey) {
                Py_INCREF(key);
                *pkey = key;
            }
            if (pvalue) {
                Py_INCREF(value);
                *pvalue = value;
            }
        }
        return 1;
    } else if (PyTuple_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyTuple_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyTuple_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else if (PyList_CheckExact(iter_obj)) {
        Py_ssize_t pos = *ppos;
        if (unlikely(pos >= PyList_GET_SIZE(iter_obj))) return 0;
        *ppos = pos + 1;
        next_item = PyList_GET_ITEM(iter_obj, pos);
        Py_INCREF(next_item);
    } else
#endif
    {
        next_item = PyIter_Next(iter_obj);
        if (unlikely(!next_item)) {
            return __Pyx_IterFinish();
        }
    }
    if (pitem) {
        *pitem = next_item;
    } else if (pkey && pvalue) {
        if (__Pyx_unpack_tuple2(next_item, pkey, pvalue, source_is_dict, source_is_dict, 1))
            return -1;
    } else if (pkey) {
        *pkey = next_item;
    } else {
        *pvalue = next_item;
    }
    return 1;
}

/* DictGetItem */
#if PY_MAJOR_VERSION >= 3 && !CYTHON_COMPILING_IN_PYPY
static PyObject *__Pyx_PyDict_GetItem(PyObject *d, PyObject* key) {
    PyObject *value;
    value = PyDict_GetItemWithError(d, key);
    if (unlikely(!value)) {
        if (!PyErr_Occurred()) {
            if (unlikely(PyTuple_Check(key))) {
                PyObject* args = PyTuple_Pack(1, key);
                if (likely(args)) {
                    PyErr_SetObject(PyExc_KeyError, args);
                    Py_DECREF(args);
                }
            } else {
                PyErr_SetObject(PyExc_KeyError, key);
            }
        }
        return NULL;
    }
    Py_INCREF(value);
    return value;
}
#endif

/* SliceTupleAndList */
#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE void __Pyx_crop_slice(Py_ssize_t* _start, Py_ssize_t* _stop, Py_ssize_t* _length) {
    Py_ssize_t start = *_start, stop = *_stop, length = *_length;
    if (start < 0) {
        start += length;
        if (start < 0)
            start = 0;
    }
    if (stop < 0)
        stop += length;
    else if (stop > length)
        stop = length;
    *_length = stop - start;
    *_start = start;
    *_stop = stop;
}
static CYTHON_INLINE PyObject* __Pyx_PyList_GetSlice(
            PyObject* src, Py_ssize_t start, Py_ssize_t stop) {
    Py_ssize_t length = PyList_GET_SIZE(src);
    __Pyx_crop_slice(&start, &stop, &length);
    if (length <= 0) {
        return PyList_New(0);
    }
    return __Pyx_PyList_FromArray(((PyListObject*)src)->ob_item + start, length);
}
static CYTHON_INLINE PyObject* __Pyx_PyTuple_GetSlice(
            PyObject* src, Py_ssize_t start, Py_ssize_t stop) {
    Py_ssize_t length = PyTuple_GET_SIZE(src);
    __Pyx_crop_slice(&start, &stop, &length);
    return __Pyx_PyTuple_FromArray(((PyTupleObject*)src)->ob_item + start, length);
}
#endif

/* GetItemInt */
static PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (unlikely(!j)) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyList_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i,
                                                              CYTHON_NCP_UNUSED int wraparound,
                                                              CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
    Py_ssize_t wrapped_i = i;
    if (wraparound & unlikely(i < 0)) {
        wrapped_i += PyTuple_GET_SIZE(o);
    }
    if ((!boundscheck) || likely(__Pyx_is_valid_index(wrapped_i, PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, wrapped_i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i, int is_list,
                                                     CYTHON_NCP_UNUSED int wraparound,
                                                     CYTHON_NCP_UNUSED int boundscheck) {
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS && CYTHON_USE_TYPE_SLOTS
    if (is_list || PyList_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if ((!boundscheck) || (likely(__Pyx_is_valid_index(n, PyList_GET_SIZE(o))))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = ((!wraparound) | likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if ((!boundscheck) || likely(__Pyx_is_valid_index(n, PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {
        PyMappingMethods *mm = Py_TYPE(o)->tp_as_mapping;
        PySequenceMethods *sm = Py_TYPE(o)->tp_as_sequence;
        if (mm && mm->mp_subscript) {
            PyObject *r, *key = PyInt_FromSsize_t(i);
            if (unlikely(!key)) return NULL;
            r = mm->mp_subscript(o, key);
            Py_DECREF(key);
            return r;
        }
        if (likely(sm && sm->sq_item)) {
            if (wraparound && unlikely(i < 0) && likely(sm->sq_length)) {
                Py_ssize_t l = sm->sq_length(o);
                if (likely(l >= 0)) {
                    i += l;
                } else {
                    if (!PyErr_ExceptionMatches(PyExc_OverflowError))
                        return NULL;
                    PyErr_Clear();
                }
            }
            return sm->sq_item(o, i);
        }
    }
#else
    if (is_list || PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

/* UnicodeConcatInPlace */
# if CYTHON_COMPILING_IN_CPYTHON && PY_MAJOR_VERSION >= 3
static int
__Pyx_unicode_modifiable(PyObject *unicode)
{
    if (Py_REFCNT(unicode) != 1)
        return 0;
    if (!PyUnicode_CheckExact(unicode))
        return 0;
    if (PyUnicode_CHECK_INTERNED(unicode))
        return 0;
    return 1;
}
static CYTHON_INLINE PyObject *__Pyx_PyUnicode_ConcatInPlaceImpl(PyObject **p_left, PyObject *right
        #if CYTHON_REFNANNY
        , void* __pyx_refnanny
        #endif
    ) {
    PyObject *left = *p_left;
    Py_ssize_t left_len, right_len, new_len;
    if (unlikely(__Pyx_PyUnicode_READY(left) == -1))
        return NULL;
    if (unlikely(__Pyx_PyUnicode_READY(right) == -1))
        return NULL;
    left_len = PyUnicode_GET_LENGTH(left);
    if (left_len == 0) {
        Py_INCREF(right);
        return right;
    }
    right_len = PyUnicode_GET_LENGTH(right);
    if (right_len == 0) {
        Py_INCREF(left);
        return left;
    }
    if (unlikely(left_len > PY_SSIZE_T_MAX - right_len)) {
        PyErr_SetString(PyExc_OverflowError,
                        "strings are too large to concat");
        return NULL;
    }
    new_len = left_len + right_len;
    if (__Pyx_unicode_modifiable(left)
            && PyUnicode_CheckExact(right)
            && PyUnicode_KIND(right) <= PyUnicode_KIND(left)
            && !(PyUnicode_IS_ASCII(left) && !PyUnicode_IS_ASCII(right))) {
        __Pyx_GIVEREF(*p_left);
        if (unlikely(PyUnicode_Resize(p_left, new_len) != 0)) {
            __Pyx_GOTREF(*p_left);
            return NULL;
        }
        __Pyx_INCREF(*p_left);
        _PyUnicode_FastCopyCharacters(*p_left, left_len, right, 0, right_len);
        return *p_left;
    } else {
        return __Pyx_PyUnicode_Concat(left, right);
    }
  }
#endif

/* PyObjectSetAttrStr */
#if CYTHON_USE_TYPE_SLOTS
static CYTHON_INLINE int __Pyx_PyObject_SetAttrStr(PyObject* obj, PyObject* attr_name, PyObject* value) {
    PyTypeObject* tp = Py_TYPE(obj);
    if (likely(tp->tp_setattro))
        return tp->tp_setattro(obj, attr_name, value);
#if PY_MAJOR_VERSION < 3
    if (likely(tp->tp_setattr))
        return tp->tp_setattr(obj, PyString_AS_STRING(attr_name), value);
#endif
    return PyObject_SetAttr(obj, attr_name, value);
}
#endif

/* ArgTypeTest */
static int __Pyx__ArgTypeTest(PyObject *obj, PyTypeObject *type, const char *name, int exact)
{
    __Pyx_TypeName type_name;
    __Pyx_TypeName obj_type_name;
    if (unlikely(!type)) {
        PyErr_SetString(PyExc_SystemError, "Missing type object");
        return 0;
    }
    else if (exact) {
        #if PY_MAJOR_VERSION == 2
        if ((type == &PyBaseString_Type) && likely(__Pyx_PyBaseString_CheckExact(obj))) return 1;
        #endif
    }
    else {
        if (likely(__Pyx_TypeCheck(obj, type))) return 1;
    }
    type_name = __Pyx_PyType_GetName(type);
    obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError,
        "Argument '%.200s' has incorrect type (expected " __Pyx_FMT_TYPENAME
        ", got " __Pyx_FMT_TYPENAME ")", name, type_name, obj_type_name);
    __Pyx_DECREF_TypeName(type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* RaiseUnexpectedTypeError */
static int
__Pyx_RaiseUnexpectedTypeError(const char *expected, PyObject *obj)
{
    __Pyx_TypeName obj_type_name = __Pyx_PyType_GetName(Py_TYPE(obj));
    PyErr_Format(PyExc_TypeError, "Expected %s, got " __Pyx_FMT_TYPENAME,
                 expected, obj_type_name);
    __Pyx_DECREF_TypeName(obj_type_name);
    return 0;
}

/* GetAttr3 */
static PyObject *__Pyx_GetAttr3Default(PyObject *d) {
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    if (unlikely(!__Pyx_PyErr_ExceptionMatches(PyExc_AttributeError)))
        return NULL;
    __Pyx_PyErr_Clear();
    Py_INCREF(d);
    return d;
}
static CYTHON_INLINE PyObject *__Pyx_GetAttr3(PyObject *o, PyObject *n, PyObject *d) {
    PyObject *r;
#if CYTHON_USE_TYPE_SLOTS
    if (likely(PyString_Check(n))) {
        r = __Pyx_PyObject_GetAttrStrNoError(o, n);
        if (unlikely(!r) && likely(!PyErr_Occurred())) {
            r = __Pyx_NewRef(d);
        }
        return r;
    }
#endif
    r = PyObject_GetAttr(o, n);
    return (likely(r)) ? r : __Pyx_GetAttr3Default(d);
}

/* RaiseUnboundLocalError */
static CYTHON_INLINE void __Pyx_RaiseUnboundLocalError(const char *varname) {
    PyErr_Format(PyExc_UnboundLocalError, "local variable '%s' referenced before assignment", varname);
}

/* Import */
static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, int level) {
    PyObject *module = 0;
    PyObject *empty_dict = 0;
    PyObject *empty_list = 0;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_import;
    py_import = __Pyx_PyObject_GetAttrStr(__pyx_b, __pyx_n_s_import);
    if (unlikely(!py_import))
        goto bad;
    if (!from_list) {
        empty_list = PyList_New(0);
        if (unlikely(!empty_list))
            goto bad;
        from_list = empty_list;
    }
    #endif
    empty_dict = PyDict_New();
    if (unlikely(!empty_dict))
        goto bad;
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if ((1) && (strchr(__Pyx_MODULE_NAME, '.'))) {
                #if CYTHON_COMPILING_IN_LIMITED_API
                module = PyImport_ImportModuleLevelObject(
                    name, empty_dict, empty_dict, from_list, 1);
                #else
                module = PyImport_ImportModuleLevelObject(
                    name, __pyx_d, empty_dict, from_list, 1);
                #endif
                if (unlikely(!module)) {
                    if (unlikely(!PyErr_ExceptionMatches(PyExc_ImportError)))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0;
        }
        #endif
        if (!module) {
            #if PY_MAJOR_VERSION < 3
            PyObject *py_level = PyInt_FromLong(level);
            if (unlikely(!py_level))
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, __pyx_d, empty_dict, from_list, py_level, (PyObject *)NULL);
            Py_DECREF(py_level);
            #else
            #if CYTHON_COMPILING_IN_LIMITED_API
            module = PyImport_ImportModuleLevelObject(
                name, empty_dict, empty_dict, from_list, level);
            #else
            module = PyImport_ImportModuleLevelObject(
                name, __pyx_d, empty_dict, from_list, level);
            #endif
            #endif
        }
    }
bad:
    Py_XDECREF(empty_dict);
    Py_XDECREF(empty_list);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_import);
    #endif
    return module;
}

/* ImportFrom */
static PyObject* __Pyx_ImportFrom(PyObject* module, PyObject* name) {
    PyObject* value = __Pyx_PyObject_GetAttrStr(module, name);
    if (unlikely(!value) && PyErr_ExceptionMatches(PyExc_AttributeError)) {
        const char* module_name_str = 0;
        PyObject* module_name = 0;
        PyObject* module_dot = 0;
        PyObject* full_name = 0;
        PyErr_Clear();
        module_name_str = PyModule_GetName(module);
        if (unlikely(!module_name_str)) { goto modbad; }
        module_name = PyUnicode_FromString(module_name_str);
        if (unlikely(!module_name)) { goto modbad; }
        module_dot = PyUnicode_Concat(module_name, __pyx_kp_u__32);
        if (unlikely(!module_dot)) { goto modbad; }
        full_name = PyUnicode_Concat(module_dot, name);
        if (unlikely(!full_name)) { goto modbad; }
        #if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
        {
            PyObject *modules = PyImport_GetModuleDict();
            if (unlikely(!modules))
                goto modbad;
            value = PyObject_GetItem(modules, full_name);
        }
        #else
        value = PyImport_GetModule(full_name);
        #endif
      modbad:
        Py_XDECREF(full_name);
        Py_XDECREF(module_dot);
        Py_XDECREF(module_name);
    }
    if (unlikely(!value)) {
        PyErr_Format(PyExc_ImportError,
        #if PY_MAJOR_VERSION < 3
            "cannot import name %.230s", PyString_AS_STRING(name));
        #else
            "cannot import name %S", name);
        #endif
    }
    return value;
}

/* HasAttr */
static CYTHON_INLINE int __Pyx_HasAttr(PyObject *o, PyObject *n) {
    PyObject *r;
    if (unlikely(!__Pyx_PyBaseString_Check(n))) {
        PyErr_SetString(PyExc_TypeError,
                        "hasattr(): attribute name must be string");
        return -1;
    }
    r = __Pyx_GetAttr(o, n);
    if (!r) {
        PyErr_Clear();
        return 0;
    } else {
        Py_DECREF(r);
        return 1;
    }
}

/* CallNextTpTraverse */
static int __Pyx_call_next_tp_traverse(PyObject* obj, visitproc v, void *a, traverseproc current_tp_traverse) {
    PyTypeObject* type = Py_TYPE(obj);
    traverseproc tp_traverse = NULL;
    while (type && __Pyx_PyType_GetSlot(type, tp_traverse, traverseproc) != current_tp_traverse)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    while (type && (tp_traverse = __Pyx_PyType_GetSlot(type, tp_traverse, traverseproc)) == current_tp_traverse)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    if (type && tp_traverse)
        return tp_traverse(obj, v, a);
    return 0;
}

/* CallNextTpClear */
static void __Pyx_call_next_tp_clear(PyObject* obj, inquiry current_tp_clear) {
    PyTypeObject* type = Py_TYPE(obj);
    inquiry tp_clear = NULL;
    while (type && __Pyx_PyType_GetSlot(type, tp_clear, inquiry) != current_tp_clear)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    while (type && (tp_clear = __Pyx_PyType_GetSlot(type, tp_clear, inquiry)) == current_tp_clear)
        type = __Pyx_PyType_GetSlot(type, tp_base, PyTypeObject*);
    if (type && tp_clear)
        tp_clear(obj);
}

/* ValidateBasesTuple */
#if CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API || CYTHON_USE_TYPE_SPECS
static int __Pyx_validate_bases_tuple(const char *type_name, Py_ssize_t dictoffset, PyObject *bases) {
    Py_ssize_t i, n = PyTuple_GET_SIZE(bases);
    for (i = 1; i < n; i++)
    {
        PyObject *b0 = PyTuple_GET_ITEM(bases, i);
        PyTypeObject *b;
#if PY_MAJOR_VERSION < 3
        if (PyClass_Check(b0))
        {
            PyErr_Format(PyExc_TypeError, "base class '%.200s' is an old-style class",
                         PyString_AS_STRING(((PyClassObject*)b0)->cl_name));
            return -1;
        }
#endif
        b = (PyTypeObject*) b0;
        if (!__Pyx_PyType_HasFeature(b, Py_TPFLAGS_HEAPTYPE))
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "base class '" __Pyx_FMT_TYPENAME "' is not a heap type", b_name);
            __Pyx_DECREF_TypeName(b_name);
            return -1;
        }
        if (dictoffset == 0 && b->tp_dictoffset)
        {
            __Pyx_TypeName b_name = __Pyx_PyType_GetName(b);
            PyErr_Format(PyExc_TypeError,
                "extension type '%.200s' has no __dict__ slot, "
                "but base type '" __Pyx_FMT_TYPENAME "' has: "
                "either add 'cdef dict __dict__' to the extension type "
                "or add '__slots__ = [...]' to the base type",
                type_name, b_name);
            __Pyx_DECREF_TypeName(b_name);
            return -1;
        }
    }
    return 0;
}
#endif

/* PyType_Ready */
static int __Pyx_PyType_Ready(PyTypeObject *t) {
#if CYTHON_USE_TYPE_SPECS || !(CYTHON_COMPILING_IN_CPYTHON || CYTHON_COMPILING_IN_LIMITED_API) || defined(PYSTON_MAJOR_VERSION)
    (void)__Pyx_PyObject_CallMethod0;
#if CYTHON_USE_TYPE_SPECS
    (void)__Pyx_validate_bases_tuple;
#endif
    return PyType_Ready(t);
#else
    int r;
    PyObject *bases = __Pyx_PyType_GetSlot(t, tp_bases, PyObject*);
    if (bases && unlikely(__Pyx_validate_bases_tuple(t->tp_name, t->tp_dictoffset, bases) == -1))
        return -1;
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
    {
        int gc_was_enabled;
    #if PY_VERSION_HEX >= 0x030A00b1
        gc_was_enabled = PyGC_Disable();
        (void)__Pyx_PyObject_CallMethod0;
    #else
        PyObject *ret, *py_status;
        PyObject *gc = NULL;
        #if PY_VERSION_HEX >= 0x030700a1 && (!CYTHON_COMPILING_IN_PYPY || PYPY_VERSION_NUM+0 >= 0x07030400)
        gc = PyImport_GetModule(__pyx_kp_u_gc);
        #endif
        if (unlikely(!gc)) gc = PyImport_Import(__pyx_kp_u_gc);
        if (unlikely(!gc)) return -1;
        py_status = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_isenabled);
        if (unlikely(!py_status)) {
            Py_DECREF(gc);
            return -1;
        }
        gc_was_enabled = __Pyx_PyObject_IsTrue(py_status);
        Py_DECREF(py_status);
        if (gc_was_enabled > 0) {
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_disable);
            if (unlikely(!ret)) {
                Py_DECREF(gc);
                return -1;
            }
            Py_DECREF(ret);
        } else if (unlikely(gc_was_enabled == -1)) {
            Py_DECREF(gc);
            return -1;
        }
    #endif
        t->tp_flags |= Py_TPFLAGS_HEAPTYPE;
#if PY_VERSION_HEX >= 0x030A0000
        t->tp_flags |= Py_TPFLAGS_IMMUTABLETYPE;
#endif
#else
        (void)__Pyx_PyObject_CallMethod0;
#endif
    r = PyType_Ready(t);
#if PY_VERSION_HEX >= 0x03050000 && !defined(PYSTON_MAJOR_VERSION)
        t->tp_flags &= ~Py_TPFLAGS_HEAPTYPE;
    #if PY_VERSION_HEX >= 0x030A00b1
        if (gc_was_enabled)
            PyGC_Enable();
    #else
        if (gc_was_enabled) {
            PyObject *tp, *v, *tb;
            PyErr_Fetch(&tp, &v, &tb);
            ret = __Pyx_PyObject_CallMethod0(gc, __pyx_kp_u_enable);
            if (likely(ret || r == -1)) {
                Py_XDECREF(ret);
                PyErr_Restore(tp, v, tb);
            } else {
                Py_XDECREF(tp);
                Py_XDECREF(v);
                Py_XDECREF(tb);
                r = -1;
            }
        }
        Py_DECREF(gc);
    #endif
    }
#endif
    return r;
#endif
}

/* PyObject_GenericGetAttrNoDict */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject *__Pyx_RaiseGenericGetAttributeError(PyTypeObject *tp, PyObject *attr_name) {
    __Pyx_TypeName type_name = __Pyx_PyType_GetName(tp);
    PyErr_Format(PyExc_AttributeError,
#if PY_MAJOR_VERSION >= 3
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%U'",
                 type_name, attr_name);
#else
                 "'" __Pyx_FMT_TYPENAME "' object has no attribute '%.400s'",
                 type_name, PyString_AS_STRING(attr_name));
#endif
    __Pyx_DECREF_TypeName(type_name);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyObject_GenericGetAttrNoDict(PyObject* obj, PyObject* attr_name) {
    PyObject *descr;
    PyTypeObject *tp = Py_TYPE(obj);
    if (unlikely(!PyString_Check(attr_name))) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    assert(!tp->tp_dictoffset);
    descr = _PyType_Lookup(tp, attr_name);
    if (unlikely(!descr)) {
        return __Pyx_RaiseGenericGetAttributeError(tp, attr_name);
    }
    Py_INCREF(descr);
    #if PY_MAJOR_VERSION < 3
    if (likely(PyType_HasFeature(Py_TYPE(descr), Py_TPFLAGS_HAVE_CLASS)))
    #endif
    {
        descrgetfunc f = Py_TYPE(descr)->tp_descr_get;
        if (unlikely(f)) {
            PyObject *res = f(descr, obj, (PyObject *)tp);
            Py_DECREF(descr);
            return res;
        }
    }
    return descr;
}
#endif

/* PyObject_GenericGetAttr */
#if CYTHON_USE_TYPE_SLOTS && CYTHON_USE_PYTYPE_LOOKUP && PY_VERSION_HEX < 0x03070000
static PyObject* __Pyx_PyObject_GenericGetAttr(PyObject* obj, PyObject* attr_name) {
    if (unlikely(Py_TYPE(obj)->tp_dictoffset)) {
        return PyObject_GenericGetAttr(obj, attr_name);
    }
    return __Pyx_PyObject_GenericGetAttrNoDict(obj, attr_name);
}
#endif

/* SetVTable */
static int __Pyx_SetVtable(PyTypeObject *type, void *vtable) {
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
    if (unlikely(!ob))
        goto bad;
#if CYTHON_COMPILING_IN_LIMITED_API
    if (unlikely(PyObject_SetAttr((PyObject *) type, __pyx_n_s_pyx_vtable, ob) < 0))
#else
    if (unlikely(PyDict_SetItem(type->tp_dict, __pyx_n_s_pyx_vtable, ob) < 0))
#endif
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

/* GetVTable */
static void* __Pyx_GetVtable(PyTypeObject *type) {
    void* ptr;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *ob = PyObject_GetAttr((PyObject *)type, __pyx_n_s_pyx_vtable);
#else
    PyObject *ob = PyObject_GetItem(type->tp_dict, __pyx_n_s_pyx_vtable);
#endif
    if (!ob)
        goto bad;
    ptr = PyCapsule_GetPointer(ob, 0);
    if (!ptr && !PyErr_Occurred())
        PyErr_SetString(PyExc_RuntimeError, "invalid vtable found for imported type");
    Py_DECREF(ob);
    return ptr;
bad:
    Py_XDECREF(ob);
    return NULL;
}

/* MergeVTables */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_MergeVtables(PyTypeObject *type) {
    int i;
    void** base_vtables;
    __Pyx_TypeName tp_base_name;
    __Pyx_TypeName base_name;
    void* unknown = (void*)-1;
    PyObject* bases = type->tp_bases;
    int base_depth = 0;
    {
        PyTypeObject* base = type->tp_base;
        while (base) {
            base_depth += 1;
            base = base->tp_base;
        }
    }
    base_vtables = (void**) malloc(sizeof(void*) * (size_t)(base_depth + 1));
    base_vtables[0] = unknown;
    for (i = 1; i < PyTuple_GET_SIZE(bases); i++) {
        void* base_vtable = __Pyx_GetVtable(((PyTypeObject*)PyTuple_GET_ITEM(bases, i)));
        if (base_vtable != NULL) {
            int j;
            PyTypeObject* base = type->tp_base;
            for (j = 0; j < base_depth; j++) {
                if (base_vtables[j] == unknown) {
                    base_vtables[j] = __Pyx_GetVtable(base);
                    base_vtables[j + 1] = unknown;
                }
                if (base_vtables[j] == base_vtable) {
                    break;
                } else if (base_vtables[j] == NULL) {
                    goto bad;
                }
                base = base->tp_base;
            }
        }
    }
    PyErr_Clear();
    free(base_vtables);
    return 0;
bad:
    tp_base_name = __Pyx_PyType_GetName(type->tp_base);
    base_name = __Pyx_PyType_GetName((PyTypeObject*)PyTuple_GET_ITEM(bases, i));
    PyErr_Format(PyExc_TypeError,
        "multiple bases have vtable conflict: '" __Pyx_FMT_TYPENAME "' and '" __Pyx_FMT_TYPENAME "'", tp_base_name, base_name);
    __Pyx_DECREF_TypeName(tp_base_name);
    __Pyx_DECREF_TypeName(base_name);
    free(base_vtables);
    return -1;
}
#endif

/* SetupReduce */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __Pyx_setup_reduce_is_named(PyObject* meth, PyObject* name) {
  int ret;
  PyObject *name_attr;
  name_attr = __Pyx_PyObject_GetAttrStrNoError(meth, __pyx_n_s_name);
  if (likely(name_attr)) {
      ret = PyObject_RichCompareBool(name_attr, name, Py_EQ);
  } else {
      ret = -1;
  }
  if (unlikely(ret < 0)) {
      PyErr_Clear();
      ret = 0;
  }
  Py_XDECREF(name_attr);
  return ret;
}
static int __Pyx_setup_reduce(PyObject* type_obj) {
    int ret = 0;
    PyObject *object_reduce = NULL;
    PyObject *object_getstate = NULL;
    PyObject *object_reduce_ex = NULL;
    PyObject *reduce = NULL;
    PyObject *reduce_ex = NULL;
    PyObject *reduce_cython = NULL;
    PyObject *setstate = NULL;
    PyObject *setstate_cython = NULL;
    PyObject *getstate = NULL;
#if CYTHON_USE_PYTYPE_LOOKUP
    getstate = _PyType_Lookup((PyTypeObject*)type_obj, __pyx_n_s_getstate);
#else
    getstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_getstate);
    if (!getstate && PyErr_Occurred()) {
        goto __PYX_BAD;
    }
#endif
    if (getstate) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_getstate = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_getstate);
#else
        object_getstate = __Pyx_PyObject_GetAttrStrNoError((PyObject*)&PyBaseObject_Type, __pyx_n_s_getstate);
        if (!object_getstate && PyErr_Occurred()) {
            goto __PYX_BAD;
        }
#endif
        if (object_getstate != getstate) {
            goto __PYX_GOOD;
        }
    }
#if CYTHON_USE_PYTYPE_LOOKUP
    object_reduce_ex = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#else
    object_reduce_ex = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce_ex); if (!object_reduce_ex) goto __PYX_BAD;
#endif
    reduce_ex = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce_ex); if (unlikely(!reduce_ex)) goto __PYX_BAD;
    if (reduce_ex == object_reduce_ex) {
#if CYTHON_USE_PYTYPE_LOOKUP
        object_reduce = _PyType_Lookup(&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#else
        object_reduce = __Pyx_PyObject_GetAttrStr((PyObject*)&PyBaseObject_Type, __pyx_n_s_reduce); if (!object_reduce) goto __PYX_BAD;
#endif
        reduce = __Pyx_PyObject_GetAttrStr(type_obj, __pyx_n_s_reduce); if (unlikely(!reduce)) goto __PYX_BAD;
        if (reduce == object_reduce || __Pyx_setup_reduce_is_named(reduce, __pyx_n_s_reduce_cython)) {
            reduce_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_reduce_cython);
            if (likely(reduce_cython)) {
                ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce, reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_reduce_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
            } else if (reduce == object_reduce || PyErr_Occurred()) {
                goto __PYX_BAD;
            }
            setstate = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate);
            if (!setstate) PyErr_Clear();
            if (!setstate || __Pyx_setup_reduce_is_named(setstate, __pyx_n_s_setstate_cython)) {
                setstate_cython = __Pyx_PyObject_GetAttrStrNoError(type_obj, __pyx_n_s_setstate_cython);
                if (likely(setstate_cython)) {
                    ret = PyDict_SetItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate, setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                    ret = PyDict_DelItem(((PyTypeObject*)type_obj)->tp_dict, __pyx_n_s_setstate_cython); if (unlikely(ret < 0)) goto __PYX_BAD;
                } else if (!setstate || PyErr_Occurred()) {
                    goto __PYX_BAD;
                }
            }
            PyType_Modified((PyTypeObject*)type_obj);
        }
    }
    goto __PYX_GOOD;
__PYX_BAD:
    if (!PyErr_Occurred()) {
        __Pyx_TypeName type_obj_name =
            __Pyx_PyType_GetName((PyTypeObject*)type_obj);
        PyErr_Format(PyExc_RuntimeError,
            "Unable to initialize pickling for " __Pyx_FMT_TYPENAME, type_obj_name);
        __Pyx_DECREF_TypeName(type_obj_name);
    }
    ret = -1;
__PYX_GOOD:
#if !CYTHON_USE_PYTYPE_LOOKUP
    Py_XDECREF(object_reduce);
    Py_XDECREF(object_reduce_ex);
    Py_XDECREF(object_getstate);
    Py_XDECREF(getstate);
#endif
    Py_XDECREF(reduce);
    Py_XDECREF(reduce_ex);
    Py_XDECREF(reduce_cython);
    Py_XDECREF(setstate);
    Py_XDECREF(setstate_cython);
    return ret;
}
#endif

/* TypeImport */
#ifndef __PYX_HAVE_RT_ImportType_3_0_0
#define __PYX_HAVE_RT_ImportType_3_0_0
static PyTypeObject *__Pyx_ImportType_3_0_0(PyObject *module, const char *module_name, const char *class_name,
    size_t size, size_t alignment, enum __Pyx_ImportType_CheckSize_3_0_0 check_size)
{
    PyObject *result = 0;
    char warning[200];
    Py_ssize_t basicsize;
    Py_ssize_t itemsize;
#if CYTHON_COMPILING_IN_LIMITED_API
    PyObject *py_basicsize;
    PyObject *py_itemsize;
#endif
    result = PyObject_GetAttrString(module, class_name);
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%.200s.%.200s is not a type object",
            module_name, class_name);
        goto bad;
    }
#if !CYTHON_COMPILING_IN_LIMITED_API
    basicsize = ((PyTypeObject *)result)->tp_basicsize;
    itemsize = ((PyTypeObject *)result)->tp_itemsize;
#else
    py_basicsize = PyObject_GetAttrString(result, "__basicsize__");
    if (!py_basicsize)
        goto bad;
    basicsize = PyLong_AsSsize_t(py_basicsize);
    Py_DECREF(py_basicsize);
    py_basicsize = 0;
    if (basicsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
    py_itemsize = PyObject_GetAttrString(result, "__itemsize__");
    if (!py_itemsize)
        goto bad;
    itemsize = PyLong_AsSsize_t(py_itemsize);
    Py_DECREF(py_itemsize);
    py_itemsize = 0;
    if (itemsize == (Py_ssize_t)-1 && PyErr_Occurred())
        goto bad;
#endif
    if (itemsize) {
        if (size % alignment) {
            alignment = size % alignment;
        }
        if (itemsize < (Py_ssize_t)alignment)
            itemsize = (Py_ssize_t)alignment;
    }
    if ((size_t)(basicsize + itemsize) < size) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize+itemsize);
        goto bad;
    }
    if (check_size == __Pyx_ImportType_CheckSize_Error_3_0_0 &&
            ((size_t)basicsize > size || (size_t)(basicsize + itemsize) < size)) {
        PyErr_Format(PyExc_ValueError,
            "%.200s.%.200s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd-%zd from PyObject",
            module_name, class_name, size, basicsize, basicsize+itemsize);
        goto bad;
    }
    else if (check_size == __Pyx_ImportType_CheckSize_Warn_3_0_0 && (size_t)basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility. "
            "Expected %zd from C header, got %zd from PyObject",
            module_name, class_name, size, basicsize);
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(result);
    return NULL;
}
#endif

/* ImportDottedModule */
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Error(PyObject *name, PyObject *parts_tuple, Py_ssize_t count) {
    PyObject *partial_name = NULL, *slice = NULL, *sep = NULL;
    if (unlikely(PyErr_Occurred())) {
        PyErr_Clear();
    }
    if (likely(PyTuple_GET_SIZE(parts_tuple) == count)) {
        partial_name = name;
    } else {
        slice = PySequence_GetSlice(parts_tuple, 0, count);
        if (unlikely(!slice))
            goto bad;
        sep = PyUnicode_FromStringAndSize(".", 1);
        if (unlikely(!sep))
            goto bad;
        partial_name = PyUnicode_Join(sep, slice);
    }
    PyErr_Format(
#if PY_MAJOR_VERSION < 3
        PyExc_ImportError,
        "No module named '%s'", PyString_AS_STRING(partial_name));
#else
#if PY_VERSION_HEX >= 0x030600B1
        PyExc_ModuleNotFoundError,
#else
        PyExc_ImportError,
#endif
        "No module named '%U'", partial_name);
#endif
bad:
    Py_XDECREF(sep);
    Py_XDECREF(slice);
    Py_XDECREF(partial_name);
    return NULL;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx__ImportDottedModule_Lookup(PyObject *name) {
    PyObject *imported_module;
#if PY_VERSION_HEX < 0x030700A1 || (CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM  < 0x07030400)
    PyObject *modules = PyImport_GetModuleDict();
    if (unlikely(!modules))
        return NULL;
    imported_module = __Pyx_PyDict_GetItemStr(modules, name);
    Py_XINCREF(imported_module);
#else
    imported_module = PyImport_GetModule(name);
#endif
    return imported_module;
}
#endif
#if PY_MAJOR_VERSION >= 3
static PyObject *__Pyx_ImportDottedModule_WalkParts(PyObject *module, PyObject *name, PyObject *parts_tuple) {
    Py_ssize_t i, nparts;
    nparts = PyTuple_GET_SIZE(parts_tuple);
    for (i=1; i < nparts && module; i++) {
        PyObject *part, *submodule;
#if CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS
        part = PyTuple_GET_ITEM(parts_tuple, i);
#else
        part = PySequence_ITEM(parts_tuple, i);
#endif
        submodule = __Pyx_PyObject_GetAttrStrNoError(module, part);
#if !(CYTHON_ASSUME_SAFE_MACROS && !CYTHON_AVOID_BORROWED_REFS)
        Py_DECREF(part);
#endif
        Py_DECREF(module);
        module = submodule;
    }
    if (unlikely(!module)) {
        return __Pyx__ImportDottedModule_Error(name, parts_tuple, i);
    }
    return module;
}
#endif
static PyObject *__Pyx__ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if PY_MAJOR_VERSION < 3
    PyObject *module, *from_list, *star = __pyx_n_s__33;
    CYTHON_UNUSED_VAR(parts_tuple);
    from_list = PyList_New(1);
    if (unlikely(!from_list))
        return NULL;
    Py_INCREF(star);
    PyList_SET_ITEM(from_list, 0, star);
    module = __Pyx_Import(name, from_list, 0);
    Py_DECREF(from_list);
    return module;
#else
    PyObject *imported_module;
    PyObject *module = __Pyx_Import(name, NULL, 0);
    if (!parts_tuple || unlikely(!module))
        return module;
    imported_module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(imported_module)) {
        Py_DECREF(module);
        return imported_module;
    }
    PyErr_Clear();
    return __Pyx_ImportDottedModule_WalkParts(module, name, parts_tuple);
#endif
}
static PyObject *__Pyx_ImportDottedModule(PyObject *name, PyObject *parts_tuple) {
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX >= 0x030400B1
    PyObject *module = __Pyx__ImportDottedModule_Lookup(name);
    if (likely(module)) {
        PyObject *spec = __Pyx_PyObject_GetAttrStrNoError(module, __pyx_n_s_spec);
        if (likely(spec)) {
            PyObject *unsafe = __Pyx_PyObject_GetAttrStrNoError(spec, __pyx_n_s_initializing);
            if (likely(!unsafe || !__Pyx_PyObject_IsTrue(unsafe))) {
                Py_DECREF(spec);
                spec = NULL;
            }
            Py_XDECREF(unsafe);
        }
        if (likely(!spec)) {
            PyErr_Clear();
            return module;
        }
        Py_DECREF(spec);
        Py_DECREF(module);
    } else if (PyErr_Occurred()) {
        PyErr_Clear();
    }
#endif
    return __Pyx__ImportDottedModule(name, parts_tuple);
}

/* ClassMethod */
static PyObject* __Pyx_Method_ClassMethod(PyObject *method) {
#if CYTHON_COMPILING_IN_PYPY && PYPY_VERSION_NUM <= 0x05080000
    if (PyObject_TypeCheck(method, &PyWrapperDescr_Type)) {
        return PyClassMethod_New(method);
    }
#else
#if CYTHON_COMPILING_IN_PYPY
    if (PyMethodDescr_Check(method))
#else
    #if PY_MAJOR_VERSION == 2
    static PyTypeObject *methoddescr_type = NULL;
    if (unlikely(methoddescr_type == NULL)) {
       PyObject *meth = PyObject_GetAttrString((PyObject*)&PyList_Type, "append");
       if (unlikely(!meth)) return NULL;
       methoddescr_type = Py_TYPE(meth);
       Py_DECREF(meth);
    }
    #else
    PyTypeObject *methoddescr_type = &PyMethodDescr_Type;
    #endif
    if (__Pyx_TypeCheck(method, methoddescr_type))
#endif
    {
        PyMethodDescrObject *descr = (PyMethodDescrObject *)method;
        #if PY_VERSION_HEX < 0x03020000
        PyTypeObject *d_type = descr->d_type;
        #else
        PyTypeObject *d_type = descr->d_common.d_type;
        #endif
        return PyDescr_NewClassMethod(d_type, descr->d_method);
    }
#endif
    else if (PyMethod_Check(method)) {
        return PyClassMethod_New(PyMethod_GET_FUNCTION(method));
    }
    else {
        return PyClassMethod_New(method);
    }
}

/* GetNameInClass */
static PyObject *__Pyx__GetNameInClass(PyObject *nmspace, PyObject *name) {
    PyObject *result;
    PyObject *dict;
    assert(PyType_Check(nmspace));
#if CYTHON_USE_TYPE_SLOTS
    dict = ((PyTypeObject*)nmspace)->tp_dict;
    Py_XINCREF(dict);
#else
    dict = PyObject_GetAttr(nmspace, __pyx_n_s_dict);
#endif
    if (likely(dict)) {
        result = PyObject_GetItem(dict, name);
        Py_DECREF(dict);
        if (result) {
            return result;
        }
    }
    PyErr_Clear();
    __Pyx_GetModuleGlobalNameUncached(result, name);
    return result;
}

/* CLineInTraceback */
#ifndef CYTHON_CLINE_IN_TRACEBACK
static int __Pyx_CLineForTraceback(PyThreadState *tstate, int c_line) {
    PyObject *use_cline;
    PyObject *ptype, *pvalue, *ptraceback;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject **cython_runtime_dict;
#endif
    CYTHON_MAYBE_UNUSED_VAR(tstate);
    if (unlikely(!__pyx_cython_runtime)) {
        return c_line;
    }
    __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
#if CYTHON_COMPILING_IN_CPYTHON
    cython_runtime_dict = _PyObject_GetDictPtr(__pyx_cython_runtime);
    if (likely(cython_runtime_dict)) {
        __PYX_PY_DICT_LOOKUP_IF_MODIFIED(
            use_cline, *cython_runtime_dict,
            __Pyx_PyDict_GetItemStr(*cython_runtime_dict, __pyx_n_s_cline_in_traceback))
    } else
#endif
    {
      PyObject *use_cline_obj = __Pyx_PyObject_GetAttrStrNoError(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback);
      if (use_cline_obj) {
        use_cline = PyObject_Not(use_cline_obj) ? Py_False : Py_True;
        Py_DECREF(use_cline_obj);
      } else {
        PyErr_Clear();
        use_cline = NULL;
      }
    }
    if (!use_cline) {
        c_line = 0;
        (void) PyObject_SetAttr(__pyx_cython_runtime, __pyx_n_s_cline_in_traceback, Py_False);
    }
    else if (use_cline == Py_False || (use_cline != Py_True && PyObject_Not(use_cline) != 0)) {
        c_line = 0;
    }
    __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
    return c_line;
}
#endif

/* CodeObjectCache */
#if !CYTHON_COMPILING_IN_LIMITED_API
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = start + (end - start) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, ((size_t)new_max) * sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}
#endif

/* AddTraceback */
#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
#if PY_VERSION_HEX >= 0x030b00a6
  #ifndef Py_BUILD_CORE
    #define Py_BUILD_CORE 1
  #endif
  #include "internal/pycore_frame.h"
#endif
#if CYTHON_COMPILING_IN_LIMITED_API
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    if (c_line) {
        (void) __pyx_cfilenm;
        (void) __Pyx_CLineForTraceback(__Pyx_PyThreadState_Current, c_line);
    }
    _PyTraceback_Add(funcname, filename, py_line);
}
#else
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = NULL;
    PyObject *py_funcname = NULL;
    #if PY_MAJOR_VERSION < 3
    PyObject *py_srcfile = NULL;
    py_srcfile = PyString_FromString(filename);
    if (!py_srcfile) goto bad;
    #endif
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        if (!py_funcname) goto bad;
        funcname = PyUnicode_AsUTF8(py_funcname);
        if (!funcname) goto bad;
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        if (!py_funcname) goto bad;
        #endif
    }
    #if PY_MAJOR_VERSION < 3
    py_code = __Pyx_PyCode_New(
        0,
        0,
        0,
        0,
        0,
        0,
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    #else
    py_code = PyCode_NewEmpty(filename, funcname, py_line);
    #endif
    Py_XDECREF(py_funcname);  // XDECREF since it's only set on Py3 if cline
    return py_code;
bad:
    Py_XDECREF(py_funcname);
    #if PY_MAJOR_VERSION < 3
    Py_XDECREF(py_srcfile);
    #endif
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyFrameObject *py_frame = 0;
    PyThreadState *tstate = __Pyx_PyThreadState_Current;
    PyObject *ptype, *pvalue, *ptraceback;
    if (c_line) {
        c_line = __Pyx_CLineForTraceback(tstate, c_line);
    }
    py_code = __pyx_find_code_object(c_line ? -c_line : py_line);
    if (!py_code) {
        __Pyx_ErrFetchInState(tstate, &ptype, &pvalue, &ptraceback);
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) {
            /* If the code object creation fails, then we should clear the
               fetched exception references and propagate the new exception */
            Py_XDECREF(ptype);
            Py_XDECREF(pvalue);
            Py_XDECREF(ptraceback);
            goto bad;
        }
        __Pyx_ErrRestoreInState(tstate, ptype, pvalue, ptraceback);
        __pyx_insert_code_object(c_line ? -c_line : py_line, py_code);
    }
    py_frame = PyFrame_New(
        tstate,            /*PyThreadState *tstate,*/
        py_code,           /*PyCodeObject *code,*/
        __pyx_d,    /*PyObject *globals,*/
        0                  /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    __Pyx_PyFrame_SetLineNumber(py_frame, py_line);
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}
#endif

/* CIntFromPyVerify */
#define __PYX_VERIFY_RETURN_INT(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 0)
#define __PYX_VERIFY_RETURN_INT_EXC(target_type, func_type, func_value)\
    __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, 1)
#define __PYX__VERIFY_RETURN_INT(target_type, func_type, func_value, exc)\
    {\
        func_type value = func_value;\
        if (sizeof(target_type) < sizeof(func_type)) {\
            if (unlikely(value != (func_type) (target_type) value)) {\
                func_type zero = 0;\
                if (exc && unlikely(value == (func_type)-1 && PyErr_Occurred()))\
                    return (target_type) -1;\
                if (is_unsigned && unlikely(value < zero))\
                    goto raise_neg_overflow;\
                else\
                    goto raise_overflow;\
            }\
        }\
        return (target_type) value;\
    }

/* Declarations */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
#else
    static CYTHON_INLINE int __Pyx_c_eq_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sum_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_diff_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prod_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabsf(b.real) >= fabsf(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                float r = b.imag / b.real;
                float s = (float)(1.0) / (b.real + b.imag * r);
                return __pyx_t_float_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            float r = b.real / b.imag;
            float s = (float)(1.0) / (b.imag + b.real * r);
            return __pyx_t_float_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quot_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        if (b.imag == 0) {
            return __pyx_t_float_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            float denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_float_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_neg_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_float(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conj_float(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_abs_float(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_pow_float(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_float(a, a);
                    case 3:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, a);
                    case 4:
                        z = __Pyx_c_prod_float(a, a);
                        return __Pyx_c_prod_float(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if ((b.imag == 0) && (a.real >= 0)) {
                    z.real = powf(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2f(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_float(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

/* Declarations */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

/* Arithmetic */
#if CYTHON_CCOMPLEX && (1) && (!0 || __cplusplus)
#else
    static CYTHON_INLINE int __Pyx_c_eq_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    #if 1
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else if (fabs(b.real) >= fabs(b.imag)) {
            if (b.real == 0 && b.imag == 0) {
                return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.imag);
            } else {
                double r = b.imag / b.real;
                double s = (double)(1.0) / (b.real + b.imag * r);
                return __pyx_t_double_complex_from_parts(
                    (a.real + a.imag * r) * s, (a.imag - a.real * r) * s);
            }
        } else {
            double r = b.real / b.imag;
            double s = (double)(1.0) / (b.imag + b.real * r);
            return __pyx_t_double_complex_from_parts(
                (a.real * r + a.imag) * s, (a.imag * r - a.real) * s);
        }
    }
    #else
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        if (b.imag == 0) {
            return __pyx_t_double_complex_from_parts(a.real / b.real, a.imag / b.real);
        } else {
            double denom = b.real * b.real + b.imag * b.imag;
            return __pyx_t_double_complex_from_parts(
                (a.real * b.real + a.imag * b.imag) / denom,
                (a.imag * b.real - a.real * b.imag) / denom);
        }
    }
    #endif
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero_double(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj_double(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs_double(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow_double(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        return __Pyx_c_prod_double(a, a);
                    case 3:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, a);
                    case 4:
                        z = __Pyx_c_prod_double(a, a);
                        return __Pyx_c_prod_double(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                } else if ((b.imag == 0) && (a.real >= 0)) {
                    z.real = pow(a.real, b.real);
                    z.imag = 0;
                    return z;
                } else if (a.real > 0) {
                    r = a.real;
                    theta = 0;
                } else {
                    r = -a.real;
                    theta = atan2(0.0, -1.0);
                }
            } else {
                r = __Pyx_c_abs_double(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

/* CIntFromPy */
static CYTHON_INLINE long __Pyx_PyInt_As_long(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(long) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(long, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (long) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 2 * PyLong_SHIFT)) {
                                return (long) (((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 3 * PyLong_SHIFT)) {
                                return (long) (((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) >= 4 * PyLong_SHIFT)) {
                                return (long) (((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (long) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(long) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(long, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(long) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(long) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                                return (long) ((((((long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(long) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(long) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                                return (long) ((((((((long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(long) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) (((long)-1)*(((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(long) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(long, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(long) - 1 > 4 * PyLong_SHIFT)) {
                                return (long) ((((((((((long)digits[3]) << PyLong_SHIFT) | (long)digits[2]) << PyLong_SHIFT) | (long)digits[1]) << PyLong_SHIFT) | (long)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(long) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(long) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(long, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            long val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (long) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (long) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (long) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (long) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (long) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(long) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((long) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(long) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((long) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((long) 1) << (sizeof(long) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (long) -1;
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (long) -1;
        val = __Pyx_PyInt_As_long(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to long");
    return (long) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to long");
    return (long) -1;
}

/* CIntToPy */
static CYTHON_INLINE PyObject* __Pyx_PyInt_From_long(long value) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const long neg_one = (long) -1, const_zero = (long) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
    if (is_unsigned) {
        if (sizeof(long) < sizeof(long)) {
            return PyInt_FromLong((long) value);
        } else if (sizeof(long) <= sizeof(unsigned long)) {
            return PyLong_FromUnsignedLong((unsigned long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(unsigned PY_LONG_LONG)) {
            return PyLong_FromUnsignedLongLong((unsigned PY_LONG_LONG) value);
#endif
        }
    } else {
        if (sizeof(long) <= sizeof(long)) {
            return PyInt_FromLong((long) value);
#ifdef HAVE_LONG_LONG
        } else if (sizeof(long) <= sizeof(PY_LONG_LONG)) {
            return PyLong_FromLongLong((PY_LONG_LONG) value);
#endif
        }
    }
    {
        int one = 1; int little = (int)*(unsigned char *)&one;
        unsigned char *bytes = (unsigned char *)&value;
        return _PyLong_FromByteArray(bytes, sizeof(long),
                                     little, !is_unsigned);
    }
}

/* CIntFromPy */
static CYTHON_INLINE int __Pyx_PyInt_As_int(PyObject *x) {
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wconversion"
#endif
    const int neg_one = (int) -1, const_zero = (int) 0;
#ifdef __Pyx_HAS_GCC_DIAGNOSTIC
#pragma GCC diagnostic pop
#endif
    const int is_unsigned = neg_one > const_zero;
#if PY_MAJOR_VERSION < 3
    if (likely(PyInt_Check(x))) {
        if ((sizeof(int) < sizeof(long))) {
            __PYX_VERIFY_RETURN_INT(int, long, PyInt_AS_LONG(x))
        } else {
            long val = PyInt_AS_LONG(x);
            if (is_unsigned && unlikely(val < 0)) {
                goto raise_neg_overflow;
            }
            return (int) val;
        }
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
#if CYTHON_USE_PYLONG_INTERNALS
            if (unlikely(__Pyx_PyLong_IsNeg(x))) {
                goto raise_neg_overflow;
            } else if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_upylong, __Pyx_PyLong_CompactValueUnsigned(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_DigitCount(x)) {
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 2 * PyLong_SHIFT)) {
                                return (int) (((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 3 * PyLong_SHIFT)) {
                                return (int) (((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) >= 4 * PyLong_SHIFT)) {
                                return (int) (((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0]));
                            }
                        }
                        break;
                }
            }
#endif
#if CYTHON_COMPILING_IN_CPYTHON && PY_VERSION_HEX < 0x030C00A7
            if (unlikely(Py_SIZE(x) < 0)) {
                goto raise_neg_overflow;
            }
#else
            {
                int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                if (unlikely(result < 0))
                    return (int) -1;
                if (unlikely(result == 1))
                    goto raise_neg_overflow;
            }
#endif
            if ((sizeof(int) <= sizeof(unsigned long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned long, PyLong_AsUnsignedLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(unsigned PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, unsigned PY_LONG_LONG, PyLong_AsUnsignedLongLong(x))
#endif
            }
        } else {
#if CYTHON_USE_PYLONG_INTERNALS
            if (__Pyx_PyLong_IsCompact(x)) {
                __PYX_VERIFY_RETURN_INT(int, __Pyx_compact_pylong, __Pyx_PyLong_CompactValue(x))
            } else {
                const digit* digits = __Pyx_PyLong_Digits(x);
                assert(__Pyx_PyLong_DigitCount(x) > 1);
                switch (__Pyx_PyLong_SignedDigitCount(x)) {
                    case -2:
                        if ((8 * sizeof(int) - 1 > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 2:
                        if ((8 * sizeof(int) > 1 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 2 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                                return (int) ((((((int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -3:
                        if ((8 * sizeof(int) - 1 > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 3:
                        if ((8 * sizeof(int) > 2 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 3 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                                return (int) ((((((((int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case -4:
                        if ((8 * sizeof(int) - 1 > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, long, -(long) (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) (((int)-1)*(((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                    case 4:
                        if ((8 * sizeof(int) > 3 * PyLong_SHIFT)) {
                            if ((8 * sizeof(unsigned long) > 4 * PyLong_SHIFT)) {
                                __PYX_VERIFY_RETURN_INT(int, unsigned long, (((((((((unsigned long)digits[3]) << PyLong_SHIFT) | (unsigned long)digits[2]) << PyLong_SHIFT) | (unsigned long)digits[1]) << PyLong_SHIFT) | (unsigned long)digits[0])))
                            } else if ((8 * sizeof(int) - 1 > 4 * PyLong_SHIFT)) {
                                return (int) ((((((((((int)digits[3]) << PyLong_SHIFT) | (int)digits[2]) << PyLong_SHIFT) | (int)digits[1]) << PyLong_SHIFT) | (int)digits[0])));
                            }
                        }
                        break;
                }
            }
#endif
            if ((sizeof(int) <= sizeof(long))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, long, PyLong_AsLong(x))
#ifdef HAVE_LONG_LONG
            } else if ((sizeof(int) <= sizeof(PY_LONG_LONG))) {
                __PYX_VERIFY_RETURN_INT_EXC(int, PY_LONG_LONG, PyLong_AsLongLong(x))
#endif
            }
        }
        {
            int val;
            PyObject *v = __Pyx_PyNumber_IntOrLong(x);
#if PY_MAJOR_VERSION < 3
            if (likely(v) && !PyLong_Check(v)) {
                PyObject *tmp = v;
                v = PyNumber_Long(tmp);
                Py_DECREF(tmp);
            }
#endif
            if (likely(v)) {
                int ret = -1;
#if !(CYTHON_COMPILING_IN_PYPY || CYTHON_COMPILING_IN_LIMITED_API) || defined(_PyLong_AsByteArray)
                int one = 1; int is_little = (int)*(unsigned char *)&one;
                unsigned char *bytes = (unsigned char *)&val;
                ret = _PyLong_AsByteArray((PyLongObject *)v,
                                           bytes, sizeof(val),
                                           is_little, !is_unsigned);
#else
                PyObject *stepval = NULL, *mask = NULL, *shift = NULL;
                int bits, remaining_bits, is_negative = 0;
                long idigit;
                int chunk_size = (sizeof(long) < 8) ? 30 : 62;
                if (unlikely(!PyLong_CheckExact(v))) {
                    PyObject *tmp = v;
                    v = PyNumber_Long(v);
                    assert(PyLong_CheckExact(v));
                    Py_DECREF(tmp);
                    if (unlikely(!v)) return (int) -1;
                }
#if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                if (Py_SIZE(x) == 0)
                    return (int) 0;
                is_negative = Py_SIZE(x) < 0;
#else
                {
                    int result = PyObject_RichCompareBool(x, Py_False, Py_LT);
                    if (unlikely(result < 0))
                        return (int) -1;
                    is_negative = result == 1;
                }
#endif
                if (is_unsigned && unlikely(is_negative)) {
                    goto raise_neg_overflow;
                } else if (is_negative) {
                    stepval = PyNumber_Invert(v);
                    if (unlikely(!stepval))
                        return (int) -1;
                } else {
                    stepval = __Pyx_NewRef(v);
                }
                val = (int) 0;
                mask = PyLong_FromLong((1L << chunk_size) - 1); if (unlikely(!mask)) goto done;
                shift = PyLong_FromLong(chunk_size); if (unlikely(!shift)) goto done;
                for (bits = 0; bits < (int) sizeof(int) * 8 - chunk_size; bits += chunk_size) {
                    PyObject *tmp, *digit;
                    digit = PyNumber_And(stepval, mask);
                    if (unlikely(!digit)) goto done;
                    idigit = PyLong_AsLong(digit);
                    Py_DECREF(digit);
                    if (unlikely(idigit < 0)) goto done;
                    tmp = PyNumber_Rshift(stepval, shift);
                    if (unlikely(!tmp)) goto done;
                    Py_DECREF(stepval); stepval = tmp;
                    val |= ((int) idigit) << bits;
                    #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
                    if (Py_SIZE(stepval) == 0)
                        goto unpacking_done;
                    #endif
                }
                idigit = PyLong_AsLong(stepval);
                if (unlikely(idigit < 0)) goto done;
                remaining_bits = ((int) sizeof(int) * 8) - bits - (is_unsigned ? 0 : 1);
                if (unlikely(idigit >= (1L << remaining_bits)))
                    goto raise_overflow;
                val |= ((int) idigit) << bits;
            #if CYTHON_COMPILING_IN_LIMITED_API && PY_VERSION_HEX < 0x030B0000
            unpacking_done:
            #endif
                if (!is_unsigned) {
                    if (unlikely(val & (((int) 1) << (sizeof(int) * 8 - 1))))
                        goto raise_overflow;
                    if (is_negative)
                        val = ~val;
                }
                ret = 0;
            done:
                Py_XDECREF(shift);
                Py_XDECREF(mask);
                Py_XDECREF(stepval);
#endif
                Py_DECREF(v);
                if (likely(!ret))
                    return val;
            }
            return (int) -1;
        }
    } else {
        int val;
        PyObject *tmp = __Pyx_PyNumber_IntOrLong(x);
        if (!tmp) return (int) -1;
        val = __Pyx_PyInt_As_int(tmp);
        Py_DECREF(tmp);
        return val;
    }
raise_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "value too large to convert to int");
    return (int) -1;
raise_neg_overflow:
    PyErr_SetString(PyExc_OverflowError,
        "can't convert negative value to int");
    return (int) -1;
}

/* FormatTypeName */
#if CYTHON_COMPILING_IN_LIMITED_API
static __Pyx_TypeName
__Pyx_PyType_GetName(PyTypeObject* tp)
{
    PyObject *name = __Pyx_PyObject_GetAttrStr((PyObject *)tp,
                                               __pyx_n_s_name);
    if (unlikely(name == NULL) || unlikely(!PyUnicode_Check(name))) {
        PyErr_Clear();
        Py_XSETREF(name, __Pyx_NewRef(__pyx_n_s__159));
    }
    return name;
}
#endif

/* FastTypeChecks */
#if CYTHON_COMPILING_IN_CPYTHON
static int __Pyx_InBases(PyTypeObject *a, PyTypeObject *b) {
    while (a) {
        a = __Pyx_PyType_GetSlot(a, tp_base, PyTypeObject*);
        if (a == b)
            return 1;
    }
    return b == &PyBaseObject_Type;
}
static CYTHON_INLINE int __Pyx_IsSubtype(PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (a == b) return 1;
    mro = a->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            if (PyTuple_GET_ITEM(mro, i) == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(a, b);
}
static CYTHON_INLINE int __Pyx_IsAnySubtype2(PyTypeObject *cls, PyTypeObject *a, PyTypeObject *b) {
    PyObject *mro;
    if (cls == a || cls == b) return 1;
    mro = cls->tp_mro;
    if (likely(mro)) {
        Py_ssize_t i, n;
        n = PyTuple_GET_SIZE(mro);
        for (i = 0; i < n; i++) {
            PyObject *base = PyTuple_GET_ITEM(mro, i);
            if (base == (PyObject *)a || base == (PyObject *)b)
                return 1;
        }
        return 0;
    }
    return __Pyx_InBases(cls, a) || __Pyx_InBases(cls, b);
}
#if PY_MAJOR_VERSION == 2
static int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject* exc_type2) {
    PyObject *exception, *value, *tb;
    int res;
    __Pyx_PyThreadState_declare
    __Pyx_PyThreadState_assign
    __Pyx_ErrFetch(&exception, &value, &tb);
    res = exc_type1 ? PyObject_IsSubclass(err, exc_type1) : 0;
    if (unlikely(res == -1)) {
        PyErr_WriteUnraisable(err);
        res = 0;
    }
    if (!res) {
        res = PyObject_IsSubclass(err, exc_type2);
        if (unlikely(res == -1)) {
            PyErr_WriteUnraisable(err);
            res = 0;
        }
    }
    __Pyx_ErrRestore(exception, value, tb);
    return res;
}
#else
static CYTHON_INLINE int __Pyx_inner_PyErr_GivenExceptionMatches2(PyObject *err, PyObject* exc_type1, PyObject *exc_type2) {
    if (exc_type1) {
        return __Pyx_IsAnySubtype2((PyTypeObject*)err, (PyTypeObject*)exc_type1, (PyTypeObject*)exc_type2);
    } else {
        return __Pyx_IsSubtype((PyTypeObject*)err, (PyTypeObject*)exc_type2);
    }
}
#endif
static int __Pyx_PyErr_GivenExceptionMatchesTuple(PyObject *exc_type, PyObject *tuple) {
    Py_ssize_t i, n;
    assert(PyExceptionClass_Check(exc_type));
    n = PyTuple_GET_SIZE(tuple);
#if PY_MAJOR_VERSION >= 3
    for (i=0; i<n; i++) {
        if (exc_type == PyTuple_GET_ITEM(tuple, i)) return 1;
    }
#endif
    for (i=0; i<n; i++) {
        PyObject *t = PyTuple_GET_ITEM(tuple, i);
        #if PY_MAJOR_VERSION < 3
        if (likely(exc_type == t)) return 1;
        #endif
        if (likely(PyExceptionClass_Check(t))) {
            if (__Pyx_inner_PyErr_GivenExceptionMatches2(exc_type, NULL, t)) return 1;
        } else {
        }
    }
    return 0;
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches(PyObject *err, PyObject* exc_type) {
    if (likely(err == exc_type)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        if (likely(PyExceptionClass_Check(exc_type))) {
            return __Pyx_inner_PyErr_GivenExceptionMatches2(err, NULL, exc_type);
        } else if (likely(PyTuple_Check(exc_type))) {
            return __Pyx_PyErr_GivenExceptionMatchesTuple(err, exc_type);
        } else {
        }
    }
    return PyErr_GivenExceptionMatches(err, exc_type);
}
static CYTHON_INLINE int __Pyx_PyErr_GivenExceptionMatches2(PyObject *err, PyObject *exc_type1, PyObject *exc_type2) {
    assert(PyExceptionClass_Check(exc_type1));
    assert(PyExceptionClass_Check(exc_type2));
    if (likely(err == exc_type1 || err == exc_type2)) return 1;
    if (likely(PyExceptionClass_Check(err))) {
        return __Pyx_inner_PyErr_GivenExceptionMatches2(err, exc_type1, exc_type2);
    }
    return (PyErr_GivenExceptionMatches(err, exc_type1) || PyErr_GivenExceptionMatches(err, exc_type2));
}
#endif

/* CheckBinaryVersion */
static int __Pyx_check_binary_version(void) {
    char ctversion[5];
    int same=1, i, found_dot;
    const char* rt_from_call = Py_GetVersion();
    PyOS_snprintf(ctversion, 5, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    found_dot = 0;
    for (i = 0; i < 4; i++) {
        if (!ctversion[i]) {
            same = (rt_from_call[i] < '0' || rt_from_call[i] > '9');
            break;
        }
        if (rt_from_call[i] != ctversion[i]) {
            same = 0;
            break;
        }
    }
    if (!same) {
        char rtversion[5] = {'\0'};
        char message[200];
        for (i=0; i<4; ++i) {
            if (rt_from_call[i] == '.') {
                if (found_dot) break;
                found_dot = 1;
            } else if (rt_from_call[i] < '0' || rt_from_call[i] > '9') {
                break;
            }
            rtversion[i] = rt_from_call[i];
        }
        PyOS_snprintf(message, sizeof(message),
                      "compile time version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        return PyErr_WarnEx(NULL, message, 1);
    }
    return 0;
}

/* FunctionImport */
#ifndef __PYX_HAVE_RT_ImportFunction_3_0_0
#define __PYX_HAVE_RT_ImportFunction_3_0_0
static int __Pyx_ImportFunction_3_0_0(PyObject *module, const char *funcname, void (**f)(void), const char *sig) {
    PyObject *d = 0;
    PyObject *cobj = 0;
    union {
        void (*fp)(void);
        void *p;
    } tmp;
    d = PyObject_GetAttrString(module, (char *)"__pyx_capi__");
    if (!d)
        goto bad;
    cobj = PyDict_GetItemString(d, funcname);
    if (!cobj) {
        PyErr_Format(PyExc_ImportError,
            "%.200s does not export expected C function %.200s",
                PyModule_GetName(module), funcname);
        goto bad;
    }
    if (!PyCapsule_IsValid(cobj, sig)) {
        PyErr_Format(PyExc_TypeError,
            "C function %.200s.%.200s has wrong signature (expected %.500s, got %.500s)",
             PyModule_GetName(module), funcname, sig, PyCapsule_GetName(cobj));
        goto bad;
    }
    tmp.p = PyCapsule_GetPointer(cobj, sig);
    *f = tmp.fp;
    if (!(*f))
        goto bad;
    Py_DECREF(d);
    return 0;
bad:
    Py_XDECREF(d);
    return -1;
}
#endif

/* InitStrings */
#if PY_MAJOR_VERSION >= 3
static int __Pyx_InitString(__Pyx_StringTabEntry t, PyObject **str) {
    if (t.is_unicode | t.is_str) {
        if (t.intern) {
            *str = PyUnicode_InternFromString(t.s);
        } else if (t.encoding) {
            *str = PyUnicode_Decode(t.s, t.n - 1, t.encoding, NULL);
        } else {
            *str = PyUnicode_FromStringAndSize(t.s, t.n - 1);
        }
    } else {
        *str = PyBytes_FromStringAndSize(t.s, t.n - 1);
    }
    if (!*str)
        return -1;
    if (PyObject_Hash(*str) == -1)
        return -1;
    return 0;
}
#endif
static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION >= 3
        __Pyx_InitString(*t, t->p);
        #else
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        if (!*t->p)
            return -1;
        if (PyObject_Hash(*t->p) == -1)
            return -1;
        #endif
        ++t;
    }
    return 0;
}

static CYTHON_INLINE PyObject* __Pyx_PyUnicode_FromString(const char* c_str) {
    return __Pyx_PyUnicode_FromStringAndSize(c_str, (Py_ssize_t)strlen(c_str));
}
static CYTHON_INLINE const char* __Pyx_PyObject_AsString(PyObject* o) {
    Py_ssize_t ignore;
    return __Pyx_PyObject_AsStringAndSize(o, &ignore);
}
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
#if !CYTHON_PEP393_ENABLED
static const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    char* defenc_c;
    PyObject* defenc = _PyUnicode_AsDefaultEncodedString(o, NULL);
    if (!defenc) return NULL;
    defenc_c = PyBytes_AS_STRING(defenc);
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    {
        char* end = defenc_c + PyBytes_GET_SIZE(defenc);
        char* c;
        for (c = defenc_c; c < end; c++) {
            if ((unsigned char) (*c) >= 128) {
                PyUnicode_AsASCIIString(o);
                return NULL;
            }
        }
    }
#endif
    *length = PyBytes_GET_SIZE(defenc);
    return defenc_c;
}
#else
static CYTHON_INLINE const char* __Pyx_PyUnicode_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
    if (unlikely(__Pyx_PyUnicode_READY(o) == -1)) return NULL;
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
    if (likely(PyUnicode_IS_ASCII(o))) {
        *length = PyUnicode_GET_LENGTH(o);
        return PyUnicode_AsUTF8(o);
    } else {
        PyUnicode_AsASCIIString(o);
        return NULL;
    }
#else
    return PyUnicode_AsUTF8AndSize(o, length);
#endif
}
#endif
#endif
static CYTHON_INLINE const char* __Pyx_PyObject_AsStringAndSize(PyObject* o, Py_ssize_t *length) {
#if __PYX_DEFAULT_STRING_ENCODING_IS_ASCII || __PYX_DEFAULT_STRING_ENCODING_IS_DEFAULT
    if (
#if PY_MAJOR_VERSION < 3 && __PYX_DEFAULT_STRING_ENCODING_IS_ASCII
            __Pyx_sys_getdefaultencoding_not_ascii &&
#endif
            PyUnicode_Check(o)) {
        return __Pyx_PyUnicode_AsStringAndSize(o, length);
    } else
#endif
#if (!CYTHON_COMPILING_IN_PYPY && !CYTHON_COMPILING_IN_LIMITED_API) || (defined(PyByteArray_AS_STRING) && defined(PyByteArray_GET_SIZE))
    if (PyByteArray_Check(o)) {
        *length = PyByteArray_GET_SIZE(o);
        return PyByteArray_AS_STRING(o);
    } else
#endif
    {
        char* result;
        int r = PyBytes_AsStringAndSize(o, &result, length);
        if (unlikely(r < 0)) {
            return NULL;
        } else {
            return result;
        }
    }
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}
static CYTHON_INLINE int __Pyx_PyObject_IsTrueAndDecref(PyObject* x) {
    int retval;
    if (unlikely(!x)) return -1;
    retval = __Pyx_PyObject_IsTrue(x);
    Py_DECREF(x);
    return retval;
}
static PyObject* __Pyx_PyNumber_IntOrLongWrongResultType(PyObject* result, const char* type_name) {
    __Pyx_TypeName result_type_name = __Pyx_PyType_GetName(Py_TYPE(result));
#if PY_MAJOR_VERSION >= 3
    if (PyLong_Check(result)) {
        if (PyErr_WarnFormat(PyExc_DeprecationWarning, 1,
                "__int__ returned non-int (type " __Pyx_FMT_TYPENAME ").  "
                "The ability to return an instance of a strict subclass of int is deprecated, "
                "and may be removed in a future version of Python.",
                result_type_name)) {
            __Pyx_DECREF_TypeName(result_type_name);
            Py_DECREF(result);
            return NULL;
        }
        __Pyx_DECREF_TypeName(result_type_name);
        return result;
    }
#endif
    PyErr_Format(PyExc_TypeError,
                 "__%.4s__ returned non-%.4s (type " __Pyx_FMT_TYPENAME ")",
                 type_name, type_name, result_type_name);
    __Pyx_DECREF_TypeName(result_type_name);
    Py_DECREF(result);
    return NULL;
}
static CYTHON_INLINE PyObject* __Pyx_PyNumber_IntOrLong(PyObject* x) {
#if CYTHON_USE_TYPE_SLOTS
  PyNumberMethods *m;
#endif
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_Check(x) || PyLong_Check(x)))
#else
  if (likely(PyLong_Check(x)))
#endif
    return __Pyx_NewRef(x);
#if CYTHON_USE_TYPE_SLOTS
  m = Py_TYPE(x)->tp_as_number;
  #if PY_MAJOR_VERSION < 3
  if (m && m->nb_int) {
    name = "int";
    res = m->nb_int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = m->nb_long(x);
  }
  #else
  if (likely(m && m->nb_int)) {
    name = "int";
    res = m->nb_int(x);
  }
  #endif
#else
  if (!PyBytes_CheckExact(x) && !PyUnicode_CheckExact(x)) {
    res = PyNumber_Int(x);
  }
#endif
  if (likely(res)) {
#if PY_MAJOR_VERSION < 3
    if (unlikely(!PyInt_Check(res) && !PyLong_Check(res))) {
#else
    if (unlikely(!PyLong_CheckExact(res))) {
#endif
        return __Pyx_PyNumber_IntOrLongWrongResultType(res, name);
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}
static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject *x;
#if PY_MAJOR_VERSION < 3
  if (likely(PyInt_CheckExact(b))) {
    if (sizeof(Py_ssize_t) >= sizeof(long))
        return PyInt_AS_LONG(b);
    else
        return PyInt_AsSsize_t(b);
  }
#endif
  if (likely(PyLong_CheckExact(b))) {
    #if CYTHON_USE_PYLONG_INTERNALS
    if (likely(__Pyx_PyLong_IsCompact(b))) {
        return __Pyx_PyLong_CompactValue(b);
    } else {
      const digit* digits = __Pyx_PyLong_Digits(b);
      const Py_ssize_t size = __Pyx_PyLong_SignedDigitCount(b);
      switch (size) {
         case 2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -2:
           if (8 * sizeof(Py_ssize_t) > 2 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -3:
           if (8 * sizeof(Py_ssize_t) > 3 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case 4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return (Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
         case -4:
           if (8 * sizeof(Py_ssize_t) > 4 * PyLong_SHIFT) {
             return -(Py_ssize_t) (((((((((size_t)digits[3]) << PyLong_SHIFT) | (size_t)digits[2]) << PyLong_SHIFT) | (size_t)digits[1]) << PyLong_SHIFT) | (size_t)digits[0]));
           }
           break;
      }
    }
    #endif
    return PyLong_AsSsize_t(b);
  }
  x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}
static CYTHON_INLINE Py_hash_t __Pyx_PyIndex_AsHash_t(PyObject* o) {
  if (sizeof(Py_hash_t) == sizeof(Py_ssize_t)) {
    return (Py_hash_t) __Pyx_PyIndex_AsSsize_t(o);
#if PY_MAJOR_VERSION < 3
  } else if (likely(PyInt_CheckExact(o))) {
    return PyInt_AS_LONG(o);
#endif
  } else {
    Py_ssize_t ival;
    PyObject *x;
    x = PyNumber_Index(o);
    if (!x) return -1;
    ival = PyInt_AsLong(x);
    Py_DECREF(x);
    return ival;
  }
}
static CYTHON_INLINE PyObject * __Pyx_PyBool_FromLong(long b) {
  return b ? __Pyx_NewRef(Py_True) : __Pyx_NewRef(Py_False);
}
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
    return PyInt_FromSize_t(ival);
}


/* #### Code section: utility_code_pragmas_end ### */
#ifdef _MSC_VER
#pragma warning( pop )
#endif



/* #### Code section: end ### */
#endif /* Py_PYTHON_H */
